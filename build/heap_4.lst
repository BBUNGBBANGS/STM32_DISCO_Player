ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"heap_4.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.bss.ucHeap,"aw",%nobits
  20              		.align	2
  23              	ucHeap:
  24 0000 00000000 		.space	32768
  24      00000000 
  24      00000000 
  24      00000000 
  24      00000000 
  25              		.section	.rodata.xHeapStructSize,"a"
  26              		.align	2
  29              	xHeapStructSize:
  30 0000 08000000 		.word	8
  31              		.section	.bss.xStart,"aw",%nobits
  32              		.align	2
  35              	xStart:
  36 0000 00000000 		.space	8
  36      00000000 
  37              		.section	.bss.pxEnd,"aw",%nobits
  38              		.align	2
  41              	pxEnd:
  42 0000 00000000 		.space	4
  43              		.section	.bss.xFreeBytesRemaining,"aw",%nobits
  44              		.align	2
  47              	xFreeBytesRemaining:
  48 0000 00000000 		.space	4
  49              		.section	.bss.xMinimumEverFreeBytesRemaining,"aw",%nobits
  50              		.align	2
  53              	xMinimumEverFreeBytesRemaining:
  54 0000 00000000 		.space	4
  55              		.section	.bss.xBlockAllocatedBit,"aw",%nobits
  56              		.align	2
  59              	xBlockAllocatedBit:
  60 0000 00000000 		.space	4
  61              		.section	.text.pvPortMalloc,"ax",%progbits
  62              		.align	1
  63              		.global	pvPortMalloc
  64              		.syntax unified
  65              		.thumb
  66              		.thumb_func
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s 			page 2


  68              	pvPortMalloc:
  69              	.LFB5:
  70              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * FreeRTOS Kernel V10.2.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * A sample implementation of pvPortMalloc() and vPortFree() that combines
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * (coalescences) adjacent memory blocks as they are freed, and in so doing
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * limits memory fragmentation.
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  *
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * See heap_1.c, heap_2.c and heap_3.c for alternative implementations, and the
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * memory management pages of http://www.FreeRTOS.org for more information.
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  */
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #include <stdlib.h>
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** all the API functions to use the MPU wrappers.  That should only be done when
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** task.h is included from an application file. */
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #include "FreeRTOS.h"
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #include "task.h"
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 0 )
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	#error This file must not be used if configSUPPORT_DYNAMIC_ALLOCATION is 0
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #endif
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Block sizes must not get too small. */
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #define heapMINIMUM_BLOCK_SIZE	( ( size_t ) ( xHeapStructSize << 1 ) )
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s 			page 3


  55:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Assumes 8bit bytes! */
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #define heapBITS_PER_BYTE		( ( size_t ) 8 )
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Allocate the memory for the heap. */
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #if( configAPPLICATION_ALLOCATED_HEAP == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* The application writer has already defined the array used for the RTOS
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	heap - probably so it can be placed in a special segment or address. */
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	extern uint8_t ucHeap[ configTOTAL_HEAP_SIZE ];
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #else
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	static uint8_t ucHeap[ configTOTAL_HEAP_SIZE ];
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #endif /* configAPPLICATION_ALLOCATED_HEAP */
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Define the linked list structure.  This is used to link free blocks in order
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** of their memory address. */
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** typedef struct A_BLOCK_LINK
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	struct A_BLOCK_LINK *pxNextFreeBlock;	/*<< The next free block in the list. */
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	size_t xBlockSize;						/*<< The size of the free block. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** } BlockLink_t;
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * Inserts a block of memory that is being freed into the correct position in
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * the list of free memory blocks.  The block being freed will be merged with
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * the block in front it and/or the block behind it if the memory blocks are
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * adjacent to each other.
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  */
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert );
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * Called automatically to setup the required heap structures the first time
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * pvPortMalloc() is called.
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  */
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static void prvHeapInit( void );
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* The size of the structure placed at the beginning of each allocated memory
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** block must by correctly byte aligned. */
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static const size_t xHeapStructSize	= ( sizeof( BlockLink_t ) + ( ( size_t ) ( portBYTE_ALIGNMENT -
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Create a couple of list links to mark the start and end of the list. */
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static BlockLink_t xStart, *pxEnd = NULL;
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Keeps track of the number of free bytes remaining, but says nothing about
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** fragmentation. */
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static size_t xFreeBytesRemaining = 0U;
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static size_t xMinimumEverFreeBytesRemaining = 0U;
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Gets set to the top bit of an size_t type.  When this bit in the xBlockSize
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** member of an BlockLink_t structure is set then the block belongs to the
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** application.  When the bit is free the block is still part of the free heap
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** space. */
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static size_t xBlockAllocatedBit = 0;
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s 			page 4


 112:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** void *pvPortMalloc( size_t xWantedSize )
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
  71              		.loc 1 114 1
  72              		.cfi_startproc
  73              		@ args = 0, pretend = 0, frame = 40
  74              		@ frame_needed = 1, uses_anonymous_args = 0
  75 0000 80B5     		push	{r7, lr}
  76              	.LCFI0:
  77              		.cfi_def_cfa_offset 8
  78              		.cfi_offset 7, -8
  79              		.cfi_offset 14, -4
  80 0002 8AB0     		sub	sp, sp, #40
  81              	.LCFI1:
  82              		.cfi_def_cfa_offset 48
  83 0004 00AF     		add	r7, sp, #0
  84              	.LCFI2:
  85              		.cfi_def_cfa_register 7
  86 0006 7860     		str	r0, [r7, #4]
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** void *pvReturn = NULL;
  87              		.loc 1 116 7
  88 0008 0023     		movs	r3, #0
  89 000a FB61     		str	r3, [r7, #28]
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	vTaskSuspendAll();
  90              		.loc 1 118 2
  91 000c FFF7FEFF 		bl	vTaskSuspendAll
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		/* If this is the first call to malloc then the heap will require
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		initialisation to setup the list of free blocks. */
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		if( pxEnd == NULL )
  92              		.loc 1 122 13
  93 0010 5E4B     		ldr	r3, .L17
  94 0012 1B68     		ldr	r3, [r3]
  95              		.loc 1 122 5
  96 0014 002B     		cmp	r3, #0
  97 0016 01D1     		bne	.L2
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			prvHeapInit();
  98              		.loc 1 124 4
  99 0018 FFF7FEFF 		bl	prvHeapInit
 100              	.L2:
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		else
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			mtCOVERAGE_TEST_MARKER();
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		/* Check the requested block size is not so large that the top bit is
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		set.  The top bit of the block size member of the BlockLink_t structure
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		is used to determine who owns the block - the application or the
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		kernel, so it must be free. */
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 101              		.loc 1 135 21
 102 001c 5C4B     		ldr	r3, .L17+4
 103 001e 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s 			page 5


 104 0020 7B68     		ldr	r3, [r7, #4]
 105 0022 1340     		ands	r3, r3, r2
 106              		.loc 1 135 5
 107 0024 002B     		cmp	r3, #0
 108 0026 40F09280 		bne	.L3
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			/* The wanted size is increased so it can contain a BlockLink_t
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			structure in addition to the requested amount of bytes. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			if( xWantedSize > 0 )
 109              		.loc 1 139 6
 110 002a 7B68     		ldr	r3, [r7, #4]
 111 002c 002B     		cmp	r3, #0
 112 002e 1FD0     		beq	.L4
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			{
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				xWantedSize += xHeapStructSize;
 113              		.loc 1 141 17
 114 0030 0822     		movs	r2, #8
 115 0032 7B68     		ldr	r3, [r7, #4]
 116 0034 1344     		add	r3, r3, r2
 117 0036 7B60     		str	r3, [r7, #4]
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				/* Ensure that blocks are always aligned to the required number
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				of bytes. */
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 118              		.loc 1 145 23
 119 0038 7B68     		ldr	r3, [r7, #4]
 120 003a 03F00703 		and	r3, r3, #7
 121              		.loc 1 145 7
 122 003e 002B     		cmp	r3, #0
 123 0040 16D0     		beq	.L4
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					/* Byte alignment required. */
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 124              		.loc 1 148 18
 125 0042 7B68     		ldr	r3, [r7, #4]
 126 0044 23F00703 		bic	r3, r3, #7
 127 0048 0833     		adds	r3, r3, #8
 128 004a 7B60     		str	r3, [r7, #4]
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					configASSERT( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) == 0 );
 129              		.loc 1 149 6
 130 004c 7B68     		ldr	r3, [r7, #4]
 131 004e 03F00703 		and	r3, r3, #7
 132 0052 002B     		cmp	r3, #0
 133 0054 0CD0     		beq	.L4
 134              	.LBB13:
 135              	.LBB14:
 136              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * FreeRTOS Kernel V10.2.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * subject to the following conditions:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s 			page 6


  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #ifndef PORTMACRO_H
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define PORTMACRO_H
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #ifdef __cplusplus
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** extern "C" {
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * Port specific definitions.
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * given hardware and compiler.
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  * These settings should not be altered.
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  *-----------------------------------------------------------
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h ****  */
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Type definitions. */
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portCHAR		char
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portFLOAT		float
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portDOUBLE		double
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portLONG		long
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portSHORT		short
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portBASE_TYPE	long
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** typedef long BaseType_t;
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #else
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	not need to be guarded with a critical section. */
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s 			page 7


  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Architecture specifics. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Scheduler utilities. */
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portYIELD() 															\
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** {																				\
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 																				\
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** }
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Critical section management. */
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** extern void vPortEnterCritical( void );
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** extern void vPortExitCritical( void );
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** (which build with all the ports) will build. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Tickless idle/low power functionality. */
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* Architecture specific optimisations. */
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s 			page 8


 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* Generic helper function. */
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	{
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	uint8_t ucReturn;
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		return ucReturn;
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	}
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* Check the configuration. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#endif
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #ifdef configASSERT
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /* portNOP() is not required by this port. */
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portNOP()
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #define portINLINE	__inline
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #ifndef portFORCE_INLINE
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** {
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** BaseType_t xReturn;
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	{
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		xReturn = pdFALSE;
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	}
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	else
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s 			page 9


 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	{
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		xReturn = pdTRUE;
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	}
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	return xReturn;
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** }
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** /*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** {
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** uint32_t ulNewBASEPRI;
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	__asm volatile
 137              		.loc 2 195 2
 138              		.syntax unified
 139              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 140 0056 4FF05003 			mov r3, #80												
 141 005a 72B6     		cpsid i													
 142 005c 83F31188 		msr basepri, r3											
 143 0060 BFF36F8F 		isb														
 144 0064 BFF34F8F 		dsb														
 145 0068 62B6     		cpsie i													
 146              	
 147              	@ 0 "" 2
 148              		.thumb
 149              		.syntax unified
 150 006a 7B61     		str	r3, [r7, #20]
 196:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 197:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	mov %0, %1												\n"	\
 198:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	cpsid i													\n" \
 199:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	msr basepri, %0											\n" \
 200:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	isb														\n" \
 201:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	dsb														\n" \
 202:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		"	cpsie i													\n" \
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 204:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	);
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** }
 151              		.loc 2 205 1
 152 006c 00BF     		nop
 153              	.L5:
 154              	.LBE14:
 155              	.LBE13:
 156              		.loc 1 149 6 discriminator 1
 157 006e FEE7     		b	.L5
 158              	.L4:
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				else
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					mtCOVERAGE_TEST_MARKER();
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			}
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			else
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			{
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				mtCOVERAGE_TEST_MARKER();
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			}
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s 			page 10


 161:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 159              		.loc 1 161 6
 160 0070 7B68     		ldr	r3, [r7, #4]
 161 0072 002B     		cmp	r3, #0
 162 0074 6BD0     		beq	.L3
 163              		.loc 1 161 45 discriminator 1
 164 0076 474B     		ldr	r3, .L17+8
 165 0078 1B68     		ldr	r3, [r3]
 166              		.loc 1 161 28 discriminator 1
 167 007a 7A68     		ldr	r2, [r7, #4]
 168 007c 9A42     		cmp	r2, r3
 169 007e 66D8     		bhi	.L3
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			{
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				/* Traverse the list from the start	(lowest address) block until
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				one	of adequate size is found. */
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				pxPreviousBlock = &xStart;
 170              		.loc 1 165 21
 171 0080 454B     		ldr	r3, .L17+12
 172 0082 3B62     		str	r3, [r7, #32]
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				pxBlock = xStart.pxNextFreeBlock;
 173              		.loc 1 166 13
 174 0084 444B     		ldr	r3, .L17+12
 175 0086 1B68     		ldr	r3, [r3]
 176 0088 7B62     		str	r3, [r7, #36]
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 177              		.loc 1 167 10
 178 008a 04E0     		b	.L6
 179              	.L8:
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					pxPreviousBlock = pxBlock;
 180              		.loc 1 169 22
 181 008c 7B6A     		ldr	r3, [r7, #36]
 182 008e 3B62     		str	r3, [r7, #32]
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					pxBlock = pxBlock->pxNextFreeBlock;
 183              		.loc 1 170 14
 184 0090 7B6A     		ldr	r3, [r7, #36]
 185 0092 1B68     		ldr	r3, [r3]
 186 0094 7B62     		str	r3, [r7, #36]
 187              	.L6:
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 188              		.loc 1 167 21
 189 0096 7B6A     		ldr	r3, [r7, #36]
 190 0098 5B68     		ldr	r3, [r3, #4]
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 191              		.loc 1 167 10
 192 009a 7A68     		ldr	r2, [r7, #4]
 193 009c 9A42     		cmp	r2, r3
 194 009e 03D9     		bls	.L7
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 195              		.loc 1 167 62 discriminator 1
 196 00a0 7B6A     		ldr	r3, [r7, #36]
 197 00a2 1B68     		ldr	r3, [r3]
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 198              		.loc 1 167 50 discriminator 1
 199 00a4 002B     		cmp	r3, #0
 200 00a6 F1D1     		bne	.L8
 201              	.L7:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s 			page 11


 171:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				/* If the end marker was reached then a block of adequate size
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				was	not found. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				if( pxBlock != pxEnd )
 202              		.loc 1 175 17
 203 00a8 384B     		ldr	r3, .L17
 204 00aa 1B68     		ldr	r3, [r3]
 205              		.loc 1 175 7
 206 00ac 7A6A     		ldr	r2, [r7, #36]
 207 00ae 9A42     		cmp	r2, r3
 208 00b0 4DD0     		beq	.L3
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					/* Return the memory space pointed to - jumping over the
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					BlockLink_t structure at its start. */
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize )
 209              		.loc 1 179 61
 210 00b2 3B6A     		ldr	r3, [r7, #32]
 211 00b4 1B68     		ldr	r3, [r3]
 212              		.loc 1 179 17
 213 00b6 0822     		movs	r2, #8
 214              		.loc 1 179 15
 215 00b8 1344     		add	r3, r3, r2
 216 00ba FB61     		str	r3, [r7, #28]
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					/* This block is being returned for use so must be taken out
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					of the list of free blocks. */
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 217              		.loc 1 183 48
 218 00bc 7B6A     		ldr	r3, [r7, #36]
 219 00be 1A68     		ldr	r2, [r3]
 220              		.loc 1 183 39
 221 00c0 3B6A     		ldr	r3, [r7, #32]
 222 00c2 1A60     		str	r2, [r3]
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					/* If the block is larger than required it can be split into
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					two. */
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 223              		.loc 1 187 19
 224 00c4 7B6A     		ldr	r3, [r7, #36]
 225 00c6 5A68     		ldr	r2, [r3, #4]
 226              		.loc 1 187 32
 227 00c8 7B68     		ldr	r3, [r7, #4]
 228 00ca D21A     		subs	r2, r2, r3
 229              		.loc 1 187 50
 230 00cc 0823     		movs	r3, #8
 231 00ce 5B00     		lsls	r3, r3, #1
 232              		.loc 1 187 8
 233 00d0 9A42     		cmp	r2, r3
 234 00d2 21D9     		bls	.L9
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					{
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						/* This block is to be split into two.  Create a new
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						block following the number of bytes requested. The void
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						cast is used to prevent byte alignment warnings from the
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						compiler. */
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 235              		.loc 1 193 22
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s 			page 12


 236 00d4 7A6A     		ldr	r2, [r7, #36]
 237 00d6 7B68     		ldr	r3, [r7, #4]
 238 00d8 1344     		add	r3, r3, r2
 239 00da BB61     		str	r3, [r7, #24]
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 240              		.loc 1 194 7
 241 00dc BB69     		ldr	r3, [r7, #24]
 242 00de 03F00703 		and	r3, r3, #7
 243 00e2 002B     		cmp	r3, #0
 244 00e4 0CD0     		beq	.L10
 245              	.LBB15:
 246              	.LBB16:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 247              		.loc 2 195 2
 248              		.syntax unified
 249              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 250 00e6 4FF05003 			mov r3, #80												
 251 00ea 72B6     		cpsid i													
 252 00ec 83F31188 		msr basepri, r3											
 253 00f0 BFF36F8F 		isb														
 254 00f4 BFF34F8F 		dsb														
 255 00f8 62B6     		cpsie i													
 256              	
 257              	@ 0 "" 2
 258              		.thumb
 259              		.syntax unified
 260 00fa 3B61     		str	r3, [r7, #16]
 261              		.loc 2 205 1
 262 00fc 00BF     		nop
 263              	.L11:
 264              	.LBE16:
 265              	.LBE15:
 266              		.loc 1 194 7 discriminator 3
 267 00fe FEE7     		b	.L11
 268              	.L10:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 196:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						/* Calculate the sizes of two blocks split from the
 197:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						single block. */
 198:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 269              		.loc 1 198 43
 270 0100 7B6A     		ldr	r3, [r7, #36]
 271 0102 5A68     		ldr	r2, [r3, #4]
 272              		.loc 1 198 56
 273 0104 7B68     		ldr	r3, [r7, #4]
 274 0106 D21A     		subs	r2, r2, r3
 275              		.loc 1 198 34
 276 0108 BB69     		ldr	r3, [r7, #24]
 277 010a 5A60     		str	r2, [r3, #4]
 199:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						pxBlock->xBlockSize = xWantedSize;
 278              		.loc 1 199 27
 279 010c 7B6A     		ldr	r3, [r7, #36]
 280 010e 7A68     		ldr	r2, [r7, #4]
 281 0110 5A60     		str	r2, [r3, #4]
 200:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 201:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						/* Insert the new block into the list of free blocks. */
 202:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						prvInsertBlockIntoFreeList( pxNewBlockLink );
 282              		.loc 1 202 7
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s 			page 13


 283 0112 B869     		ldr	r0, [r7, #24]
 284 0114 FFF7FEFF 		bl	prvInsertBlockIntoFreeList
 285              	.L9:
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					}
 204:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					else
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					{
 206:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						mtCOVERAGE_TEST_MARKER();
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					}
 208:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					xFreeBytesRemaining -= pxBlock->xBlockSize;
 286              		.loc 1 209 26
 287 0118 1E4B     		ldr	r3, .L17+8
 288 011a 1A68     		ldr	r2, [r3]
 289              		.loc 1 209 36
 290 011c 7B6A     		ldr	r3, [r7, #36]
 291 011e 5B68     		ldr	r3, [r3, #4]
 292              		.loc 1 209 26
 293 0120 D31A     		subs	r3, r2, r3
 294 0122 1C4A     		ldr	r2, .L17+8
 295 0124 1360     		str	r3, [r2]
 210:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 296              		.loc 1 211 30
 297 0126 1B4B     		ldr	r3, .L17+8
 298 0128 1A68     		ldr	r2, [r3]
 299 012a 1C4B     		ldr	r3, .L17+16
 300 012c 1B68     		ldr	r3, [r3]
 301              		.loc 1 211 8
 302 012e 9A42     		cmp	r2, r3
 303 0130 03D2     		bcs	.L12
 212:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					{
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 304              		.loc 1 213 38
 305 0132 184B     		ldr	r3, .L17+8
 306 0134 1B68     		ldr	r3, [r3]
 307 0136 194A     		ldr	r2, .L17+16
 308 0138 1360     		str	r3, [r2]
 309              	.L12:
 214:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					}
 215:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					else
 216:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					{
 217:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						mtCOVERAGE_TEST_MARKER();
 218:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					}
 219:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 220:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					/* The block is being returned - it is allocated and owned
 221:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					by the application and has no "next" block. */
 222:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					pxBlock->xBlockSize |= xBlockAllocatedBit;
 310              		.loc 1 222 26
 311 013a 7B6A     		ldr	r3, [r7, #36]
 312 013c 5A68     		ldr	r2, [r3, #4]
 313 013e 144B     		ldr	r3, .L17+4
 314 0140 1B68     		ldr	r3, [r3]
 315 0142 1A43     		orrs	r2, r2, r3
 316 0144 7B6A     		ldr	r3, [r7, #36]
 317 0146 5A60     		str	r2, [r3, #4]
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					pxBlock->pxNextFreeBlock = NULL;
 318              		.loc 1 223 31
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s 			page 14


 319 0148 7B6A     		ldr	r3, [r7, #36]
 320 014a 0022     		movs	r2, #0
 321 014c 1A60     		str	r2, [r3]
 322              	.L3:
 224:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 225:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				else
 226:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					mtCOVERAGE_TEST_MARKER();
 228:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			}
 230:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			else
 231:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			{
 232:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				mtCOVERAGE_TEST_MARKER();
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			}
 234:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		else
 236:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			mtCOVERAGE_TEST_MARKER();
 238:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 239:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 240:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		traceMALLOC( pvReturn, xWantedSize );
 241:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 242:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	( void ) xTaskResumeAll();
 323              		.loc 1 242 11
 324 014e FFF7FEFF 		bl	xTaskResumeAll
 243:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 244:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	#if( configUSE_MALLOC_FAILED_HOOK == 1 )
 245:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 246:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		if( pvReturn == NULL )
 325              		.loc 1 246 5
 326 0152 FB69     		ldr	r3, [r7, #28]
 327 0154 002B     		cmp	r3, #0
 328 0156 01D1     		bne	.L13
 329              	.LBB17:
 247:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 248:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			extern void vApplicationMallocFailedHook( void );
 249:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			vApplicationMallocFailedHook();
 330              		.loc 1 249 4
 331 0158 FFF7FEFF 		bl	vApplicationMallocFailedHook
 332              	.L13:
 333              	.LBE17:
 250:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 251:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		else
 252:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 253:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			mtCOVERAGE_TEST_MARKER();
 254:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 255:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 256:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	#endif
 257:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 258:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 334              		.loc 1 258 2
 335 015c FB69     		ldr	r3, [r7, #28]
 336 015e 03F00703 		and	r3, r3, #7
 337 0162 002B     		cmp	r3, #0
 338 0164 0CD0     		beq	.L14
 339              	.LBB18:
 340              	.LBB19:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s 			page 15


 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 341              		.loc 2 195 2
 342              		.syntax unified
 343              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 344 0166 4FF05003 			mov r3, #80												
 345 016a 72B6     		cpsid i													
 346 016c 83F31188 		msr basepri, r3											
 347 0170 BFF36F8F 		isb														
 348 0174 BFF34F8F 		dsb														
 349 0178 62B6     		cpsie i													
 350              	
 351              	@ 0 "" 2
 352              		.thumb
 353              		.syntax unified
 354 017a FB60     		str	r3, [r7, #12]
 355              		.loc 2 205 1
 356 017c 00BF     		nop
 357              	.L15:
 358              	.LBE19:
 359              	.LBE18:
 360              		.loc 1 258 2 discriminator 5
 361 017e FEE7     		b	.L15
 362              	.L14:
 259:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	return pvReturn;
 363              		.loc 1 259 9
 364 0180 FB69     		ldr	r3, [r7, #28]
 260:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** }
 365              		.loc 1 260 1
 366 0182 1846     		mov	r0, r3
 367 0184 2837     		adds	r7, r7, #40
 368              	.LCFI3:
 369              		.cfi_def_cfa_offset 8
 370 0186 BD46     		mov	sp, r7
 371              	.LCFI4:
 372              		.cfi_def_cfa_register 13
 373              		@ sp needed
 374 0188 80BD     		pop	{r7, pc}
 375              	.L18:
 376 018a 00BF     		.align	2
 377              	.L17:
 378 018c 00000000 		.word	pxEnd
 379 0190 00000000 		.word	xBlockAllocatedBit
 380 0194 00000000 		.word	xFreeBytesRemaining
 381 0198 00000000 		.word	xStart
 382 019c 00000000 		.word	xMinimumEverFreeBytesRemaining
 383              		.cfi_endproc
 384              	.LFE5:
 386              		.section	.text.vPortFree,"ax",%progbits
 387              		.align	1
 388              		.global	vPortFree
 389              		.syntax unified
 390              		.thumb
 391              		.thumb_func
 393              	vPortFree:
 394              	.LFB6:
 261:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 262:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s 			page 16


 263:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** void vPortFree( void *pv )
 264:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
 395              		.loc 1 264 1
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 24
 398              		@ frame_needed = 1, uses_anonymous_args = 0
 399 0000 80B5     		push	{r7, lr}
 400              	.LCFI5:
 401              		.cfi_def_cfa_offset 8
 402              		.cfi_offset 7, -8
 403              		.cfi_offset 14, -4
 404 0002 86B0     		sub	sp, sp, #24
 405              	.LCFI6:
 406              		.cfi_def_cfa_offset 32
 407 0004 00AF     		add	r7, sp, #0
 408              	.LCFI7:
 409              		.cfi_def_cfa_register 7
 410 0006 7860     		str	r0, [r7, #4]
 265:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** uint8_t *puc = ( uint8_t * ) pv;
 411              		.loc 1 265 10
 412 0008 7B68     		ldr	r3, [r7, #4]
 413 000a 7B61     		str	r3, [r7, #20]
 266:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** BlockLink_t *pxLink;
 267:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 268:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	if( pv != NULL )
 414              		.loc 1 268 4
 415 000c 7B68     		ldr	r3, [r7, #4]
 416 000e 002B     		cmp	r3, #0
 417 0010 4CD0     		beq	.L25
 269:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 270:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		/* The memory being freed will have an BlockLink_t structure immediately
 271:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		before it. */
 272:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		puc -= xHeapStructSize;
 418              		.loc 1 272 7
 419 0012 0823     		movs	r3, #8
 420 0014 5B42     		rsbs	r3, r3, #0
 421 0016 7A69     		ldr	r2, [r7, #20]
 422 0018 1344     		add	r3, r3, r2
 423 001a 7B61     		str	r3, [r7, #20]
 273:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 274:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		/* This casting is to keep the compiler from issuing warnings. */
 275:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		pxLink = ( void * ) puc;
 424              		.loc 1 275 10
 425 001c 7B69     		ldr	r3, [r7, #20]
 426 001e 3B61     		str	r3, [r7, #16]
 276:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 277:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		/* Check the block is actually allocated. */
 278:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 427              		.loc 1 278 3
 428 0020 3B69     		ldr	r3, [r7, #16]
 429 0022 5A68     		ldr	r2, [r3, #4]
 430 0024 234B     		ldr	r3, .L26
 431 0026 1B68     		ldr	r3, [r3]
 432 0028 1340     		ands	r3, r3, r2
 433 002a 002B     		cmp	r3, #0
 434 002c 0CD1     		bne	.L21
 435              	.LBB20:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s 			page 17


 436              	.LBB21:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 437              		.loc 2 195 2
 438              		.syntax unified
 439              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 440 002e 4FF05003 			mov r3, #80												
 441 0032 72B6     		cpsid i													
 442 0034 83F31188 		msr basepri, r3											
 443 0038 BFF36F8F 		isb														
 444 003c BFF34F8F 		dsb														
 445 0040 62B6     		cpsie i													
 446              	
 447              	@ 0 "" 2
 448              		.thumb
 449              		.syntax unified
 450 0042 FB60     		str	r3, [r7, #12]
 451              		.loc 2 205 1
 452 0044 00BF     		nop
 453              	.L22:
 454              	.LBE21:
 455              	.LBE20:
 456              		.loc 1 278 3 discriminator 1
 457 0046 FEE7     		b	.L22
 458              	.L21:
 279:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		configASSERT( pxLink->pxNextFreeBlock == NULL );
 459              		.loc 1 279 3
 460 0048 3B69     		ldr	r3, [r7, #16]
 461 004a 1B68     		ldr	r3, [r3]
 462 004c 002B     		cmp	r3, #0
 463 004e 0CD0     		beq	.L23
 464              	.LBB22:
 465              	.LBB23:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h **** 	(
 466              		.loc 2 195 2
 467              		.syntax unified
 468              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h" 1
 469 0050 4FF05003 			mov r3, #80												
 470 0054 72B6     		cpsid i													
 471 0056 83F31188 		msr basepri, r3											
 472 005a BFF36F8F 		isb														
 473 005e BFF34F8F 		dsb														
 474 0062 62B6     		cpsie i													
 475              	
 476              	@ 0 "" 2
 477              		.thumb
 478              		.syntax unified
 479 0064 BB60     		str	r3, [r7, #8]
 480              		.loc 2 205 1
 481 0066 00BF     		nop
 482              	.L24:
 483              	.LBE23:
 484              	.LBE22:
 485              		.loc 1 279 3 discriminator 2
 486 0068 FEE7     		b	.L24
 487              	.L23:
 280:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 281:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		if( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 )
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s 			page 18


 488              		.loc 1 281 15
 489 006a 3B69     		ldr	r3, [r7, #16]
 490 006c 5A68     		ldr	r2, [r3, #4]
 491              		.loc 1 281 28
 492 006e 114B     		ldr	r3, .L26
 493 0070 1B68     		ldr	r3, [r3]
 494 0072 1340     		ands	r3, r3, r2
 495              		.loc 1 281 5
 496 0074 002B     		cmp	r3, #0
 497 0076 19D0     		beq	.L25
 282:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 283:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			if( pxLink->pxNextFreeBlock == NULL )
 498              		.loc 1 283 14
 499 0078 3B69     		ldr	r3, [r7, #16]
 500 007a 1B68     		ldr	r3, [r3]
 501              		.loc 1 283 6
 502 007c 002B     		cmp	r3, #0
 503 007e 15D1     		bne	.L25
 284:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			{
 285:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				/* The block is being returned to the heap - it is no longer
 286:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				allocated. */
 287:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 504              		.loc 1 287 24
 505 0080 3B69     		ldr	r3, [r7, #16]
 506 0082 5A68     		ldr	r2, [r3, #4]
 507              		.loc 1 287 27
 508 0084 0B4B     		ldr	r3, .L26
 509 0086 1B68     		ldr	r3, [r3]
 510 0088 DB43     		mvns	r3, r3
 511              		.loc 1 287 24
 512 008a 1A40     		ands	r2, r2, r3
 513 008c 3B69     		ldr	r3, [r7, #16]
 514 008e 5A60     		str	r2, [r3, #4]
 288:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 289:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				vTaskSuspendAll();
 515              		.loc 1 289 5
 516 0090 FFF7FEFF 		bl	vTaskSuspendAll
 290:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 291:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					/* Add this block to the list of free blocks. */
 292:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					xFreeBytesRemaining += pxLink->xBlockSize;
 517              		.loc 1 292 35
 518 0094 3B69     		ldr	r3, [r7, #16]
 519 0096 5A68     		ldr	r2, [r3, #4]
 520              		.loc 1 292 26
 521 0098 074B     		ldr	r3, .L26+4
 522 009a 1B68     		ldr	r3, [r3]
 523 009c 1344     		add	r3, r3, r2
 524 009e 064A     		ldr	r2, .L26+4
 525 00a0 1360     		str	r3, [r2]
 293:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					traceFREE( pv, pxLink->xBlockSize );
 294:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 526              		.loc 1 294 6
 527 00a2 3869     		ldr	r0, [r7, #16]
 528 00a4 FFF7FEFF 		bl	prvInsertBlockIntoFreeList
 295:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 296:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				( void ) xTaskResumeAll();
 529              		.loc 1 296 14
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s 			page 19


 530 00a8 FFF7FEFF 		bl	xTaskResumeAll
 531              	.L25:
 297:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			}
 298:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			else
 299:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			{
 300:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				mtCOVERAGE_TEST_MARKER();
 301:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			}
 302:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 303:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		else
 304:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 305:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			mtCOVERAGE_TEST_MARKER();
 306:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 307:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 308:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** }
 532              		.loc 1 308 1
 533 00ac 00BF     		nop
 534 00ae 1837     		adds	r7, r7, #24
 535              	.LCFI8:
 536              		.cfi_def_cfa_offset 8
 537 00b0 BD46     		mov	sp, r7
 538              	.LCFI9:
 539              		.cfi_def_cfa_register 13
 540              		@ sp needed
 541 00b2 80BD     		pop	{r7, pc}
 542              	.L27:
 543              		.align	2
 544              	.L26:
 545 00b4 00000000 		.word	xBlockAllocatedBit
 546 00b8 00000000 		.word	xFreeBytesRemaining
 547              		.cfi_endproc
 548              	.LFE6:
 550              		.section	.text.xPortGetFreeHeapSize,"ax",%progbits
 551              		.align	1
 552              		.global	xPortGetFreeHeapSize
 553              		.syntax unified
 554              		.thumb
 555              		.thumb_func
 557              	xPortGetFreeHeapSize:
 558              	.LFB7:
 309:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 310:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 311:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** size_t xPortGetFreeHeapSize( void )
 312:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
 559              		.loc 1 312 1
 560              		.cfi_startproc
 561              		@ args = 0, pretend = 0, frame = 0
 562              		@ frame_needed = 1, uses_anonymous_args = 0
 563              		@ link register save eliminated.
 564 0000 80B4     		push	{r7}
 565              	.LCFI10:
 566              		.cfi_def_cfa_offset 4
 567              		.cfi_offset 7, -4
 568 0002 00AF     		add	r7, sp, #0
 569              	.LCFI11:
 570              		.cfi_def_cfa_register 7
 313:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	return xFreeBytesRemaining;
 571              		.loc 1 313 9
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s 			page 20


 572 0004 034B     		ldr	r3, .L30
 573 0006 1B68     		ldr	r3, [r3]
 314:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** }
 574              		.loc 1 314 1
 575 0008 1846     		mov	r0, r3
 576 000a BD46     		mov	sp, r7
 577              	.LCFI12:
 578              		.cfi_def_cfa_register 13
 579              		@ sp needed
 580 000c 5DF8047B 		ldr	r7, [sp], #4
 581              	.LCFI13:
 582              		.cfi_restore 7
 583              		.cfi_def_cfa_offset 0
 584 0010 7047     		bx	lr
 585              	.L31:
 586 0012 00BF     		.align	2
 587              	.L30:
 588 0014 00000000 		.word	xFreeBytesRemaining
 589              		.cfi_endproc
 590              	.LFE7:
 592              		.section	.text.xPortGetMinimumEverFreeHeapSize,"ax",%progbits
 593              		.align	1
 594              		.global	xPortGetMinimumEverFreeHeapSize
 595              		.syntax unified
 596              		.thumb
 597              		.thumb_func
 599              	xPortGetMinimumEverFreeHeapSize:
 600              	.LFB8:
 315:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 316:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 317:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** size_t xPortGetMinimumEverFreeHeapSize( void )
 318:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
 601              		.loc 1 318 1
 602              		.cfi_startproc
 603              		@ args = 0, pretend = 0, frame = 0
 604              		@ frame_needed = 1, uses_anonymous_args = 0
 605              		@ link register save eliminated.
 606 0000 80B4     		push	{r7}
 607              	.LCFI14:
 608              		.cfi_def_cfa_offset 4
 609              		.cfi_offset 7, -4
 610 0002 00AF     		add	r7, sp, #0
 611              	.LCFI15:
 612              		.cfi_def_cfa_register 7
 319:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	return xMinimumEverFreeBytesRemaining;
 613              		.loc 1 319 9
 614 0004 034B     		ldr	r3, .L34
 615 0006 1B68     		ldr	r3, [r3]
 320:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** }
 616              		.loc 1 320 1
 617 0008 1846     		mov	r0, r3
 618 000a BD46     		mov	sp, r7
 619              	.LCFI16:
 620              		.cfi_def_cfa_register 13
 621              		@ sp needed
 622 000c 5DF8047B 		ldr	r7, [sp], #4
 623              	.LCFI17:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s 			page 21


 624              		.cfi_restore 7
 625              		.cfi_def_cfa_offset 0
 626 0010 7047     		bx	lr
 627              	.L35:
 628 0012 00BF     		.align	2
 629              	.L34:
 630 0014 00000000 		.word	xMinimumEverFreeBytesRemaining
 631              		.cfi_endproc
 632              	.LFE8:
 634              		.section	.text.vPortInitialiseBlocks,"ax",%progbits
 635              		.align	1
 636              		.global	vPortInitialiseBlocks
 637              		.syntax unified
 638              		.thumb
 639              		.thumb_func
 641              	vPortInitialiseBlocks:
 642              	.LFB9:
 321:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 322:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 323:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** void vPortInitialiseBlocks( void )
 324:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
 643              		.loc 1 324 1
 644              		.cfi_startproc
 645              		@ args = 0, pretend = 0, frame = 0
 646              		@ frame_needed = 1, uses_anonymous_args = 0
 647              		@ link register save eliminated.
 648 0000 80B4     		push	{r7}
 649              	.LCFI18:
 650              		.cfi_def_cfa_offset 4
 651              		.cfi_offset 7, -4
 652 0002 00AF     		add	r7, sp, #0
 653              	.LCFI19:
 654              		.cfi_def_cfa_register 7
 325:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* This just exists to keep the linker quiet. */
 326:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** }
 655              		.loc 1 326 1
 656 0004 00BF     		nop
 657 0006 BD46     		mov	sp, r7
 658              	.LCFI20:
 659              		.cfi_def_cfa_register 13
 660              		@ sp needed
 661 0008 5DF8047B 		ldr	r7, [sp], #4
 662              	.LCFI21:
 663              		.cfi_restore 7
 664              		.cfi_def_cfa_offset 0
 665 000c 7047     		bx	lr
 666              		.cfi_endproc
 667              	.LFE9:
 669              		.section	.text.prvHeapInit,"ax",%progbits
 670              		.align	1
 671              		.syntax unified
 672              		.thumb
 673              		.thumb_func
 675              	prvHeapInit:
 676              	.LFB10:
 327:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 328:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s 			page 22


 329:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static void prvHeapInit( void )
 330:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
 677              		.loc 1 330 1
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 16
 680              		@ frame_needed = 1, uses_anonymous_args = 0
 681              		@ link register save eliminated.
 682 0000 80B4     		push	{r7}
 683              	.LCFI22:
 684              		.cfi_def_cfa_offset 4
 685              		.cfi_offset 7, -4
 686 0002 85B0     		sub	sp, sp, #20
 687              	.LCFI23:
 688              		.cfi_def_cfa_offset 24
 689 0004 00AF     		add	r7, sp, #0
 690              	.LCFI24:
 691              		.cfi_def_cfa_register 7
 331:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** BlockLink_t *pxFirstFreeBlock;
 332:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** uint8_t *pucAlignedHeap;
 333:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** size_t uxAddress;
 334:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 692              		.loc 1 334 8
 693 0006 4FF40043 		mov	r3, #32768
 694 000a BB60     		str	r3, [r7, #8]
 335:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 336:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* Ensure the heap starts on a correctly aligned boundary. */
 337:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	uxAddress = ( size_t ) ucHeap;
 695              		.loc 1 337 12
 696 000c 274B     		ldr	r3, .L39
 697 000e FB60     		str	r3, [r7, #12]
 338:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 339:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 698              		.loc 1 339 18
 699 0010 FB68     		ldr	r3, [r7, #12]
 700 0012 03F00703 		and	r3, r3, #7
 701              		.loc 1 339 4
 702 0016 002B     		cmp	r3, #0
 703 0018 0CD0     		beq	.L38
 340:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 341:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 704              		.loc 1 341 13
 705 001a FB68     		ldr	r3, [r7, #12]
 706 001c 0733     		adds	r3, r3, #7
 707 001e FB60     		str	r3, [r7, #12]
 342:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 708              		.loc 1 342 13
 709 0020 FB68     		ldr	r3, [r7, #12]
 710 0022 23F00703 		bic	r3, r3, #7
 711 0026 FB60     		str	r3, [r7, #12]
 343:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 712              		.loc 1 343 18
 713 0028 BA68     		ldr	r2, [r7, #8]
 714 002a FB68     		ldr	r3, [r7, #12]
 715 002c D31A     		subs	r3, r2, r3
 716              		.loc 1 343 33
 717 002e 1F4A     		ldr	r2, .L39
 718              		.loc 1 343 18
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s 			page 23


 719 0030 1344     		add	r3, r3, r2
 720 0032 BB60     		str	r3, [r7, #8]
 721              	.L38:
 344:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 345:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 346:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pucAlignedHeap = ( uint8_t * ) uxAddress;
 722              		.loc 1 346 17
 723 0034 FB68     		ldr	r3, [r7, #12]
 724 0036 7B60     		str	r3, [r7, #4]
 347:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 348:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* xStart is used to hold a pointer to the first item in the list of free
 349:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	blocks.  The void cast is used to prevent compiler warnings. */
 350:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 725              		.loc 1 350 25
 726 0038 1D4A     		ldr	r2, .L39+4
 727 003a 7B68     		ldr	r3, [r7, #4]
 728 003c 1360     		str	r3, [r2]
 351:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	xStart.xBlockSize = ( size_t ) 0;
 729              		.loc 1 351 20
 730 003e 1C4B     		ldr	r3, .L39+4
 731 0040 0022     		movs	r2, #0
 732 0042 5A60     		str	r2, [r3, #4]
 352:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 353:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* pxEnd is used to mark the end of the list of free blocks and is inserted
 354:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	at the end of the heap space. */
 355:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 733              		.loc 1 355 16
 734 0044 7B68     		ldr	r3, [r7, #4]
 735              		.loc 1 355 12
 736 0046 BA68     		ldr	r2, [r7, #8]
 737 0048 1344     		add	r3, r3, r2
 738 004a FB60     		str	r3, [r7, #12]
 356:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	uxAddress -= xHeapStructSize;
 739              		.loc 1 356 12
 740 004c 0822     		movs	r2, #8
 741 004e FB68     		ldr	r3, [r7, #12]
 742 0050 9B1A     		subs	r3, r3, r2
 743 0052 FB60     		str	r3, [r7, #12]
 357:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 744              		.loc 1 357 12
 745 0054 FB68     		ldr	r3, [r7, #12]
 746 0056 23F00703 		bic	r3, r3, #7
 747 005a FB60     		str	r3, [r7, #12]
 358:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pxEnd = ( void * ) uxAddress;
 748              		.loc 1 358 10
 749 005c FB68     		ldr	r3, [r7, #12]
 750              		.loc 1 358 8
 751 005e 154A     		ldr	r2, .L39+8
 752 0060 1360     		str	r3, [r2]
 359:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pxEnd->xBlockSize = 0;
 753              		.loc 1 359 7
 754 0062 144B     		ldr	r3, .L39+8
 755 0064 1B68     		ldr	r3, [r3]
 756              		.loc 1 359 20
 757 0066 0022     		movs	r2, #0
 758 0068 5A60     		str	r2, [r3, #4]
 360:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pxEnd->pxNextFreeBlock = NULL;
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s 			page 24


 759              		.loc 1 360 7
 760 006a 124B     		ldr	r3, .L39+8
 761 006c 1B68     		ldr	r3, [r3]
 762              		.loc 1 360 25
 763 006e 0022     		movs	r2, #0
 764 0070 1A60     		str	r2, [r3]
 361:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 362:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* To start with there is a single free block that is sized to take up the
 363:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	entire heap space, minus the space taken by pxEnd. */
 364:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pxFirstFreeBlock = ( void * ) pucAlignedHeap;
 765              		.loc 1 364 19
 766 0072 7B68     		ldr	r3, [r7, #4]
 767 0074 3B60     		str	r3, [r7]
 365:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 768              		.loc 1 365 45
 769 0076 3B68     		ldr	r3, [r7]
 770              		.loc 1 365 43
 771 0078 FA68     		ldr	r2, [r7, #12]
 772 007a D21A     		subs	r2, r2, r3
 773              		.loc 1 365 31
 774 007c 3B68     		ldr	r3, [r7]
 775 007e 5A60     		str	r2, [r3, #4]
 366:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 776              		.loc 1 366 36
 777 0080 0C4B     		ldr	r3, .L39+8
 778 0082 1A68     		ldr	r2, [r3]
 779 0084 3B68     		ldr	r3, [r7]
 780 0086 1A60     		str	r2, [r3]
 367:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 368:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* Only one block exists - and it covers the entire usable heap space. */
 369:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 781              		.loc 1 369 51
 782 0088 3B68     		ldr	r3, [r7]
 783 008a 5B68     		ldr	r3, [r3, #4]
 784              		.loc 1 369 33
 785 008c 0A4A     		ldr	r2, .L39+12
 786 008e 1360     		str	r3, [r2]
 370:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 787              		.loc 1 370 40
 788 0090 3B68     		ldr	r3, [r7]
 789 0092 5B68     		ldr	r3, [r3, #4]
 790              		.loc 1 370 22
 791 0094 094A     		ldr	r2, .L39+16
 792 0096 1360     		str	r3, [r2]
 371:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 372:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* Work out the position of the top bit in a size_t variable. */
 373:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 793              		.loc 1 373 21
 794 0098 094B     		ldr	r3, .L39+20
 795 009a 4FF00042 		mov	r2, #-2147483648
 796 009e 1A60     		str	r2, [r3]
 374:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** }
 797              		.loc 1 374 1
 798 00a0 00BF     		nop
 799 00a2 1437     		adds	r7, r7, #20
 800              	.LCFI25:
 801              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s 			page 25


 802 00a4 BD46     		mov	sp, r7
 803              	.LCFI26:
 804              		.cfi_def_cfa_register 13
 805              		@ sp needed
 806 00a6 5DF8047B 		ldr	r7, [sp], #4
 807              	.LCFI27:
 808              		.cfi_restore 7
 809              		.cfi_def_cfa_offset 0
 810 00aa 7047     		bx	lr
 811              	.L40:
 812              		.align	2
 813              	.L39:
 814 00ac 00000000 		.word	ucHeap
 815 00b0 00000000 		.word	xStart
 816 00b4 00000000 		.word	pxEnd
 817 00b8 00000000 		.word	xMinimumEverFreeBytesRemaining
 818 00bc 00000000 		.word	xFreeBytesRemaining
 819 00c0 00000000 		.word	xBlockAllocatedBit
 820              		.cfi_endproc
 821              	.LFE10:
 823              		.section	.text.prvInsertBlockIntoFreeList,"ax",%progbits
 824              		.align	1
 825              		.syntax unified
 826              		.thumb
 827              		.thumb_func
 829              	prvInsertBlockIntoFreeList:
 830              	.LFB11:
 375:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 376:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 377:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
 378:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
 831              		.loc 1 378 1
 832              		.cfi_startproc
 833              		@ args = 0, pretend = 0, frame = 16
 834              		@ frame_needed = 1, uses_anonymous_args = 0
 835              		@ link register save eliminated.
 836 0000 80B4     		push	{r7}
 837              	.LCFI28:
 838              		.cfi_def_cfa_offset 4
 839              		.cfi_offset 7, -4
 840 0002 85B0     		sub	sp, sp, #20
 841              	.LCFI29:
 842              		.cfi_def_cfa_offset 24
 843 0004 00AF     		add	r7, sp, #0
 844              	.LCFI30:
 845              		.cfi_def_cfa_register 7
 846 0006 7860     		str	r0, [r7, #4]
 379:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** BlockLink_t *pxIterator;
 380:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** uint8_t *puc;
 381:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 382:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* Iterate through the list until a block is found that has a higher address
 383:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	than the block being inserted. */
 384:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator-
 847              		.loc 1 384 18
 848 0008 284B     		ldr	r3, .L50
 849 000a FB60     		str	r3, [r7, #12]
 850              		.loc 1 384 2
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s 			page 26


 851 000c 02E0     		b	.L42
 852              	.L43:
 853              		.loc 1 384 87 discriminator 3
 854 000e FB68     		ldr	r3, [r7, #12]
 855 0010 1B68     		ldr	r3, [r3]
 856 0012 FB60     		str	r3, [r7, #12]
 857              	.L42:
 858              		.loc 1 384 39 discriminator 1
 859 0014 FB68     		ldr	r3, [r7, #12]
 860 0016 1B68     		ldr	r3, [r3]
 861              		.loc 1 384 2 discriminator 1
 862 0018 7A68     		ldr	r2, [r7, #4]
 863 001a 9A42     		cmp	r2, r3
 864 001c F7D8     		bhi	.L43
 385:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 386:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		/* Nothing to do here, just iterate to the right position. */
 387:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 388:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 389:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* Do the block being inserted, and the block it is being inserted after
 390:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	make a contiguous block of memory? */
 391:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	puc = ( uint8_t * ) pxIterator;
 865              		.loc 1 391 6
 866 001e FB68     		ldr	r3, [r7, #12]
 867 0020 BB60     		str	r3, [r7, #8]
 392:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 868              		.loc 1 392 24
 869 0022 FB68     		ldr	r3, [r7, #12]
 870 0024 5B68     		ldr	r3, [r3, #4]
 871              		.loc 1 392 12
 872 0026 BA68     		ldr	r2, [r7, #8]
 873 0028 1344     		add	r3, r3, r2
 874              		.loc 1 392 4
 875 002a 7A68     		ldr	r2, [r7, #4]
 876 002c 9A42     		cmp	r2, r3
 877 002e 08D1     		bne	.L44
 393:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 394:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 878              		.loc 1 394 26
 879 0030 FB68     		ldr	r3, [r7, #12]
 880 0032 5A68     		ldr	r2, [r3, #4]
 881              		.loc 1 394 44
 882 0034 7B68     		ldr	r3, [r7, #4]
 883 0036 5B68     		ldr	r3, [r3, #4]
 884              		.loc 1 394 26
 885 0038 1A44     		add	r2, r2, r3
 886 003a FB68     		ldr	r3, [r7, #12]
 887 003c 5A60     		str	r2, [r3, #4]
 395:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		pxBlockToInsert = pxIterator;
 888              		.loc 1 395 19
 889 003e FB68     		ldr	r3, [r7, #12]
 890 0040 7B60     		str	r3, [r7, #4]
 891              	.L44:
 396:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 397:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	else
 398:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 399:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		mtCOVERAGE_TEST_MARKER();
 400:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s 			page 27


 401:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 402:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* Do the block being inserted, and the block it is being inserted before
 403:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	make a contiguous block of memory? */
 404:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	puc = ( uint8_t * ) pxBlockToInsert;
 892              		.loc 1 404 6
 893 0042 7B68     		ldr	r3, [r7, #4]
 894 0044 BB60     		str	r3, [r7, #8]
 405:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 895              		.loc 1 405 29
 896 0046 7B68     		ldr	r3, [r7, #4]
 897 0048 5B68     		ldr	r3, [r3, #4]
 898              		.loc 1 405 12
 899 004a BA68     		ldr	r2, [r7, #8]
 900 004c 1A44     		add	r2, r2, r3
 901              		.loc 1 405 71
 902 004e FB68     		ldr	r3, [r7, #12]
 903 0050 1B68     		ldr	r3, [r3]
 904              		.loc 1 405 4
 905 0052 9A42     		cmp	r2, r3
 906 0054 18D1     		bne	.L45
 406:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 407:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		if( pxIterator->pxNextFreeBlock != pxEnd )
 907              		.loc 1 407 17
 908 0056 FB68     		ldr	r3, [r7, #12]
 909 0058 1A68     		ldr	r2, [r3]
 910              		.loc 1 407 35
 911 005a 154B     		ldr	r3, .L50+4
 912 005c 1B68     		ldr	r3, [r3]
 913              		.loc 1 407 5
 914 005e 9A42     		cmp	r2, r3
 915 0060 0DD0     		beq	.L46
 408:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 409:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			/* Form one big block from the two blocks. */
 410:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 916              		.loc 1 410 32
 917 0062 7B68     		ldr	r3, [r7, #4]
 918 0064 5A68     		ldr	r2, [r3, #4]
 919              		.loc 1 410 45
 920 0066 FB68     		ldr	r3, [r7, #12]
 921 0068 1B68     		ldr	r3, [r3]
 922              		.loc 1 410 62
 923 006a 5B68     		ldr	r3, [r3, #4]
 924              		.loc 1 410 32
 925 006c 1A44     		add	r2, r2, r3
 926 006e 7B68     		ldr	r3, [r7, #4]
 927 0070 5A60     		str	r2, [r3, #4]
 411:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 928              		.loc 1 411 49
 929 0072 FB68     		ldr	r3, [r7, #12]
 930 0074 1B68     		ldr	r3, [r3]
 931              		.loc 1 411 66
 932 0076 1A68     		ldr	r2, [r3]
 933              		.loc 1 411 37
 934 0078 7B68     		ldr	r3, [r7, #4]
 935 007a 1A60     		str	r2, [r3]
 936 007c 08E0     		b	.L47
 937              	.L46:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s 			page 28


 412:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 413:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		else
 414:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 415:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			pxBlockToInsert->pxNextFreeBlock = pxEnd;
 938              		.loc 1 415 37
 939 007e 0C4B     		ldr	r3, .L50+4
 940 0080 1A68     		ldr	r2, [r3]
 941 0082 7B68     		ldr	r3, [r7, #4]
 942 0084 1A60     		str	r2, [r3]
 943 0086 03E0     		b	.L47
 944              	.L45:
 416:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 417:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 418:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	else
 419:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 420:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 945              		.loc 1 420 48
 946 0088 FB68     		ldr	r3, [r7, #12]
 947 008a 1A68     		ldr	r2, [r3]
 948              		.loc 1 420 36
 949 008c 7B68     		ldr	r3, [r7, #4]
 950 008e 1A60     		str	r2, [r3]
 951              	.L47:
 421:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 422:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 423:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* If the block being inserted plugged a gab, so was merged with the block
 424:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	before and the block after, then it's pxNextFreeBlock pointer will have
 425:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	already been set, and should not be set here as that would make it point
 426:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	to itself. */
 427:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	if( pxIterator != pxBlockToInsert )
 952              		.loc 1 427 4
 953 0090 FA68     		ldr	r2, [r7, #12]
 954 0092 7B68     		ldr	r3, [r7, #4]
 955 0094 9A42     		cmp	r2, r3
 956 0096 02D0     		beq	.L49
 428:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 429:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 957              		.loc 1 429 31
 958 0098 FB68     		ldr	r3, [r7, #12]
 959 009a 7A68     		ldr	r2, [r7, #4]
 960 009c 1A60     		str	r2, [r3]
 961              	.L49:
 430:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 431:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	else
 432:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 433:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		mtCOVERAGE_TEST_MARKER();
 434:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 435:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** }
 962              		.loc 1 435 1
 963 009e 00BF     		nop
 964 00a0 1437     		adds	r7, r7, #20
 965              	.LCFI31:
 966              		.cfi_def_cfa_offset 4
 967 00a2 BD46     		mov	sp, r7
 968              	.LCFI32:
 969              		.cfi_def_cfa_register 13
 970              		@ sp needed
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s 			page 29


 971 00a4 5DF8047B 		ldr	r7, [sp], #4
 972              	.LCFI33:
 973              		.cfi_restore 7
 974              		.cfi_def_cfa_offset 0
 975 00a8 7047     		bx	lr
 976              	.L51:
 977 00aa 00BF     		.align	2
 978              	.L50:
 979 00ac 00000000 		.word	xStart
 980 00b0 00000000 		.word	pxEnd
 981              		.cfi_endproc
 982              	.LFE11:
 984              		.text
 985              	.Letext0:
 986              		.file 3 "d:\\3.tools\\arm_gcc_toolchain\\lib\\gcc\\arm-none-eabi\\10.3.1\\include\\stddef.h"
 987              		.file 4 "d:\\3.tools\\arm_gcc_toolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 988              		.file 5 "d:\\3.tools\\arm_gcc_toolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s 			page 30


DEFINED SYMBOLS
                            *ABS*:00000000 heap_4.c
C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s:20     .bss.ucHeap:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s:23     .bss.ucHeap:00000000 ucHeap
C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s:26     .rodata.xHeapStructSize:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s:29     .rodata.xHeapStructSize:00000000 xHeapStructSize
C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s:32     .bss.xStart:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s:35     .bss.xStart:00000000 xStart
C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s:38     .bss.pxEnd:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s:41     .bss.pxEnd:00000000 pxEnd
C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s:44     .bss.xFreeBytesRemaining:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s:47     .bss.xFreeBytesRemaining:00000000 xFreeBytesRemaining
C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s:50     .bss.xMinimumEverFreeBytesRemaining:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s:53     .bss.xMinimumEverFreeBytesRemaining:00000000 xMinimumEverFreeBytesRemaining
C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s:56     .bss.xBlockAllocatedBit:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s:59     .bss.xBlockAllocatedBit:00000000 xBlockAllocatedBit
C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s:62     .text.pvPortMalloc:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s:68     .text.pvPortMalloc:00000000 pvPortMalloc
C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s:675    .text.prvHeapInit:00000000 prvHeapInit
C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s:829    .text.prvInsertBlockIntoFreeList:00000000 prvInsertBlockIntoFreeList
C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s:378    .text.pvPortMalloc:0000018c $d
C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s:387    .text.vPortFree:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s:393    .text.vPortFree:00000000 vPortFree
C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s:545    .text.vPortFree:000000b4 $d
C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s:551    .text.xPortGetFreeHeapSize:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s:557    .text.xPortGetFreeHeapSize:00000000 xPortGetFreeHeapSize
C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s:588    .text.xPortGetFreeHeapSize:00000014 $d
C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s:593    .text.xPortGetMinimumEverFreeHeapSize:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s:599    .text.xPortGetMinimumEverFreeHeapSize:00000000 xPortGetMinimumEverFreeHeapSize
C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s:630    .text.xPortGetMinimumEverFreeHeapSize:00000014 $d
C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s:635    .text.vPortInitialiseBlocks:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s:641    .text.vPortInitialiseBlocks:00000000 vPortInitialiseBlocks
C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s:670    .text.prvHeapInit:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s:814    .text.prvHeapInit:000000ac $d
C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s:824    .text.prvInsertBlockIntoFreeList:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccjZJsNL.s:979    .text.prvInsertBlockIntoFreeList:000000ac $d

UNDEFINED SYMBOLS
vTaskSuspendAll
xTaskResumeAll
vApplicationMallocFailedHook
