ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f7xx_hal_flash.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	pFlash
  20              		.section	.bss.pFlash,"aw",%nobits
  21              		.align	2
  24              	pFlash:
  25 0000 00000000 		.space	28
  25      00000000 
  25      00000000 
  25      00000000 
  25      00000000 
  26              		.section	.text.HAL_FLASH_Program,"ax",%progbits
  27              		.align	1
  28              		.global	HAL_FLASH_Program
  29              		.syntax unified
  30              		.thumb
  31              		.thumb_func
  33              	HAL_FLASH_Program:
  34              	.LFB141:
  35              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @file    stm32f7xx_hal_flash.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @brief   FLASH HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *          functionalities of the internal FLASH memory:
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *           + Program operations functions
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *           + Memory Control functions 
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *           + Peripheral Errors functions
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *         
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   @verbatim
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   ==============================================================================
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****                         ##### FLASH peripheral features #####
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   ==============================================================================
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****            
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   [..] The Flash memory interface manages CPU AHB I-Code and D-Code accesses 
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****        to the Flash memory. It implements the erase and program Flash memory operations 
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****        and the read and write protection mechanisms.
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   [..] The Flash memory interface accelerates code execution with a system of instruction
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 2


  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****        prefetch and cache lines. 
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   [..] The FLASH main features are:
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       (+) Flash memory read operations
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       (+) Flash memory program/erase operations
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       (+) Read / write protections
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       (+) Prefetch on I-Code
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       (+) 64 cache lines of 128 bits on I-Code
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       (+) 8 cache lines of 128 bits on D-Code
  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       
  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****                      ##### How to use this driver #####
  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   ==============================================================================
  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     [..]                             
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       This driver provides functions and macros to configure and program the FLASH 
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       memory of all STM32F7xx devices.
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       (#) FLASH Memory IO Programming functions: 
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****            (++) Lock and Unlock the FLASH interface using HAL_FLASH_Unlock() and 
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****                 HAL_FLASH_Lock() functions
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****            (++) Program functions: byte, half word, word and double word
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****            (++) There Two modes of programming :
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****             (+++) Polling mode using HAL_FLASH_Program() function
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****             (+++) Interrupt mode using HAL_FLASH_Program_IT() function
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       (#) Interrupts and flags management functions : 
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****            (++) Handle FLASH interrupts by calling HAL_FLASH_IRQHandler()
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****            (++) Wait for last FLASH operation according to its status
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****            (++) Get error flag status by calling HAL_SetErrorCode()          
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     [..] 
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       In addition to these functions, this driver includes a set of macros allowing
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       to handle the following operations:
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****        (+) Set the latency
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****        (+) Enable/Disable the prefetch buffer
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****        (+) Enable/Disable the Instruction cache and the Data cache
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****        (+) Reset the Instruction cache and the Data cache
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****        (+) Enable/Disable the FLASH interrupts
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****        (+) Monitor the FLASH flags status
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     [..]	   
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 	(@) For any Flash memory program operation (erase or program), the CPU clock frequency
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         (HCLK) must be at least 1MHz. 
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 	(@) The contents of the Flash memory are not guaranteed if a device reset occurs during 
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 	    a Flash memory operation.
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     (@) Any attempt to read the Flash memory while it is being written or erased, causes the 
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 	    bus to stall. Read operations are processed correctly once the program operation has 
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 		completed. This means that code or data fetches cannot be performed while a write/erase 
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 		operation is ongoing.
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****           
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   @endverbatim
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   ******************************************************************************
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @attention
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * Copyright (c) 2017 STMicroelectronics.
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * All rights reserved.
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * This software is licensed under terms that can be found in the LICENSE file in
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * the root directory of this software component.
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 3


  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   ******************************************************************************
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */ 
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /* Includes ------------------------------------------------------------------*/
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** #include "stm32f7xx_hal.h"
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /** @addtogroup STM32F7xx_HAL_Driver
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @{
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /** @defgroup FLASH FLASH
  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @brief FLASH HAL module driver
  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @{
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** #ifdef HAL_FLASH_MODULE_ENABLED
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /* Private typedef -----------------------------------------------------------*/
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /* Private define ------------------------------------------------------------*/
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /** @addtogroup FLASH_Private_Constants
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @{
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** #define SECTOR_MASK               ((uint32_t)0xFFFFFF07U)
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** #define FLASH_TIMEOUT_VALUE       ((uint32_t)50000U)/* 50 s */
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @}
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */         
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /* Private macro -------------------------------------------------------------*/
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /* Private variables ---------------------------------------------------------*/
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /** @addtogroup FLASH_Private_Variables
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @{
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /* Variable used for Erase sectors under interruption */
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** FLASH_ProcessTypeDef pFlash;
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @}
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /* Private function prototypes -----------------------------------------------*/
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /** @addtogroup FLASH_Private_Functions
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @{
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /* Program operations */
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** static void   FLASH_Program_DoubleWord(uint32_t Address, uint64_t Data);
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** static void   FLASH_Program_Word(uint32_t Address, uint32_t Data);
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** static void   FLASH_Program_HalfWord(uint32_t Address, uint16_t Data);
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** static void   FLASH_Program_Byte(uint32_t Address, uint8_t Data);
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** static void   FLASH_SetErrorCode(void);
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** HAL_StatusTypeDef FLASH_WaitForLastOperation(uint32_t Timeout);
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @}
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /* Exported functions --------------------------------------------------------*/
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions FLASH Exported Functions
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @{
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 4


 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions_Group1 Programming operation functions 
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****  *  @brief   Programming operation functions 
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****  *
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** @verbatim   
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****  ===============================================================================
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****                   ##### Programming operation functions #####
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****  ===============================================================================  
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     [..]
 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     This subsection provides a set of functions allowing to manage the FLASH 
 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     program operations.
 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** @endverbatim
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @{
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @brief  Program byte, halfword, word or double word at a specified address
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @param  TypeProgram  Indicate the way to program at a specified address.
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *                           This parameter can be a value of @ref FLASH_Type_Program
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @param  Address  specifies the address to be programmed.
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @param  Data specifies the data to be programmed
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * 
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @retval HAL_StatusTypeDef HAL Status
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Program(uint32_t TypeProgram, uint32_t Address, uint64_t Data)
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** {
  36              		.loc 1 163 1
  37              		.cfi_startproc
  38              		@ args = 0, pretend = 0, frame = 24
  39              		@ frame_needed = 1, uses_anonymous_args = 0
  40 0000 80B5     		push	{r7, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 7, -8
  44              		.cfi_offset 14, -4
  45 0002 86B0     		sub	sp, sp, #24
  46              	.LCFI1:
  47              		.cfi_def_cfa_offset 32
  48 0004 00AF     		add	r7, sp, #0
  49              	.LCFI2:
  50              		.cfi_def_cfa_register 7
  51 0006 F860     		str	r0, [r7, #12]
  52 0008 B960     		str	r1, [r7, #8]
  53 000a C7E90023 		strd	r2, [r7]
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_ERROR;
  54              		.loc 1 164 21
  55 000e 0123     		movs	r3, #1
  56 0010 FB75     		strb	r3, [r7, #23]
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Process Locked */
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   __HAL_LOCK(&pFlash);
  57              		.loc 1 167 3
  58 0012 274B     		ldr	r3, .L13
  59 0014 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
  60 0016 012B     		cmp	r3, #1
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 5


  61 0018 01D1     		bne	.L2
  62              		.loc 1 167 3 is_stmt 0 discriminator 1
  63 001a 0223     		movs	r3, #2
  64 001c 43E0     		b	.L3
  65              	.L2:
  66              		.loc 1 167 3 discriminator 2
  67 001e 244B     		ldr	r3, .L13
  68 0020 0122     		movs	r2, #1
  69 0022 1A75     		strb	r2, [r3, #20]
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Check the parameters */
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   assert_param(IS_FLASH_TYPEPROGRAM(TypeProgram));
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Wait for last operation to be completed */
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
  70              		.loc 1 173 12 is_stmt 1 discriminator 2
  71 0024 4CF25030 		movw	r0, #50000
  72 0028 FFF7FEFF 		bl	FLASH_WaitForLastOperation
  73 002c 0346     		mov	r3, r0
  74 002e FB75     		strb	r3, [r7, #23]
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   if(status == HAL_OK)
  75              		.loc 1 175 5 discriminator 2
  76 0030 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
  77 0032 002B     		cmp	r3, #0
  78 0034 33D1     		bne	.L4
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   {
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     switch(TypeProgram)
  79              		.loc 1 177 5
  80 0036 FB68     		ldr	r3, [r7, #12]
  81 0038 032B     		cmp	r3, #3
  82 003a 23D8     		bhi	.L12
  83 003c 01A2     		adr	r2, .L7
  84 003e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  85 0042 00BF     		.p2align 2
  86              	.L7:
  87 0044 55000000 		.word	.L10+1
  88 0048 61000000 		.word	.L9+1
  89 004c 6D000000 		.word	.L8+1
  90 0050 79000000 		.word	.L6+1
  91              		.p2align 1
  92              	.L10:
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     {
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       case FLASH_TYPEPROGRAM_BYTE :
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       {
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         /*Program byte (8-bit) at a specified address.*/
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         FLASH_Program_Byte(Address, (uint8_t) Data);
  93              		.loc 1 182 9
  94 0054 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
  95 0056 1946     		mov	r1, r3
  96 0058 B868     		ldr	r0, [r7, #8]
  97 005a FFF7FEFF 		bl	FLASH_Program_Byte
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         break;
  98              		.loc 1 183 9
  99 005e 12E0     		b	.L11
 100              	.L9:
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       }
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 6


 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       case FLASH_TYPEPROGRAM_HALFWORD :
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       {
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         /*Program halfword (16-bit) at a specified address.*/
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         FLASH_Program_HalfWord(Address, (uint16_t) Data);
 101              		.loc 1 189 9
 102 0060 3B88     		ldrh	r3, [r7]
 103 0062 1946     		mov	r1, r3
 104 0064 B868     		ldr	r0, [r7, #8]
 105 0066 FFF7FEFF 		bl	FLASH_Program_HalfWord
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         break;
 106              		.loc 1 190 9
 107 006a 0CE0     		b	.L11
 108              	.L8:
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       }
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       case FLASH_TYPEPROGRAM_WORD :
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       {
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         /*Program word (32-bit) at a specified address.*/
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         FLASH_Program_Word(Address, (uint32_t) Data);
 109              		.loc 1 196 9
 110 006c 3B68     		ldr	r3, [r7]
 111 006e 1946     		mov	r1, r3
 112 0070 B868     		ldr	r0, [r7, #8]
 113 0072 FFF7FEFF 		bl	FLASH_Program_Word
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         break;
 114              		.loc 1 197 9
 115 0076 06E0     		b	.L11
 116              	.L6:
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       }
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       case FLASH_TYPEPROGRAM_DOUBLEWORD :
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       {
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         /*Program double word (64-bit) at a specified address.*/
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         FLASH_Program_DoubleWord(Address, Data);
 117              		.loc 1 203 9
 118 0078 D7E90023 		ldrd	r2, [r7]
 119 007c B868     		ldr	r0, [r7, #8]
 120 007e FFF7FEFF 		bl	FLASH_Program_DoubleWord
 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         break;
 121              		.loc 1 204 9
 122 0082 00E0     		b	.L11
 123              	.L12:
 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       }
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       default :
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         break;
 124              		.loc 1 207 9
 125 0084 00BF     		nop
 126              	.L11:
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     }
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     /* Wait for last operation to be completed */
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 127              		.loc 1 210 14
 128 0086 4CF25030 		movw	r0, #50000
 129 008a FFF7FEFF 		bl	FLASH_WaitForLastOperation
 130 008e 0346     		mov	r3, r0
 131 0090 FB75     		strb	r3, [r7, #23]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 7


 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     /* If the program operation is completed, disable the PG Bit */
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     FLASH->CR &= (~FLASH_CR_PG);
 132              		.loc 1 213 15
 133 0092 084B     		ldr	r3, .L13+4
 134 0094 1B69     		ldr	r3, [r3, #16]
 135 0096 074A     		ldr	r2, .L13+4
 136 0098 23F00103 		bic	r3, r3, #1
 137 009c 1361     		str	r3, [r2, #16]
 138              	.L4:
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   }
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Process Unlocked */
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   __HAL_UNLOCK(&pFlash);
 139              		.loc 1 217 3
 140 009e 044B     		ldr	r3, .L13
 141 00a0 0022     		movs	r2, #0
 142 00a2 1A75     		strb	r2, [r3, #20]
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   return status;
 143              		.loc 1 219 10
 144 00a4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 145              	.L3:
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** }
 146              		.loc 1 220 1
 147 00a6 1846     		mov	r0, r3
 148 00a8 1837     		adds	r7, r7, #24
 149              	.LCFI3:
 150              		.cfi_def_cfa_offset 8
 151 00aa BD46     		mov	sp, r7
 152              	.LCFI4:
 153              		.cfi_def_cfa_register 13
 154              		@ sp needed
 155 00ac 80BD     		pop	{r7, pc}
 156              	.L14:
 157 00ae 00BF     		.align	2
 158              	.L13:
 159 00b0 00000000 		.word	pFlash
 160 00b4 003C0240 		.word	1073888256
 161              		.cfi_endproc
 162              	.LFE141:
 164              		.section	.text.HAL_FLASH_Program_IT,"ax",%progbits
 165              		.align	1
 166              		.global	HAL_FLASH_Program_IT
 167              		.syntax unified
 168              		.thumb
 169              		.thumb_func
 171              	HAL_FLASH_Program_IT:
 172              	.LFB142:
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @brief   Program byte, halfword, word or double word at a specified address  with interrupt ena
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @param  TypeProgram  Indicate the way to program at a specified address.
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *                           This parameter can be a value of @ref FLASH_Type_Program
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @param  Address  specifies the address to be programmed.
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @param  Data specifies the data to be programmed
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 8


 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @retval HAL Status
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Program_IT(uint32_t TypeProgram, uint32_t Address, uint64_t Data)
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** {
 173              		.loc 1 232 1
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 24
 176              		@ frame_needed = 1, uses_anonymous_args = 0
 177 0000 80B5     		push	{r7, lr}
 178              	.LCFI5:
 179              		.cfi_def_cfa_offset 8
 180              		.cfi_offset 7, -8
 181              		.cfi_offset 14, -4
 182 0002 86B0     		sub	sp, sp, #24
 183              	.LCFI6:
 184              		.cfi_def_cfa_offset 32
 185 0004 00AF     		add	r7, sp, #0
 186              	.LCFI7:
 187              		.cfi_def_cfa_register 7
 188 0006 F860     		str	r0, [r7, #12]
 189 0008 B960     		str	r1, [r7, #8]
 190 000a C7E90023 		strd	r2, [r7]
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_OK;
 191              		.loc 1 233 21
 192 000e 0023     		movs	r3, #0
 193 0010 FB75     		strb	r3, [r7, #23]
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Process Locked */
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   __HAL_LOCK(&pFlash);
 194              		.loc 1 236 3
 195 0012 254B     		ldr	r3, .L26
 196 0014 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 197 0016 012B     		cmp	r3, #1
 198 0018 01D1     		bne	.L16
 199              		.loc 1 236 3 is_stmt 0 discriminator 1
 200 001a 0223     		movs	r3, #2
 201 001c 40E0     		b	.L17
 202              	.L16:
 203              		.loc 1 236 3 discriminator 2
 204 001e 224B     		ldr	r3, .L26
 205 0020 0122     		movs	r2, #1
 206 0022 1A75     		strb	r2, [r3, #20]
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Check the parameters */
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   assert_param(IS_FLASH_TYPEPROGRAM(TypeProgram));
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Enable End of FLASH Operation interrupt */
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   __HAL_FLASH_ENABLE_IT(FLASH_IT_EOP);
 207              		.loc 1 242 3 is_stmt 1 discriminator 2
 208 0024 214B     		ldr	r3, .L26+4
 209 0026 1B69     		ldr	r3, [r3, #16]
 210 0028 204A     		ldr	r2, .L26+4
 211 002a 43F08073 		orr	r3, r3, #16777216
 212 002e 1361     		str	r3, [r2, #16]
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Enable Error source interrupt */
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   __HAL_FLASH_ENABLE_IT(FLASH_IT_ERR);
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 9


 213              		.loc 1 245 3 discriminator 2
 214 0030 1E4B     		ldr	r3, .L26+4
 215 0032 1B69     		ldr	r3, [r3, #16]
 216 0034 1D4A     		ldr	r2, .L26+4
 217 0036 43F00073 		orr	r3, r3, #33554432
 218 003a 1361     		str	r3, [r2, #16]
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Clear pending flags (if any) */  
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP    | FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR |\
 219              		.loc 1 248 3 discriminator 2
 220 003c 1B4B     		ldr	r3, .L26+4
 221 003e F322     		movs	r2, #243
 222 0040 DA60     		str	r2, [r3, #12]
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****                          FLASH_FLAG_PGAERR | FLASH_FLAG_PGPERR| FLASH_FLAG_ERSERR);  
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   pFlash.ProcedureOnGoing = FLASH_PROC_PROGRAM;
 223              		.loc 1 251 27 discriminator 2
 224 0042 194B     		ldr	r3, .L26
 225 0044 0322     		movs	r2, #3
 226 0046 1A70     		strb	r2, [r3]
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   pFlash.Address = Address;
 227              		.loc 1 252 18 discriminator 2
 228 0048 174A     		ldr	r2, .L26
 229 004a BB68     		ldr	r3, [r7, #8]
 230 004c 1361     		str	r3, [r2, #16]
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   switch(TypeProgram)
 231              		.loc 1 254 3 discriminator 2
 232 004e FB68     		ldr	r3, [r7, #12]
 233 0050 032B     		cmp	r3, #3
 234 0052 23D8     		bhi	.L25
 235 0054 01A2     		adr	r2, .L20
 236 0056 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 237 005a 00BF     		.p2align 2
 238              	.L20:
 239 005c 6D000000 		.word	.L23+1
 240 0060 79000000 		.word	.L22+1
 241 0064 85000000 		.word	.L21+1
 242 0068 91000000 		.word	.L19+1
 243              		.p2align 1
 244              	.L23:
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   {
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     case FLASH_TYPEPROGRAM_BYTE :
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     {
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       /*Program byte (8-bit) at a specified address.*/
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       FLASH_Program_Byte(Address, (uint8_t) Data);
 245              		.loc 1 259 7
 246 006c 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 247 006e 1946     		mov	r1, r3
 248 0070 B868     		ldr	r0, [r7, #8]
 249 0072 FFF7FEFF 		bl	FLASH_Program_Byte
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       break;
 250              		.loc 1 260 7
 251 0076 12E0     		b	.L24
 252              	.L22:
 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     }
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 10


 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     case FLASH_TYPEPROGRAM_HALFWORD :
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     {
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       /*Program halfword (16-bit) at a specified address.*/
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       FLASH_Program_HalfWord(Address, (uint16_t) Data);
 253              		.loc 1 266 7
 254 0078 3B88     		ldrh	r3, [r7]
 255 007a 1946     		mov	r1, r3
 256 007c B868     		ldr	r0, [r7, #8]
 257 007e FFF7FEFF 		bl	FLASH_Program_HalfWord
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       break;
 258              		.loc 1 267 7
 259 0082 0CE0     		b	.L24
 260              	.L21:
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     }
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     case FLASH_TYPEPROGRAM_WORD :
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     {
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       /*Program word (32-bit) at a specified address.*/
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       FLASH_Program_Word(Address, (uint32_t) Data);
 261              		.loc 1 273 7
 262 0084 3B68     		ldr	r3, [r7]
 263 0086 1946     		mov	r1, r3
 264 0088 B868     		ldr	r0, [r7, #8]
 265 008a FFF7FEFF 		bl	FLASH_Program_Word
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       break;
 266              		.loc 1 274 7
 267 008e 06E0     		b	.L24
 268              	.L19:
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     }
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     case FLASH_TYPEPROGRAM_DOUBLEWORD :
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     {
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       /*Program double word (64-bit) at a specified address.*/
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       FLASH_Program_DoubleWord(Address, Data);
 269              		.loc 1 280 7
 270 0090 D7E90023 		ldrd	r2, [r7]
 271 0094 B868     		ldr	r0, [r7, #8]
 272 0096 FFF7FEFF 		bl	FLASH_Program_DoubleWord
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       break;
 273              		.loc 1 281 7
 274 009a 00E0     		b	.L24
 275              	.L25:
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     }
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     default :
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       break;
 276              		.loc 1 284 7
 277 009c 00BF     		nop
 278              	.L24:
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   }
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   return status;
 279              		.loc 1 286 10
 280 009e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 281              	.L17:
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** }
 282              		.loc 1 287 1
 283 00a0 1846     		mov	r0, r3
 284 00a2 1837     		adds	r7, r7, #24
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 11


 285              	.LCFI8:
 286              		.cfi_def_cfa_offset 8
 287 00a4 BD46     		mov	sp, r7
 288              	.LCFI9:
 289              		.cfi_def_cfa_register 13
 290              		@ sp needed
 291 00a6 80BD     		pop	{r7, pc}
 292              	.L27:
 293              		.align	2
 294              	.L26:
 295 00a8 00000000 		.word	pFlash
 296 00ac 003C0240 		.word	1073888256
 297              		.cfi_endproc
 298              	.LFE142:
 300              		.section	.text.HAL_FLASH_IRQHandler,"ax",%progbits
 301              		.align	1
 302              		.global	HAL_FLASH_IRQHandler
 303              		.syntax unified
 304              		.thumb
 305              		.thumb_func
 307              	HAL_FLASH_IRQHandler:
 308              	.LFB143:
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @brief This function handles FLASH interrupt request.
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @retval None
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** void HAL_FLASH_IRQHandler(void)
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** {
 309              		.loc 1 294 1
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 8
 312              		@ frame_needed = 1, uses_anonymous_args = 0
 313 0000 80B5     		push	{r7, lr}
 314              	.LCFI10:
 315              		.cfi_def_cfa_offset 8
 316              		.cfi_offset 7, -8
 317              		.cfi_offset 14, -4
 318 0002 82B0     		sub	sp, sp, #8
 319              	.LCFI11:
 320              		.cfi_def_cfa_offset 16
 321 0004 00AF     		add	r7, sp, #0
 322              	.LCFI12:
 323              		.cfi_def_cfa_register 7
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   uint32_t temp = 0;
 324              		.loc 1 295 12
 325 0006 0023     		movs	r3, #0
 326 0008 7B60     		str	r3, [r7, #4]
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* If the program operation is completed, disable the PG Bit */
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   FLASH->CR &= (~FLASH_CR_PG);
 327              		.loc 1 298 13
 328 000a 564B     		ldr	r3, .L47
 329 000c 1B69     		ldr	r3, [r3, #16]
 330 000e 554A     		ldr	r2, .L47
 331 0010 23F00103 		bic	r3, r3, #1
 332 0014 1361     		str	r3, [r2, #16]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 12


 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* If the erase operation is completed, disable the SER Bit */
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   FLASH->CR &= (~FLASH_CR_SER);
 333              		.loc 1 301 13
 334 0016 534B     		ldr	r3, .L47
 335 0018 1B69     		ldr	r3, [r3, #16]
 336 001a 524A     		ldr	r2, .L47
 337 001c 23F00203 		bic	r3, r3, #2
 338 0020 1361     		str	r3, [r2, #16]
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   FLASH->CR &= SECTOR_MASK; 
 339              		.loc 1 302 13
 340 0022 504B     		ldr	r3, .L47
 341 0024 1B69     		ldr	r3, [r3, #16]
 342 0026 4F4A     		ldr	r2, .L47
 343 0028 23F0F803 		bic	r3, r3, #248
 344 002c 1361     		str	r3, [r2, #16]
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* if the erase operation is completed, disable the MER Bit */
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   FLASH->CR &= (~FLASH_MER_BIT);
 345              		.loc 1 305 13
 346 002e 4D4B     		ldr	r3, .L47
 347 0030 1B69     		ldr	r3, [r3, #16]
 348 0032 4C4A     		ldr	r2, .L47
 349 0034 23F00403 		bic	r3, r3, #4
 350 0038 1361     		str	r3, [r2, #16]
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Check FLASH End of Operation flag  */
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 351              		.loc 1 308 6
 352 003a 4A4B     		ldr	r3, .L47
 353 003c DB68     		ldr	r3, [r3, #12]
 354 003e 03F00103 		and	r3, r3, #1
 355              		.loc 1 308 5
 356 0042 002B     		cmp	r3, #0
 357 0044 48D0     		beq	.L43
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   {
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     /* Clear FLASH End of Operation pending bit */
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 358              		.loc 1 311 5
 359 0046 474B     		ldr	r3, .L47
 360 0048 0122     		movs	r2, #1
 361 004a DA60     		str	r2, [r3, #12]
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     switch (pFlash.ProcedureOnGoing)
 362              		.loc 1 313 19
 363 004c 464B     		ldr	r3, .L47+4
 364 004e 1B78     		ldrb	r3, [r3]
 365 0050 DBB2     		uxtb	r3, r3
 366              		.loc 1 313 5
 367 0052 032B     		cmp	r3, #3
 368 0054 37D0     		beq	.L30
 369 0056 032B     		cmp	r3, #3
 370 0058 40DC     		bgt	.L44
 371 005a 012B     		cmp	r3, #1
 372 005c 02D0     		beq	.L32
 373 005e 022B     		cmp	r3, #2
 374 0060 2AD0     		beq	.L33
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 13


 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     {
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       case FLASH_PROC_SECTERASE :
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       {
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         /* Nb of sector to erased can be decreased */
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         pFlash.NbSectorsToErase--;
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         /* Check if there are still sectors to erase */
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         if(pFlash.NbSectorsToErase != 0)
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         {
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****           temp = pFlash.Sector;
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****           /* Indicate user which sector has been erased */
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****           HAL_FLASH_EndOfOperationCallback(temp);
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****           /* Increment sector number */
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****           temp = ++pFlash.Sector;
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****           FLASH_Erase_Sector(temp, pFlash.VoltageForErase);
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         }
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         else
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         {
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****           /* No more sectors to Erase, user callback can be called.*/
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****           /* Reset Sector and stop Erase sectors procedure */
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****           pFlash.Sector = temp = 0xFFFFFFFFU;
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****           /* FLASH EOP interrupt user callback */
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****           HAL_FLASH_EndOfOperationCallback(temp);
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****           /* Sector Erase procedure is completed */
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****           pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         }
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         break;
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       }
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       case FLASH_PROC_MASSERASE :
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       {
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         /* MassErase ended. Return the selected bank : in this product we don't have Banks */
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         /* FLASH EOP interrupt user callback */
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(0);
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         /* MAss Erase procedure is completed */
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         break;
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       }
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       case FLASH_PROC_PROGRAM :
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       {
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         /*Program ended. Return the selected address*/
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         /* FLASH EOP interrupt user callback */
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(pFlash.Address);
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         /* Programming procedure is completed */
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         break;
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       }
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       default :
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         break;
 375              		.loc 1 364 9
 376 0062 3BE0     		b	.L44
 377              	.L32:
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 378              		.loc 1 318 15
 379 0064 404B     		ldr	r3, .L47+4
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 14


 380 0066 5B68     		ldr	r3, [r3, #4]
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 381              		.loc 1 318 32
 382 0068 013B     		subs	r3, r3, #1
 383 006a 3F4A     		ldr	r2, .L47+4
 384 006c 5360     		str	r3, [r2, #4]
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         {
 385              		.loc 1 321 18
 386 006e 3E4B     		ldr	r3, .L47+4
 387 0070 5B68     		ldr	r3, [r3, #4]
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         {
 388              		.loc 1 321 11
 389 0072 002B     		cmp	r3, #0
 390 0074 13D0     		beq	.L34
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****           /* Indicate user which sector has been erased */
 391              		.loc 1 323 16
 392 0076 3C4B     		ldr	r3, .L47+4
 393 0078 DB68     		ldr	r3, [r3, #12]
 394 007a 7B60     		str	r3, [r7, #4]
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 395              		.loc 1 325 11
 396 007c 7868     		ldr	r0, [r7, #4]
 397 007e FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****           FLASH_Erase_Sector(temp, pFlash.VoltageForErase);
 398              		.loc 1 328 26
 399 0082 394B     		ldr	r3, .L47+4
 400 0084 DB68     		ldr	r3, [r3, #12]
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****           FLASH_Erase_Sector(temp, pFlash.VoltageForErase);
 401              		.loc 1 328 18
 402 0086 0133     		adds	r3, r3, #1
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****           FLASH_Erase_Sector(temp, pFlash.VoltageForErase);
 403              		.loc 1 328 16
 404 0088 374A     		ldr	r2, .L47+4
 405 008a D360     		str	r3, [r2, #12]
 406 008c 7B60     		str	r3, [r7, #4]
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         }
 407              		.loc 1 329 11
 408 008e 364B     		ldr	r3, .L47+4
 409 0090 1B7A     		ldrb	r3, [r3, #8]
 410 0092 DBB2     		uxtb	r3, r3
 411 0094 1946     		mov	r1, r3
 412 0096 7868     		ldr	r0, [r7, #4]
 413 0098 FFF7FEFF 		bl	FLASH_Erase_Sector
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       }
 414              		.loc 1 341 9
 415 009c 1FE0     		b	.L29
 416              	.L34:
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****           /* FLASH EOP interrupt user callback */
 417              		.loc 1 335 32
 418 009e 4FF0FF33 		mov	r3, #-1
 419 00a2 7B60     		str	r3, [r7, #4]
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****           /* FLASH EOP interrupt user callback */
 420              		.loc 1 335 25
 421 00a4 304A     		ldr	r2, .L47+4
 422 00a6 7B68     		ldr	r3, [r7, #4]
 423 00a8 D360     		str	r3, [r2, #12]
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****           /* Sector Erase procedure is completed */
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 15


 424              		.loc 1 337 11
 425 00aa 7868     		ldr	r0, [r7, #4]
 426 00ac FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         }
 427              		.loc 1 339 35
 428 00b0 2D4B     		ldr	r3, .L47+4
 429 00b2 0022     		movs	r2, #0
 430 00b4 1A70     		strb	r2, [r3]
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       }
 431              		.loc 1 341 9
 432 00b6 12E0     		b	.L29
 433              	.L33:
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         /* MAss Erase procedure is completed */
 434              		.loc 1 348 9
 435 00b8 0020     		movs	r0, #0
 436 00ba FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         break;
 437              		.loc 1 350 33
 438 00be 2A4B     		ldr	r3, .L47+4
 439 00c0 0022     		movs	r2, #0
 440 00c2 1A70     		strb	r2, [r3]
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       }
 441              		.loc 1 351 9
 442 00c4 0BE0     		b	.L29
 443              	.L30:
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         /* Programming procedure is completed */
 444              		.loc 1 358 9
 445 00c6 284B     		ldr	r3, .L47+4
 446 00c8 1B69     		ldr	r3, [r3, #16]
 447 00ca 1846     		mov	r0, r3
 448 00cc FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         break;
 449              		.loc 1 360 33
 450 00d0 254B     		ldr	r3, .L47+4
 451 00d2 0022     		movs	r2, #0
 452 00d4 1A70     		strb	r2, [r3]
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       }
 453              		.loc 1 361 9
 454 00d6 02E0     		b	.L29
 455              	.L43:
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     }
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   }
 456              		.loc 1 366 3
 457 00d8 00BF     		nop
 458 00da 00E0     		b	.L29
 459              	.L44:
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     }
 460              		.loc 1 364 9
 461 00dc 00BF     		nop
 462              	.L29:
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Check FLASH operation error flags */
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_ALL_ERRORS) != RESET)
 463              		.loc 1 369 6
 464 00de 214B     		ldr	r3, .L47
 465 00e0 DB68     		ldr	r3, [r3, #12]
 466 00e2 03F0F203 		and	r3, r3, #242
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 16


 467              		.loc 1 369 5
 468 00e6 002B     		cmp	r3, #0
 469 00e8 23D0     		beq	.L36
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   {
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     switch (pFlash.ProcedureOnGoing)
 470              		.loc 1 371 19
 471 00ea 1F4B     		ldr	r3, .L47+4
 472 00ec 1B78     		ldrb	r3, [r3]
 473 00ee DBB2     		uxtb	r3, r3
 474              		.loc 1 371 5
 475 00f0 032B     		cmp	r3, #3
 476 00f2 11D0     		beq	.L37
 477 00f4 032B     		cmp	r3, #3
 478 00f6 13DC     		bgt	.L45
 479 00f8 012B     		cmp	r3, #1
 480 00fa 02D0     		beq	.L39
 481 00fc 022B     		cmp	r3, #2
 482 00fe 08D0     		beq	.L40
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     {
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       case FLASH_PROC_SECTERASE :
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       {
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         /* return the faulty sector */
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         temp = pFlash.Sector;
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         pFlash.Sector = 0xFFFFFFFFU;
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         break;
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       }
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       case FLASH_PROC_MASSERASE :
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       {
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         /* No return in case of Mass Erase */
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         temp = 0;
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         break;
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       }
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       case FLASH_PROC_PROGRAM :
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       {
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         /*return the faulty address*/
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         temp = pFlash.Address;
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         break;
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       }
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     default :
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       break;
 483              		.loc 1 393 7
 484 0100 0EE0     		b	.L45
 485              	.L39:
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         pFlash.Sector = 0xFFFFFFFFU;
 486              		.loc 1 376 14
 487 0102 194B     		ldr	r3, .L47+4
 488 0104 DB68     		ldr	r3, [r3, #12]
 489 0106 7B60     		str	r3, [r7, #4]
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         break;
 490              		.loc 1 377 23
 491 0108 174B     		ldr	r3, .L47+4
 492 010a 4FF0FF32 		mov	r2, #-1
 493 010e DA60     		str	r2, [r3, #12]
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       }
 494              		.loc 1 378 9
 495 0110 07E0     		b	.L41
 496              	.L40:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 17


 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         break;
 497              		.loc 1 383 14
 498 0112 0023     		movs	r3, #0
 499 0114 7B60     		str	r3, [r7, #4]
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       }
 500              		.loc 1 384 9
 501 0116 04E0     		b	.L41
 502              	.L37:
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         break;
 503              		.loc 1 389 14
 504 0118 134B     		ldr	r3, .L47+4
 505 011a 1B69     		ldr	r3, [r3, #16]
 506 011c 7B60     		str	r3, [r7, #4]
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       }
 507              		.loc 1 390 9
 508 011e 00E0     		b	.L41
 509              	.L45:
 510              		.loc 1 393 7
 511 0120 00BF     		nop
 512              	.L41:
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     }
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     /*Save the Error code*/
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     FLASH_SetErrorCode();
 513              		.loc 1 396 5
 514 0122 FFF7FEFF 		bl	FLASH_SetErrorCode
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     /* FLASH error interrupt user callback */
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     HAL_FLASH_OperationErrorCallback(temp);
 515              		.loc 1 399 5
 516 0126 7868     		ldr	r0, [r7, #4]
 517 0128 FFF7FEFF 		bl	HAL_FLASH_OperationErrorCallback
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     /*Stop the procedure ongoing */
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 518              		.loc 1 402 29
 519 012c 0E4B     		ldr	r3, .L47+4
 520 012e 0022     		movs	r2, #0
 521 0130 1A70     		strb	r2, [r3]
 522              	.L36:
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   }
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   if(pFlash.ProcedureOnGoing == FLASH_PROC_NONE)
 523              		.loc 1 405 12
 524 0132 0D4B     		ldr	r3, .L47+4
 525 0134 1B78     		ldrb	r3, [r3]
 526 0136 DBB2     		uxtb	r3, r3
 527              		.loc 1 405 5
 528 0138 002B     		cmp	r3, #0
 529 013a 0ED1     		bne	.L46
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   {
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     /* Disable End of FLASH Operation interrupt */
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     __HAL_FLASH_DISABLE_IT(FLASH_IT_EOP);
 530              		.loc 1 408 5
 531 013c 094B     		ldr	r3, .L47
 532 013e 1B69     		ldr	r3, [r3, #16]
 533 0140 084A     		ldr	r2, .L47
 534 0142 23F08073 		bic	r3, r3, #16777216
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 18


 535 0146 1361     		str	r3, [r2, #16]
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     /* Disable Error source interrupt */
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     __HAL_FLASH_DISABLE_IT(FLASH_IT_ERR);
 536              		.loc 1 411 5
 537 0148 064B     		ldr	r3, .L47
 538 014a 1B69     		ldr	r3, [r3, #16]
 539 014c 054A     		ldr	r2, .L47
 540 014e 23F00073 		bic	r3, r3, #33554432
 541 0152 1361     		str	r3, [r2, #16]
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     /* Process Unlocked */
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     __HAL_UNLOCK(&pFlash);
 542              		.loc 1 414 5
 543 0154 044B     		ldr	r3, .L47+4
 544 0156 0022     		movs	r2, #0
 545 0158 1A75     		strb	r2, [r3, #20]
 546              	.L46:
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   }
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** }
 547              		.loc 1 417 1
 548 015a 00BF     		nop
 549 015c 0837     		adds	r7, r7, #8
 550              	.LCFI13:
 551              		.cfi_def_cfa_offset 8
 552 015e BD46     		mov	sp, r7
 553              	.LCFI14:
 554              		.cfi_def_cfa_register 13
 555              		@ sp needed
 556 0160 80BD     		pop	{r7, pc}
 557              	.L48:
 558 0162 00BF     		.align	2
 559              	.L47:
 560 0164 003C0240 		.word	1073888256
 561 0168 00000000 		.word	pFlash
 562              		.cfi_endproc
 563              	.LFE143:
 565              		.section	.text.HAL_FLASH_EndOfOperationCallback,"ax",%progbits
 566              		.align	1
 567              		.weak	HAL_FLASH_EndOfOperationCallback
 568              		.syntax unified
 569              		.thumb
 570              		.thumb_func
 572              	HAL_FLASH_EndOfOperationCallback:
 573              	.LFB144:
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @brief  FLASH end of operation interrupt callback
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @param  ReturnValue The value saved in this parameter depends on the ongoing procedure
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *                 - Sectors Erase: Sector which has been erased (if 0xFFFFFFFF, it means that 
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *                                  all the selected sectors have been erased)
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *                 - Program      : Address which was selected for data program
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *                 - Mass Erase   : No return value expected
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @retval None
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** __weak void HAL_FLASH_EndOfOperationCallback(uint32_t ReturnValue)
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 19


 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** {
 574              		.loc 1 429 1
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 8
 577              		@ frame_needed = 1, uses_anonymous_args = 0
 578              		@ link register save eliminated.
 579 0000 80B4     		push	{r7}
 580              	.LCFI15:
 581              		.cfi_def_cfa_offset 4
 582              		.cfi_offset 7, -4
 583 0002 83B0     		sub	sp, sp, #12
 584              	.LCFI16:
 585              		.cfi_def_cfa_offset 16
 586 0004 00AF     		add	r7, sp, #0
 587              	.LCFI17:
 588              		.cfi_def_cfa_register 7
 589 0006 7860     		str	r0, [r7, #4]
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Prevent unused argument(s) compilation warning */
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   UNUSED(ReturnValue);
 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   the HAL_FLASH_EndOfOperationCallback could be implemented in the user file
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */ 
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** }
 590              		.loc 1 435 1
 591 0008 00BF     		nop
 592 000a 0C37     		adds	r7, r7, #12
 593              	.LCFI18:
 594              		.cfi_def_cfa_offset 4
 595 000c BD46     		mov	sp, r7
 596              	.LCFI19:
 597              		.cfi_def_cfa_register 13
 598              		@ sp needed
 599 000e 5DF8047B 		ldr	r7, [sp], #4
 600              	.LCFI20:
 601              		.cfi_restore 7
 602              		.cfi_def_cfa_offset 0
 603 0012 7047     		bx	lr
 604              		.cfi_endproc
 605              	.LFE144:
 607              		.section	.text.HAL_FLASH_OperationErrorCallback,"ax",%progbits
 608              		.align	1
 609              		.weak	HAL_FLASH_OperationErrorCallback
 610              		.syntax unified
 611              		.thumb
 612              		.thumb_func
 614              	HAL_FLASH_OperationErrorCallback:
 615              	.LFB145:
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @brief  FLASH operation error interrupt callback
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @param  ReturnValue The value saved in this parameter depends on the ongoing procedure
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *                 - Sectors Erase: Sector which has been erased (if 0xFFFFFFFF, it means that 
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *                                  all the selected sectors have been erased)
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *                 - Program      : Address which was selected for data program
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *                 - Mass Erase   : No return value expected
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @retval None
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 20


 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** __weak void HAL_FLASH_OperationErrorCallback(uint32_t ReturnValue)
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** {
 616              		.loc 1 447 1
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 8
 619              		@ frame_needed = 1, uses_anonymous_args = 0
 620              		@ link register save eliminated.
 621 0000 80B4     		push	{r7}
 622              	.LCFI21:
 623              		.cfi_def_cfa_offset 4
 624              		.cfi_offset 7, -4
 625 0002 83B0     		sub	sp, sp, #12
 626              	.LCFI22:
 627              		.cfi_def_cfa_offset 16
 628 0004 00AF     		add	r7, sp, #0
 629              	.LCFI23:
 630              		.cfi_def_cfa_register 7
 631 0006 7860     		str	r0, [r7, #4]
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Prevent unused argument(s) compilation warning */
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   UNUSED(ReturnValue);
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   the HAL_FLASH_OperationErrorCallback could be implemented in the user file
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****    */ 
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** }
 632              		.loc 1 453 1
 633 0008 00BF     		nop
 634 000a 0C37     		adds	r7, r7, #12
 635              	.LCFI24:
 636              		.cfi_def_cfa_offset 4
 637 000c BD46     		mov	sp, r7
 638              	.LCFI25:
 639              		.cfi_def_cfa_register 13
 640              		@ sp needed
 641 000e 5DF8047B 		ldr	r7, [sp], #4
 642              	.LCFI26:
 643              		.cfi_restore 7
 644              		.cfi_def_cfa_offset 0
 645 0012 7047     		bx	lr
 646              		.cfi_endproc
 647              	.LFE145:
 649              		.section	.text.HAL_FLASH_Unlock,"ax",%progbits
 650              		.align	1
 651              		.global	HAL_FLASH_Unlock
 652              		.syntax unified
 653              		.thumb
 654              		.thumb_func
 656              	HAL_FLASH_Unlock:
 657              	.LFB146:
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @}
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions_Group2 Peripheral Control functions 
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****  *  @brief   management functions 
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****  *
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** @verbatim   
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 21


 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****  ===============================================================================
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****                       ##### Peripheral Control functions #####
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****  ===============================================================================  
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     [..]
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     This subsection provides a set of functions allowing to control the FLASH 
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     memory operations.
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** @endverbatim
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @{
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @brief  Unlock the FLASH control register access
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @retval HAL Status
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Unlock(void)
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** {
 658              		.loc 1 479 1
 659              		.cfi_startproc
 660              		@ args = 0, pretend = 0, frame = 8
 661              		@ frame_needed = 1, uses_anonymous_args = 0
 662              		@ link register save eliminated.
 663 0000 80B4     		push	{r7}
 664              	.LCFI27:
 665              		.cfi_def_cfa_offset 4
 666              		.cfi_offset 7, -4
 667 0002 83B0     		sub	sp, sp, #12
 668              	.LCFI28:
 669              		.cfi_def_cfa_offset 16
 670 0004 00AF     		add	r7, sp, #0
 671              	.LCFI29:
 672              		.cfi_def_cfa_register 7
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_OK;
 673              		.loc 1 480 21
 674 0006 0023     		movs	r3, #0
 675 0008 FB71     		strb	r3, [r7, #7]
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 676              		.loc 1 482 6
 677 000a 0B4B     		ldr	r3, .L54
 678 000c 1B69     		ldr	r3, [r3, #16]
 679              		.loc 1 482 5
 680 000e 002B     		cmp	r3, #0
 681 0010 0BDA     		bge	.L52
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   {
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     /* Authorize the FLASH Registers access */
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 682              		.loc 1 485 5
 683 0012 094B     		ldr	r3, .L54
 684 0014 094A     		ldr	r2, .L54+4
 685 0016 5A60     		str	r2, [r3, #4]
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 686              		.loc 1 486 5
 687 0018 074B     		ldr	r3, .L54
 688 001a 094A     		ldr	r2, .L54+8
 689 001c 5A60     		str	r2, [r3, #4]
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 22


 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     /* Verify Flash is unlocked */
 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 690              		.loc 1 489 8
 691 001e 064B     		ldr	r3, .L54
 692 0020 1B69     		ldr	r3, [r3, #16]
 693              		.loc 1 489 7
 694 0022 002B     		cmp	r3, #0
 695 0024 01DA     		bge	.L52
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     {
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       status = HAL_ERROR;
 696              		.loc 1 491 14
 697 0026 0123     		movs	r3, #1
 698 0028 FB71     		strb	r3, [r7, #7]
 699              	.L52:
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     }
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   }
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   return status;
 700              		.loc 1 495 10
 701 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** }
 702              		.loc 1 496 1
 703 002c 1846     		mov	r0, r3
 704 002e 0C37     		adds	r7, r7, #12
 705              	.LCFI30:
 706              		.cfi_def_cfa_offset 4
 707 0030 BD46     		mov	sp, r7
 708              	.LCFI31:
 709              		.cfi_def_cfa_register 13
 710              		@ sp needed
 711 0032 5DF8047B 		ldr	r7, [sp], #4
 712              	.LCFI32:
 713              		.cfi_restore 7
 714              		.cfi_def_cfa_offset 0
 715 0036 7047     		bx	lr
 716              	.L55:
 717              		.align	2
 718              	.L54:
 719 0038 003C0240 		.word	1073888256
 720 003c 23016745 		.word	1164378403
 721 0040 AB89EFCD 		.word	-839939669
 722              		.cfi_endproc
 723              	.LFE146:
 725              		.section	.text.HAL_FLASH_Lock,"ax",%progbits
 726              		.align	1
 727              		.global	HAL_FLASH_Lock
 728              		.syntax unified
 729              		.thumb
 730              		.thumb_func
 732              	HAL_FLASH_Lock:
 733              	.LFB147:
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @brief  Locks the FLASH control register access
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @retval HAL Status
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Lock(void)
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 23


 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** {
 734              		.loc 1 503 1
 735              		.cfi_startproc
 736              		@ args = 0, pretend = 0, frame = 0
 737              		@ frame_needed = 1, uses_anonymous_args = 0
 738              		@ link register save eliminated.
 739 0000 80B4     		push	{r7}
 740              	.LCFI33:
 741              		.cfi_def_cfa_offset 4
 742              		.cfi_offset 7, -4
 743 0002 00AF     		add	r7, sp, #0
 744              	.LCFI34:
 745              		.cfi_def_cfa_register 7
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Set the LOCK Bit to lock the FLASH Registers access */
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   FLASH->CR |= FLASH_CR_LOCK;
 746              		.loc 1 505 13
 747 0004 054B     		ldr	r3, .L58
 748 0006 1B69     		ldr	r3, [r3, #16]
 749 0008 044A     		ldr	r2, .L58
 750 000a 43F00043 		orr	r3, r3, #-2147483648
 751 000e 1361     		str	r3, [r2, #16]
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   return HAL_OK;  
 752              		.loc 1 507 10
 753 0010 0023     		movs	r3, #0
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** }
 754              		.loc 1 508 1
 755 0012 1846     		mov	r0, r3
 756 0014 BD46     		mov	sp, r7
 757              	.LCFI35:
 758              		.cfi_def_cfa_register 13
 759              		@ sp needed
 760 0016 5DF8047B 		ldr	r7, [sp], #4
 761              	.LCFI36:
 762              		.cfi_restore 7
 763              		.cfi_def_cfa_offset 0
 764 001a 7047     		bx	lr
 765              	.L59:
 766              		.align	2
 767              	.L58:
 768 001c 003C0240 		.word	1073888256
 769              		.cfi_endproc
 770              	.LFE147:
 772              		.section	.text.HAL_FLASH_OB_Unlock,"ax",%progbits
 773              		.align	1
 774              		.global	HAL_FLASH_OB_Unlock
 775              		.syntax unified
 776              		.thumb
 777              		.thumb_func
 779              	HAL_FLASH_OB_Unlock:
 780              	.LFB148:
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @brief  Unlock the FLASH Option Control Registers access.
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @retval HAL Status
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_OB_Unlock(void)
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 24


 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** {
 781              		.loc 1 515 1
 782              		.cfi_startproc
 783              		@ args = 0, pretend = 0, frame = 0
 784              		@ frame_needed = 1, uses_anonymous_args = 0
 785              		@ link register save eliminated.
 786 0000 80B4     		push	{r7}
 787              	.LCFI37:
 788              		.cfi_def_cfa_offset 4
 789              		.cfi_offset 7, -4
 790 0002 00AF     		add	r7, sp, #0
 791              	.LCFI38:
 792              		.cfi_def_cfa_register 7
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   if((FLASH->OPTCR & FLASH_OPTCR_OPTLOCK) != RESET)
 793              		.loc 1 516 12
 794 0004 094B     		ldr	r3, .L64
 795 0006 5B69     		ldr	r3, [r3, #20]
 796              		.loc 1 516 20
 797 0008 03F00103 		and	r3, r3, #1
 798              		.loc 1 516 5
 799 000c 002B     		cmp	r3, #0
 800 000e 07D0     		beq	.L61
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   {
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     /* Authorizes the Option Byte register programming */
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     FLASH->OPTKEYR = FLASH_OPT_KEY1;
 801              		.loc 1 519 10
 802 0010 064B     		ldr	r3, .L64
 803              		.loc 1 519 20
 804 0012 074A     		ldr	r2, .L64+4
 805 0014 9A60     		str	r2, [r3, #8]
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     FLASH->OPTKEYR = FLASH_OPT_KEY2;
 806              		.loc 1 520 10
 807 0016 054B     		ldr	r3, .L64
 808              		.loc 1 520 20
 809 0018 064A     		ldr	r2, .L64+8
 810 001a 9A60     		str	r2, [r3, #8]
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   }
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   else
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   {
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     return HAL_ERROR;
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   }  
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   return HAL_OK;  
 811              		.loc 1 527 10
 812 001c 0023     		movs	r3, #0
 813 001e 00E0     		b	.L63
 814              	.L61:
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   }  
 815              		.loc 1 524 12
 816 0020 0123     		movs	r3, #1
 817              	.L63:
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** }
 818              		.loc 1 528 1
 819 0022 1846     		mov	r0, r3
 820 0024 BD46     		mov	sp, r7
 821              	.LCFI39:
 822              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 25


 823              		@ sp needed
 824 0026 5DF8047B 		ldr	r7, [sp], #4
 825              	.LCFI40:
 826              		.cfi_restore 7
 827              		.cfi_def_cfa_offset 0
 828 002a 7047     		bx	lr
 829              	.L65:
 830              		.align	2
 831              	.L64:
 832 002c 003C0240 		.word	1073888256
 833 0030 3B2A1908 		.word	135866939
 834 0034 7F6E5D4C 		.word	1281191551
 835              		.cfi_endproc
 836              	.LFE148:
 838              		.section	.text.HAL_FLASH_OB_Lock,"ax",%progbits
 839              		.align	1
 840              		.global	HAL_FLASH_OB_Lock
 841              		.syntax unified
 842              		.thumb
 843              		.thumb_func
 845              	HAL_FLASH_OB_Lock:
 846              	.LFB149:
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @brief  Lock the FLASH Option Control Registers access.
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @retval HAL Status 
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_OB_Lock(void)
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** {
 847              		.loc 1 535 1
 848              		.cfi_startproc
 849              		@ args = 0, pretend = 0, frame = 0
 850              		@ frame_needed = 1, uses_anonymous_args = 0
 851              		@ link register save eliminated.
 852 0000 80B4     		push	{r7}
 853              	.LCFI41:
 854              		.cfi_def_cfa_offset 4
 855              		.cfi_offset 7, -4
 856 0002 00AF     		add	r7, sp, #0
 857              	.LCFI42:
 858              		.cfi_def_cfa_register 7
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Set the OPTLOCK Bit to lock the FLASH Option Byte Registers access */
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   FLASH->OPTCR |= FLASH_OPTCR_OPTLOCK;
 859              		.loc 1 537 16
 860 0004 054B     		ldr	r3, .L68
 861 0006 5B69     		ldr	r3, [r3, #20]
 862 0008 044A     		ldr	r2, .L68
 863 000a 43F00103 		orr	r3, r3, #1
 864 000e 5361     		str	r3, [r2, #20]
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   return HAL_OK;  
 865              		.loc 1 539 10
 866 0010 0023     		movs	r3, #0
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** }
 867              		.loc 1 540 1
 868 0012 1846     		mov	r0, r3
 869 0014 BD46     		mov	sp, r7
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 26


 870              	.LCFI43:
 871              		.cfi_def_cfa_register 13
 872              		@ sp needed
 873 0016 5DF8047B 		ldr	r7, [sp], #4
 874              	.LCFI44:
 875              		.cfi_restore 7
 876              		.cfi_def_cfa_offset 0
 877 001a 7047     		bx	lr
 878              	.L69:
 879              		.align	2
 880              	.L68:
 881 001c 003C0240 		.word	1073888256
 882              		.cfi_endproc
 883              	.LFE149:
 885              		.section	.text.HAL_FLASH_OB_Launch,"ax",%progbits
 886              		.align	1
 887              		.global	HAL_FLASH_OB_Launch
 888              		.syntax unified
 889              		.thumb
 890              		.thumb_func
 892              	HAL_FLASH_OB_Launch:
 893              	.LFB150:
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @brief  Launch the option byte loading.
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @retval HAL Status
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_OB_Launch(void)
 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** {
 894              		.loc 1 547 1
 895              		.cfi_startproc
 896              		@ args = 0, pretend = 0, frame = 0
 897              		@ frame_needed = 1, uses_anonymous_args = 0
 898 0000 80B5     		push	{r7, lr}
 899              	.LCFI45:
 900              		.cfi_def_cfa_offset 8
 901              		.cfi_offset 7, -8
 902              		.cfi_offset 14, -4
 903 0002 00AF     		add	r7, sp, #0
 904              	.LCFI46:
 905              		.cfi_def_cfa_register 7
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Set the OPTSTRT bit in OPTCR register */
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   FLASH->OPTCR |= FLASH_OPTCR_OPTSTRT;
 906              		.loc 1 549 16
 907 0004 064B     		ldr	r3, .L72
 908 0006 5B69     		ldr	r3, [r3, #20]
 909 0008 054A     		ldr	r2, .L72
 910 000a 43F00203 		orr	r3, r3, #2
 911 000e 5361     		str	r3, [r2, #20]
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Wait for last operation to be completed */
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   return(FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE)); 
 912              		.loc 1 552 10
 913 0010 4CF25030 		movw	r0, #50000
 914 0014 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 915 0018 0346     		mov	r3, r0
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** }
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 27


 916              		.loc 1 553 1
 917 001a 1846     		mov	r0, r3
 918 001c 80BD     		pop	{r7, pc}
 919              	.L73:
 920 001e 00BF     		.align	2
 921              	.L72:
 922 0020 003C0240 		.word	1073888256
 923              		.cfi_endproc
 924              	.LFE150:
 926              		.section	.text.HAL_FLASH_GetError,"ax",%progbits
 927              		.align	1
 928              		.global	HAL_FLASH_GetError
 929              		.syntax unified
 930              		.thumb
 931              		.thumb_func
 933              	HAL_FLASH_GetError:
 934              	.LFB151:
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @}
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions_Group3 Peripheral State and Errors functions 
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****  *  @brief   Peripheral Errors functions 
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****  *
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** @verbatim   
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****  ===============================================================================
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****                 ##### Peripheral Errors functions #####
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****  ===============================================================================  
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     [..]
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     This subsection permits to get in run-time Errors of the FLASH peripheral.
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** @endverbatim
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @{
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @brief  Get the specific FLASH error flag.
 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @retval FLASH_ErrorCode: The returned value can be:
 576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *            @arg FLASH_ERROR_ERS: FLASH Erasing Sequence error flag 
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *            @arg FLASH_ERROR_PGP: FLASH Programming Parallelism error flag  
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *            @arg FLASH_ERROR_PGA: FLASH Programming Alignment error flag
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *            @arg FLASH_ERROR_WRP: FLASH Write protected error flag
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *            @arg FLASH_ERROR_OPERATION: FLASH operation Error flag 
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** uint32_t HAL_FLASH_GetError(void)
 583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** { 
 935              		.loc 1 583 1
 936              		.cfi_startproc
 937              		@ args = 0, pretend = 0, frame = 0
 938              		@ frame_needed = 1, uses_anonymous_args = 0
 939              		@ link register save eliminated.
 940 0000 80B4     		push	{r7}
 941              	.LCFI47:
 942              		.cfi_def_cfa_offset 4
 943              		.cfi_offset 7, -4
 944 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 28


 945              	.LCFI48:
 946              		.cfi_def_cfa_register 7
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****    return pFlash.ErrorCode;
 947              		.loc 1 584 17
 948 0004 034B     		ldr	r3, .L76
 949 0006 9B69     		ldr	r3, [r3, #24]
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** }  
 950              		.loc 1 585 1
 951 0008 1846     		mov	r0, r3
 952 000a BD46     		mov	sp, r7
 953              	.LCFI49:
 954              		.cfi_def_cfa_register 13
 955              		@ sp needed
 956 000c 5DF8047B 		ldr	r7, [sp], #4
 957              	.LCFI50:
 958              		.cfi_restore 7
 959              		.cfi_def_cfa_offset 0
 960 0010 7047     		bx	lr
 961              	.L77:
 962 0012 00BF     		.align	2
 963              	.L76:
 964 0014 00000000 		.word	pFlash
 965              		.cfi_endproc
 966              	.LFE151:
 968              		.section	.text.FLASH_WaitForLastOperation,"ax",%progbits
 969              		.align	1
 970              		.global	FLASH_WaitForLastOperation
 971              		.syntax unified
 972              		.thumb
 973              		.thumb_func
 975              	FLASH_WaitForLastOperation:
 976              	.LFB152:
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @}
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */    
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @brief  Wait for a FLASH operation to complete.
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @param  Timeout maximum flash operationtimeout
 594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @retval HAL Status
 595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** HAL_StatusTypeDef FLASH_WaitForLastOperation(uint32_t Timeout)
 597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** { 
 977              		.loc 1 597 1
 978              		.cfi_startproc
 979              		@ args = 0, pretend = 0, frame = 16
 980              		@ frame_needed = 1, uses_anonymous_args = 0
 981 0000 80B5     		push	{r7, lr}
 982              	.LCFI51:
 983              		.cfi_def_cfa_offset 8
 984              		.cfi_offset 7, -8
 985              		.cfi_offset 14, -4
 986 0002 84B0     		sub	sp, sp, #16
 987              	.LCFI52:
 988              		.cfi_def_cfa_offset 24
 989 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 29


 990              	.LCFI53:
 991              		.cfi_def_cfa_register 7
 992 0006 7860     		str	r0, [r7, #4]
 598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   uint32_t tickstart = 0;
 993              		.loc 1 598 12
 994 0008 0023     		movs	r3, #0
 995 000a FB60     		str	r3, [r7, #12]
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Clear Error Code */
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 996              		.loc 1 601 20
 997 000c 1A4B     		ldr	r3, .L85
 998 000e 0022     		movs	r2, #0
 999 0010 9A61     		str	r2, [r3, #24]
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Wait for the FLASH operation to complete by polling on BUSY flag to be reset.
 604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****      Even if the FLASH operation fails, the BUSY flag will be reset and an error
 605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****      flag will be set */
 606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Get tick */
 607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   tickstart = HAL_GetTick();
 1000              		.loc 1 607 15
 1001 0012 FFF7FEFF 		bl	HAL_GetTick
 1002 0016 F860     		str	r0, [r7, #12]
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 1003              		.loc 1 609 8
 1004 0018 10E0     		b	.L79
 1005              	.L82:
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   { 
 611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     if(Timeout != HAL_MAX_DELAY)
 1006              		.loc 1 611 7
 1007 001a 7B68     		ldr	r3, [r7, #4]
 1008 001c B3F1FF3F 		cmp	r3, #-1
 1009 0020 0CD0     		beq	.L79
 612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     {
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 1010              		.loc 1 613 9
 1011 0022 7B68     		ldr	r3, [r7, #4]
 1012 0024 002B     		cmp	r3, #0
 1013 0026 07D0     		beq	.L80
 1014              		.loc 1 613 28 discriminator 1
 1015 0028 FFF7FEFF 		bl	HAL_GetTick
 1016 002c 0246     		mov	r2, r0
 1017              		.loc 1 613 42 discriminator 1
 1018 002e FB68     		ldr	r3, [r7, #12]
 1019 0030 D31A     		subs	r3, r2, r3
 1020              		.loc 1 613 24 discriminator 1
 1021 0032 7A68     		ldr	r2, [r7, #4]
 1022 0034 9A42     		cmp	r2, r3
 1023 0036 01D2     		bcs	.L79
 1024              	.L80:
 614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       {
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         return HAL_TIMEOUT;
 1025              		.loc 1 615 16
 1026 0038 0323     		movs	r3, #3
 1027 003a 19E0     		b	.L81
 1028              	.L79:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 30


 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   { 
 1029              		.loc 1 609 9
 1030 003c 0F4B     		ldr	r3, .L85+4
 1031 003e DB68     		ldr	r3, [r3, #12]
 1032 0040 03F48033 		and	r3, r3, #65536
 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   { 
 1033              		.loc 1 609 8
 1034 0044 002B     		cmp	r3, #0
 1035 0046 E8D1     		bne	.L82
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       }
 617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     } 
 618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   }
 619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_ALL_ERRORS) != RESET)
 1036              		.loc 1 620 6
 1037 0048 0C4B     		ldr	r3, .L85+4
 1038 004a DB68     		ldr	r3, [r3, #12]
 1039 004c 03F0F203 		and	r3, r3, #242
 1040              		.loc 1 620 5
 1041 0050 002B     		cmp	r3, #0
 1042 0052 03D0     		beq	.L83
 621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   {
 622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     /*Save the error code*/
 623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     FLASH_SetErrorCode();
 1043              		.loc 1 623 5
 1044 0054 FFF7FEFF 		bl	FLASH_SetErrorCode
 624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     return HAL_ERROR;
 1045              		.loc 1 624 12
 1046 0058 0123     		movs	r3, #1
 1047 005a 09E0     		b	.L81
 1048              	.L83:
 625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   }
 626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Check FLASH End of Operation flag  */
 628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 1049              		.loc 1 628 7
 1050 005c 074B     		ldr	r3, .L85+4
 1051 005e DB68     		ldr	r3, [r3, #12]
 1052 0060 03F00103 		and	r3, r3, #1
 1053              		.loc 1 628 6
 1054 0064 002B     		cmp	r3, #0
 1055 0066 02D0     		beq	.L84
 629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   {
 630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     /* Clear FLASH End of Operation pending bit */
 631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 1056              		.loc 1 631 5
 1057 0068 044B     		ldr	r3, .L85+4
 1058 006a 0122     		movs	r2, #1
 1059 006c DA60     		str	r2, [r3, #12]
 1060              	.L84:
 632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   }
 633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* If there is an error flag set */
 635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   return HAL_OK;
 1061              		.loc 1 635 10
 1062 006e 0023     		movs	r3, #0
 1063              	.L81:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 31


 636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** }  
 1064              		.loc 1 637 1
 1065 0070 1846     		mov	r0, r3
 1066 0072 1037     		adds	r7, r7, #16
 1067              	.LCFI54:
 1068              		.cfi_def_cfa_offset 8
 1069 0074 BD46     		mov	sp, r7
 1070              	.LCFI55:
 1071              		.cfi_def_cfa_register 13
 1072              		@ sp needed
 1073 0076 80BD     		pop	{r7, pc}
 1074              	.L86:
 1075              		.align	2
 1076              	.L85:
 1077 0078 00000000 		.word	pFlash
 1078 007c 003C0240 		.word	1073888256
 1079              		.cfi_endproc
 1080              	.LFE152:
 1082              		.section	.text.FLASH_Program_DoubleWord,"ax",%progbits
 1083              		.align	1
 1084              		.syntax unified
 1085              		.thumb
 1086              		.thumb_func
 1088              	FLASH_Program_DoubleWord:
 1089              	.LFB153:
 638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
 640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @brief  Program a double word (64-bit) at a specified address.
 641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @note   This function must be used when the device voltage range is from
 642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *         2.7V to 3.6V and an External Vpp is present.
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *
 644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @note   If an erase and a program operations are requested simultaneously,    
 645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *         the erase operation is performed before the program one.
 646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *  
 647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @param  Address specifies the address to be programmed.
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @param  Data specifies the data to be programmed.
 649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @retval None
 650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** static void FLASH_Program_DoubleWord(uint32_t Address, uint64_t Data)
 652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** {
 1090              		.loc 1 652 1
 1091              		.cfi_startproc
 1092              		@ args = 0, pretend = 0, frame = 16
 1093              		@ frame_needed = 1, uses_anonymous_args = 0
 1094              		@ link register save eliminated.
 1095 0000 80B4     		push	{r7}
 1096              	.LCFI56:
 1097              		.cfi_def_cfa_offset 4
 1098              		.cfi_offset 7, -4
 1099 0002 85B0     		sub	sp, sp, #20
 1100              	.LCFI57:
 1101              		.cfi_def_cfa_offset 24
 1102 0004 00AF     		add	r7, sp, #0
 1103              	.LCFI58:
 1104              		.cfi_def_cfa_register 7
 1105 0006 F860     		str	r0, [r7, #12]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 32


 1106 0008 C7E90023 		strd	r2, [r7]
 653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Check the parameters */
 654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   assert_param(IS_FLASH_ADDRESS(Address));
 655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* If the previous operation is completed, proceed to program the new data */
 657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   FLASH->CR &= CR_PSIZE_MASK;
 1107              		.loc 1 657 13
 1108 000c 164B     		ldr	r3, .L88
 1109 000e 1B69     		ldr	r3, [r3, #16]
 1110 0010 154A     		ldr	r2, .L88
 1111 0012 23F44073 		bic	r3, r3, #768
 1112 0016 1361     		str	r3, [r2, #16]
 658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   FLASH->CR |= FLASH_PSIZE_DOUBLE_WORD;
 1113              		.loc 1 658 13
 1114 0018 134B     		ldr	r3, .L88
 1115 001a 1B69     		ldr	r3, [r3, #16]
 1116 001c 124A     		ldr	r2, .L88
 1117 001e 43F44073 		orr	r3, r3, #768
 1118 0022 1361     		str	r3, [r2, #16]
 659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   FLASH->CR |= FLASH_CR_PG;
 1119              		.loc 1 659 13
 1120 0024 104B     		ldr	r3, .L88
 1121 0026 1B69     		ldr	r3, [r3, #16]
 1122 0028 0F4A     		ldr	r2, .L88
 1123 002a 43F00103 		orr	r3, r3, #1
 1124 002e 1361     		str	r3, [r2, #16]
 660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Program first word */
 662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *(__IO uint32_t*)Address = (uint32_t)Data;
 1125              		.loc 1 662 4
 1126 0030 FB68     		ldr	r3, [r7, #12]
 1127              		.loc 1 662 30
 1128 0032 3A68     		ldr	r2, [r7]
 1129              		.loc 1 662 28
 1130 0034 1A60     		str	r2, [r3]
 1131              	.LBB12:
 1132              	.LBB13:
 1133              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 33


  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 34


  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 35


 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 160:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 168:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 36


 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 243:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 247:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 37


 248:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 271:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 282:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 303:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 38


 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 331:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 39


 362:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 370:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 382:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 406:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 412:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 40


 419:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 41


 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 503:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 518:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 42


 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 542:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 544:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 548:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 557:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 580:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 43


 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 592:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 598:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 600:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 605:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 626:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 44


 647:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 666:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 671:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 675:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 689:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 695:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 702:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 45


 704:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 711:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 732:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 752:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 755:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 46


 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 766:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 778:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 787:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 806:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 817:Drivers/CMSIS/Include/cmsis_gcc.h **** */
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 47


 818:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 834:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 861:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 1134              		.loc 2 868 3
 1135              		.syntax unified
 1136              	@ 868 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1137 0036 BFF36F8F 		isb 0xF
 1138              	@ 0 "" 2
 869:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 48


 1139              		.loc 2 869 1
 1140              		.thumb
 1141              		.syntax unified
 1142 003a 00BF     		nop
 1143              	.LBE13:
 1144              	.LBE12:
 663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Barrier to ensure programming is performed in 2 steps, in right order
 664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     (independently of compiler optimization behavior) */
 665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   __ISB();
 666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Program second word */
 668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *(__IO uint32_t*)(Address+4) = (uint32_t)(Data >> 32);
 1145              		.loc 1 668 50
 1146 003c D7E90001 		ldrd	r0, [r7]
 1147 0040 4FF00002 		mov	r2, #0
 1148 0044 4FF00003 		mov	r3, #0
 1149 0048 0A00     		movs	r2, r1
 1150 004a 0023     		movs	r3, #0
 1151              		.loc 1 668 28
 1152 004c F968     		ldr	r1, [r7, #12]
 1153 004e 0431     		adds	r1, r1, #4
 1154              		.loc 1 668 34
 1155 0050 1346     		mov	r3, r2
 1156              		.loc 1 668 32
 1157 0052 0B60     		str	r3, [r1]
 1158              	.LBB14:
 1159              	.LBB15:
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 872:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 873:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 879:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 1160              		.loc 2 879 3
 1161              		.syntax unified
 1162              	@ 879 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1163 0054 BFF34F8F 		dsb 0xF
 1164              	@ 0 "" 2
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1165              		.loc 2 880 1
 1166              		.thumb
 1167              		.syntax unified
 1168 0058 00BF     		nop
 1169              	.LBE15:
 1170              	.LBE14:
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Data synchronous Barrier (DSB) Just after the write operation
 671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****      This will force the CPU to respect the sequence of instruction (no optimization).*/
 672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   __DSB();
 673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** }
 1171              		.loc 1 673 1
 1172 005a 00BF     		nop
 1173 005c 1437     		adds	r7, r7, #20
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 49


 1174              	.LCFI59:
 1175              		.cfi_def_cfa_offset 4
 1176 005e BD46     		mov	sp, r7
 1177              	.LCFI60:
 1178              		.cfi_def_cfa_register 13
 1179              		@ sp needed
 1180 0060 5DF8047B 		ldr	r7, [sp], #4
 1181              	.LCFI61:
 1182              		.cfi_restore 7
 1183              		.cfi_def_cfa_offset 0
 1184 0064 7047     		bx	lr
 1185              	.L89:
 1186 0066 00BF     		.align	2
 1187              	.L88:
 1188 0068 003C0240 		.word	1073888256
 1189              		.cfi_endproc
 1190              	.LFE153:
 1192              		.section	.text.FLASH_Program_Word,"ax",%progbits
 1193              		.align	1
 1194              		.syntax unified
 1195              		.thumb
 1196              		.thumb_func
 1198              	FLASH_Program_Word:
 1199              	.LFB154:
 674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
 677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @brief  Program word (32-bit) at a specified address.
 678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @note   This function must be used when the device voltage range is from
 679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *         2.7V to 3.3V.
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *
 681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @note   If an erase and a program operations are requested simultaneously,    
 682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *         the erase operation is performed before the program one.
 683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *  
 684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @param  Address specifies the address to be programmed.
 685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @param  Data specifies the data to be programmed.
 686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @retval None
 687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** static void FLASH_Program_Word(uint32_t Address, uint32_t Data)
 689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** {
 1200              		.loc 1 689 1
 1201              		.cfi_startproc
 1202              		@ args = 0, pretend = 0, frame = 8
 1203              		@ frame_needed = 1, uses_anonymous_args = 0
 1204              		@ link register save eliminated.
 1205 0000 80B4     		push	{r7}
 1206              	.LCFI62:
 1207              		.cfi_def_cfa_offset 4
 1208              		.cfi_offset 7, -4
 1209 0002 83B0     		sub	sp, sp, #12
 1210              	.LCFI63:
 1211              		.cfi_def_cfa_offset 16
 1212 0004 00AF     		add	r7, sp, #0
 1213              	.LCFI64:
 1214              		.cfi_def_cfa_register 7
 1215 0006 7860     		str	r0, [r7, #4]
 1216 0008 3960     		str	r1, [r7]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 50


 690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Check the parameters */
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   assert_param(IS_FLASH_ADDRESS(Address));
 692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* If the previous operation is completed, proceed to program the new data */
 694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   FLASH->CR &= CR_PSIZE_MASK;
 1217              		.loc 1 694 13
 1218 000a 0F4B     		ldr	r3, .L91
 1219 000c 1B69     		ldr	r3, [r3, #16]
 1220 000e 0E4A     		ldr	r2, .L91
 1221 0010 23F44073 		bic	r3, r3, #768
 1222 0014 1361     		str	r3, [r2, #16]
 695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   FLASH->CR |= FLASH_PSIZE_WORD;
 1223              		.loc 1 695 13
 1224 0016 0C4B     		ldr	r3, .L91
 1225 0018 1B69     		ldr	r3, [r3, #16]
 1226 001a 0B4A     		ldr	r2, .L91
 1227 001c 43F40073 		orr	r3, r3, #512
 1228 0020 1361     		str	r3, [r2, #16]
 696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   FLASH->CR |= FLASH_CR_PG;
 1229              		.loc 1 696 13
 1230 0022 094B     		ldr	r3, .L91
 1231 0024 1B69     		ldr	r3, [r3, #16]
 1232 0026 084A     		ldr	r2, .L91
 1233 0028 43F00103 		orr	r3, r3, #1
 1234 002c 1361     		str	r3, [r2, #16]
 697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *(__IO uint32_t*)Address = Data;
 1235              		.loc 1 698 4
 1236 002e 7B68     		ldr	r3, [r7, #4]
 1237              		.loc 1 698 28
 1238 0030 3A68     		ldr	r2, [r7]
 1239 0032 1A60     		str	r2, [r3]
 1240              	.LBB16:
 1241              	.LBB17:
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1242              		.loc 2 879 3
 1243              		.syntax unified
 1244              	@ 879 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1245 0034 BFF34F8F 		dsb 0xF
 1246              	@ 0 "" 2
 1247              		.loc 2 880 1
 1248              		.thumb
 1249              		.syntax unified
 1250 0038 00BF     		nop
 1251              	.LBE17:
 1252              	.LBE16:
 699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Data synchronous Barrier (DSB) Just after the write operation
 701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****      This will force the CPU to respect the sequence of instruction (no optimization).*/
 702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   __DSB();
 703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** }
 1253              		.loc 1 703 1
 1254 003a 00BF     		nop
 1255 003c 0C37     		adds	r7, r7, #12
 1256              	.LCFI65:
 1257              		.cfi_def_cfa_offset 4
 1258 003e BD46     		mov	sp, r7
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 51


 1259              	.LCFI66:
 1260              		.cfi_def_cfa_register 13
 1261              		@ sp needed
 1262 0040 5DF8047B 		ldr	r7, [sp], #4
 1263              	.LCFI67:
 1264              		.cfi_restore 7
 1265              		.cfi_def_cfa_offset 0
 1266 0044 7047     		bx	lr
 1267              	.L92:
 1268 0046 00BF     		.align	2
 1269              	.L91:
 1270 0048 003C0240 		.word	1073888256
 1271              		.cfi_endproc
 1272              	.LFE154:
 1274              		.section	.text.FLASH_Program_HalfWord,"ax",%progbits
 1275              		.align	1
 1276              		.syntax unified
 1277              		.thumb
 1278              		.thumb_func
 1280              	FLASH_Program_HalfWord:
 1281              	.LFB155:
 704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
 706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @brief  Program a half-word (16-bit) at a specified address.
 707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @note   This function must be used when the device voltage range is from
 708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *         2.1V to 3.6V.
 709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *
 710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @note   If an erase and a program operations are requested simultaneously,    
 711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *         the erase operation is performed before the program one.
 712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *  
 713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @param  Address specifies the address to be programmed.
 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @param  Data specifies the data to be programmed.
 715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @retval None
 716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** static void FLASH_Program_HalfWord(uint32_t Address, uint16_t Data)
 718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** {
 1282              		.loc 1 718 1
 1283              		.cfi_startproc
 1284              		@ args = 0, pretend = 0, frame = 8
 1285              		@ frame_needed = 1, uses_anonymous_args = 0
 1286              		@ link register save eliminated.
 1287 0000 80B4     		push	{r7}
 1288              	.LCFI68:
 1289              		.cfi_def_cfa_offset 4
 1290              		.cfi_offset 7, -4
 1291 0002 83B0     		sub	sp, sp, #12
 1292              	.LCFI69:
 1293              		.cfi_def_cfa_offset 16
 1294 0004 00AF     		add	r7, sp, #0
 1295              	.LCFI70:
 1296              		.cfi_def_cfa_register 7
 1297 0006 7860     		str	r0, [r7, #4]
 1298 0008 0B46     		mov	r3, r1
 1299 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Check the parameters */
 720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   assert_param(IS_FLASH_ADDRESS(Address));
 721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 52


 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* If the previous operation is completed, proceed to program the new data */
 723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   FLASH->CR &= CR_PSIZE_MASK;
 1300              		.loc 1 723 13
 1301 000c 0E4B     		ldr	r3, .L94
 1302 000e 1B69     		ldr	r3, [r3, #16]
 1303 0010 0D4A     		ldr	r2, .L94
 1304 0012 23F44073 		bic	r3, r3, #768
 1305 0016 1361     		str	r3, [r2, #16]
 724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   FLASH->CR |= FLASH_PSIZE_HALF_WORD;
 1306              		.loc 1 724 13
 1307 0018 0B4B     		ldr	r3, .L94
 1308 001a 1B69     		ldr	r3, [r3, #16]
 1309 001c 0A4A     		ldr	r2, .L94
 1310 001e 43F48073 		orr	r3, r3, #256
 1311 0022 1361     		str	r3, [r2, #16]
 725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   FLASH->CR |= FLASH_CR_PG;
 1312              		.loc 1 725 13
 1313 0024 084B     		ldr	r3, .L94
 1314 0026 1B69     		ldr	r3, [r3, #16]
 1315 0028 074A     		ldr	r2, .L94
 1316 002a 43F00103 		orr	r3, r3, #1
 1317 002e 1361     		str	r3, [r2, #16]
 726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *(__IO uint16_t*)Address = Data;
 1318              		.loc 1 727 4
 1319 0030 7B68     		ldr	r3, [r7, #4]
 1320              		.loc 1 727 28
 1321 0032 7A88     		ldrh	r2, [r7, #2]	@ movhi
 1322 0034 1A80     		strh	r2, [r3]	@ movhi
 1323              	.LBB18:
 1324              	.LBB19:
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1325              		.loc 2 879 3
 1326              		.syntax unified
 1327              	@ 879 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1328 0036 BFF34F8F 		dsb 0xF
 1329              	@ 0 "" 2
 1330              		.loc 2 880 1
 1331              		.thumb
 1332              		.syntax unified
 1333 003a 00BF     		nop
 1334              	.LBE19:
 1335              	.LBE18:
 728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Data synchronous Barrier (DSB) Just after the write operation
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****      This will force the CPU to respect the sequence of instruction (no optimization).*/
 731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   __DSB();
 732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** }
 1336              		.loc 1 733 1
 1337 003c 00BF     		nop
 1338 003e 0C37     		adds	r7, r7, #12
 1339              	.LCFI71:
 1340              		.cfi_def_cfa_offset 4
 1341 0040 BD46     		mov	sp, r7
 1342              	.LCFI72:
 1343              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 53


 1344              		@ sp needed
 1345 0042 5DF8047B 		ldr	r7, [sp], #4
 1346              	.LCFI73:
 1347              		.cfi_restore 7
 1348              		.cfi_def_cfa_offset 0
 1349 0046 7047     		bx	lr
 1350              	.L95:
 1351              		.align	2
 1352              	.L94:
 1353 0048 003C0240 		.word	1073888256
 1354              		.cfi_endproc
 1355              	.LFE155:
 1357              		.section	.text.FLASH_Program_Byte,"ax",%progbits
 1358              		.align	1
 1359              		.syntax unified
 1360              		.thumb
 1361              		.thumb_func
 1363              	FLASH_Program_Byte:
 1364              	.LFB156:
 734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
 736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @brief  Program byte (8-bit) at a specified address.
 737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @note   This function must be used when the device voltage range is from
 738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *         1.7V to 3.6V.
 739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @note   If an erase and a program operations are requested simultaneously,    
 741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *         the erase operation is performed before the program one.
 742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *  
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @param  Address specifies the address to be programmed.
 744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @param  Data specifies the data to be programmed.
 745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @retval None
 746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** static void FLASH_Program_Byte(uint32_t Address, uint8_t Data)
 748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** {
 1365              		.loc 1 748 1
 1366              		.cfi_startproc
 1367              		@ args = 0, pretend = 0, frame = 8
 1368              		@ frame_needed = 1, uses_anonymous_args = 0
 1369              		@ link register save eliminated.
 1370 0000 80B4     		push	{r7}
 1371              	.LCFI74:
 1372              		.cfi_def_cfa_offset 4
 1373              		.cfi_offset 7, -4
 1374 0002 83B0     		sub	sp, sp, #12
 1375              	.LCFI75:
 1376              		.cfi_def_cfa_offset 16
 1377 0004 00AF     		add	r7, sp, #0
 1378              	.LCFI76:
 1379              		.cfi_def_cfa_register 7
 1380 0006 7860     		str	r0, [r7, #4]
 1381 0008 0B46     		mov	r3, r1
 1382 000a FB70     		strb	r3, [r7, #3]
 749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Check the parameters */
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   assert_param(IS_FLASH_ADDRESS(Address));
 751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* If the previous operation is completed, proceed to program the new data */
 753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   FLASH->CR &= CR_PSIZE_MASK;
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 54


 1383              		.loc 1 753 13
 1384 000c 0D4B     		ldr	r3, .L97
 1385 000e 1B69     		ldr	r3, [r3, #16]
 1386 0010 0C4A     		ldr	r2, .L97
 1387 0012 23F44073 		bic	r3, r3, #768
 1388 0016 1361     		str	r3, [r2, #16]
 754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   FLASH->CR |= FLASH_PSIZE_BYTE;
 1389              		.loc 1 754 13
 1390 0018 0A4B     		ldr	r3, .L97
 1391 001a 0A4A     		ldr	r2, .L97
 1392 001c 1B69     		ldr	r3, [r3, #16]
 1393 001e 1361     		str	r3, [r2, #16]
 755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   FLASH->CR |= FLASH_CR_PG;
 1394              		.loc 1 755 13
 1395 0020 084B     		ldr	r3, .L97
 1396 0022 1B69     		ldr	r3, [r3, #16]
 1397 0024 074A     		ldr	r2, .L97
 1398 0026 43F00103 		orr	r3, r3, #1
 1399 002a 1361     		str	r3, [r2, #16]
 756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *(__IO uint8_t*)Address = Data;
 1400              		.loc 1 757 4
 1401 002c 7B68     		ldr	r3, [r7, #4]
 1402              		.loc 1 757 27
 1403 002e FA78     		ldrb	r2, [r7, #3]
 1404 0030 1A70     		strb	r2, [r3]
 1405              	.LBB20:
 1406              	.LBB21:
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1407              		.loc 2 879 3
 1408              		.syntax unified
 1409              	@ 879 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1410 0032 BFF34F8F 		dsb 0xF
 1411              	@ 0 "" 2
 1412              		.loc 2 880 1
 1413              		.thumb
 1414              		.syntax unified
 1415 0036 00BF     		nop
 1416              	.LBE21:
 1417              	.LBE20:
 758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Data synchronous Barrier (DSB) Just after the write operation
 760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****      This will force the CPU to respect the sequence of instruction (no optimization).*/
 761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   __DSB();
 762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** }
 1418              		.loc 1 762 1
 1419 0038 00BF     		nop
 1420 003a 0C37     		adds	r7, r7, #12
 1421              	.LCFI77:
 1422              		.cfi_def_cfa_offset 4
 1423 003c BD46     		mov	sp, r7
 1424              	.LCFI78:
 1425              		.cfi_def_cfa_register 13
 1426              		@ sp needed
 1427 003e 5DF8047B 		ldr	r7, [sp], #4
 1428              	.LCFI79:
 1429              		.cfi_restore 7
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 55


 1430              		.cfi_def_cfa_offset 0
 1431 0042 7047     		bx	lr
 1432              	.L98:
 1433              		.align	2
 1434              	.L97:
 1435 0044 003C0240 		.word	1073888256
 1436              		.cfi_endproc
 1437              	.LFE156:
 1439              		.section	.text.FLASH_SetErrorCode,"ax",%progbits
 1440              		.align	1
 1441              		.syntax unified
 1442              		.thumb
 1443              		.thumb_func
 1445              	FLASH_SetErrorCode:
 1446              	.LFB157:
 763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
 765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @brief  Set the specific FLASH error flag.
 766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @retval None
 767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** static void FLASH_SetErrorCode(void)
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** {
 1447              		.loc 1 769 1
 1448              		.cfi_startproc
 1449              		@ args = 0, pretend = 0, frame = 0
 1450              		@ frame_needed = 1, uses_anonymous_args = 0
 1451              		@ link register save eliminated.
 1452 0000 80B4     		push	{r7}
 1453              	.LCFI80:
 1454              		.cfi_def_cfa_offset 4
 1455              		.cfi_offset 7, -4
 1456 0002 00AF     		add	r7, sp, #0
 1457              	.LCFI81:
 1458              		.cfi_def_cfa_register 7
 770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_OPERR) != RESET)
 1459              		.loc 1 770 6
 1460 0004 214B     		ldr	r3, .L105
 1461 0006 DB68     		ldr	r3, [r3, #12]
 1462 0008 03F00203 		and	r3, r3, #2
 1463              		.loc 1 770 5
 1464 000c 002B     		cmp	r3, #0
 1465 000e 05D0     		beq	.L100
 771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   {
 772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     pFlash.ErrorCode |= HAL_FLASH_ERROR_OPERATION;
 1466              		.loc 1 772 22
 1467 0010 1F4B     		ldr	r3, .L105+4
 1468 0012 9B69     		ldr	r3, [r3, #24]
 1469 0014 43F02003 		orr	r3, r3, #32
 1470 0018 1D4A     		ldr	r2, .L105+4
 1471 001a 9361     		str	r3, [r2, #24]
 1472              	.L100:
 773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   }
 774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_WRPERR) != RESET)
 1473              		.loc 1 775 6
 1474 001c 1B4B     		ldr	r3, .L105
 1475 001e DB68     		ldr	r3, [r3, #12]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 56


 1476 0020 03F01003 		and	r3, r3, #16
 1477              		.loc 1 775 5
 1478 0024 002B     		cmp	r3, #0
 1479 0026 05D0     		beq	.L101
 776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   {
 777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****    pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP;
 1480              		.loc 1 777 21
 1481 0028 194B     		ldr	r3, .L105+4
 1482 002a 9B69     		ldr	r3, [r3, #24]
 1483 002c 43F01003 		orr	r3, r3, #16
 1484 0030 174A     		ldr	r2, .L105+4
 1485 0032 9361     		str	r3, [r2, #24]
 1486              	.L101:
 778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   }
 779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGAERR) != RESET)
 1487              		.loc 1 780 6
 1488 0034 154B     		ldr	r3, .L105
 1489 0036 DB68     		ldr	r3, [r3, #12]
 1490 0038 03F02003 		and	r3, r3, #32
 1491              		.loc 1 780 5
 1492 003c 002B     		cmp	r3, #0
 1493 003e 05D0     		beq	.L102
 781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   {
 782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGA;
 1494              		.loc 1 782 21
 1495 0040 134B     		ldr	r3, .L105+4
 1496 0042 9B69     		ldr	r3, [r3, #24]
 1497 0044 43F00803 		orr	r3, r3, #8
 1498 0048 114A     		ldr	r2, .L105+4
 1499 004a 9361     		str	r3, [r2, #24]
 1500              	.L102:
 783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   }
 784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGPERR) != RESET)
 1501              		.loc 1 785 6
 1502 004c 0F4B     		ldr	r3, .L105
 1503 004e DB68     		ldr	r3, [r3, #12]
 1504 0050 03F04003 		and	r3, r3, #64
 1505              		.loc 1 785 5
 1506 0054 002B     		cmp	r3, #0
 1507 0056 05D0     		beq	.L103
 786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   {
 787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     pFlash.ErrorCode |= HAL_FLASH_ERROR_PGP;
 1508              		.loc 1 787 22
 1509 0058 0D4B     		ldr	r3, .L105+4
 1510 005a 9B69     		ldr	r3, [r3, #24]
 1511 005c 43F00403 		orr	r3, r3, #4
 1512 0060 0B4A     		ldr	r2, .L105+4
 1513 0062 9361     		str	r3, [r2, #24]
 1514              	.L103:
 788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   }
 789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_ERSERR) != RESET)
 1515              		.loc 1 790 6
 1516 0064 094B     		ldr	r3, .L105
 1517 0066 DB68     		ldr	r3, [r3, #12]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 57


 1518 0068 03F08003 		and	r3, r3, #128
 1519              		.loc 1 790 5
 1520 006c 002B     		cmp	r3, #0
 1521 006e 05D0     		beq	.L104
 791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   {
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     pFlash.ErrorCode |= HAL_FLASH_ERROR_ERS;
 1522              		.loc 1 792 22
 1523 0070 074B     		ldr	r3, .L105+4
 1524 0072 9B69     		ldr	r3, [r3, #24]
 1525 0074 43F00203 		orr	r3, r3, #2
 1526 0078 054A     		ldr	r2, .L105+4
 1527 007a 9361     		str	r3, [r2, #24]
 1528              	.L104:
 793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   }
 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** #if defined (FLASH_OPTCR2_PCROP)
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_RDERR) != RESET)
 797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   { 
 798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****    pFlash.ErrorCode |= HAL_FLASH_ERROR_RD;
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   }  
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** #endif /* FLASH_OPTCR2_PCROP */
 801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Clear error programming flags */
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_ALL_ERRORS);
 1529              		.loc 1 803 3
 1530 007c 034B     		ldr	r3, .L105
 1531 007e F222     		movs	r2, #242
 1532 0080 DA60     		str	r2, [r3, #12]
 804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** }
 1533              		.loc 1 804 1
 1534 0082 00BF     		nop
 1535 0084 BD46     		mov	sp, r7
 1536              	.LCFI82:
 1537              		.cfi_def_cfa_register 13
 1538              		@ sp needed
 1539 0086 5DF8047B 		ldr	r7, [sp], #4
 1540              	.LCFI83:
 1541              		.cfi_restore 7
 1542              		.cfi_def_cfa_offset 0
 1543 008a 7047     		bx	lr
 1544              	.L106:
 1545              		.align	2
 1546              	.L105:
 1547 008c 003C0240 		.word	1073888256
 1548 0090 00000000 		.word	pFlash
 1549              		.cfi_endproc
 1550              	.LFE157:
 1552              		.text
 1553              	.Letext0:
 1554              		.file 3 "d:\\3.tools\\arm_gcc_toolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 1555              		.file 4 "d:\\3.tools\\arm_gcc_toolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 1556              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 1557              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 1558              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 1559              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_flash.h"
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 58


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f7xx_hal_flash.c
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:24     .bss.pFlash:00000000 pFlash
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:21     .bss.pFlash:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:27     .text.HAL_FLASH_Program:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:33     .text.HAL_FLASH_Program:00000000 HAL_FLASH_Program
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:975    .text.FLASH_WaitForLastOperation:00000000 FLASH_WaitForLastOperation
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:87     .text.HAL_FLASH_Program:00000044 $d
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:91     .text.HAL_FLASH_Program:00000054 $t
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:1363   .text.FLASH_Program_Byte:00000000 FLASH_Program_Byte
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:1280   .text.FLASH_Program_HalfWord:00000000 FLASH_Program_HalfWord
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:1198   .text.FLASH_Program_Word:00000000 FLASH_Program_Word
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:1088   .text.FLASH_Program_DoubleWord:00000000 FLASH_Program_DoubleWord
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:159    .text.HAL_FLASH_Program:000000b0 $d
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:165    .text.HAL_FLASH_Program_IT:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:171    .text.HAL_FLASH_Program_IT:00000000 HAL_FLASH_Program_IT
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:239    .text.HAL_FLASH_Program_IT:0000005c $d
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:243    .text.HAL_FLASH_Program_IT:0000006c $t
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:295    .text.HAL_FLASH_Program_IT:000000a8 $d
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:301    .text.HAL_FLASH_IRQHandler:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:307    .text.HAL_FLASH_IRQHandler:00000000 HAL_FLASH_IRQHandler
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:572    .text.HAL_FLASH_EndOfOperationCallback:00000000 HAL_FLASH_EndOfOperationCallback
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:1445   .text.FLASH_SetErrorCode:00000000 FLASH_SetErrorCode
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:614    .text.HAL_FLASH_OperationErrorCallback:00000000 HAL_FLASH_OperationErrorCallback
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:560    .text.HAL_FLASH_IRQHandler:00000164 $d
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:566    .text.HAL_FLASH_EndOfOperationCallback:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:608    .text.HAL_FLASH_OperationErrorCallback:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:650    .text.HAL_FLASH_Unlock:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:656    .text.HAL_FLASH_Unlock:00000000 HAL_FLASH_Unlock
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:719    .text.HAL_FLASH_Unlock:00000038 $d
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:726    .text.HAL_FLASH_Lock:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:732    .text.HAL_FLASH_Lock:00000000 HAL_FLASH_Lock
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:768    .text.HAL_FLASH_Lock:0000001c $d
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:773    .text.HAL_FLASH_OB_Unlock:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:779    .text.HAL_FLASH_OB_Unlock:00000000 HAL_FLASH_OB_Unlock
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:832    .text.HAL_FLASH_OB_Unlock:0000002c $d
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:839    .text.HAL_FLASH_OB_Lock:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:845    .text.HAL_FLASH_OB_Lock:00000000 HAL_FLASH_OB_Lock
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:881    .text.HAL_FLASH_OB_Lock:0000001c $d
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:886    .text.HAL_FLASH_OB_Launch:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:892    .text.HAL_FLASH_OB_Launch:00000000 HAL_FLASH_OB_Launch
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:922    .text.HAL_FLASH_OB_Launch:00000020 $d
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:927    .text.HAL_FLASH_GetError:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:933    .text.HAL_FLASH_GetError:00000000 HAL_FLASH_GetError
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:964    .text.HAL_FLASH_GetError:00000014 $d
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:969    .text.FLASH_WaitForLastOperation:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:1077   .text.FLASH_WaitForLastOperation:00000078 $d
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:1083   .text.FLASH_Program_DoubleWord:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:1188   .text.FLASH_Program_DoubleWord:00000068 $d
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:1193   .text.FLASH_Program_Word:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:1270   .text.FLASH_Program_Word:00000048 $d
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:1275   .text.FLASH_Program_HalfWord:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:1353   .text.FLASH_Program_HalfWord:00000048 $d
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:1358   .text.FLASH_Program_Byte:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:1435   .text.FLASH_Program_Byte:00000044 $d
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:1440   .text.FLASH_SetErrorCode:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s:1547   .text.FLASH_SetErrorCode:0000008c $d
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cchsw3ZZ.s 			page 59



UNDEFINED SYMBOLS
FLASH_Erase_Sector
HAL_GetTick
