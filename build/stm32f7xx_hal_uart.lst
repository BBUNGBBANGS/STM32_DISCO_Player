ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f7xx_hal_uart.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HAL_UART_Init,"ax",%progbits
  20              		.align	1
  21              		.global	HAL_UART_Init
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	HAL_UART_Init:
  27              	.LFB141:
  28              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @file    stm32f7xx_hal_uart.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ******************************************************************************
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @attention
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * Copyright (c) 2017 STMicroelectronics.
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * All rights reserved.
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * This software is licensed under terms that can be found in the LICENSE file
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * in the root directory of this software component.
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ******************************************************************************
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   @verbatim
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  ===============================================================================
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                         ##### How to use this driver #####
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  ===============================================================================
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   [..]
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 2


  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) UART pins configuration:
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) UART interrupts handling:
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                 RXNE interrupt, RX/TX FIFOs related interrupts and Error Interrupts)
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                 are managed using the macros __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT()
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                 inside the transmit and receive processes.
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx channel.
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         the HAL_UART_Init() API.
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) For the UART LIN (Local Interconnection Network) mode, initialize the UART registers
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         by calling the HAL_LIN_Init() API.
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     [..]
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (@) These API's (HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init(), HAL_MultiProcessor_Ini
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         also configure the low level Hardware GPIO, CLOCK, CORTEX...etc) by
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     ##### Callback registration #####
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     ==================================
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     [..]
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     allows the user to configure dynamically the driver callbacks.
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 3


  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     [..]
  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     Use Function HAL_UART_RegisterCallback() to register a user callback.
  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     Function HAL_UART_RegisterCallback() allows to register following callbacks:
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     and a pointer to the user callback function.
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     [..]
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     Use function HAL_UART_UnRegisterCallback() to reset a callback to the default
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     weak (surcharged) function.
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     and the Callback ID.
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     This function allows to reset following callbacks:
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     [..]
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     For specific callback RxEventCallback, use dedicated registration/reset functions:
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     respectively HAL_UART_RegisterRxEventCallback() , HAL_UART_UnRegisterRxEventCallback().
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     [..]
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     By default, after the HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     all callbacks are set to the corresponding weak (surcharged) functions:
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     examples HAL_UART_TxCpltCallback(), HAL_UART_RxHalfCpltCallback().
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     reset to the legacy weak (surcharged) functions in the HAL_UART_Init()
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     and HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     If not, MspInit or MspDeInit are not null, the HAL_UART_Init() and HAL_UART_DeInit()
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     [..]
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     using HAL_UART_RegisterCallback() before calling HAL_UART_DeInit()
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 4


 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     or HAL_UART_Init() function.
 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     [..]
 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     not defined, the callback registration feature is not available
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     and weak (surcharged) callbacks are used.
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   @endverbatim
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ******************************************************************************
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #include "stm32f7xx_hal.h"
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @addtogroup STM32F7xx_HAL_Driver
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @defgroup UART UART
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief HAL UART module driver
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #define USART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | U
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                                       USART_CR1_OVER8)) /*!< UART or USART CR1 fields of parameters
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #define USART_CR3_FIELDS  ((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE |\
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                             USART_CR3_ONEBIT)) /*!< UART or USART CR3 fields of parameters set by U
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #define UART_BRR_MIN    0x10U        /* UART BRR minimum authorized value */
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #define UART_BRR_MAX    0x0000FFFFU  /* UART BRR maximum authorized value */
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @}
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 5


 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart);
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart);
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart);
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart);
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @}
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Exported Constants --------------------------------------------------------*/
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** @verbatim
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** ===============================================================================
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  ===============================================================================
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     [..]
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     in asynchronous mode.
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Baud Rate
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Word Length
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Stop Bit
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Hardware flow control
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Receiver/transmitter modes
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) Over Sampling Method
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) One-Bit Sampling Method
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) data logical level inversion
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) RX and TX pins swap
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) RX overrun detection disabling
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) DMA disabling on RX error
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) MSB first on communication line
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (++) auto Baud rate detection
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     [..]
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init()and HAL_MultiProcessor_Init()API
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, UART LIN mode
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     and UART multiprocessor mode configuration procedures (details for the procedures
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     are available in reference manual).
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** @endverbatim
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 6


 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   Depending on the frame length defined by the M1 and M0 bits (7-bit,
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   8-bit or 9-bit), the possible UART formats are listed in the
 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   following table.
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   Table 1. UART frame format.
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     |    0    |    0    |    0      |    | SB |    8 bit data   | STB |     |
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     |    0    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     |    0    |    1    |    0      |    | SB |    9 bit data   | STB |     |
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     |    0    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     |    1    |    0    |    0      |    | SB |    7 bit data   | STB |     |
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     |    1    |    0    |    1      |    | SB | 6 bit data | PB | STB |     |
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
  29              		.loc 1 290 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 82B0     		sub	sp, sp, #8
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 16
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 7860     		str	r0, [r7, #4]
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart == NULL)
  45              		.loc 1 292 6
  46 0008 7B68     		ldr	r3, [r7, #4]
  47 000a 002B     		cmp	r3, #0
  48 000c 01D1     		bne	.L2
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
  49              		.loc 1 294 12
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 7


  50 000e 0123     		movs	r3, #1
  51 0010 40E0     		b	.L3
  52              	.L2:
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Check the parameters */
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Check the parameters */
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
  53              		.loc 1 308 12
  54 0012 7B68     		ldr	r3, [r7, #4]
  55 0014 DB6F     		ldr	r3, [r3, #124]
  56              		.loc 1 308 6
  57 0016 002B     		cmp	r3, #0
  58 0018 06D1     		bne	.L4
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
  59              		.loc 1 311 17
  60 001a 7B68     		ldr	r3, [r7, #4]
  61 001c 0022     		movs	r2, #0
  62 001e 83F87820 		strb	r2, [r3, #120]
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init the low level hardware */
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->MspInitCallback(huart);
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #else
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
  63              		.loc 1 325 5
  64 0022 7868     		ldr	r0, [r7, #4]
  65 0024 FFF7FEFF 		bl	HAL_UART_MspInit
  66              	.L4:
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
  67              		.loc 1 329 17
  68 0028 7B68     		ldr	r3, [r7, #4]
  69 002a 2422     		movs	r2, #36
  70 002c DA67     		str	r2, [r3, #124]
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 8


 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
  71              		.loc 1 331 3
  72 002e 7B68     		ldr	r3, [r7, #4]
  73 0030 1B68     		ldr	r3, [r3]
  74 0032 1A68     		ldr	r2, [r3]
  75 0034 7B68     		ldr	r3, [r7, #4]
  76 0036 1B68     		ldr	r3, [r3]
  77 0038 22F00102 		bic	r2, r2, #1
  78 003c 1A60     		str	r2, [r3]
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
  79              		.loc 1 334 7
  80 003e 7868     		ldr	r0, [r7, #4]
  81 0040 FFF7FEFF 		bl	UART_SetConfig
  82 0044 0346     		mov	r3, r0
  83              		.loc 1 334 6
  84 0046 012B     		cmp	r3, #1
  85 0048 01D1     		bne	.L5
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
  86              		.loc 1 336 12
  87 004a 0123     		movs	r3, #1
  88 004c 22E0     		b	.L3
  89              	.L5:
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
  90              		.loc 1 339 26
  91 004e 7B68     		ldr	r3, [r7, #4]
  92 0050 5B6A     		ldr	r3, [r3, #36]
  93              		.loc 1 339 6
  94 0052 002B     		cmp	r3, #0
  95 0054 02D0     		beq	.L6
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
  96              		.loc 1 341 5
  97 0056 7868     		ldr	r0, [r7, #4]
  98 0058 FFF7FEFF 		bl	UART_AdvFeatureConfig
  99              	.L6:
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 100              		.loc 1 347 3
 101 005c 7B68     		ldr	r3, [r7, #4]
 102 005e 1B68     		ldr	r3, [r3]
 103 0060 5A68     		ldr	r2, [r3, #4]
 104 0062 7B68     		ldr	r3, [r7, #4]
 105 0064 1B68     		ldr	r3, [r3]
 106 0066 22F49042 		bic	r2, r2, #18432
 107 006a 5A60     		str	r2, [r3, #4]
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 108              		.loc 1 348 3
 109 006c 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 9


 110 006e 1B68     		ldr	r3, [r3]
 111 0070 9A68     		ldr	r2, [r3, #8]
 112 0072 7B68     		ldr	r3, [r7, #4]
 113 0074 1B68     		ldr	r3, [r3]
 114 0076 22F02A02 		bic	r2, r2, #42
 115 007a 9A60     		str	r2, [r3, #8]
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 116              		.loc 1 350 3
 117 007c 7B68     		ldr	r3, [r7, #4]
 118 007e 1B68     		ldr	r3, [r3]
 119 0080 1A68     		ldr	r2, [r3]
 120 0082 7B68     		ldr	r3, [r7, #4]
 121 0084 1B68     		ldr	r3, [r3]
 122 0086 42F00102 		orr	r2, r2, #1
 123 008a 1A60     		str	r2, [r3]
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 124              		.loc 1 353 11
 125 008c 7868     		ldr	r0, [r7, #4]
 126 008e FFF7FEFF 		bl	UART_CheckIdleState
 127 0092 0346     		mov	r3, r0
 128              	.L3:
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 129              		.loc 1 354 1
 130 0094 1846     		mov	r0, r3
 131 0096 0837     		adds	r7, r7, #8
 132              	.LCFI3:
 133              		.cfi_def_cfa_offset 8
 134 0098 BD46     		mov	sp, r7
 135              	.LCFI4:
 136              		.cfi_def_cfa_register 13
 137              		@ sp needed
 138 009a 80BD     		pop	{r7, pc}
 139              		.cfi_endproc
 140              	.LFE141:
 142              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 143              		.align	1
 144              		.global	HAL_HalfDuplex_Init
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 149              	HAL_HalfDuplex_Init:
 150              	.LFB142:
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 151              		.loc 1 363 1
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 10


 154              		@ frame_needed = 1, uses_anonymous_args = 0
 155 0000 80B5     		push	{r7, lr}
 156              	.LCFI5:
 157              		.cfi_def_cfa_offset 8
 158              		.cfi_offset 7, -8
 159              		.cfi_offset 14, -4
 160 0002 82B0     		sub	sp, sp, #8
 161              	.LCFI6:
 162              		.cfi_def_cfa_offset 16
 163 0004 00AF     		add	r7, sp, #0
 164              	.LCFI7:
 165              		.cfi_def_cfa_register 7
 166 0006 7860     		str	r0, [r7, #4]
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart == NULL)
 167              		.loc 1 365 6
 168 0008 7B68     		ldr	r3, [r7, #4]
 169 000a 002B     		cmp	r3, #0
 170 000c 01D1     		bne	.L8
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 171              		.loc 1 367 12
 172 000e 0123     		movs	r3, #1
 173 0010 48E0     		b	.L9
 174              	.L8:
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check UART instance */
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 175              		.loc 1 373 12
 176 0012 7B68     		ldr	r3, [r7, #4]
 177 0014 DB6F     		ldr	r3, [r3, #124]
 178              		.loc 1 373 6
 179 0016 002B     		cmp	r3, #0
 180 0018 06D1     		bne	.L10
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 181              		.loc 1 376 17
 182 001a 7B68     		ldr	r3, [r7, #4]
 183 001c 0022     		movs	r2, #0
 184 001e 83F87820 		strb	r2, [r3, #120]
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init the low level hardware */
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->MspInitCallback(huart);
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #else
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 11


 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 185              		.loc 1 390 5
 186 0022 7868     		ldr	r0, [r7, #4]
 187 0024 FFF7FEFF 		bl	HAL_UART_MspInit
 188              	.L10:
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 189              		.loc 1 394 17
 190 0028 7B68     		ldr	r3, [r7, #4]
 191 002a 2422     		movs	r2, #36
 192 002c DA67     		str	r2, [r3, #124]
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 193              		.loc 1 396 3
 194 002e 7B68     		ldr	r3, [r7, #4]
 195 0030 1B68     		ldr	r3, [r3]
 196 0032 1A68     		ldr	r2, [r3]
 197 0034 7B68     		ldr	r3, [r7, #4]
 198 0036 1B68     		ldr	r3, [r3]
 199 0038 22F00102 		bic	r2, r2, #1
 200 003c 1A60     		str	r2, [r3]
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 201              		.loc 1 399 7
 202 003e 7868     		ldr	r0, [r7, #4]
 203 0040 FFF7FEFF 		bl	UART_SetConfig
 204 0044 0346     		mov	r3, r0
 205              		.loc 1 399 6
 206 0046 012B     		cmp	r3, #1
 207 0048 01D1     		bne	.L11
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 208              		.loc 1 401 12
 209 004a 0123     		movs	r3, #1
 210 004c 2AE0     		b	.L9
 211              	.L11:
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 212              		.loc 1 404 26
 213 004e 7B68     		ldr	r3, [r7, #4]
 214 0050 5B6A     		ldr	r3, [r3, #36]
 215              		.loc 1 404 6
 216 0052 002B     		cmp	r3, #0
 217 0054 02D0     		beq	.L12
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 218              		.loc 1 406 5
 219 0056 7868     		ldr	r0, [r7, #4]
 220 0058 FFF7FEFF 		bl	UART_AdvFeatureConfig
 221              	.L12:
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 12


 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 222              		.loc 1 412 3
 223 005c 7B68     		ldr	r3, [r7, #4]
 224 005e 1B68     		ldr	r3, [r3]
 225 0060 5A68     		ldr	r2, [r3, #4]
 226 0062 7B68     		ldr	r3, [r7, #4]
 227 0064 1B68     		ldr	r3, [r3]
 228 0066 22F49042 		bic	r2, r2, #18432
 229 006a 5A60     		str	r2, [r3, #4]
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 230              		.loc 1 413 3
 231 006c 7B68     		ldr	r3, [r7, #4]
 232 006e 1B68     		ldr	r3, [r3]
 233 0070 9A68     		ldr	r2, [r3, #8]
 234 0072 7B68     		ldr	r3, [r7, #4]
 235 0074 1B68     		ldr	r3, [r3]
 236 0076 22F02202 		bic	r2, r2, #34
 237 007a 9A60     		str	r2, [r3, #8]
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 238              		.loc 1 416 3
 239 007c 7B68     		ldr	r3, [r7, #4]
 240 007e 1B68     		ldr	r3, [r3]
 241 0080 9A68     		ldr	r2, [r3, #8]
 242 0082 7B68     		ldr	r3, [r7, #4]
 243 0084 1B68     		ldr	r3, [r3]
 244 0086 42F00802 		orr	r2, r2, #8
 245 008a 9A60     		str	r2, [r3, #8]
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 246              		.loc 1 418 3
 247 008c 7B68     		ldr	r3, [r7, #4]
 248 008e 1B68     		ldr	r3, [r3]
 249 0090 1A68     		ldr	r2, [r3]
 250 0092 7B68     		ldr	r3, [r7, #4]
 251 0094 1B68     		ldr	r3, [r3]
 252 0096 42F00102 		orr	r2, r2, #1
 253 009a 1A60     		str	r2, [r3]
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 254              		.loc 1 421 11
 255 009c 7868     		ldr	r0, [r7, #4]
 256 009e FFF7FEFF 		bl	UART_CheckIdleState
 257 00a2 0346     		mov	r3, r0
 258              	.L9:
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 259              		.loc 1 422 1
 260 00a4 1846     		mov	r0, r3
 261 00a6 0837     		adds	r7, r7, #8
 262              	.LCFI8:
 263              		.cfi_def_cfa_offset 8
 264 00a8 BD46     		mov	sp, r7
 265              	.LCFI9:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 13


 266              		.cfi_def_cfa_register 13
 267              		@ sp needed
 268 00aa 80BD     		pop	{r7, pc}
 269              		.cfi_endproc
 270              	.LFE142:
 272              		.section	.text.HAL_LIN_Init,"ax",%progbits
 273              		.align	1
 274              		.global	HAL_LIN_Init
 275              		.syntax unified
 276              		.thumb
 277              		.thumb_func
 279              	HAL_LIN_Init:
 280              	.LFB143:
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart             UART handle.
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param BreakDetectLength Specifies the LIN break detection length.
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        This parameter can be one of the following values:
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_10B 10-bit break detection
 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_11B 11-bit break detection
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 281              		.loc 1 436 1
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 8
 284              		@ frame_needed = 1, uses_anonymous_args = 0
 285 0000 80B5     		push	{r7, lr}
 286              	.LCFI10:
 287              		.cfi_def_cfa_offset 8
 288              		.cfi_offset 7, -8
 289              		.cfi_offset 14, -4
 290 0002 82B0     		sub	sp, sp, #8
 291              	.LCFI11:
 292              		.cfi_def_cfa_offset 16
 293 0004 00AF     		add	r7, sp, #0
 294              	.LCFI12:
 295              		.cfi_def_cfa_register 7
 296 0006 7860     		str	r0, [r7, #4]
 297 0008 3960     		str	r1, [r7]
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart == NULL)
 298              		.loc 1 438 6
 299 000a 7B68     		ldr	r3, [r7, #4]
 300 000c 002B     		cmp	r3, #0
 301 000e 01D1     		bne	.L14
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 302              		.loc 1 440 12
 303 0010 0123     		movs	r3, #1
 304 0012 5FE0     		b	.L15
 305              	.L14:
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 14


 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the LIN UART instance */
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the Break detection length parameter */
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* LIN mode limited to 16-bit oversampling only */
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 306              		.loc 1 449 18
 307 0014 7B68     		ldr	r3, [r7, #4]
 308 0016 DB69     		ldr	r3, [r3, #28]
 309              		.loc 1 449 6
 310 0018 B3F5004F 		cmp	r3, #32768
 311 001c 01D1     		bne	.L16
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 312              		.loc 1 451 12
 313 001e 0123     		movs	r3, #1
 314 0020 58E0     		b	.L15
 315              	.L16:
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* LIN mode limited to 8-bit data length */
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->Init.WordLength != UART_WORDLENGTH_8B)
 316              		.loc 1 454 18
 317 0022 7B68     		ldr	r3, [r7, #4]
 318 0024 9B68     		ldr	r3, [r3, #8]
 319              		.loc 1 454 6
 320 0026 002B     		cmp	r3, #0
 321 0028 01D0     		beq	.L17
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 322              		.loc 1 456 12
 323 002a 0123     		movs	r3, #1
 324 002c 52E0     		b	.L15
 325              	.L17:
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 326              		.loc 1 459 12
 327 002e 7B68     		ldr	r3, [r7, #4]
 328 0030 DB6F     		ldr	r3, [r3, #124]
 329              		.loc 1 459 6
 330 0032 002B     		cmp	r3, #0
 331 0034 06D1     		bne	.L18
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 332              		.loc 1 462 17
 333 0036 7B68     		ldr	r3, [r7, #4]
 334 0038 0022     		movs	r2, #0
 335 003a 83F87820 		strb	r2, [r3, #120]
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 15


 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init the low level hardware */
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->MspInitCallback(huart);
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #else
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 336              		.loc 1 476 5
 337 003e 7868     		ldr	r0, [r7, #4]
 338 0040 FFF7FEFF 		bl	HAL_UART_MspInit
 339              	.L18:
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 340              		.loc 1 480 17
 341 0044 7B68     		ldr	r3, [r7, #4]
 342 0046 2422     		movs	r2, #36
 343 0048 DA67     		str	r2, [r3, #124]
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 344              		.loc 1 482 3
 345 004a 7B68     		ldr	r3, [r7, #4]
 346 004c 1B68     		ldr	r3, [r3]
 347 004e 1A68     		ldr	r2, [r3]
 348 0050 7B68     		ldr	r3, [r7, #4]
 349 0052 1B68     		ldr	r3, [r3]
 350 0054 22F00102 		bic	r2, r2, #1
 351 0058 1A60     		str	r2, [r3]
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 352              		.loc 1 485 7
 353 005a 7868     		ldr	r0, [r7, #4]
 354 005c FFF7FEFF 		bl	UART_SetConfig
 355 0060 0346     		mov	r3, r0
 356              		.loc 1 485 6
 357 0062 012B     		cmp	r3, #1
 358 0064 01D1     		bne	.L19
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 359              		.loc 1 487 12
 360 0066 0123     		movs	r3, #1
 361 0068 34E0     		b	.L15
 362              	.L19:
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 363              		.loc 1 490 26
 364 006a 7B68     		ldr	r3, [r7, #4]
 365 006c 5B6A     		ldr	r3, [r3, #36]
 366              		.loc 1 490 6
 367 006e 002B     		cmp	r3, #0
 368 0070 02D0     		beq	.L20
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 16


 369              		.loc 1 492 5
 370 0072 7868     		ldr	r0, [r7, #4]
 371 0074 FFF7FEFF 		bl	UART_AdvFeatureConfig
 372              	.L20:
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 373              		.loc 1 498 3
 374 0078 7B68     		ldr	r3, [r7, #4]
 375 007a 1B68     		ldr	r3, [r3]
 376 007c 5A68     		ldr	r2, [r3, #4]
 377 007e 7B68     		ldr	r3, [r7, #4]
 378 0080 1B68     		ldr	r3, [r3]
 379 0082 22F40062 		bic	r2, r2, #2048
 380 0086 5A60     		str	r2, [r3, #4]
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 381              		.loc 1 499 3
 382 0088 7B68     		ldr	r3, [r7, #4]
 383 008a 1B68     		ldr	r3, [r3]
 384 008c 9A68     		ldr	r2, [r3, #8]
 385 008e 7B68     		ldr	r3, [r7, #4]
 386 0090 1B68     		ldr	r3, [r3]
 387 0092 22F02A02 		bic	r2, r2, #42
 388 0096 9A60     		str	r2, [r3, #8]
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 389              		.loc 1 502 3
 390 0098 7B68     		ldr	r3, [r7, #4]
 391 009a 1B68     		ldr	r3, [r3]
 392 009c 5A68     		ldr	r2, [r3, #4]
 393 009e 7B68     		ldr	r3, [r7, #4]
 394 00a0 1B68     		ldr	r3, [r3]
 395 00a2 42F48042 		orr	r2, r2, #16384
 396 00a6 5A60     		str	r2, [r3, #4]
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 397              		.loc 1 505 3
 398 00a8 7B68     		ldr	r3, [r7, #4]
 399 00aa 1B68     		ldr	r3, [r3]
 400 00ac 5B68     		ldr	r3, [r3, #4]
 401 00ae 23F02001 		bic	r1, r3, #32
 402 00b2 7B68     		ldr	r3, [r7, #4]
 403 00b4 1B68     		ldr	r3, [r3]
 404 00b6 3A68     		ldr	r2, [r7]
 405 00b8 0A43     		orrs	r2, r2, r1
 406 00ba 5A60     		str	r2, [r3, #4]
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 407              		.loc 1 507 3
 408 00bc 7B68     		ldr	r3, [r7, #4]
 409 00be 1B68     		ldr	r3, [r3]
 410 00c0 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 17


 411 00c2 7B68     		ldr	r3, [r7, #4]
 412 00c4 1B68     		ldr	r3, [r3]
 413 00c6 42F00102 		orr	r2, r2, #1
 414 00ca 1A60     		str	r2, [r3]
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 415              		.loc 1 510 11
 416 00cc 7868     		ldr	r0, [r7, #4]
 417 00ce FFF7FEFF 		bl	UART_CheckIdleState
 418 00d2 0346     		mov	r3, r0
 419              	.L15:
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 420              		.loc 1 511 1
 421 00d4 1846     		mov	r0, r3
 422 00d6 0837     		adds	r7, r7, #8
 423              	.LCFI13:
 424              		.cfi_def_cfa_offset 8
 425 00d8 BD46     		mov	sp, r7
 426              	.LCFI14:
 427              		.cfi_def_cfa_register 13
 428              		@ sp needed
 429 00da 80BD     		pop	{r7, pc}
 430              		.cfi_endproc
 431              	.LFE143:
 433              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 434              		.align	1
 435              		.global	HAL_MultiProcessor_Init
 436              		.syntax unified
 437              		.thumb
 438              		.thumb_func
 440              	HAL_MultiProcessor_Init:
 441              	.LFB144:
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart        UART handle.
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Address      UART node address (4-, 6-, 7- or 8-bit long).
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param WakeUpMethod Specifies the UART wakeup method.
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        This parameter can be one of the following values:
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 442              		.loc 1 533 1
 443              		.cfi_startproc
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 18


 444              		@ args = 0, pretend = 0, frame = 16
 445              		@ frame_needed = 1, uses_anonymous_args = 0
 446 0000 80B5     		push	{r7, lr}
 447              	.LCFI15:
 448              		.cfi_def_cfa_offset 8
 449              		.cfi_offset 7, -8
 450              		.cfi_offset 14, -4
 451 0002 84B0     		sub	sp, sp, #16
 452              	.LCFI16:
 453              		.cfi_def_cfa_offset 24
 454 0004 00AF     		add	r7, sp, #0
 455              	.LCFI17:
 456              		.cfi_def_cfa_register 7
 457 0006 F860     		str	r0, [r7, #12]
 458 0008 0B46     		mov	r3, r1
 459 000a 7A60     		str	r2, [r7, #4]
 460 000c FB72     		strb	r3, [r7, #11]
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart == NULL)
 461              		.loc 1 535 6
 462 000e FB68     		ldr	r3, [r7, #12]
 463 0010 002B     		cmp	r3, #0
 464 0012 01D1     		bne	.L22
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 465              		.loc 1 537 12
 466 0014 0123     		movs	r3, #1
 467 0016 59E0     		b	.L23
 468              	.L22:
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the wake up method parameter */
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 469              		.loc 1 543 12
 470 0018 FB68     		ldr	r3, [r7, #12]
 471 001a DB6F     		ldr	r3, [r3, #124]
 472              		.loc 1 543 6
 473 001c 002B     		cmp	r3, #0
 474 001e 06D1     		bne	.L24
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 475              		.loc 1 546 17
 476 0020 FB68     		ldr	r3, [r7, #12]
 477 0022 0022     		movs	r2, #0
 478 0024 83F87820 		strb	r2, [r3, #120]
 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 19


 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init the low level hardware */
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->MspInitCallback(huart);
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #else
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 479              		.loc 1 560 5
 480 0028 F868     		ldr	r0, [r7, #12]
 481 002a FFF7FEFF 		bl	HAL_UART_MspInit
 482              	.L24:
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 483              		.loc 1 564 17
 484 002e FB68     		ldr	r3, [r7, #12]
 485 0030 2422     		movs	r2, #36
 486 0032 DA67     		str	r2, [r3, #124]
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 487              		.loc 1 566 3
 488 0034 FB68     		ldr	r3, [r7, #12]
 489 0036 1B68     		ldr	r3, [r3]
 490 0038 1A68     		ldr	r2, [r3]
 491 003a FB68     		ldr	r3, [r7, #12]
 492 003c 1B68     		ldr	r3, [r3]
 493 003e 22F00102 		bic	r2, r2, #1
 494 0042 1A60     		str	r2, [r3]
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 495              		.loc 1 569 7
 496 0044 F868     		ldr	r0, [r7, #12]
 497 0046 FFF7FEFF 		bl	UART_SetConfig
 498 004a 0346     		mov	r3, r0
 499              		.loc 1 569 6
 500 004c 012B     		cmp	r3, #1
 501 004e 01D1     		bne	.L25
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 502              		.loc 1 571 12
 503 0050 0123     		movs	r3, #1
 504 0052 3BE0     		b	.L23
 505              	.L25:
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 506              		.loc 1 574 26
 507 0054 FB68     		ldr	r3, [r7, #12]
 508 0056 5B6A     		ldr	r3, [r3, #36]
 509              		.loc 1 574 6
 510 0058 002B     		cmp	r3, #0
 511 005a 02D0     		beq	.L26
 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 512              		.loc 1 576 5
 513 005c F868     		ldr	r0, [r7, #12]
 514 005e FFF7FEFF 		bl	UART_AdvFeatureConfig
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 20


 515              	.L26:
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register. */
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 516              		.loc 1 582 3
 517 0062 FB68     		ldr	r3, [r7, #12]
 518 0064 1B68     		ldr	r3, [r3]
 519 0066 5A68     		ldr	r2, [r3, #4]
 520 0068 FB68     		ldr	r3, [r7, #12]
 521 006a 1B68     		ldr	r3, [r3]
 522 006c 22F49042 		bic	r2, r2, #18432
 523 0070 5A60     		str	r2, [r3, #4]
 583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 524              		.loc 1 583 3
 525 0072 FB68     		ldr	r3, [r7, #12]
 526 0074 1B68     		ldr	r3, [r3]
 527 0076 9A68     		ldr	r2, [r3, #8]
 528 0078 FB68     		ldr	r3, [r7, #12]
 529 007a 1B68     		ldr	r3, [r3]
 530 007c 22F02A02 		bic	r2, r2, #42
 531 0080 9A60     		str	r2, [r3, #8]
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 532              		.loc 1 585 6
 533 0082 7B68     		ldr	r3, [r7, #4]
 534 0084 B3F5006F 		cmp	r3, #2048
 535 0088 0AD1     		bne	.L27
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 536              		.loc 1 588 5
 537 008a FB68     		ldr	r3, [r7, #12]
 538 008c 1B68     		ldr	r3, [r3]
 539 008e 5B68     		ldr	r3, [r3, #4]
 540 0090 23F07F41 		bic	r1, r3, #-16777216
 541 0094 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 542 0096 1A06     		lsls	r2, r3, #24
 543 0098 FB68     		ldr	r3, [r7, #12]
 544 009a 1B68     		ldr	r3, [r3]
 545 009c 0A43     		orrs	r2, r2, r1
 546 009e 5A60     		str	r2, [r3, #4]
 547              	.L27:
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 548              		.loc 1 592 3
 549 00a0 FB68     		ldr	r3, [r7, #12]
 550 00a2 1B68     		ldr	r3, [r3]
 551 00a4 1B68     		ldr	r3, [r3]
 552 00a6 23F40061 		bic	r1, r3, #2048
 553 00aa FB68     		ldr	r3, [r7, #12]
 554 00ac 1B68     		ldr	r3, [r3]
 555 00ae 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 21


 556 00b0 0A43     		orrs	r2, r2, r1
 557 00b2 1A60     		str	r2, [r3]
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 558              		.loc 1 594 3
 559 00b4 FB68     		ldr	r3, [r7, #12]
 560 00b6 1B68     		ldr	r3, [r3]
 561 00b8 1A68     		ldr	r2, [r3]
 562 00ba FB68     		ldr	r3, [r7, #12]
 563 00bc 1B68     		ldr	r3, [r3]
 564 00be 42F00102 		orr	r2, r2, #1
 565 00c2 1A60     		str	r2, [r3]
 595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 566              		.loc 1 597 11
 567 00c4 F868     		ldr	r0, [r7, #12]
 568 00c6 FFF7FEFF 		bl	UART_CheckIdleState
 569 00ca 0346     		mov	r3, r0
 570              	.L23:
 598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 571              		.loc 1 598 1
 572 00cc 1846     		mov	r0, r3
 573 00ce 1037     		adds	r7, r7, #16
 574              	.LCFI18:
 575              		.cfi_def_cfa_offset 8
 576 00d0 BD46     		mov	sp, r7
 577              	.LCFI19:
 578              		.cfi_def_cfa_register 13
 579              		@ sp needed
 580 00d2 80BD     		pop	{r7, pc}
 581              		.cfi_endproc
 582              	.LFE144:
 584              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 585              		.align	1
 586              		.global	HAL_UART_DeInit
 587              		.syntax unified
 588              		.thumb
 589              		.thumb_func
 591              	HAL_UART_DeInit:
 592              	.LFB145:
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 593              		.loc 1 607 1
 594              		.cfi_startproc
 595              		@ args = 0, pretend = 0, frame = 8
 596              		@ frame_needed = 1, uses_anonymous_args = 0
 597 0000 80B5     		push	{r7, lr}
 598              	.LCFI20:
 599              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 22


 600              		.cfi_offset 7, -8
 601              		.cfi_offset 14, -4
 602 0002 82B0     		sub	sp, sp, #8
 603              	.LCFI21:
 604              		.cfi_def_cfa_offset 16
 605 0004 00AF     		add	r7, sp, #0
 606              	.LCFI22:
 607              		.cfi_def_cfa_register 7
 608 0006 7860     		str	r0, [r7, #4]
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the UART handle allocation */
 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart == NULL)
 609              		.loc 1 609 6
 610 0008 7B68     		ldr	r3, [r7, #4]
 611 000a 002B     		cmp	r3, #0
 612 000c 01D1     		bne	.L29
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 613              		.loc 1 611 12
 614 000e 0123     		movs	r3, #1
 615 0010 2FE0     		b	.L30
 616              	.L29:
 612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the parameters */
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 617              		.loc 1 617 17
 618 0012 7B68     		ldr	r3, [r7, #4]
 619 0014 2422     		movs	r2, #36
 620 0016 DA67     		str	r2, [r3, #124]
 618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 621              		.loc 1 619 3
 622 0018 7B68     		ldr	r3, [r7, #4]
 623 001a 1B68     		ldr	r3, [r3]
 624 001c 1A68     		ldr	r2, [r3]
 625 001e 7B68     		ldr	r3, [r7, #4]
 626 0020 1B68     		ldr	r3, [r3]
 627 0022 22F00102 		bic	r2, r2, #1
 628 0026 1A60     		str	r2, [r3]
 620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 629              		.loc 1 621 8
 630 0028 7B68     		ldr	r3, [r7, #4]
 631 002a 1B68     		ldr	r3, [r3]
 632              		.loc 1 621 24
 633 002c 0022     		movs	r2, #0
 634 002e 1A60     		str	r2, [r3]
 622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 635              		.loc 1 622 8
 636 0030 7B68     		ldr	r3, [r7, #4]
 637 0032 1B68     		ldr	r3, [r3]
 638              		.loc 1 622 24
 639 0034 0022     		movs	r2, #0
 640 0036 5A60     		str	r2, [r3, #4]
 623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 23


 641              		.loc 1 623 8
 642 0038 7B68     		ldr	r3, [r7, #4]
 643 003a 1B68     		ldr	r3, [r3]
 644              		.loc 1 623 24
 645 003c 0022     		movs	r2, #0
 646 003e 9A60     		str	r2, [r3, #8]
 624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->MspDeInitCallback == NULL)
 627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->MspDeInitCallback = HAL_UART_MspDeInit;
 629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* DeInit the low level hardware */
 631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->MspDeInitCallback(huart);
 632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #else
 633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* DeInit the low level hardware */
 634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 647              		.loc 1 634 3
 648 0040 7868     		ldr	r0, [r7, #4]
 649 0042 FFF7FEFF 		bl	HAL_UART_MspDeInit
 635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 650              		.loc 1 637 20
 651 0046 7B68     		ldr	r3, [r7, #4]
 652 0048 0022     		movs	r2, #0
 653 004a C3F88420 		str	r2, [r3, #132]
 638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 654              		.loc 1 638 17
 655 004e 7B68     		ldr	r3, [r7, #4]
 656 0050 0022     		movs	r2, #0
 657 0052 DA67     		str	r2, [r3, #124]
 639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 658              		.loc 1 639 18
 659 0054 7B68     		ldr	r3, [r7, #4]
 660 0056 0022     		movs	r2, #0
 661 0058 C3F88020 		str	r2, [r3, #128]
 640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 662              		.loc 1 640 24
 663 005c 7B68     		ldr	r3, [r7, #4]
 664 005e 0022     		movs	r2, #0
 665 0060 1A66     		str	r2, [r3, #96]
 641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
 666              		.loc 1 641 22
 667 0062 7B68     		ldr	r3, [r7, #4]
 668 0064 0022     		movs	r2, #0
 669 0066 5A66     		str	r2, [r3, #100]
 642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 670              		.loc 1 643 3
 671 0068 7B68     		ldr	r3, [r7, #4]
 672 006a 0022     		movs	r2, #0
 673 006c 83F87820 		strb	r2, [r3, #120]
 644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 674              		.loc 1 645 10
 675 0070 0023     		movs	r3, #0
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 24


 676              	.L30:
 646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 677              		.loc 1 646 1
 678 0072 1846     		mov	r0, r3
 679 0074 0837     		adds	r7, r7, #8
 680              	.LCFI23:
 681              		.cfi_def_cfa_offset 8
 682 0076 BD46     		mov	sp, r7
 683              	.LCFI24:
 684              		.cfi_def_cfa_register 13
 685              		@ sp needed
 686 0078 80BD     		pop	{r7, pc}
 687              		.cfi_endproc
 688              	.LFE145:
 690              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 691              		.align	1
 692              		.weak	HAL_UART_MspInit
 693              		.syntax unified
 694              		.thumb
 695              		.thumb_func
 697              	HAL_UART_MspInit:
 698              	.LFB146:
 647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Initialize the UART MSP.
 650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
 652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 699              		.loc 1 654 1
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 8
 702              		@ frame_needed = 1, uses_anonymous_args = 0
 703              		@ link register save eliminated.
 704 0000 80B4     		push	{r7}
 705              	.LCFI25:
 706              		.cfi_def_cfa_offset 4
 707              		.cfi_offset 7, -4
 708 0002 83B0     		sub	sp, sp, #12
 709              	.LCFI26:
 710              		.cfi_def_cfa_offset 16
 711 0004 00AF     		add	r7, sp, #0
 712              	.LCFI27:
 713              		.cfi_def_cfa_register 7
 714 0006 7860     		str	r0, [r7, #4]
 655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
 657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
 661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 715              		.loc 1 661 1
 716 0008 00BF     		nop
 717 000a 0C37     		adds	r7, r7, #12
 718              	.LCFI28:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 25


 719              		.cfi_def_cfa_offset 4
 720 000c BD46     		mov	sp, r7
 721              	.LCFI29:
 722              		.cfi_def_cfa_register 13
 723              		@ sp needed
 724 000e 5DF8047B 		ldr	r7, [sp], #4
 725              	.LCFI30:
 726              		.cfi_restore 7
 727              		.cfi_def_cfa_offset 0
 728 0012 7047     		bx	lr
 729              		.cfi_endproc
 730              	.LFE146:
 732              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 733              		.align	1
 734              		.weak	HAL_UART_MspDeInit
 735              		.syntax unified
 736              		.thumb
 737              		.thumb_func
 739              	HAL_UART_MspDeInit:
 740              	.LFB147:
 662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
 666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
 667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 741              		.loc 1 669 1
 742              		.cfi_startproc
 743              		@ args = 0, pretend = 0, frame = 8
 744              		@ frame_needed = 1, uses_anonymous_args = 0
 745              		@ link register save eliminated.
 746 0000 80B4     		push	{r7}
 747              	.LCFI31:
 748              		.cfi_def_cfa_offset 4
 749              		.cfi_offset 7, -4
 750 0002 83B0     		sub	sp, sp, #12
 751              	.LCFI32:
 752              		.cfi_def_cfa_offset 16
 753 0004 00AF     		add	r7, sp, #0
 754              	.LCFI33:
 755              		.cfi_def_cfa_register 7
 756 0006 7860     		str	r0, [r7, #4]
 670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
 672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
 676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 757              		.loc 1 676 1
 758 0008 00BF     		nop
 759 000a 0C37     		adds	r7, r7, #12
 760              	.LCFI34:
 761              		.cfi_def_cfa_offset 4
 762 000c BD46     		mov	sp, r7
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 26


 763              	.LCFI35:
 764              		.cfi_def_cfa_register 13
 765              		@ sp needed
 766 000e 5DF8047B 		ldr	r7, [sp], #4
 767              	.LCFI36:
 768              		.cfi_restore 7
 769              		.cfi_def_cfa_offset 0
 770 0012 7047     		bx	lr
 771              		.cfi_endproc
 772              	.LFE147:
 774              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 775              		.align	1
 776              		.global	HAL_UART_Transmit
 777              		.syntax unified
 778              		.thumb
 779              		.thumb_func
 781              	HAL_UART_Transmit:
 782              	.LFB148:
 677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Register a User UART Callback
 681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart uart handle
 683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be registered
 684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         This parameter can be one of the following values:
 685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  pCallback pointer to the Callback function
 697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef C
 700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                                             pUART_CallbackTypeDef pCallback)
 701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (pCallback == NULL)
 705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
 712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     switch (CallbackID)
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 27


 716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->TxHalfCpltCallback = pCallback;
 719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         break;
 720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->TxCpltCallback = pCallback;
 723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         break;
 724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->RxHalfCpltCallback = pCallback;
 727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         break;
 728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->RxCpltCallback = pCallback;
 731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         break;
 732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->ErrorCallback = pCallback;
 735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         break;
 736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->AbortCpltCallback = pCallback;
 739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         break;
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = pCallback;
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         break;
 744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = pCallback;
 747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         break;
 748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #if defined(USART_CR1_UESM)
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #if defined(USART_CR3_WUFIE)
 751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->WakeupCallback = pCallback;
 753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         break;
 754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* USART_CR3_WUFIE */
 756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* USART_CR1_UESM */
 757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         break;
 761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         break;
 765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       default :
 767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         status =  HAL_ERROR;
 770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         break;
 771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 28


 773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else if (huart->gState == HAL_UART_STATE_RESET)
 774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     switch (CallbackID)
 776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         break;
 780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         break;
 784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       default :
 786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         status =  HAL_ERROR;
 789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         break;
 790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
 793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     status =  HAL_ERROR;
 797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return status;
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Unregister an UART Callback
 806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         UART callaback is redirected to the weak predefined callback
 807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart uart handle
 808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be unregistered
 809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         This parameter can be one of the following values:
 810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef
 824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
 828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (HAL_UART_STATE_READY == huart->gState)
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 29


 830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     switch (CallbackID)
 832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->TxHalfCpltCallback = HAL_UART_TxHalfCpltCallback;               /* Legacy weak  TxHa
 835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         break;
 836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->TxCpltCallback = HAL_UART_TxCpltCallback;                       /* Legacy weak TxCpl
 839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         break;
 840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->RxHalfCpltCallback = HAL_UART_RxHalfCpltCallback;               /* Legacy weak RxHal
 843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         break;
 844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->RxCpltCallback = HAL_UART_RxCpltCallback;                       /* Legacy weak RxCpl
 847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         break;
 848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->ErrorCallback = HAL_UART_ErrorCallback;                         /* Legacy weak Error
 851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         break;
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->AbortCpltCallback = HAL_UART_AbortCpltCallback;                 /* Legacy weak Abort
 855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         break;
 856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak
 859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                                                                                   AbortTransmitCplt
 860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         break;
 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = HAL_UART_AbortReceiveCpltCallback;   /* Legacy weak
 864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                                                                                   AbortReceiveCpltC
 865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         break;
 866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #if defined(USART_CR1_UESM)
 868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #if defined(USART_CR3_WUFIE)
 869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->WakeupCallback = HAL_UARTEx_WakeupCallback;                     /* Legacy weak Wakeu
 871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         break;
 872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* USART_CR3_WUFIE */
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* USART_CR1_UESM */
 875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;                             /* Legacy weak MspIn
 877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         break;
 878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;                         /* Legacy weak MspDe
 881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         break;
 882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       default :
 884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         status =  HAL_ERROR;
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 30


 887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         break;
 888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else if (HAL_UART_STATE_RESET == huart->gState)
 891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     switch (CallbackID)
 893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;
 896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         break;
 897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;
 900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         break;
 901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       default :
 903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         status =  HAL_ERROR;
 906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         break;
 907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
 910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     status =  HAL_ERROR;
 914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return status;
 919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Register a User UART Rx Event Callback
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart     Uart handle
 925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  pCallback Pointer to the Rx Event Callback function
 926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterRxEventCallback(UART_HandleTypeDef *huart, pUART_RxEventCallback
 929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (pCallback == NULL)
 933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_ERROR;
 937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process locked */
 940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 31


 944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxEventCallback = pCallback;
 945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
 947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     status =  HAL_ERROR;
 951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Release Lock */
 954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return status;
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  UnRegister the UART Rx Event Callback
 961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         UART Rx Event Callback is redirected to the weak HAL_UARTEx_RxEventCallback() predefine
 962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart     Uart handle
 963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
 964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterRxEventCallback(UART_HandleTypeDef *huart)
 966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Process locked */
 970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
 971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxEventCallback = HAL_UARTEx_RxEventCallback; /* Legacy weak UART Rx Event Callback  */
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
 977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     status =  HAL_ERROR;
 981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Release Lock */
 984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return status;
 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
 991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @}
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
 993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
 995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
 997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** @verbatim
 998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  ===============================================================================
 999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                       ##### IO operation functions #####
1000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  ===============================================================================
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 32


1001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
1002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     and Half duplex data transfers.
1003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) There are two mode of transfer:
1005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
1006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
1007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            after finishing transfer.
1008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
1009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            or DMA, These API's return the HAL status.
1010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            The end of the data processing will be indicated through the
1011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
1012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            using DMA mode.
1013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
1015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
1016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) Blocking mode API's are :
1018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_Transmit()
1019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_Receive()
1020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
1023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
1024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
1027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
1028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
1029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
1030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
1031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
1032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
1035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
1037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
1038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
1039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
1041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_Abort()
1042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
1043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
1044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
1045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
1046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
1047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
1049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
1050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
1051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) A Rx Event Reception Callback (Rx event notification) is available for Non_Blocking modes o
1054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         reception services:
1055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UARTEx_RxEventCallback()
1056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #if defined(USART_CR1_UESM)
1057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 33


1058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) Wakeup from Stop mode Callback:
1059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         (+) HAL_UARTEx_WakeupCallback()
1060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif
1061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         Errors are handled as follows :
1064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
1065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error
1066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            in Interrupt mode reception .
1067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            to identify error type, and HAL_UART_ErrorCallback() user callback is executed.
1069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            Transfer is kept ongoing on UART side.
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
1071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
1072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
1073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback()
1074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            user callback is executed.
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
1078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** @endverbatim
1080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
1081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
1085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         of u16 provided through pData.
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart   UART handle.
1089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
1090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be sent.
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Timeout Timeout duration.
1092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t Size,
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 783              		.loc 1 1095 1
 784              		.cfi_startproc
 785              		@ args = 0, pretend = 0, frame = 32
 786              		@ frame_needed = 1, uses_anonymous_args = 0
 787 0000 80B5     		push	{r7, lr}
 788              	.LCFI37:
 789              		.cfi_def_cfa_offset 8
 790              		.cfi_offset 7, -8
 791              		.cfi_offset 14, -4
 792 0002 8AB0     		sub	sp, sp, #40
 793              	.LCFI38:
 794              		.cfi_def_cfa_offset 48
 795 0004 02AF     		add	r7, sp, #8
 796              	.LCFI39:
 797              		.cfi_def_cfa 7, 40
 798 0006 F860     		str	r0, [r7, #12]
 799 0008 B960     		str	r1, [r7, #8]
 800 000a 3B60     		str	r3, [r7]
 801 000c 1346     		mov	r3, r2	@ movhi
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 34


 802 000e FB80     		strh	r3, [r7, #6]	@ movhi
1096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   const uint8_t  *pdata8bits;
1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   const uint16_t *pdata16bits;
1098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t tickstart;
1099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 803              		.loc 1 1101 12
 804 0010 FB68     		ldr	r3, [r7, #12]
 805 0012 DB6F     		ldr	r3, [r3, #124]
 806              		.loc 1 1101 6
 807 0014 202B     		cmp	r3, #32
 808 0016 71D1     		bne	.L34
1102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 809              		.loc 1 1103 8
 810 0018 BB68     		ldr	r3, [r7, #8]
 811 001a 002B     		cmp	r3, #0
 812 001c 02D0     		beq	.L35
 813              		.loc 1 1103 25 discriminator 1
 814 001e FB88     		ldrh	r3, [r7, #6]
 815 0020 002B     		cmp	r3, #0
 816 0022 01D1     		bne	.L36
 817              	.L35:
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return  HAL_ERROR;
 818              		.loc 1 1105 15
 819 0024 0123     		movs	r3, #1
 820 0026 6AE0     		b	.L37
 821              	.L36:
1106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 822              		.loc 1 1108 22
 823 0028 FB68     		ldr	r3, [r7, #12]
 824 002a 0022     		movs	r2, #0
 825 002c C3F88420 		str	r2, [r3, #132]
1109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 826              		.loc 1 1109 19
 827 0030 FB68     		ldr	r3, [r7, #12]
 828 0032 2122     		movs	r2, #33
 829 0034 DA67     		str	r2, [r3, #124]
1110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init tickstart for timeout management */
1112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     tickstart = HAL_GetTick();
 830              		.loc 1 1112 17
 831 0036 FFF7FEFF 		bl	HAL_GetTick
 832 003a 7861     		str	r0, [r7, #20]
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferSize  = Size;
 833              		.loc 1 1114 24
 834 003c FB68     		ldr	r3, [r7, #12]
 835 003e FA88     		ldrh	r2, [r7, #6]	@ movhi
 836 0040 A3F85020 		strh	r2, [r3, #80]	@ movhi
1115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferCount = Size;
 837              		.loc 1 1115 24
 838 0044 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 35


 839 0046 FA88     		ldrh	r2, [r7, #6]	@ movhi
 840 0048 A3F85220 		strh	r2, [r3, #82]	@ movhi
1116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
1118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 841              		.loc 1 1118 21
 842 004c FB68     		ldr	r3, [r7, #12]
 843 004e 9B68     		ldr	r3, [r3, #8]
 844              		.loc 1 1118 8
 845 0050 B3F5805F 		cmp	r3, #4096
 846 0054 08D1     		bne	.L38
 847              		.loc 1 1118 71 discriminator 1
 848 0056 FB68     		ldr	r3, [r7, #12]
 849 0058 1B69     		ldr	r3, [r3, #16]
 850              		.loc 1 1118 56 discriminator 1
 851 005a 002B     		cmp	r3, #0
 852 005c 04D1     		bne	.L38
1119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       pdata8bits  = NULL;
 853              		.loc 1 1120 19
 854 005e 0023     		movs	r3, #0
 855 0060 FB61     		str	r3, [r7, #28]
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       pdata16bits = (const uint16_t *) pData;
 856              		.loc 1 1121 19
 857 0062 BB68     		ldr	r3, [r7, #8]
 858 0064 BB61     		str	r3, [r7, #24]
 859 0066 03E0     		b	.L39
 860              	.L38:
1122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     else
1124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       pdata8bits  = pData;
 861              		.loc 1 1125 19
 862 0068 BB68     		ldr	r3, [r7, #8]
 863 006a FB61     		str	r3, [r7, #28]
1126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       pdata16bits = NULL;
 864              		.loc 1 1126 19
 865 006c 0023     		movs	r3, #0
 866 006e BB61     		str	r3, [r7, #24]
 867              	.L39:
1127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
 868              		.loc 1 1129 11
 869 0070 2CE0     		b	.L40
 870              	.L44:
1130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 871              		.loc 1 1131 11
 872 0072 3B68     		ldr	r3, [r7]
 873 0074 0093     		str	r3, [sp]
 874 0076 7B69     		ldr	r3, [r7, #20]
 875 0078 0022     		movs	r2, #0
 876 007a 8021     		movs	r1, #128
 877 007c F868     		ldr	r0, [r7, #12]
 878 007e FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 879 0082 0346     		mov	r3, r0
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 36


 880              		.loc 1 1131 10
 881 0084 002B     		cmp	r3, #0
 882 0086 01D0     		beq	.L41
1132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         return HAL_TIMEOUT;
 883              		.loc 1 1133 16
 884 0088 0323     		movs	r3, #3
 885 008a 38E0     		b	.L37
 886              	.L41:
1134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if (pdata8bits == NULL)
 887              		.loc 1 1135 10
 888 008c FB69     		ldr	r3, [r7, #28]
 889 008e 002B     		cmp	r3, #0
 890 0090 0BD1     		bne	.L42
1136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 891              		.loc 1 1137 43
 892 0092 BB69     		ldr	r3, [r7, #24]
 893 0094 1B88     		ldrh	r3, [r3]
 894              		.loc 1 1137 32
 895 0096 1A46     		mov	r2, r3
 896              		.loc 1 1137 14
 897 0098 FB68     		ldr	r3, [r7, #12]
 898 009a 1B68     		ldr	r3, [r3]
 899              		.loc 1 1137 32
 900 009c C2F30802 		ubfx	r2, r2, #0, #9
 901              		.loc 1 1137 30
 902 00a0 9A62     		str	r2, [r3, #40]
1138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         pdata16bits++;
 903              		.loc 1 1138 20
 904 00a2 BB69     		ldr	r3, [r7, #24]
 905 00a4 0233     		adds	r3, r3, #2
 906 00a6 BB61     		str	r3, [r7, #24]
 907 00a8 07E0     		b	.L43
 908              	.L42:
1139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       else
1141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 909              		.loc 1 1142 42
 910 00aa FB69     		ldr	r3, [r7, #28]
 911 00ac 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 912              		.loc 1 1142 14
 913 00ae FB68     		ldr	r3, [r7, #12]
 914 00b0 1B68     		ldr	r3, [r3]
 915              		.loc 1 1142 30
 916 00b2 9A62     		str	r2, [r3, #40]
1143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         pdata8bits++;
 917              		.loc 1 1143 19
 918 00b4 FB69     		ldr	r3, [r7, #28]
 919 00b6 0133     		adds	r3, r3, #1
 920 00b8 FB61     		str	r3, [r7, #28]
 921              	.L43:
1144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->TxXferCount--;
 922              		.loc 1 1145 12
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 37


 923 00ba FB68     		ldr	r3, [r7, #12]
 924 00bc B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 925 00c0 9BB2     		uxth	r3, r3
 926              		.loc 1 1145 25
 927 00c2 013B     		subs	r3, r3, #1
 928 00c4 9AB2     		uxth	r2, r3
 929 00c6 FB68     		ldr	r3, [r7, #12]
 930 00c8 A3F85220 		strh	r2, [r3, #82]	@ movhi
 931              	.L40:
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 932              		.loc 1 1129 17
 933 00cc FB68     		ldr	r3, [r7, #12]
 934 00ce B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 935 00d2 9BB2     		uxth	r3, r3
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 936              		.loc 1 1129 11
 937 00d4 002B     		cmp	r3, #0
 938 00d6 CCD1     		bne	.L44
1146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 939              		.loc 1 1148 9
 940 00d8 3B68     		ldr	r3, [r7]
 941 00da 0093     		str	r3, [sp]
 942 00dc 7B69     		ldr	r3, [r7, #20]
 943 00de 0022     		movs	r2, #0
 944 00e0 4021     		movs	r1, #64
 945 00e2 F868     		ldr	r0, [r7, #12]
 946 00e4 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 947 00e8 0346     		mov	r3, r0
 948              		.loc 1 1148 8
 949 00ea 002B     		cmp	r3, #0
 950 00ec 01D0     		beq	.L45
1149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_TIMEOUT;
 951              		.loc 1 1150 14
 952 00ee 0323     		movs	r3, #3
 953 00f0 05E0     		b	.L37
 954              	.L45:
1151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
1154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 955              		.loc 1 1154 19
 956 00f2 FB68     		ldr	r3, [r7, #12]
 957 00f4 2022     		movs	r2, #32
 958 00f6 DA67     		str	r2, [r3, #124]
1155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
 959              		.loc 1 1156 12
 960 00f8 0023     		movs	r3, #0
 961 00fa 00E0     		b	.L37
 962              	.L34:
1157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
1159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 38


 963              		.loc 1 1160 12
 964 00fc 0223     		movs	r3, #2
 965              	.L37:
1161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 966              		.loc 1 1162 1
 967 00fe 1846     		mov	r0, r3
 968 0100 2037     		adds	r7, r7, #32
 969              	.LCFI40:
 970              		.cfi_def_cfa_offset 8
 971 0102 BD46     		mov	sp, r7
 972              	.LCFI41:
 973              		.cfi_def_cfa_register 13
 974              		@ sp needed
 975 0104 80BD     		pop	{r7, pc}
 976              		.cfi_endproc
 977              	.LFE148:
 979              		.section	.text.HAL_UART_Receive,"ax",%progbits
 980              		.align	1
 981              		.global	HAL_UART_Receive
 982              		.syntax unified
 983              		.thumb
 984              		.thumb_func
 986              	HAL_UART_Receive:
 987              	.LFB149:
1163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
1166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         of u16 available through pData.
1169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart   UART handle.
1170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
1171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be received.
1172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Timeout Timeout duration.
1173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 988              		.loc 1 1176 1
 989              		.cfi_startproc
 990              		@ args = 0, pretend = 0, frame = 32
 991              		@ frame_needed = 1, uses_anonymous_args = 0
 992 0000 80B5     		push	{r7, lr}
 993              	.LCFI42:
 994              		.cfi_def_cfa_offset 8
 995              		.cfi_offset 7, -8
 996              		.cfi_offset 14, -4
 997 0002 8AB0     		sub	sp, sp, #40
 998              	.LCFI43:
 999              		.cfi_def_cfa_offset 48
 1000 0004 02AF     		add	r7, sp, #8
 1001              	.LCFI44:
 1002              		.cfi_def_cfa 7, 40
 1003 0006 F860     		str	r0, [r7, #12]
 1004 0008 B960     		str	r1, [r7, #8]
 1005 000a 3B60     		str	r3, [r7]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 39


 1006 000c 1346     		mov	r3, r2	@ movhi
 1007 000e FB80     		strh	r3, [r7, #6]	@ movhi
1177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint8_t  *pdata8bits;
1178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t *pdata16bits;
1179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t uhMask;
1180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t tickstart;
1181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1008              		.loc 1 1183 12
 1009 0010 FB68     		ldr	r3, [r7, #12]
 1010 0012 D3F88030 		ldr	r3, [r3, #128]
 1011              		.loc 1 1183 6
 1012 0016 202B     		cmp	r3, #32
 1013 0018 40F0B180 		bne	.L47
1184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1014              		.loc 1 1185 8
 1015 001c BB68     		ldr	r3, [r7, #8]
 1016 001e 002B     		cmp	r3, #0
 1017 0020 02D0     		beq	.L48
 1018              		.loc 1 1185 25 discriminator 1
 1019 0022 FB88     		ldrh	r3, [r7, #6]
 1020 0024 002B     		cmp	r3, #0
 1021 0026 01D1     		bne	.L49
 1022              	.L48:
1186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return  HAL_ERROR;
 1023              		.loc 1 1187 15
 1024 0028 0123     		movs	r3, #1
 1025 002a A9E0     		b	.L50
 1026              	.L49:
1188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1027              		.loc 1 1190 22
 1028 002c FB68     		ldr	r3, [r7, #12]
 1029 002e 0022     		movs	r2, #0
 1030 0030 C3F88420 		str	r2, [r3, #132]
1191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1031              		.loc 1 1191 20
 1032 0034 FB68     		ldr	r3, [r7, #12]
 1033 0036 2222     		movs	r2, #34
 1034 0038 C3F88020 		str	r2, [r3, #128]
1192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 1035              		.loc 1 1192 26
 1036 003c FB68     		ldr	r3, [r7, #12]
 1037 003e 0022     		movs	r2, #0
 1038 0040 1A66     		str	r2, [r3, #96]
1193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Init tickstart for timeout management */
1195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     tickstart = HAL_GetTick();
 1039              		.loc 1 1195 17
 1040 0042 FFF7FEFF 		bl	HAL_GetTick
 1041 0046 7861     		str	r0, [r7, #20]
1196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferSize  = Size;
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 40


 1042              		.loc 1 1197 24
 1043 0048 FB68     		ldr	r3, [r7, #12]
 1044 004a FA88     		ldrh	r2, [r7, #6]	@ movhi
 1045 004c A3F85820 		strh	r2, [r3, #88]	@ movhi
1198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferCount = Size;
 1046              		.loc 1 1198 24
 1047 0050 FB68     		ldr	r3, [r7, #12]
 1048 0052 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1049 0054 A3F85A20 		strh	r2, [r3, #90]	@ movhi
1199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 1050              		.loc 1 1201 5
 1051 0058 FB68     		ldr	r3, [r7, #12]
 1052 005a 9B68     		ldr	r3, [r3, #8]
 1053 005c B3F5805F 		cmp	r3, #4096
 1054 0060 0ED1     		bne	.L51
 1055              		.loc 1 1201 5 is_stmt 0 discriminator 1
 1056 0062 FB68     		ldr	r3, [r7, #12]
 1057 0064 1B69     		ldr	r3, [r3, #16]
 1058 0066 002B     		cmp	r3, #0
 1059 0068 05D1     		bne	.L52
 1060              		.loc 1 1201 5 discriminator 3
 1061 006a FB68     		ldr	r3, [r7, #12]
 1062 006c 40F2FF12 		movw	r2, #511
 1063 0070 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1064 0074 2DE0     		b	.L53
 1065              	.L52:
 1066              		.loc 1 1201 5 discriminator 4
 1067 0076 FB68     		ldr	r3, [r7, #12]
 1068 0078 FF22     		movs	r2, #255
 1069 007a A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1070 007e 28E0     		b	.L53
 1071              	.L51:
 1072              		.loc 1 1201 5 discriminator 2
 1073 0080 FB68     		ldr	r3, [r7, #12]
 1074 0082 9B68     		ldr	r3, [r3, #8]
 1075 0084 002B     		cmp	r3, #0
 1076 0086 0DD1     		bne	.L54
 1077              		.loc 1 1201 5 discriminator 5
 1078 0088 FB68     		ldr	r3, [r7, #12]
 1079 008a 1B69     		ldr	r3, [r3, #16]
 1080 008c 002B     		cmp	r3, #0
 1081 008e 04D1     		bne	.L55
 1082              		.loc 1 1201 5 discriminator 7
 1083 0090 FB68     		ldr	r3, [r7, #12]
 1084 0092 FF22     		movs	r2, #255
 1085 0094 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1086 0098 1BE0     		b	.L53
 1087              	.L55:
 1088              		.loc 1 1201 5 discriminator 8
 1089 009a FB68     		ldr	r3, [r7, #12]
 1090 009c 7F22     		movs	r2, #127
 1091 009e A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1092 00a2 16E0     		b	.L53
 1093              	.L54:
 1094              		.loc 1 1201 5 discriminator 6
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 41


 1095 00a4 FB68     		ldr	r3, [r7, #12]
 1096 00a6 9B68     		ldr	r3, [r3, #8]
 1097 00a8 B3F1805F 		cmp	r3, #268435456
 1098 00ac 0DD1     		bne	.L56
 1099              		.loc 1 1201 5 discriminator 9
 1100 00ae FB68     		ldr	r3, [r7, #12]
 1101 00b0 1B69     		ldr	r3, [r3, #16]
 1102 00b2 002B     		cmp	r3, #0
 1103 00b4 04D1     		bne	.L57
 1104              		.loc 1 1201 5 discriminator 11
 1105 00b6 FB68     		ldr	r3, [r7, #12]
 1106 00b8 7F22     		movs	r2, #127
 1107 00ba A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1108 00be 08E0     		b	.L53
 1109              	.L57:
 1110              		.loc 1 1201 5 discriminator 12
 1111 00c0 FB68     		ldr	r3, [r7, #12]
 1112 00c2 3F22     		movs	r2, #63
 1113 00c4 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1114 00c8 03E0     		b	.L53
 1115              	.L56:
 1116              		.loc 1 1201 5 discriminator 10
 1117 00ca FB68     		ldr	r3, [r7, #12]
 1118 00cc 0022     		movs	r2, #0
 1119 00ce A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1120              	.L53:
1202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     uhMask = huart->Mask;
 1121              		.loc 1 1202 12 is_stmt 1
 1122 00d2 FB68     		ldr	r3, [r7, #12]
 1123 00d4 B3F85C30 		ldrh	r3, [r3, #92]	@ movhi
 1124 00d8 7B82     		strh	r3, [r7, #18]	@ movhi
1203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
1205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 1125              		.loc 1 1205 21
 1126 00da FB68     		ldr	r3, [r7, #12]
 1127 00dc 9B68     		ldr	r3, [r3, #8]
 1128              		.loc 1 1205 8
 1129 00de B3F5805F 		cmp	r3, #4096
 1130 00e2 08D1     		bne	.L58
 1131              		.loc 1 1205 71 discriminator 1
 1132 00e4 FB68     		ldr	r3, [r7, #12]
 1133 00e6 1B69     		ldr	r3, [r3, #16]
 1134              		.loc 1 1205 56 discriminator 1
 1135 00e8 002B     		cmp	r3, #0
 1136 00ea 04D1     		bne	.L58
1206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       pdata8bits  = NULL;
 1137              		.loc 1 1207 19
 1138 00ec 0023     		movs	r3, #0
 1139 00ee FB61     		str	r3, [r7, #28]
1208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 1140              		.loc 1 1208 19
 1141 00f0 BB68     		ldr	r3, [r7, #8]
 1142 00f2 BB61     		str	r3, [r7, #24]
 1143 00f4 03E0     		b	.L59
 1144              	.L58:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 42


1209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     else
1211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       pdata8bits  = pData;
 1145              		.loc 1 1212 19
 1146 00f6 BB68     		ldr	r3, [r7, #8]
 1147 00f8 FB61     		str	r3, [r7, #28]
1213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       pdata16bits = NULL;
 1148              		.loc 1 1213 19
 1149 00fa 0023     		movs	r3, #0
 1150 00fc BB61     		str	r3, [r7, #24]
 1151              	.L59:
1214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* as long as data have to be received */
1217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
 1152              		.loc 1 1217 11
 1153 00fe 32E0     		b	.L60
 1154              	.L64:
1218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 1155              		.loc 1 1219 11
 1156 0100 3B68     		ldr	r3, [r7]
 1157 0102 0093     		str	r3, [sp]
 1158 0104 7B69     		ldr	r3, [r7, #20]
 1159 0106 0022     		movs	r2, #0
 1160 0108 2021     		movs	r1, #32
 1161 010a F868     		ldr	r0, [r7, #12]
 1162 010c FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1163 0110 0346     		mov	r3, r0
 1164              		.loc 1 1219 10
 1165 0112 002B     		cmp	r3, #0
 1166 0114 01D0     		beq	.L61
1220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         return HAL_TIMEOUT;
 1167              		.loc 1 1221 16
 1168 0116 0323     		movs	r3, #3
 1169 0118 32E0     		b	.L50
 1170              	.L61:
1222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if (pdata8bits == NULL)
 1171              		.loc 1 1223 10
 1172 011a FB69     		ldr	r3, [r7, #28]
 1173 011c 002B     		cmp	r3, #0
 1174 011e 0CD1     		bne	.L62
1224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         *pdata16bits = (uint16_t)(huart->Instance->RDR & uhMask);
 1175              		.loc 1 1225 40
 1176 0120 FB68     		ldr	r3, [r7, #12]
 1177 0122 1B68     		ldr	r3, [r3]
 1178              		.loc 1 1225 50
 1179 0124 5B6A     		ldr	r3, [r3, #36]
 1180              		.loc 1 1225 24
 1181 0126 9AB2     		uxth	r2, r3
 1182 0128 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 1183 012a 1340     		ands	r3, r3, r2
 1184 012c 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 43


 1185              		.loc 1 1225 22
 1186 012e BB69     		ldr	r3, [r7, #24]
 1187 0130 1A80     		strh	r2, [r3]	@ movhi
1226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         pdata16bits++;
 1188              		.loc 1 1226 20
 1189 0132 BB69     		ldr	r3, [r7, #24]
 1190 0134 0233     		adds	r3, r3, #2
 1191 0136 BB61     		str	r3, [r7, #24]
 1192 0138 0CE0     		b	.L63
 1193              	.L62:
1227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       else
1229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         *pdata8bits = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 1194              		.loc 1 1230 38
 1195 013a FB68     		ldr	r3, [r7, #12]
 1196 013c 1B68     		ldr	r3, [r3]
 1197              		.loc 1 1230 48
 1198 013e 5B6A     		ldr	r3, [r3, #36]
 1199              		.loc 1 1230 23
 1200 0140 DAB2     		uxtb	r2, r3
 1201              		.loc 1 1230 56
 1202 0142 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 1203 0144 DBB2     		uxtb	r3, r3
 1204              		.loc 1 1230 23
 1205 0146 1340     		ands	r3, r3, r2
 1206 0148 DAB2     		uxtb	r2, r3
 1207              		.loc 1 1230 21
 1208 014a FB69     		ldr	r3, [r7, #28]
 1209 014c 1A70     		strb	r2, [r3]
1231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         pdata8bits++;
 1210              		.loc 1 1231 19
 1211 014e FB69     		ldr	r3, [r7, #28]
 1212 0150 0133     		adds	r3, r3, #1
 1213 0152 FB61     		str	r3, [r7, #28]
 1214              	.L63:
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->RxXferCount--;
 1215              		.loc 1 1233 12
 1216 0154 FB68     		ldr	r3, [r7, #12]
 1217 0156 B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 1218 015a 9BB2     		uxth	r3, r3
 1219              		.loc 1 1233 25
 1220 015c 013B     		subs	r3, r3, #1
 1221 015e 9AB2     		uxth	r2, r3
 1222 0160 FB68     		ldr	r3, [r7, #12]
 1223 0162 A3F85A20 		strh	r2, [r3, #90]	@ movhi
 1224              	.L60:
1217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1225              		.loc 1 1217 17
 1226 0166 FB68     		ldr	r3, [r7, #12]
 1227 0168 B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 1228 016c 9BB2     		uxth	r3, r3
1217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
 1229              		.loc 1 1217 11
 1230 016e 002B     		cmp	r3, #0
 1231 0170 C6D1     		bne	.L64
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 44


1234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1232              		.loc 1 1237 20
 1233 0172 FB68     		ldr	r3, [r7, #12]
 1234 0174 2022     		movs	r2, #32
 1235 0176 C3F88020 		str	r2, [r3, #128]
1238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
 1236              		.loc 1 1239 12
 1237 017a 0023     		movs	r3, #0
 1238 017c 00E0     		b	.L50
 1239              	.L47:
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
1242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
 1240              		.loc 1 1243 12
 1241 017e 0223     		movs	r3, #2
 1242              	.L50:
1244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 1243              		.loc 1 1245 1
 1244 0180 1846     		mov	r0, r3
 1245 0182 2037     		adds	r7, r7, #32
 1246              	.LCFI45:
 1247              		.cfi_def_cfa_offset 8
 1248 0184 BD46     		mov	sp, r7
 1249              	.LCFI46:
 1250              		.cfi_def_cfa_register 13
 1251              		@ sp needed
 1252 0186 80BD     		pop	{r7, pc}
 1253              		.cfi_endproc
 1254              	.LFE149:
 1256              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1257              		.align	1
 1258              		.global	HAL_UART_Transmit_IT
 1259              		.syntax unified
 1260              		.thumb
 1261              		.thumb_func
 1263              	HAL_UART_Transmit_IT:
 1264              	.LFB150:
1246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
1249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         of u16 provided through pData.
1252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
1253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
1255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t Si
1258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 1265              		.loc 1 1258 1
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 45


 1266              		.cfi_startproc
 1267              		@ args = 0, pretend = 0, frame = 40
 1268              		@ frame_needed = 1, uses_anonymous_args = 0
 1269              		@ link register save eliminated.
 1270 0000 80B4     		push	{r7}
 1271              	.LCFI47:
 1272              		.cfi_def_cfa_offset 4
 1273              		.cfi_offset 7, -4
 1274 0002 8BB0     		sub	sp, sp, #44
 1275              	.LCFI48:
 1276              		.cfi_def_cfa_offset 48
 1277 0004 00AF     		add	r7, sp, #0
 1278              	.LCFI49:
 1279              		.cfi_def_cfa_register 7
 1280 0006 F860     		str	r0, [r7, #12]
 1281 0008 B960     		str	r1, [r7, #8]
 1282 000a 1346     		mov	r3, r2
 1283 000c FB80     		strh	r3, [r7, #6]	@ movhi
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 1284              		.loc 1 1260 12
 1285 000e FB68     		ldr	r3, [r7, #12]
 1286 0010 DB6F     		ldr	r3, [r3, #124]
 1287              		.loc 1 1260 6
 1288 0012 202B     		cmp	r3, #32
 1289 0014 47D1     		bne	.L66
1261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1290              		.loc 1 1262 8
 1291 0016 BB68     		ldr	r3, [r7, #8]
 1292 0018 002B     		cmp	r3, #0
 1293 001a 02D0     		beq	.L67
 1294              		.loc 1 1262 25 discriminator 1
 1295 001c FB88     		ldrh	r3, [r7, #6]
 1296 001e 002B     		cmp	r3, #0
 1297 0020 01D1     		bne	.L68
 1298              	.L67:
1263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_ERROR;
 1299              		.loc 1 1264 14
 1300 0022 0123     		movs	r3, #1
 1301 0024 40E0     		b	.L69
 1302              	.L68:
1265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
 1303              		.loc 1 1267 24
 1304 0026 FB68     		ldr	r3, [r7, #12]
 1305 0028 BA68     		ldr	r2, [r7, #8]
 1306 002a DA64     		str	r2, [r3, #76]
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferSize  = Size;
 1307              		.loc 1 1268 24
 1308 002c FB68     		ldr	r3, [r7, #12]
 1309 002e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1310 0030 A3F85020 		strh	r2, [r3, #80]	@ movhi
1269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferCount = Size;
 1311              		.loc 1 1269 24
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 46


 1312 0034 FB68     		ldr	r3, [r7, #12]
 1313 0036 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1314 0038 A3F85220 		strh	r2, [r3, #82]	@ movhi
1270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxISR       = NULL;
 1315              		.loc 1 1270 24
 1316 003c FB68     		ldr	r3, [r7, #12]
 1317 003e 0022     		movs	r2, #0
 1318 0040 DA66     		str	r2, [r3, #108]
1271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1319              		.loc 1 1272 22
 1320 0042 FB68     		ldr	r3, [r7, #12]
 1321 0044 0022     		movs	r2, #0
 1322 0046 C3F88420 		str	r2, [r3, #132]
1273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1323              		.loc 1 1273 19
 1324 004a FB68     		ldr	r3, [r7, #12]
 1325 004c 2122     		movs	r2, #33
 1326 004e DA67     		str	r2, [r3, #124]
1274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the Tx ISR function pointer according to the data word length */
1276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 1327              		.loc 1 1276 21
 1328 0050 FB68     		ldr	r3, [r7, #12]
 1329 0052 9B68     		ldr	r3, [r3, #8]
 1330              		.loc 1 1276 8
 1331 0054 B3F5805F 		cmp	r3, #4096
 1332 0058 07D1     		bne	.L70
 1333              		.loc 1 1276 71 discriminator 1
 1334 005a FB68     		ldr	r3, [r7, #12]
 1335 005c 1B69     		ldr	r3, [r3, #16]
 1336              		.loc 1 1276 56 discriminator 1
 1337 005e 002B     		cmp	r3, #0
 1338 0060 03D1     		bne	.L70
1277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->TxISR = UART_TxISR_16BIT;
 1339              		.loc 1 1278 20
 1340 0062 FB68     		ldr	r3, [r7, #12]
 1341 0064 134A     		ldr	r2, .L75
 1342 0066 DA66     		str	r2, [r3, #108]
 1343 0068 02E0     		b	.L74
 1344              	.L70:
1279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     else
1281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->TxISR = UART_TxISR_8BIT;
 1345              		.loc 1 1282 20
 1346 006a FB68     		ldr	r3, [r7, #12]
 1347 006c 124A     		ldr	r2, .L75+4
 1348 006e DA66     		str	r2, [r3, #108]
 1349              	.L74:
 1350              	.LBB409:
1283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the Transmit Data Register Empty interrupt */
1286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 1351              		.loc 1 1286 5 discriminator 1
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 47


 1352 0070 FB68     		ldr	r3, [r7, #12]
 1353 0072 1B68     		ldr	r3, [r3]
 1354 0074 7B61     		str	r3, [r7, #20]
 1355              	.LBB410:
 1356              	.LBB411:
 1357              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 48


  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 49


 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 160:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 50


 166:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 168:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 51


 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 243:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 247:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 271:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 52


 280:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 282:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 303:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 331:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 53


 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 370:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 382:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 54


 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 406:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 412:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 55


 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 503:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 56


 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 518:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 542:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 544:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 548:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 557:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 57


 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 580:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 592:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 598:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 600:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 605:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 58


 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 626:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 666:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 671:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 675:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 59


 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 689:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 695:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 702:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 711:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 732:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 60


 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 752:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 755:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 766:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 778:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 787:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 61


 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 806:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 817:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 834:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 62


 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 861:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 872:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 873:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 879:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 883:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 888:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 890:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 896:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 897:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 898:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 899:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 900:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 901:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 902:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 906:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 63


 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 922:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 924:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 937:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 939:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 940:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 946:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 949:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 950:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 960:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 961:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 962:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 963:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 64


 964:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 965:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 967:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 968:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 969:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 971:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 972:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 975:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 976:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 977:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 978:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 979:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 980:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 982:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 984:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 985:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 986:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 987:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 991:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 992:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 993:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 994:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 995:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1000:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1001:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
1002:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1003:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1004:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1005:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1006:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1007:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1008:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1009:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1010:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1011:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CLZ             (uint8_t)__builtin_clz
1012:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1013:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1014:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1015:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1016:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1017:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1018:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1019:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
1020:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 65


1021:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1022:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1023:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1024:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
1025:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1026:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
1027:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1028:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1029:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
1030:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1031:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1032:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1033:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
1034:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1035:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1036:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1037:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1038:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1039:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1040:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1041:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
1042:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
1043:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1044:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1045:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1046:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
1047:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1048:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
1049:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1051:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
1052:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1053:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1054:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1055:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
1056:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1057:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1058:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1059:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1060:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1061:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1062:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1063:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
1064:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
1065:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1066:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1067:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
1069:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1070:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
1071:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 1358              		.loc 2 1072 4 discriminator 1
 1359 0076 7B69     		ldr	r3, [r7, #20]
 1360              		.syntax unified
 1361              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1362 0078 53E8003F 		ldrex r3, [r3]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 66


 1363              	@ 0 "" 2
 1364              		.thumb
 1365              		.syntax unified
 1366 007c 3B61     		str	r3, [r7, #16]
1073:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1367              		.loc 2 1073 10 discriminator 1
 1368 007e 3B69     		ldr	r3, [r7, #16]
 1369              	.LBE411:
 1370              	.LBE410:
 1371              		.loc 1 1286 5 discriminator 1
 1372 0080 43F08003 		orr	r3, r3, #128
 1373 0084 7B62     		str	r3, [r7, #36]
 1374 0086 FB68     		ldr	r3, [r7, #12]
 1375 0088 1B68     		ldr	r3, [r3]
 1376 008a 1A46     		mov	r2, r3
 1377 008c 7B6A     		ldr	r3, [r7, #36]
 1378 008e 3B62     		str	r3, [r7, #32]
 1379 0090 FA61     		str	r2, [r7, #28]
 1380              	.LBB412:
 1381              	.LBB413:
1074:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1075:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1076:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1077:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1078:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
1079:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
1080:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1081:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1082:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1083:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
1084:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1085:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
1086:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1087:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
1088:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1090:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
1091:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1092:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1093:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1094:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1095:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
1096:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
1097:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1098:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1099:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1100:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
1101:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1102:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
1103:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1104:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
1105:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1106:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1107:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
1108:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1109:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1110:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 67


1111:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1112:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
1113:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
1114:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1115:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1116:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1117:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
1118:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1119:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
1120:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1121:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
1122:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 1382              		.loc 2 1123 4 discriminator 1
 1383 0092 F969     		ldr	r1, [r7, #28]
 1384 0094 3A6A     		ldr	r2, [r7, #32]
 1385              		.syntax unified
 1386              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1387 0096 41E80023 		strex r3, r2, [r1]
 1388              	@ 0 "" 2
 1389              		.thumb
 1390              		.syntax unified
 1391 009a BB61     		str	r3, [r7, #24]
1124:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1392              		.loc 2 1124 10 discriminator 1
 1393 009c BB69     		ldr	r3, [r7, #24]
 1394              	.LBE413:
 1395              	.LBE412:
 1396              		.loc 1 1286 5 discriminator 1
 1397 009e 002B     		cmp	r3, #0
 1398 00a0 E6D1     		bne	.L74
 1399              	.LBE409:
1287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
 1400              		.loc 1 1288 12
 1401 00a2 0023     		movs	r3, #0
 1402 00a4 00E0     		b	.L69
 1403              	.L66:
1289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
1291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
 1404              		.loc 1 1292 12
 1405 00a6 0223     		movs	r3, #2
 1406              	.L69:
1293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 1407              		.loc 1 1294 1
 1408 00a8 1846     		mov	r0, r3
 1409 00aa 2C37     		adds	r7, r7, #44
 1410              	.LCFI50:
 1411              		.cfi_def_cfa_offset 4
 1412 00ac BD46     		mov	sp, r7
 1413              	.LCFI51:
 1414              		.cfi_def_cfa_register 13
 1415              		@ sp needed
 1416 00ae 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 68


 1417              	.LCFI52:
 1418              		.cfi_restore 7
 1419              		.cfi_def_cfa_offset 0
 1420 00b2 7047     		bx	lr
 1421              	.L76:
 1422              		.align	2
 1423              	.L75:
 1424 00b4 00000000 		.word	UART_TxISR_16BIT
 1425 00b8 00000000 		.word	UART_TxISR_8BIT
 1426              		.cfi_endproc
 1427              	.LFE150:
 1429              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 1430              		.align	1
 1431              		.global	HAL_UART_Receive_IT
 1432              		.syntax unified
 1433              		.thumb
 1434              		.thumb_func
 1436              	HAL_UART_Receive_IT:
 1437              	.LFB151:
1295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
1298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         of u16 available through pData.
1301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
1302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 1438              		.loc 1 1307 1
 1439              		.cfi_startproc
 1440              		@ args = 0, pretend = 0, frame = 40
 1441              		@ frame_needed = 1, uses_anonymous_args = 0
 1442 0000 80B5     		push	{r7, lr}
 1443              	.LCFI53:
 1444              		.cfi_def_cfa_offset 8
 1445              		.cfi_offset 7, -8
 1446              		.cfi_offset 14, -4
 1447 0002 8AB0     		sub	sp, sp, #40
 1448              	.LCFI54:
 1449              		.cfi_def_cfa_offset 48
 1450 0004 00AF     		add	r7, sp, #0
 1451              	.LCFI55:
 1452              		.cfi_def_cfa_register 7
 1453 0006 F860     		str	r0, [r7, #12]
 1454 0008 B960     		str	r1, [r7, #8]
 1455 000a 1346     		mov	r3, r2
 1456 000c FB80     		strh	r3, [r7, #6]	@ movhi
1308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1457              		.loc 1 1309 12
 1458 000e FB68     		ldr	r3, [r7, #12]
 1459 0010 D3F88030 		ldr	r3, [r3, #128]
 1460              		.loc 1 1309 6
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 69


 1461 0014 202B     		cmp	r3, #32
 1462 0016 32D1     		bne	.L78
1310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1463              		.loc 1 1311 8
 1464 0018 BB68     		ldr	r3, [r7, #8]
 1465 001a 002B     		cmp	r3, #0
 1466 001c 02D0     		beq	.L79
 1467              		.loc 1 1311 25 discriminator 1
 1468 001e FB88     		ldrh	r3, [r7, #6]
 1469 0020 002B     		cmp	r3, #0
 1470 0022 01D1     		bne	.L80
 1471              	.L79:
1312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_ERROR;
 1472              		.loc 1 1313 14
 1473 0024 0123     		movs	r3, #1
 1474 0026 2BE0     		b	.L81
 1475              	.L80:
1314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set Reception type to Standard reception */
1317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 1476              		.loc 1 1317 26
 1477 0028 FB68     		ldr	r3, [r7, #12]
 1478 002a 0022     		movs	r2, #0
 1479 002c 1A66     		str	r2, [r3, #96]
1318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Check that USART RTOEN bit is set */
1320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 1480              		.loc 1 1320 9
 1481 002e FB68     		ldr	r3, [r7, #12]
 1482 0030 1B68     		ldr	r3, [r3]
 1483 0032 5B68     		ldr	r3, [r3, #4]
 1484 0034 03F40003 		and	r3, r3, #8388608
 1485              		.loc 1 1320 8
 1486 0038 002B     		cmp	r3, #0
 1487 003a 18D0     		beq	.L82
 1488              	.L85:
 1489              	.LBB414:
1321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Enable the UART Receiver Timeout Interrupt */
1323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
 1490              		.loc 1 1323 7 discriminator 1
 1491 003c FB68     		ldr	r3, [r7, #12]
 1492 003e 1B68     		ldr	r3, [r3]
 1493 0040 7B61     		str	r3, [r7, #20]
 1494              	.LBB415:
 1495              	.LBB416:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1496              		.loc 2 1072 4 discriminator 1
 1497 0042 7B69     		ldr	r3, [r7, #20]
 1498              		.syntax unified
 1499              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1500 0044 53E8003F 		ldrex r3, [r3]
 1501              	@ 0 "" 2
 1502              		.thumb
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 70


 1503              		.syntax unified
 1504 0048 3B61     		str	r3, [r7, #16]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1505              		.loc 2 1073 10 discriminator 1
 1506 004a 3B69     		ldr	r3, [r7, #16]
 1507              	.LBE416:
 1508              	.LBE415:
 1509              		.loc 1 1323 7 discriminator 1
 1510 004c 43F08063 		orr	r3, r3, #67108864
 1511 0050 7B62     		str	r3, [r7, #36]
 1512 0052 FB68     		ldr	r3, [r7, #12]
 1513 0054 1B68     		ldr	r3, [r3]
 1514 0056 1A46     		mov	r2, r3
 1515 0058 7B6A     		ldr	r3, [r7, #36]
 1516 005a 3B62     		str	r3, [r7, #32]
 1517 005c FA61     		str	r2, [r7, #28]
 1518              	.LBB417:
 1519              	.LBB418:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1520              		.loc 2 1123 4 discriminator 1
 1521 005e F969     		ldr	r1, [r7, #28]
 1522 0060 3A6A     		ldr	r2, [r7, #32]
 1523              		.syntax unified
 1524              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1525 0062 41E80023 		strex r3, r2, [r1]
 1526              	@ 0 "" 2
 1527              		.thumb
 1528              		.syntax unified
 1529 0066 BB61     		str	r3, [r7, #24]
 1530              		.loc 2 1124 10 discriminator 1
 1531 0068 BB69     		ldr	r3, [r7, #24]
 1532              	.LBE418:
 1533              	.LBE417:
 1534              		.loc 1 1323 7 discriminator 1
 1535 006a 002B     		cmp	r3, #0
 1536 006c E6D1     		bne	.L85
 1537              	.L82:
 1538              	.LBE414:
1324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return (UART_Start_Receive_IT(huart, pData, Size));
 1539              		.loc 1 1326 13
 1540 006e FB88     		ldrh	r3, [r7, #6]
 1541 0070 1A46     		mov	r2, r3
 1542 0072 B968     		ldr	r1, [r7, #8]
 1543 0074 F868     		ldr	r0, [r7, #12]
 1544 0076 FFF7FEFF 		bl	UART_Start_Receive_IT
 1545 007a 0346     		mov	r3, r0
 1546 007c 00E0     		b	.L81
 1547              	.L78:
1327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
1329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
 1548              		.loc 1 1330 12
 1549 007e 0223     		movs	r3, #2
 1550              	.L81:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 71


1331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 1551              		.loc 1 1332 1
 1552 0080 1846     		mov	r0, r3
 1553 0082 2837     		adds	r7, r7, #40
 1554              	.LCFI56:
 1555              		.cfi_def_cfa_offset 8
 1556 0084 BD46     		mov	sp, r7
 1557              	.LCFI57:
 1558              		.cfi_def_cfa_register 13
 1559              		@ sp needed
 1560 0086 80BD     		pop	{r7, pc}
 1561              		.cfi_endproc
 1562              	.LFE151:
 1564              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1565              		.align	1
 1566              		.global	HAL_UART_Transmit_DMA
 1567              		.syntax unified
 1568              		.thumb
 1569              		.thumb_func
 1571              	HAL_UART_Transmit_DMA:
 1572              	.LFB152:
1333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
1336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         of u16 provided through pData.
1339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
1340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
1342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t S
1345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 1573              		.loc 1 1345 1
 1574              		.cfi_startproc
 1575              		@ args = 0, pretend = 0, frame = 40
 1576              		@ frame_needed = 1, uses_anonymous_args = 0
 1577 0000 80B5     		push	{r7, lr}
 1578              	.LCFI58:
 1579              		.cfi_def_cfa_offset 8
 1580              		.cfi_offset 7, -8
 1581              		.cfi_offset 14, -4
 1582 0002 8AB0     		sub	sp, sp, #40
 1583              	.LCFI59:
 1584              		.cfi_def_cfa_offset 48
 1585 0004 00AF     		add	r7, sp, #0
 1586              	.LCFI60:
 1587              		.cfi_def_cfa_register 7
 1588 0006 F860     		str	r0, [r7, #12]
 1589 0008 B960     		str	r1, [r7, #8]
 1590 000a 1346     		mov	r3, r2
 1591 000c FB80     		strh	r3, [r7, #6]	@ movhi
1346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 1592              		.loc 1 1347 12
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 72


 1593 000e FB68     		ldr	r3, [r7, #12]
 1594 0010 DB6F     		ldr	r3, [r3, #124]
 1595              		.loc 1 1347 6
 1596 0012 202B     		cmp	r3, #32
 1597 0014 65D1     		bne	.L87
1348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1598              		.loc 1 1349 8
 1599 0016 BB68     		ldr	r3, [r7, #8]
 1600 0018 002B     		cmp	r3, #0
 1601 001a 02D0     		beq	.L88
 1602              		.loc 1 1349 25 discriminator 1
 1603 001c FB88     		ldrh	r3, [r7, #6]
 1604 001e 002B     		cmp	r3, #0
 1605 0020 01D1     		bne	.L89
 1606              	.L88:
1350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_ERROR;
 1607              		.loc 1 1351 14
 1608 0022 0123     		movs	r3, #1
 1609 0024 5EE0     		b	.L90
 1610              	.L89:
1352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
 1611              		.loc 1 1354 24
 1612 0026 FB68     		ldr	r3, [r7, #12]
 1613 0028 BA68     		ldr	r2, [r7, #8]
 1614 002a DA64     		str	r2, [r3, #76]
1355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferSize  = Size;
 1615              		.loc 1 1355 24
 1616 002c FB68     		ldr	r3, [r7, #12]
 1617 002e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1618 0030 A3F85020 		strh	r2, [r3, #80]	@ movhi
1356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferCount = Size;
 1619              		.loc 1 1356 24
 1620 0034 FB68     		ldr	r3, [r7, #12]
 1621 0036 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1622 0038 A3F85220 		strh	r2, [r3, #82]	@ movhi
1357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1623              		.loc 1 1358 22
 1624 003c FB68     		ldr	r3, [r7, #12]
 1625 003e 0022     		movs	r2, #0
 1626 0040 C3F88420 		str	r2, [r3, #132]
1359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1627              		.loc 1 1359 19
 1628 0044 FB68     		ldr	r3, [r7, #12]
 1629 0046 2122     		movs	r2, #33
 1630 0048 DA67     		str	r2, [r3, #124]
1360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 1631              		.loc 1 1361 14
 1632 004a FB68     		ldr	r3, [r7, #12]
 1633 004c 1B6F     		ldr	r3, [r3, #112]
 1634              		.loc 1 1361 8
 1635 004e 002B     		cmp	r3, #0
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 73


 1636 0050 27D0     		beq	.L91
1362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Set the UART DMA transfer complete callback */
1364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 1637              		.loc 1 1364 12
 1638 0052 FB68     		ldr	r3, [r7, #12]
 1639 0054 1B6F     		ldr	r3, [r3, #112]
 1640              		.loc 1 1364 39
 1641 0056 254A     		ldr	r2, .L95
 1642 0058 DA63     		str	r2, [r3, #60]
1365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Set the UART DMA Half transfer complete callback */
1367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 1643              		.loc 1 1367 12
 1644 005a FB68     		ldr	r3, [r7, #12]
 1645 005c 1B6F     		ldr	r3, [r3, #112]
 1646              		.loc 1 1367 43
 1647 005e 244A     		ldr	r2, .L95+4
 1648 0060 1A64     		str	r2, [r3, #64]
1368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Set the DMA error callback */
1370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->hdmatx->XferErrorCallback = UART_DMAError;
 1649              		.loc 1 1370 12
 1650 0062 FB68     		ldr	r3, [r7, #12]
 1651 0064 1B6F     		ldr	r3, [r3, #112]
 1652              		.loc 1 1370 40
 1653 0066 234A     		ldr	r2, .L95+8
 1654 0068 DA64     		str	r2, [r3, #76]
1371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Set the DMA abort callback */
1373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 1655              		.loc 1 1373 12
 1656 006a FB68     		ldr	r3, [r7, #12]
 1657 006c 1B6F     		ldr	r3, [r3, #112]
 1658              		.loc 1 1373 40
 1659 006e 0022     		movs	r2, #0
 1660 0070 1A65     		str	r2, [r3, #80]
1374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Enable the UART transmit DMA channel */
1376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if (HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->
 1661              		.loc 1 1376 11
 1662 0072 FB68     		ldr	r3, [r7, #12]
 1663 0074 186F     		ldr	r0, [r3, #112]
 1664              		.loc 1 1376 58
 1665 0076 FB68     		ldr	r3, [r7, #12]
 1666 0078 DB6C     		ldr	r3, [r3, #76]
 1667              		.loc 1 1376 11
 1668 007a 1946     		mov	r1, r3
 1669              		.loc 1 1376 88
 1670 007c FB68     		ldr	r3, [r7, #12]
 1671 007e 1B68     		ldr	r3, [r3]
 1672              		.loc 1 1376 82
 1673 0080 2833     		adds	r3, r3, #40
 1674              		.loc 1 1376 11
 1675 0082 1A46     		mov	r2, r3
 1676 0084 FB88     		ldrh	r3, [r7, #6]
 1677 0086 FFF7FEFF 		bl	HAL_DMA_Start_IT
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 74


 1678 008a 0346     		mov	r3, r0
 1679              		.loc 1 1376 10
 1680 008c 002B     		cmp	r3, #0
 1681 008e 08D0     		beq	.L91
1377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Set error code to DMA */
1379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_DMA;
 1682              		.loc 1 1379 26
 1683 0090 FB68     		ldr	r3, [r7, #12]
 1684 0092 1022     		movs	r2, #16
 1685 0094 C3F88420 		str	r2, [r3, #132]
1380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Restore huart->gState to ready */
1382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
 1686              		.loc 1 1382 23
 1687 0098 FB68     		ldr	r3, [r7, #12]
 1688 009a 2022     		movs	r2, #32
 1689 009c DA67     		str	r2, [r3, #124]
1383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         return HAL_ERROR;
 1690              		.loc 1 1384 16
 1691 009e 0123     		movs	r3, #1
 1692 00a0 20E0     		b	.L90
 1693              	.L91:
1385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
1388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
 1694              		.loc 1 1388 5
 1695 00a2 FB68     		ldr	r3, [r7, #12]
 1696 00a4 1B68     		ldr	r3, [r3]
 1697 00a6 4022     		movs	r2, #64
 1698 00a8 1A62     		str	r2, [r3, #32]
 1699              	.L94:
 1700              	.LBB419:
1389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     in the UART CR3 register */
1392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1701              		.loc 1 1392 5 discriminator 1
 1702 00aa FB68     		ldr	r3, [r7, #12]
 1703 00ac 1B68     		ldr	r3, [r3]
 1704 00ae 0833     		adds	r3, r3, #8
 1705 00b0 7B61     		str	r3, [r7, #20]
 1706              	.LBB420:
 1707              	.LBB421:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1708              		.loc 2 1072 4 discriminator 1
 1709 00b2 7B69     		ldr	r3, [r7, #20]
 1710              		.syntax unified
 1711              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1712 00b4 53E8003F 		ldrex r3, [r3]
 1713              	@ 0 "" 2
 1714              		.thumb
 1715              		.syntax unified
 1716 00b8 3B61     		str	r3, [r7, #16]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 75


 1717              		.loc 2 1073 10 discriminator 1
 1718 00ba 3B69     		ldr	r3, [r7, #16]
 1719              	.LBE421:
 1720              	.LBE420:
 1721              		.loc 1 1392 5 discriminator 1
 1722 00bc 43F08003 		orr	r3, r3, #128
 1723 00c0 7B62     		str	r3, [r7, #36]
 1724 00c2 FB68     		ldr	r3, [r7, #12]
 1725 00c4 1B68     		ldr	r3, [r3]
 1726 00c6 0833     		adds	r3, r3, #8
 1727 00c8 7A6A     		ldr	r2, [r7, #36]
 1728 00ca 3A62     		str	r2, [r7, #32]
 1729 00cc FB61     		str	r3, [r7, #28]
 1730              	.LBB422:
 1731              	.LBB423:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1732              		.loc 2 1123 4 discriminator 1
 1733 00ce F969     		ldr	r1, [r7, #28]
 1734 00d0 3A6A     		ldr	r2, [r7, #32]
 1735              		.syntax unified
 1736              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1737 00d2 41E80023 		strex r3, r2, [r1]
 1738              	@ 0 "" 2
 1739              		.thumb
 1740              		.syntax unified
 1741 00d6 BB61     		str	r3, [r7, #24]
 1742              		.loc 2 1124 10 discriminator 1
 1743 00d8 BB69     		ldr	r3, [r7, #24]
 1744              	.LBE423:
 1745              	.LBE422:
 1746              		.loc 1 1392 5 discriminator 1
 1747 00da 002B     		cmp	r3, #0
 1748 00dc E5D1     		bne	.L94
 1749              	.LBE419:
1393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
 1750              		.loc 1 1394 12
 1751 00de 0023     		movs	r3, #0
 1752 00e0 00E0     		b	.L90
 1753              	.L87:
1395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
1397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
 1754              		.loc 1 1398 12
 1755 00e2 0223     		movs	r3, #2
 1756              	.L90:
1399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 1757              		.loc 1 1400 1
 1758 00e4 1846     		mov	r0, r3
 1759 00e6 2837     		adds	r7, r7, #40
 1760              	.LCFI61:
 1761              		.cfi_def_cfa_offset 8
 1762 00e8 BD46     		mov	sp, r7
 1763              	.LCFI62:
 1764              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 76


 1765              		@ sp needed
 1766 00ea 80BD     		pop	{r7, pc}
 1767              	.L96:
 1768              		.align	2
 1769              	.L95:
 1770 00ec 00000000 		.word	UART_DMATransmitCplt
 1771 00f0 00000000 		.word	UART_DMATxHalfCplt
 1772 00f4 00000000 		.word	UART_DMAError
 1773              		.cfi_endproc
 1774              	.LFE152:
 1776              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 1777              		.align	1
 1778              		.global	HAL_UART_Receive_DMA
 1779              		.syntax unified
 1780              		.thumb
 1781              		.thumb_func
 1783              	HAL_UART_Receive_DMA:
 1784              	.LFB153:
1401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         the parity bit (MSB position).
1406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         of u16 available through pData.
1409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
1410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 1785              		.loc 1 1415 1
 1786              		.cfi_startproc
 1787              		@ args = 0, pretend = 0, frame = 40
 1788              		@ frame_needed = 1, uses_anonymous_args = 0
 1789 0000 80B5     		push	{r7, lr}
 1790              	.LCFI63:
 1791              		.cfi_def_cfa_offset 8
 1792              		.cfi_offset 7, -8
 1793              		.cfi_offset 14, -4
 1794 0002 8AB0     		sub	sp, sp, #40
 1795              	.LCFI64:
 1796              		.cfi_def_cfa_offset 48
 1797 0004 00AF     		add	r7, sp, #0
 1798              	.LCFI65:
 1799              		.cfi_def_cfa_register 7
 1800 0006 F860     		str	r0, [r7, #12]
 1801 0008 B960     		str	r1, [r7, #8]
 1802 000a 1346     		mov	r3, r2
 1803 000c FB80     		strh	r3, [r7, #6]	@ movhi
1416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1804              		.loc 1 1417 12
 1805 000e FB68     		ldr	r3, [r7, #12]
 1806 0010 D3F88030 		ldr	r3, [r3, #128]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 77


 1807              		.loc 1 1417 6
 1808 0014 202B     		cmp	r3, #32
 1809 0016 32D1     		bne	.L98
1418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1810              		.loc 1 1419 8
 1811 0018 BB68     		ldr	r3, [r7, #8]
 1812 001a 002B     		cmp	r3, #0
 1813 001c 02D0     		beq	.L99
 1814              		.loc 1 1419 25 discriminator 1
 1815 001e FB88     		ldrh	r3, [r7, #6]
 1816 0020 002B     		cmp	r3, #0
 1817 0022 01D1     		bne	.L100
 1818              	.L99:
1420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_ERROR;
 1819              		.loc 1 1421 14
 1820 0024 0123     		movs	r3, #1
 1821 0026 2BE0     		b	.L101
 1822              	.L100:
1422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set Reception type to Standard reception */
1425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 1823              		.loc 1 1425 26
 1824 0028 FB68     		ldr	r3, [r7, #12]
 1825 002a 0022     		movs	r2, #0
 1826 002c 1A66     		str	r2, [r3, #96]
1426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Check that USART RTOEN bit is set */
1428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 1827              		.loc 1 1428 9
 1828 002e FB68     		ldr	r3, [r7, #12]
 1829 0030 1B68     		ldr	r3, [r3]
 1830 0032 5B68     		ldr	r3, [r3, #4]
 1831 0034 03F40003 		and	r3, r3, #8388608
 1832              		.loc 1 1428 8
 1833 0038 002B     		cmp	r3, #0
 1834 003a 18D0     		beq	.L102
 1835              	.L105:
 1836              	.LBB424:
1429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Enable the UART Receiver Timeout Interrupt */
1431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
 1837              		.loc 1 1431 7 discriminator 1
 1838 003c FB68     		ldr	r3, [r7, #12]
 1839 003e 1B68     		ldr	r3, [r3]
 1840 0040 7B61     		str	r3, [r7, #20]
 1841              	.LBB425:
 1842              	.LBB426:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1843              		.loc 2 1072 4 discriminator 1
 1844 0042 7B69     		ldr	r3, [r7, #20]
 1845              		.syntax unified
 1846              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1847 0044 53E8003F 		ldrex r3, [r3]
 1848              	@ 0 "" 2
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 78


 1849              		.thumb
 1850              		.syntax unified
 1851 0048 3B61     		str	r3, [r7, #16]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1852              		.loc 2 1073 10 discriminator 1
 1853 004a 3B69     		ldr	r3, [r7, #16]
 1854              	.LBE426:
 1855              	.LBE425:
 1856              		.loc 1 1431 7 discriminator 1
 1857 004c 43F08063 		orr	r3, r3, #67108864
 1858 0050 7B62     		str	r3, [r7, #36]
 1859 0052 FB68     		ldr	r3, [r7, #12]
 1860 0054 1B68     		ldr	r3, [r3]
 1861 0056 1A46     		mov	r2, r3
 1862 0058 7B6A     		ldr	r3, [r7, #36]
 1863 005a 3B62     		str	r3, [r7, #32]
 1864 005c FA61     		str	r2, [r7, #28]
 1865              	.LBB427:
 1866              	.LBB428:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1867              		.loc 2 1123 4 discriminator 1
 1868 005e F969     		ldr	r1, [r7, #28]
 1869 0060 3A6A     		ldr	r2, [r7, #32]
 1870              		.syntax unified
 1871              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1872 0062 41E80023 		strex r3, r2, [r1]
 1873              	@ 0 "" 2
 1874              		.thumb
 1875              		.syntax unified
 1876 0066 BB61     		str	r3, [r7, #24]
 1877              		.loc 2 1124 10 discriminator 1
 1878 0068 BB69     		ldr	r3, [r7, #24]
 1879              	.LBE428:
 1880              	.LBE427:
 1881              		.loc 1 1431 7 discriminator 1
 1882 006a 002B     		cmp	r3, #0
 1883 006c E6D1     		bne	.L105
 1884              	.L102:
 1885              	.LBE424:
1432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return (UART_Start_Receive_DMA(huart, pData, Size));
 1886              		.loc 1 1434 13
 1887 006e FB88     		ldrh	r3, [r7, #6]
 1888 0070 1A46     		mov	r2, r3
 1889 0072 B968     		ldr	r1, [r7, #8]
 1890 0074 F868     		ldr	r0, [r7, #12]
 1891 0076 FFF7FEFF 		bl	UART_Start_Receive_DMA
 1892 007a 0346     		mov	r3, r0
 1893 007c 00E0     		b	.L101
 1894              	.L98:
1435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
1437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
 1895              		.loc 1 1438 12
 1896 007e 0223     		movs	r3, #2
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 79


 1897              	.L101:
1439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 1898              		.loc 1 1440 1
 1899 0080 1846     		mov	r0, r3
 1900 0082 2837     		adds	r7, r7, #40
 1901              	.LCFI66:
 1902              		.cfi_def_cfa_offset 8
 1903 0084 BD46     		mov	sp, r7
 1904              	.LCFI67:
 1905              		.cfi_def_cfa_register 13
 1906              		@ sp needed
 1907 0086 80BD     		pop	{r7, pc}
 1908              		.cfi_endproc
 1909              	.LFE153:
 1911              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 1912              		.align	1
 1913              		.global	HAL_UART_DMAPause
 1914              		.syntax unified
 1915              		.thumb
 1916              		.thumb_func
 1918              	HAL_UART_DMAPause:
 1919              	.LFB154:
1441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
1444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
1445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 1920              		.loc 1 1448 1
 1921              		.cfi_startproc
 1922              		@ args = 0, pretend = 0, frame = 112
 1923              		@ frame_needed = 1, uses_anonymous_args = 0
 1924              		@ link register save eliminated.
 1925 0000 80B4     		push	{r7}
 1926              	.LCFI68:
 1927              		.cfi_def_cfa_offset 4
 1928              		.cfi_offset 7, -4
 1929 0002 9DB0     		sub	sp, sp, #116
 1930              	.LCFI69:
 1931              		.cfi_def_cfa_offset 120
 1932 0004 00AF     		add	r7, sp, #0
 1933              	.LCFI70:
 1934              		.cfi_def_cfa_register 7
 1935 0006 7860     		str	r0, [r7, #4]
1449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 1936              		.loc 1 1449 31
 1937 0008 7B68     		ldr	r3, [r7, #4]
 1938 000a DB6F     		ldr	r3, [r3, #124]
 1939 000c FB66     		str	r3, [r7, #108]
1450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 1940              		.loc 1 1450 31
 1941 000e 7B68     		ldr	r3, [r7, #4]
 1942 0010 D3F88030 		ldr	r3, [r3, #128]
 1943 0014 BB66     		str	r3, [r7, #104]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 80


1451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
 1944              		.loc 1 1452 8
 1945 0016 7B68     		ldr	r3, [r7, #4]
 1946 0018 1B68     		ldr	r3, [r3]
 1947 001a 9B68     		ldr	r3, [r3, #8]
 1948 001c 03F08003 		and	r3, r3, #128
 1949              		.loc 1 1452 6
 1950 0020 802B     		cmp	r3, #128
 1951 0022 1CD1     		bne	.L107
 1952              		.loc 1 1452 62 discriminator 1
 1953 0024 FB6E     		ldr	r3, [r7, #108]
 1954 0026 212B     		cmp	r3, #33
 1955 0028 19D1     		bne	.L107
 1956              	.L110:
 1957              	.LBB429:
1453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1958              		.loc 1 1456 5 discriminator 1
 1959 002a 7B68     		ldr	r3, [r7, #4]
 1960 002c 1B68     		ldr	r3, [r3]
 1961 002e 0833     		adds	r3, r3, #8
 1962 0030 BB64     		str	r3, [r7, #72]
 1963              	.LBB430:
 1964              	.LBB431:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1965              		.loc 2 1072 4 discriminator 1
 1966 0032 BB6C     		ldr	r3, [r7, #72]
 1967              		.syntax unified
 1968              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1969 0034 53E8003F 		ldrex r3, [r3]
 1970              	@ 0 "" 2
 1971              		.thumb
 1972              		.syntax unified
 1973 0038 7B64     		str	r3, [r7, #68]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1974              		.loc 2 1073 10 discriminator 1
 1975 003a 7B6C     		ldr	r3, [r7, #68]
 1976              	.LBE431:
 1977              	.LBE430:
 1978              		.loc 1 1456 5 discriminator 1
 1979 003c 23F08003 		bic	r3, r3, #128
 1980 0040 7B66     		str	r3, [r7, #100]
 1981 0042 7B68     		ldr	r3, [r7, #4]
 1982 0044 1B68     		ldr	r3, [r3]
 1983 0046 0833     		adds	r3, r3, #8
 1984 0048 7A6E     		ldr	r2, [r7, #100]
 1985 004a 7A65     		str	r2, [r7, #84]
 1986 004c 3B65     		str	r3, [r7, #80]
 1987              	.LBB432:
 1988              	.LBB433:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1989              		.loc 2 1123 4 discriminator 1
 1990 004e 396D     		ldr	r1, [r7, #80]
 1991 0050 7A6D     		ldr	r2, [r7, #84]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 81


 1992              		.syntax unified
 1993              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1994 0052 41E80023 		strex r3, r2, [r1]
 1995              	@ 0 "" 2
 1996              		.thumb
 1997              		.syntax unified
 1998 0056 FB64     		str	r3, [r7, #76]
 1999              		.loc 2 1124 10 discriminator 1
 2000 0058 FB6C     		ldr	r3, [r7, #76]
 2001              	.LBE433:
 2002              	.LBE432:
 2003              		.loc 1 1456 5 discriminator 1
 2004 005a 002B     		cmp	r3, #0
 2005 005c E5D1     		bne	.L110
 2006              	.L107:
 2007              	.LBE429:
1457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
 2008              		.loc 1 1458 8
 2009 005e 7B68     		ldr	r3, [r7, #4]
 2010 0060 1B68     		ldr	r3, [r3]
 2011 0062 9B68     		ldr	r3, [r3, #8]
 2012 0064 03F04003 		and	r3, r3, #64
 2013              		.loc 1 1458 6
 2014 0068 402B     		cmp	r3, #64
 2015 006a 4FD1     		bne	.L111
 2016              		.loc 1 1458 62 discriminator 1
 2017 006c BB6E     		ldr	r3, [r7, #104]
 2018 006e 222B     		cmp	r3, #34
 2019 0070 4CD1     		bne	.L111
 2020              	.L114:
 2021              	.LBB434:
1459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2022              		.loc 1 1462 5 discriminator 1
 2023 0072 7B68     		ldr	r3, [r7, #4]
 2024 0074 1B68     		ldr	r3, [r3]
 2025 0076 7B63     		str	r3, [r7, #52]
 2026              	.LBB435:
 2027              	.LBB436:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2028              		.loc 2 1072 4 discriminator 1
 2029 0078 7B6B     		ldr	r3, [r7, #52]
 2030              		.syntax unified
 2031              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2032 007a 53E8003F 		ldrex r3, [r3]
 2033              	@ 0 "" 2
 2034              		.thumb
 2035              		.syntax unified
 2036 007e 3B63     		str	r3, [r7, #48]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2037              		.loc 2 1073 10 discriminator 1
 2038 0080 3B6B     		ldr	r3, [r7, #48]
 2039              	.LBE436:
 2040              	.LBE435:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 82


 2041              		.loc 1 1462 5 discriminator 1
 2042 0082 23F48073 		bic	r3, r3, #256
 2043 0086 3B66     		str	r3, [r7, #96]
 2044 0088 7B68     		ldr	r3, [r7, #4]
 2045 008a 1B68     		ldr	r3, [r3]
 2046 008c 1A46     		mov	r2, r3
 2047 008e 3B6E     		ldr	r3, [r7, #96]
 2048 0090 3B64     		str	r3, [r7, #64]
 2049 0092 FA63     		str	r2, [r7, #60]
 2050              	.LBB437:
 2051              	.LBB438:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2052              		.loc 2 1123 4 discriminator 1
 2053 0094 F96B     		ldr	r1, [r7, #60]
 2054 0096 3A6C     		ldr	r2, [r7, #64]
 2055              		.syntax unified
 2056              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2057 0098 41E80023 		strex r3, r2, [r1]
 2058              	@ 0 "" 2
 2059              		.thumb
 2060              		.syntax unified
 2061 009c BB63     		str	r3, [r7, #56]
 2062              		.loc 2 1124 10 discriminator 1
 2063 009e BB6B     		ldr	r3, [r7, #56]
 2064              	.LBE438:
 2065              	.LBE437:
 2066              		.loc 1 1462 5 discriminator 1
 2067 00a0 002B     		cmp	r3, #0
 2068 00a2 E6D1     		bne	.L114
 2069              	.L117:
 2070              	.LBE434:
 2071              	.LBB439:
1463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2072              		.loc 1 1463 5 discriminator 1
 2073 00a4 7B68     		ldr	r3, [r7, #4]
 2074 00a6 1B68     		ldr	r3, [r3]
 2075 00a8 0833     		adds	r3, r3, #8
 2076 00aa 3B62     		str	r3, [r7, #32]
 2077              	.LBB440:
 2078              	.LBB441:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2079              		.loc 2 1072 4 discriminator 1
 2080 00ac 3B6A     		ldr	r3, [r7, #32]
 2081              		.syntax unified
 2082              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2083 00ae 53E8003F 		ldrex r3, [r3]
 2084              	@ 0 "" 2
 2085              		.thumb
 2086              		.syntax unified
 2087 00b2 FB61     		str	r3, [r7, #28]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2088              		.loc 2 1073 10 discriminator 1
 2089 00b4 FB69     		ldr	r3, [r7, #28]
 2090              	.LBE441:
 2091              	.LBE440:
 2092              		.loc 1 1463 5 discriminator 1
 2093 00b6 23F00103 		bic	r3, r3, #1
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 83


 2094 00ba FB65     		str	r3, [r7, #92]
 2095 00bc 7B68     		ldr	r3, [r7, #4]
 2096 00be 1B68     		ldr	r3, [r3]
 2097 00c0 0833     		adds	r3, r3, #8
 2098 00c2 FA6D     		ldr	r2, [r7, #92]
 2099 00c4 FA62     		str	r2, [r7, #44]
 2100 00c6 BB62     		str	r3, [r7, #40]
 2101              	.LBB442:
 2102              	.LBB443:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2103              		.loc 2 1123 4 discriminator 1
 2104 00c8 B96A     		ldr	r1, [r7, #40]
 2105 00ca FA6A     		ldr	r2, [r7, #44]
 2106              		.syntax unified
 2107              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2108 00cc 41E80023 		strex r3, r2, [r1]
 2109              	@ 0 "" 2
 2110              		.thumb
 2111              		.syntax unified
 2112 00d0 7B62     		str	r3, [r7, #36]
 2113              		.loc 2 1124 10 discriminator 1
 2114 00d2 7B6A     		ldr	r3, [r7, #36]
 2115              	.LBE443:
 2116              	.LBE442:
 2117              		.loc 1 1463 5 discriminator 1
 2118 00d4 002B     		cmp	r3, #0
 2119 00d6 E5D1     		bne	.L117
 2120              	.L120:
 2121              	.LBE439:
 2122              	.LBB444:
1464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2123              		.loc 1 1466 5 discriminator 1
 2124 00d8 7B68     		ldr	r3, [r7, #4]
 2125 00da 1B68     		ldr	r3, [r3]
 2126 00dc 0833     		adds	r3, r3, #8
 2127 00de FB60     		str	r3, [r7, #12]
 2128              	.LBB445:
 2129              	.LBB446:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2130              		.loc 2 1072 4 discriminator 1
 2131 00e0 FB68     		ldr	r3, [r7, #12]
 2132              		.syntax unified
 2133              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2134 00e2 53E8003F 		ldrex r3, [r3]
 2135              	@ 0 "" 2
 2136              		.thumb
 2137              		.syntax unified
 2138 00e6 BB60     		str	r3, [r7, #8]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2139              		.loc 2 1073 10 discriminator 1
 2140 00e8 BB68     		ldr	r3, [r7, #8]
 2141              	.LBE446:
 2142              	.LBE445:
 2143              		.loc 1 1466 5 discriminator 1
 2144 00ea 23F04003 		bic	r3, r3, #64
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 84


 2145 00ee BB65     		str	r3, [r7, #88]
 2146 00f0 7B68     		ldr	r3, [r7, #4]
 2147 00f2 1B68     		ldr	r3, [r3]
 2148 00f4 0833     		adds	r3, r3, #8
 2149 00f6 BA6D     		ldr	r2, [r7, #88]
 2150 00f8 BA61     		str	r2, [r7, #24]
 2151 00fa 7B61     		str	r3, [r7, #20]
 2152              	.LBB447:
 2153              	.LBB448:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2154              		.loc 2 1123 4 discriminator 1
 2155 00fc 7969     		ldr	r1, [r7, #20]
 2156 00fe BA69     		ldr	r2, [r7, #24]
 2157              		.syntax unified
 2158              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2159 0100 41E80023 		strex r3, r2, [r1]
 2160              	@ 0 "" 2
 2161              		.thumb
 2162              		.syntax unified
 2163 0104 3B61     		str	r3, [r7, #16]
 2164              		.loc 2 1124 10 discriminator 1
 2165 0106 3B69     		ldr	r3, [r7, #16]
 2166              	.LBE448:
 2167              	.LBE447:
 2168              		.loc 1 1466 5 discriminator 1
 2169 0108 002B     		cmp	r3, #0
 2170 010a E5D1     		bne	.L120
 2171              	.L111:
 2172              	.LBE444:
1467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 2173              		.loc 1 1469 10
 2174 010c 0023     		movs	r3, #0
1470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 2175              		.loc 1 1470 1
 2176 010e 1846     		mov	r0, r3
 2177 0110 7437     		adds	r7, r7, #116
 2178              	.LCFI71:
 2179              		.cfi_def_cfa_offset 4
 2180 0112 BD46     		mov	sp, r7
 2181              	.LCFI72:
 2182              		.cfi_def_cfa_register 13
 2183              		@ sp needed
 2184 0114 5DF8047B 		ldr	r7, [sp], #4
 2185              	.LCFI73:
 2186              		.cfi_restore 7
 2187              		.cfi_def_cfa_offset 0
 2188 0118 7047     		bx	lr
 2189              		.cfi_endproc
 2190              	.LFE154:
 2192              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 2193              		.align	1
 2194              		.global	HAL_UART_DMAResume
 2195              		.syntax unified
 2196              		.thumb
 2197              		.thumb_func
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 85


 2199              	HAL_UART_DMAResume:
 2200              	.LFB155:
1471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
1475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 2201              		.loc 1 1478 1
 2202              		.cfi_startproc
 2203              		@ args = 0, pretend = 0, frame = 104
 2204              		@ frame_needed = 1, uses_anonymous_args = 0
 2205              		@ link register save eliminated.
 2206 0000 80B4     		push	{r7}
 2207              	.LCFI74:
 2208              		.cfi_def_cfa_offset 4
 2209              		.cfi_offset 7, -4
 2210 0002 9BB0     		sub	sp, sp, #108
 2211              	.LCFI75:
 2212              		.cfi_def_cfa_offset 112
 2213 0004 00AF     		add	r7, sp, #0
 2214              	.LCFI76:
 2215              		.cfi_def_cfa_register 7
 2216 0006 7860     		str	r0, [r7, #4]
1479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 2217              		.loc 1 1479 12
 2218 0008 7B68     		ldr	r3, [r7, #4]
 2219 000a DB6F     		ldr	r3, [r3, #124]
 2220              		.loc 1 1479 6
 2221 000c 212B     		cmp	r3, #33
 2222 000e 19D1     		bne	.L123
 2223              	.L126:
 2224              	.LBB449:
1480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2225              		.loc 1 1482 5 discriminator 1
 2226 0010 7B68     		ldr	r3, [r7, #4]
 2227 0012 1B68     		ldr	r3, [r3]
 2228 0014 0833     		adds	r3, r3, #8
 2229 0016 BB64     		str	r3, [r7, #72]
 2230              	.LBB450:
 2231              	.LBB451:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2232              		.loc 2 1072 4 discriminator 1
 2233 0018 BB6C     		ldr	r3, [r7, #72]
 2234              		.syntax unified
 2235              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2236 001a 53E8003F 		ldrex r3, [r3]
 2237              	@ 0 "" 2
 2238              		.thumb
 2239              		.syntax unified
 2240 001e 7B64     		str	r3, [r7, #68]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2241              		.loc 2 1073 10 discriminator 1
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 86


 2242 0020 7B6C     		ldr	r3, [r7, #68]
 2243              	.LBE451:
 2244              	.LBE450:
 2245              		.loc 1 1482 5 discriminator 1
 2246 0022 43F08003 		orr	r3, r3, #128
 2247 0026 7B66     		str	r3, [r7, #100]
 2248 0028 7B68     		ldr	r3, [r7, #4]
 2249 002a 1B68     		ldr	r3, [r3]
 2250 002c 0833     		adds	r3, r3, #8
 2251 002e 7A6E     		ldr	r2, [r7, #100]
 2252 0030 7A65     		str	r2, [r7, #84]
 2253 0032 3B65     		str	r3, [r7, #80]
 2254              	.LBB452:
 2255              	.LBB453:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2256              		.loc 2 1123 4 discriminator 1
 2257 0034 396D     		ldr	r1, [r7, #80]
 2258 0036 7A6D     		ldr	r2, [r7, #84]
 2259              		.syntax unified
 2260              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2261 0038 41E80023 		strex r3, r2, [r1]
 2262              	@ 0 "" 2
 2263              		.thumb
 2264              		.syntax unified
 2265 003c FB64     		str	r3, [r7, #76]
 2266              		.loc 2 1124 10 discriminator 1
 2267 003e FB6C     		ldr	r3, [r7, #76]
 2268              	.LBE453:
 2269              	.LBE452:
 2270              		.loc 1 1482 5 discriminator 1
 2271 0040 002B     		cmp	r3, #0
 2272 0042 E5D1     		bne	.L126
 2273              	.L123:
 2274              	.LBE449:
1483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 2275              		.loc 1 1484 12
 2276 0044 7B68     		ldr	r3, [r7, #4]
 2277 0046 D3F88030 		ldr	r3, [r3, #128]
 2278              		.loc 1 1484 6
 2279 004a 222B     		cmp	r3, #34
 2280 004c 54D1     		bne	.L127
1485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
1487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 2281              		.loc 1 1487 5
 2282 004e 7B68     		ldr	r3, [r7, #4]
 2283 0050 1B68     		ldr	r3, [r3]
 2284 0052 0822     		movs	r2, #8
 2285 0054 1A62     		str	r2, [r3, #32]
1488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Re-enable PE and ERR (Frame error, noise error, overrun error) interrupts */
1490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if (huart->Init.Parity != UART_PARITY_NONE)
 2286              		.loc 1 1490 20
 2287 0056 7B68     		ldr	r3, [r7, #4]
 2288 0058 1B69     		ldr	r3, [r3, #16]
 2289              		.loc 1 1490 8
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 87


 2290 005a 002B     		cmp	r3, #0
 2291 005c 18D0     		beq	.L134
 2292              	.L131:
 2293              	.LBB454:
1491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2294              		.loc 1 1492 7 discriminator 1
 2295 005e 7B68     		ldr	r3, [r7, #4]
 2296 0060 1B68     		ldr	r3, [r3]
 2297 0062 7B63     		str	r3, [r7, #52]
 2298              	.LBB455:
 2299              	.LBB456:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2300              		.loc 2 1072 4 discriminator 1
 2301 0064 7B6B     		ldr	r3, [r7, #52]
 2302              		.syntax unified
 2303              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2304 0066 53E8003F 		ldrex r3, [r3]
 2305              	@ 0 "" 2
 2306              		.thumb
 2307              		.syntax unified
 2308 006a 3B63     		str	r3, [r7, #48]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2309              		.loc 2 1073 10 discriminator 1
 2310 006c 3B6B     		ldr	r3, [r7, #48]
 2311              	.LBE456:
 2312              	.LBE455:
 2313              		.loc 1 1492 7 discriminator 1
 2314 006e 43F48073 		orr	r3, r3, #256
 2315 0072 3B66     		str	r3, [r7, #96]
 2316 0074 7B68     		ldr	r3, [r7, #4]
 2317 0076 1B68     		ldr	r3, [r3]
 2318 0078 1A46     		mov	r2, r3
 2319 007a 3B6E     		ldr	r3, [r7, #96]
 2320 007c 3B64     		str	r3, [r7, #64]
 2321 007e FA63     		str	r2, [r7, #60]
 2322              	.LBB457:
 2323              	.LBB458:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2324              		.loc 2 1123 4 discriminator 1
 2325 0080 F96B     		ldr	r1, [r7, #60]
 2326 0082 3A6C     		ldr	r2, [r7, #64]
 2327              		.syntax unified
 2328              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2329 0084 41E80023 		strex r3, r2, [r1]
 2330              	@ 0 "" 2
 2331              		.thumb
 2332              		.syntax unified
 2333 0088 BB63     		str	r3, [r7, #56]
 2334              		.loc 2 1124 10 discriminator 1
 2335 008a BB6B     		ldr	r3, [r7, #56]
 2336              	.LBE458:
 2337              	.LBE457:
 2338              		.loc 1 1492 7 discriminator 1
 2339 008c 002B     		cmp	r3, #0
 2340 008e E6D1     		bne	.L131
 2341              	.L134:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 88


 2342              	.LBE454:
 2343              	.LBB459:
1493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2344              		.loc 1 1494 5 discriminator 1
 2345 0090 7B68     		ldr	r3, [r7, #4]
 2346 0092 1B68     		ldr	r3, [r3]
 2347 0094 0833     		adds	r3, r3, #8
 2348 0096 3B62     		str	r3, [r7, #32]
 2349              	.LBB460:
 2350              	.LBB461:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2351              		.loc 2 1072 4 discriminator 1
 2352 0098 3B6A     		ldr	r3, [r7, #32]
 2353              		.syntax unified
 2354              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2355 009a 53E8003F 		ldrex r3, [r3]
 2356              	@ 0 "" 2
 2357              		.thumb
 2358              		.syntax unified
 2359 009e FB61     		str	r3, [r7, #28]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2360              		.loc 2 1073 10 discriminator 1
 2361 00a0 FB69     		ldr	r3, [r7, #28]
 2362              	.LBE461:
 2363              	.LBE460:
 2364              		.loc 1 1494 5 discriminator 1
 2365 00a2 43F00103 		orr	r3, r3, #1
 2366 00a6 FB65     		str	r3, [r7, #92]
 2367 00a8 7B68     		ldr	r3, [r7, #4]
 2368 00aa 1B68     		ldr	r3, [r3]
 2369 00ac 0833     		adds	r3, r3, #8
 2370 00ae FA6D     		ldr	r2, [r7, #92]
 2371 00b0 FA62     		str	r2, [r7, #44]
 2372 00b2 BB62     		str	r3, [r7, #40]
 2373              	.LBB462:
 2374              	.LBB463:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2375              		.loc 2 1123 4 discriminator 1
 2376 00b4 B96A     		ldr	r1, [r7, #40]
 2377 00b6 FA6A     		ldr	r2, [r7, #44]
 2378              		.syntax unified
 2379              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2380 00b8 41E80023 		strex r3, r2, [r1]
 2381              	@ 0 "" 2
 2382              		.thumb
 2383              		.syntax unified
 2384 00bc 7B62     		str	r3, [r7, #36]
 2385              		.loc 2 1124 10 discriminator 1
 2386 00be 7B6A     		ldr	r3, [r7, #36]
 2387              	.LBE463:
 2388              	.LBE462:
 2389              		.loc 1 1494 5 discriminator 1
 2390 00c0 002B     		cmp	r3, #0
 2391 00c2 E5D1     		bne	.L134
 2392              	.L137:
 2393              	.LBE459:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 89


 2394              	.LBB464:
1495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2395              		.loc 1 1497 5 discriminator 1
 2396 00c4 7B68     		ldr	r3, [r7, #4]
 2397 00c6 1B68     		ldr	r3, [r3]
 2398 00c8 0833     		adds	r3, r3, #8
 2399 00ca FB60     		str	r3, [r7, #12]
 2400              	.LBB465:
 2401              	.LBB466:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2402              		.loc 2 1072 4 discriminator 1
 2403 00cc FB68     		ldr	r3, [r7, #12]
 2404              		.syntax unified
 2405              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2406 00ce 53E8003F 		ldrex r3, [r3]
 2407              	@ 0 "" 2
 2408              		.thumb
 2409              		.syntax unified
 2410 00d2 BB60     		str	r3, [r7, #8]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2411              		.loc 2 1073 10 discriminator 1
 2412 00d4 BB68     		ldr	r3, [r7, #8]
 2413              	.LBE466:
 2414              	.LBE465:
 2415              		.loc 1 1497 5 discriminator 1
 2416 00d6 43F04003 		orr	r3, r3, #64
 2417 00da BB65     		str	r3, [r7, #88]
 2418 00dc 7B68     		ldr	r3, [r7, #4]
 2419 00de 1B68     		ldr	r3, [r3]
 2420 00e0 0833     		adds	r3, r3, #8
 2421 00e2 BA6D     		ldr	r2, [r7, #88]
 2422 00e4 BA61     		str	r2, [r7, #24]
 2423 00e6 7B61     		str	r3, [r7, #20]
 2424              	.LBB467:
 2425              	.LBB468:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2426              		.loc 2 1123 4 discriminator 1
 2427 00e8 7969     		ldr	r1, [r7, #20]
 2428 00ea BA69     		ldr	r2, [r7, #24]
 2429              		.syntax unified
 2430              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2431 00ec 41E80023 		strex r3, r2, [r1]
 2432              	@ 0 "" 2
 2433              		.thumb
 2434              		.syntax unified
 2435 00f0 3B61     		str	r3, [r7, #16]
 2436              		.loc 2 1124 10 discriminator 1
 2437 00f2 3B69     		ldr	r3, [r7, #16]
 2438              	.LBE468:
 2439              	.LBE467:
 2440              		.loc 1 1497 5 discriminator 1
 2441 00f4 002B     		cmp	r3, #0
 2442 00f6 E5D1     		bne	.L137
 2443              	.L127:
 2444              	.LBE464:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 90


1498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 2445              		.loc 1 1500 10
 2446 00f8 0023     		movs	r3, #0
1501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 2447              		.loc 1 1501 1
 2448 00fa 1846     		mov	r0, r3
 2449 00fc 6C37     		adds	r7, r7, #108
 2450              	.LCFI77:
 2451              		.cfi_def_cfa_offset 4
 2452 00fe BD46     		mov	sp, r7
 2453              	.LCFI78:
 2454              		.cfi_def_cfa_register 13
 2455              		@ sp needed
 2456 0100 5DF8047B 		ldr	r7, [sp], #4
 2457              	.LCFI79:
 2458              		.cfi_restore 7
 2459              		.cfi_def_cfa_offset 0
 2460 0104 7047     		bx	lr
 2461              		.cfi_endproc
 2462              	.LFE155:
 2464              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 2465              		.align	1
 2466              		.global	HAL_UART_DMAStop
 2467              		.syntax unified
 2468              		.thumb
 2469              		.thumb_func
 2471              	HAL_UART_DMAStop:
 2472              	.LFB156:
1502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
1506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 2473              		.loc 1 1509 1
 2474              		.cfi_startproc
 2475              		@ args = 0, pretend = 0, frame = 64
 2476              		@ frame_needed = 1, uses_anonymous_args = 0
 2477 0000 80B5     		push	{r7, lr}
 2478              	.LCFI80:
 2479              		.cfi_def_cfa_offset 8
 2480              		.cfi_offset 7, -8
 2481              		.cfi_offset 14, -4
 2482 0002 90B0     		sub	sp, sp, #64
 2483              	.LCFI81:
 2484              		.cfi_def_cfa_offset 72
 2485 0004 00AF     		add	r7, sp, #0
 2486              	.LCFI82:
 2487              		.cfi_def_cfa_register 7
 2488 0006 7860     		str	r0, [r7, #4]
1510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 91


1513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete
1514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of
1515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 2489              		.loc 1 1517 31
 2490 0008 7B68     		ldr	r3, [r7, #4]
 2491 000a DB6F     		ldr	r3, [r3, #124]
 2492 000c FB63     		str	r3, [r7, #60]
1518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 2493              		.loc 1 1518 31
 2494 000e 7B68     		ldr	r3, [r7, #4]
 2495 0010 D3F88030 		ldr	r3, [r3, #128]
 2496 0014 BB63     		str	r3, [r7, #56]
1519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
 2497              		.loc 1 1521 8
 2498 0016 7B68     		ldr	r3, [r7, #4]
 2499 0018 1B68     		ldr	r3, [r3]
 2500 001a 9B68     		ldr	r3, [r3, #8]
 2501 001c 03F08003 		and	r3, r3, #128
 2502              		.loc 1 1521 6
 2503 0020 802B     		cmp	r3, #128
 2504 0022 39D1     		bne	.L140
 2505              		.loc 1 1521 62 discriminator 1
 2506 0024 FB6B     		ldr	r3, [r7, #60]
 2507 0026 212B     		cmp	r3, #33
 2508 0028 36D1     		bne	.L140
 2509              	.L143:
 2510              	.LBB469:
1522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2511              		.loc 1 1524 5 discriminator 1
 2512 002a 7B68     		ldr	r3, [r7, #4]
 2513 002c 1B68     		ldr	r3, [r3]
 2514 002e 0833     		adds	r3, r3, #8
 2515 0030 3B62     		str	r3, [r7, #32]
 2516              	.LBB470:
 2517              	.LBB471:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2518              		.loc 2 1072 4 discriminator 1
 2519 0032 3B6A     		ldr	r3, [r7, #32]
 2520              		.syntax unified
 2521              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2522 0034 53E8003F 		ldrex r3, [r3]
 2523              	@ 0 "" 2
 2524              		.thumb
 2525              		.syntax unified
 2526 0038 FB61     		str	r3, [r7, #28]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2527              		.loc 2 1073 10 discriminator 1
 2528 003a FB69     		ldr	r3, [r7, #28]
 2529              	.LBE471:
 2530              	.LBE470:
 2531              		.loc 1 1524 5 discriminator 1
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 92


 2532 003c 23F08003 		bic	r3, r3, #128
 2533 0040 7B63     		str	r3, [r7, #52]
 2534 0042 7B68     		ldr	r3, [r7, #4]
 2535 0044 1B68     		ldr	r3, [r3]
 2536 0046 0833     		adds	r3, r3, #8
 2537 0048 7A6B     		ldr	r2, [r7, #52]
 2538 004a FA62     		str	r2, [r7, #44]
 2539 004c BB62     		str	r3, [r7, #40]
 2540              	.LBB472:
 2541              	.LBB473:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2542              		.loc 2 1123 4 discriminator 1
 2543 004e B96A     		ldr	r1, [r7, #40]
 2544 0050 FA6A     		ldr	r2, [r7, #44]
 2545              		.syntax unified
 2546              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2547 0052 41E80023 		strex r3, r2, [r1]
 2548              	@ 0 "" 2
 2549              		.thumb
 2550              		.syntax unified
 2551 0056 7B62     		str	r3, [r7, #36]
 2552              		.loc 2 1124 10 discriminator 1
 2553 0058 7B6A     		ldr	r3, [r7, #36]
 2554              	.LBE473:
 2555              	.LBE472:
 2556              		.loc 1 1524 5 discriminator 1
 2557 005a 002B     		cmp	r3, #0
 2558 005c E5D1     		bne	.L143
 2559              	.LBE469:
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2560              		.loc 1 1527 14
 2561 005e 7B68     		ldr	r3, [r7, #4]
 2562 0060 1B6F     		ldr	r3, [r3, #112]
 2563              		.loc 1 1527 8
 2564 0062 002B     		cmp	r3, #0
 2565 0064 15D0     		beq	.L144
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 2566              		.loc 1 1529 11
 2567 0066 7B68     		ldr	r3, [r7, #4]
 2568 0068 1B6F     		ldr	r3, [r3, #112]
 2569 006a 1846     		mov	r0, r3
 2570 006c FFF7FEFF 		bl	HAL_DMA_Abort
 2571 0070 0346     		mov	r3, r0
 2572              		.loc 1 1529 10
 2573 0072 002B     		cmp	r3, #0
 2574 0074 0DD0     		beq	.L144
1530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 2575              		.loc 1 1531 13
 2576 0076 7B68     		ldr	r3, [r7, #4]
 2577 0078 1B6F     		ldr	r3, [r3, #112]
 2578 007a 1846     		mov	r0, r3
 2579 007c FFF7FEFF 		bl	HAL_DMA_GetError
 2580 0080 0346     		mov	r3, r0
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 93


 2581              		.loc 1 1531 12
 2582 0082 202B     		cmp	r3, #32
 2583 0084 05D1     		bne	.L144
1532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         {
1533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           /* Set error code to DMA */
1534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2584              		.loc 1 1534 28
 2585 0086 7B68     		ldr	r3, [r7, #4]
 2586 0088 1022     		movs	r2, #16
 2587 008a C3F88420 		str	r2, [r3, #132]
1535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           return HAL_TIMEOUT;
 2588              		.loc 1 1536 18
 2589 008e 0323     		movs	r3, #3
 2590 0090 44E0     		b	.L145
 2591              	.L144:
1537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         }
1538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2592              		.loc 1 1541 5
 2593 0092 7868     		ldr	r0, [r7, #4]
 2594 0094 FFF7FEFF 		bl	UART_EndTxTransfer
 2595              	.L140:
1542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
 2596              		.loc 1 1545 8
 2597 0098 7B68     		ldr	r3, [r7, #4]
 2598 009a 1B68     		ldr	r3, [r3]
 2599 009c 9B68     		ldr	r3, [r3, #8]
 2600 009e 03F04003 		and	r3, r3, #64
 2601              		.loc 1 1545 6
 2602 00a2 402B     		cmp	r3, #64
 2603 00a4 39D1     		bne	.L146
 2604              		.loc 1 1545 62 discriminator 1
 2605 00a6 BB6B     		ldr	r3, [r7, #56]
 2606 00a8 222B     		cmp	r3, #34
 2607 00aa 36D1     		bne	.L146
 2608              	.L149:
 2609              	.LBB474:
1546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2610              		.loc 1 1548 5 discriminator 1
 2611 00ac 7B68     		ldr	r3, [r7, #4]
 2612 00ae 1B68     		ldr	r3, [r3]
 2613 00b0 0833     		adds	r3, r3, #8
 2614 00b2 FB60     		str	r3, [r7, #12]
 2615              	.LBB475:
 2616              	.LBB476:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2617              		.loc 2 1072 4 discriminator 1
 2618 00b4 FB68     		ldr	r3, [r7, #12]
 2619              		.syntax unified
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 94


 2620              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2621 00b6 53E8003F 		ldrex r3, [r3]
 2622              	@ 0 "" 2
 2623              		.thumb
 2624              		.syntax unified
 2625 00ba BB60     		str	r3, [r7, #8]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2626              		.loc 2 1073 10 discriminator 1
 2627 00bc BB68     		ldr	r3, [r7, #8]
 2628              	.LBE476:
 2629              	.LBE475:
 2630              		.loc 1 1548 5 discriminator 1
 2631 00be 23F04003 		bic	r3, r3, #64
 2632 00c2 3B63     		str	r3, [r7, #48]
 2633 00c4 7B68     		ldr	r3, [r7, #4]
 2634 00c6 1B68     		ldr	r3, [r3]
 2635 00c8 0833     		adds	r3, r3, #8
 2636 00ca 3A6B     		ldr	r2, [r7, #48]
 2637 00cc BA61     		str	r2, [r7, #24]
 2638 00ce 7B61     		str	r3, [r7, #20]
 2639              	.LBB477:
 2640              	.LBB478:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2641              		.loc 2 1123 4 discriminator 1
 2642 00d0 7969     		ldr	r1, [r7, #20]
 2643 00d2 BA69     		ldr	r2, [r7, #24]
 2644              		.syntax unified
 2645              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2646 00d4 41E80023 		strex r3, r2, [r1]
 2647              	@ 0 "" 2
 2648              		.thumb
 2649              		.syntax unified
 2650 00d8 3B61     		str	r3, [r7, #16]
 2651              		.loc 2 1124 10 discriminator 1
 2652 00da 3B69     		ldr	r3, [r7, #16]
 2653              	.LBE478:
 2654              	.LBE477:
 2655              		.loc 1 1548 5 discriminator 1
 2656 00dc 002B     		cmp	r3, #0
 2657 00de E5D1     		bne	.L149
 2658              	.LBE474:
1549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2659              		.loc 1 1551 14
 2660 00e0 7B68     		ldr	r3, [r7, #4]
 2661 00e2 5B6F     		ldr	r3, [r3, #116]
 2662              		.loc 1 1551 8
 2663 00e4 002B     		cmp	r3, #0
 2664 00e6 15D0     		beq	.L150
1552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 2665              		.loc 1 1553 11
 2666 00e8 7B68     		ldr	r3, [r7, #4]
 2667 00ea 5B6F     		ldr	r3, [r3, #116]
 2668 00ec 1846     		mov	r0, r3
 2669 00ee FFF7FEFF 		bl	HAL_DMA_Abort
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 95


 2670 00f2 0346     		mov	r3, r0
 2671              		.loc 1 1553 10
 2672 00f4 002B     		cmp	r3, #0
 2673 00f6 0DD0     		beq	.L150
1554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 2674              		.loc 1 1555 13
 2675 00f8 7B68     		ldr	r3, [r7, #4]
 2676 00fa 5B6F     		ldr	r3, [r3, #116]
 2677 00fc 1846     		mov	r0, r3
 2678 00fe FFF7FEFF 		bl	HAL_DMA_GetError
 2679 0102 0346     		mov	r3, r0
 2680              		.loc 1 1555 12
 2681 0104 202B     		cmp	r3, #32
 2682 0106 05D1     		bne	.L150
1556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         {
1557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           /* Set error code to DMA */
1558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2683              		.loc 1 1558 28
 2684 0108 7B68     		ldr	r3, [r7, #4]
 2685 010a 1022     		movs	r2, #16
 2686 010c C3F88420 		str	r2, [r3, #132]
1559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           return HAL_TIMEOUT;
 2687              		.loc 1 1560 18
 2688 0110 0323     		movs	r3, #3
 2689 0112 03E0     		b	.L145
 2690              	.L150:
1561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         }
1562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2691              		.loc 1 1565 5
 2692 0114 7868     		ldr	r0, [r7, #4]
 2693 0116 FFF7FEFF 		bl	UART_EndRxTransfer
 2694              	.L146:
1566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 2695              		.loc 1 1568 10
 2696 011a 0023     		movs	r3, #0
 2697              	.L145:
1569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 2698              		.loc 1 1569 1
 2699 011c 1846     		mov	r0, r3
 2700 011e 4037     		adds	r7, r7, #64
 2701              	.LCFI83:
 2702              		.cfi_def_cfa_offset 8
 2703 0120 BD46     		mov	sp, r7
 2704              	.LCFI84:
 2705              		.cfi_def_cfa_register 13
 2706              		@ sp needed
 2707 0122 80BD     		pop	{r7, pc}
 2708              		.cfi_endproc
 2709              	.LFE156:
 2711              		.section	.text.HAL_UART_Abort,"ax",%progbits
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 96


 2712              		.align	1
 2713              		.global	HAL_UART_Abort
 2714              		.syntax unified
 2715              		.thumb
 2716              		.thumb_func
 2718              	HAL_UART_Abort:
 2719              	.LFB157:
1570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle.
1574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         This procedure performs following operations :
1576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           - Set handle State to READY
1580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 2720              		.loc 1 1584 1
 2721              		.cfi_startproc
 2722              		@ args = 0, pretend = 0, frame = 128
 2723              		@ frame_needed = 1, uses_anonymous_args = 0
 2724 0000 80B5     		push	{r7, lr}
 2725              	.LCFI85:
 2726              		.cfi_def_cfa_offset 8
 2727              		.cfi_offset 7, -8
 2728              		.cfi_offset 14, -4
 2729 0002 A0B0     		sub	sp, sp, #128
 2730              	.LCFI86:
 2731              		.cfi_def_cfa_offset 136
 2732 0004 00AF     		add	r7, sp, #0
 2733              	.LCFI87:
 2734              		.cfi_def_cfa_register 7
 2735 0006 7860     		str	r0, [r7, #4]
 2736              	.L154:
 2737              	.LBB479:
1585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USA
 2738              		.loc 1 1586 3 discriminator 1
 2739 0008 7B68     		ldr	r3, [r7, #4]
 2740 000a 1B68     		ldr	r3, [r3]
 2741 000c FB65     		str	r3, [r7, #92]
 2742              	.LBB480:
 2743              	.LBB481:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2744              		.loc 2 1072 4 discriminator 1
 2745 000e FB6D     		ldr	r3, [r7, #92]
 2746              		.syntax unified
 2747              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2748 0010 53E8003F 		ldrex r3, [r3]
 2749              	@ 0 "" 2
 2750              		.thumb
 2751              		.syntax unified
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 97


 2752 0014 BB65     		str	r3, [r7, #88]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2753              		.loc 2 1073 10 discriminator 1
 2754 0016 BB6D     		ldr	r3, [r7, #88]
 2755              	.LBE481:
 2756              	.LBE480:
 2757              		.loc 1 1586 3 discriminator 1
 2758 0018 23F4F073 		bic	r3, r3, #480
 2759 001c FB67     		str	r3, [r7, #124]
 2760 001e 7B68     		ldr	r3, [r7, #4]
 2761 0020 1B68     		ldr	r3, [r3]
 2762 0022 1A46     		mov	r2, r3
 2763 0024 FB6F     		ldr	r3, [r7, #124]
 2764 0026 BB66     		str	r3, [r7, #104]
 2765 0028 7A66     		str	r2, [r7, #100]
 2766              	.LBB482:
 2767              	.LBB483:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2768              		.loc 2 1123 4 discriminator 1
 2769 002a 796E     		ldr	r1, [r7, #100]
 2770 002c BA6E     		ldr	r2, [r7, #104]
 2771              		.syntax unified
 2772              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2773 002e 41E80023 		strex r3, r2, [r1]
 2774              	@ 0 "" 2
 2775              		.thumb
 2776              		.syntax unified
 2777 0032 3B66     		str	r3, [r7, #96]
 2778              		.loc 2 1124 10 discriminator 1
 2779 0034 3B6E     		ldr	r3, [r7, #96]
 2780              	.LBE483:
 2781              	.LBE482:
 2782              		.loc 1 1586 3 discriminator 1
 2783 0036 002B     		cmp	r3, #0
 2784 0038 E6D1     		bne	.L154
 2785              	.L157:
 2786              	.LBE479:
 2787              	.LBB484:
1587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2788              		.loc 1 1587 3 discriminator 1
 2789 003a 7B68     		ldr	r3, [r7, #4]
 2790 003c 1B68     		ldr	r3, [r3]
 2791 003e 0833     		adds	r3, r3, #8
 2792 0040 BB64     		str	r3, [r7, #72]
 2793              	.LBB485:
 2794              	.LBB486:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2795              		.loc 2 1072 4 discriminator 1
 2796 0042 BB6C     		ldr	r3, [r7, #72]
 2797              		.syntax unified
 2798              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2799 0044 53E8003F 		ldrex r3, [r3]
 2800              	@ 0 "" 2
 2801              		.thumb
 2802              		.syntax unified
 2803 0048 7B64     		str	r3, [r7, #68]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 98


 2804              		.loc 2 1073 10 discriminator 1
 2805 004a 7B6C     		ldr	r3, [r7, #68]
 2806              	.LBE486:
 2807              	.LBE485:
 2808              		.loc 1 1587 3 discriminator 1
 2809 004c 23F00103 		bic	r3, r3, #1
 2810 0050 BB67     		str	r3, [r7, #120]
 2811 0052 7B68     		ldr	r3, [r7, #4]
 2812 0054 1B68     		ldr	r3, [r3]
 2813 0056 0833     		adds	r3, r3, #8
 2814 0058 BA6F     		ldr	r2, [r7, #120]
 2815 005a 7A65     		str	r2, [r7, #84]
 2816 005c 3B65     		str	r3, [r7, #80]
 2817              	.LBB487:
 2818              	.LBB488:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2819              		.loc 2 1123 4 discriminator 1
 2820 005e 396D     		ldr	r1, [r7, #80]
 2821 0060 7A6D     		ldr	r2, [r7, #84]
 2822              		.syntax unified
 2823              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2824 0062 41E80023 		strex r3, r2, [r1]
 2825              	@ 0 "" 2
 2826              		.thumb
 2827              		.syntax unified
 2828 0066 FB64     		str	r3, [r7, #76]
 2829              		.loc 2 1124 10 discriminator 1
 2830 0068 FB6C     		ldr	r3, [r7, #76]
 2831              	.LBE488:
 2832              	.LBE487:
 2833              		.loc 1 1587 3 discriminator 1
 2834 006a 002B     		cmp	r3, #0
 2835 006c E5D1     		bne	.L157
 2836              	.LBE484:
1588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
1590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 2837              		.loc 1 1590 12
 2838 006e 7B68     		ldr	r3, [r7, #4]
 2839 0070 1B6E     		ldr	r3, [r3, #96]
 2840              		.loc 1 1590 6
 2841 0072 012B     		cmp	r3, #1
 2842 0074 18D1     		bne	.L158
 2843              	.L161:
 2844              	.LBB489:
1591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 2845              		.loc 1 1592 5 discriminator 1
 2846 0076 7B68     		ldr	r3, [r7, #4]
 2847 0078 1B68     		ldr	r3, [r3]
 2848 007a 7B63     		str	r3, [r7, #52]
 2849              	.LBB490:
 2850              	.LBB491:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2851              		.loc 2 1072 4 discriminator 1
 2852 007c 7B6B     		ldr	r3, [r7, #52]
 2853              		.syntax unified
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 99


 2854              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2855 007e 53E8003F 		ldrex r3, [r3]
 2856              	@ 0 "" 2
 2857              		.thumb
 2858              		.syntax unified
 2859 0082 3B63     		str	r3, [r7, #48]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2860              		.loc 2 1073 10 discriminator 1
 2861 0084 3B6B     		ldr	r3, [r7, #48]
 2862              	.LBE491:
 2863              	.LBE490:
 2864              		.loc 1 1592 5 discriminator 1
 2865 0086 23F01003 		bic	r3, r3, #16
 2866 008a 7B67     		str	r3, [r7, #116]
 2867 008c 7B68     		ldr	r3, [r7, #4]
 2868 008e 1B68     		ldr	r3, [r3]
 2869 0090 1A46     		mov	r2, r3
 2870 0092 7B6F     		ldr	r3, [r7, #116]
 2871 0094 3B64     		str	r3, [r7, #64]
 2872 0096 FA63     		str	r2, [r7, #60]
 2873              	.LBB492:
 2874              	.LBB493:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2875              		.loc 2 1123 4 discriminator 1
 2876 0098 F96B     		ldr	r1, [r7, #60]
 2877 009a 3A6C     		ldr	r2, [r7, #64]
 2878              		.syntax unified
 2879              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2880 009c 41E80023 		strex r3, r2, [r1]
 2881              	@ 0 "" 2
 2882              		.thumb
 2883              		.syntax unified
 2884 00a0 BB63     		str	r3, [r7, #56]
 2885              		.loc 2 1124 10 discriminator 1
 2886 00a2 BB6B     		ldr	r3, [r7, #56]
 2887              	.LBE493:
 2888              	.LBE492:
 2889              		.loc 1 1592 5 discriminator 1
 2890 00a4 002B     		cmp	r3, #0
 2891 00a6 E6D1     		bne	.L161
 2892              	.L158:
 2893              	.LBE489:
1593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Abort the UART DMA Tx channel if enabled */
1596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2894              		.loc 1 1596 7
 2895 00a8 7B68     		ldr	r3, [r7, #4]
 2896 00aa 1B68     		ldr	r3, [r3]
 2897 00ac 9B68     		ldr	r3, [r3, #8]
 2898 00ae 03F08003 		and	r3, r3, #128
 2899              		.loc 1 1596 6
 2900 00b2 802B     		cmp	r3, #128
 2901 00b4 37D1     		bne	.L162
 2902              	.L165:
 2903              	.LBB494:
1597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 100


1598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable the UART DMA Tx request if enabled */
1599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2904              		.loc 1 1599 5 discriminator 1
 2905 00b6 7B68     		ldr	r3, [r7, #4]
 2906 00b8 1B68     		ldr	r3, [r3]
 2907 00ba 0833     		adds	r3, r3, #8
 2908 00bc 3B62     		str	r3, [r7, #32]
 2909              	.LBB495:
 2910              	.LBB496:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2911              		.loc 2 1072 4 discriminator 1
 2912 00be 3B6A     		ldr	r3, [r7, #32]
 2913              		.syntax unified
 2914              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2915 00c0 53E8003F 		ldrex r3, [r3]
 2916              	@ 0 "" 2
 2917              		.thumb
 2918              		.syntax unified
 2919 00c4 FB61     		str	r3, [r7, #28]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2920              		.loc 2 1073 10 discriminator 1
 2921 00c6 FB69     		ldr	r3, [r7, #28]
 2922              	.LBE496:
 2923              	.LBE495:
 2924              		.loc 1 1599 5 discriminator 1
 2925 00c8 23F08003 		bic	r3, r3, #128
 2926 00cc 3B67     		str	r3, [r7, #112]
 2927 00ce 7B68     		ldr	r3, [r7, #4]
 2928 00d0 1B68     		ldr	r3, [r3]
 2929 00d2 0833     		adds	r3, r3, #8
 2930 00d4 3A6F     		ldr	r2, [r7, #112]
 2931 00d6 FA62     		str	r2, [r7, #44]
 2932 00d8 BB62     		str	r3, [r7, #40]
 2933              	.LBB497:
 2934              	.LBB498:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2935              		.loc 2 1123 4 discriminator 1
 2936 00da B96A     		ldr	r1, [r7, #40]
 2937 00dc FA6A     		ldr	r2, [r7, #44]
 2938              		.syntax unified
 2939              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2940 00de 41E80023 		strex r3, r2, [r1]
 2941              	@ 0 "" 2
 2942              		.thumb
 2943              		.syntax unified
 2944 00e2 7B62     		str	r3, [r7, #36]
 2945              		.loc 2 1124 10 discriminator 1
 2946 00e4 7B6A     		ldr	r3, [r7, #36]
 2947              	.LBE498:
 2948              	.LBE497:
 2949              		.loc 1 1599 5 discriminator 1
 2950 00e6 002B     		cmp	r3, #0
 2951 00e8 E5D1     		bne	.L165
 2952              	.LBE494:
1600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if (huart->hdmatx != NULL)
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 101


 2953              		.loc 1 1602 14
 2954 00ea 7B68     		ldr	r3, [r7, #4]
 2955 00ec 1B6F     		ldr	r3, [r3, #112]
 2956              		.loc 1 1602 8
 2957 00ee 002B     		cmp	r3, #0
 2958 00f0 19D0     		beq	.L162
1603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 2959              		.loc 1 1606 12
 2960 00f2 7B68     		ldr	r3, [r7, #4]
 2961 00f4 1B6F     		ldr	r3, [r3, #112]
 2962              		.loc 1 1606 40
 2963 00f6 0022     		movs	r2, #0
 2964 00f8 1A65     		str	r2, [r3, #80]
1607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 2965              		.loc 1 1608 11
 2966 00fa 7B68     		ldr	r3, [r7, #4]
 2967 00fc 1B6F     		ldr	r3, [r3, #112]
 2968 00fe 1846     		mov	r0, r3
 2969 0100 FFF7FEFF 		bl	HAL_DMA_Abort
 2970 0104 0346     		mov	r3, r0
 2971              		.loc 1 1608 10
 2972 0106 002B     		cmp	r3, #0
 2973 0108 0DD0     		beq	.L162
1609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 2974              		.loc 1 1610 13
 2975 010a 7B68     		ldr	r3, [r7, #4]
 2976 010c 1B6F     		ldr	r3, [r3, #112]
 2977 010e 1846     		mov	r0, r3
 2978 0110 FFF7FEFF 		bl	HAL_DMA_GetError
 2979 0114 0346     		mov	r3, r0
 2980              		.loc 1 1610 12
 2981 0116 202B     		cmp	r3, #32
 2982 0118 05D1     		bne	.L162
1611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         {
1612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           /* Set error code to DMA */
1613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2983              		.loc 1 1613 28
 2984 011a 7B68     		ldr	r3, [r7, #4]
 2985 011c 1022     		movs	r2, #16
 2986 011e C3F88420 		str	r2, [r3, #132]
1614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           return HAL_TIMEOUT;
 2987              		.loc 1 1615 18
 2988 0122 0323     		movs	r3, #3
 2989 0124 61E0     		b	.L166
 2990              	.L162:
1616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         }
1617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Abort the UART DMA Rx channel if enabled */
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 102


1622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2991              		.loc 1 1622 7
 2992 0126 7B68     		ldr	r3, [r7, #4]
 2993 0128 1B68     		ldr	r3, [r3]
 2994 012a 9B68     		ldr	r3, [r3, #8]
 2995 012c 03F04003 		and	r3, r3, #64
 2996              		.loc 1 1622 6
 2997 0130 402B     		cmp	r3, #64
 2998 0132 37D1     		bne	.L167
 2999              	.L170:
 3000              	.LBB499:
1623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable the UART DMA Rx request if enabled */
1625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3001              		.loc 1 1625 5 discriminator 1
 3002 0134 7B68     		ldr	r3, [r7, #4]
 3003 0136 1B68     		ldr	r3, [r3]
 3004 0138 0833     		adds	r3, r3, #8
 3005 013a FB60     		str	r3, [r7, #12]
 3006              	.LBB500:
 3007              	.LBB501:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3008              		.loc 2 1072 4 discriminator 1
 3009 013c FB68     		ldr	r3, [r7, #12]
 3010              		.syntax unified
 3011              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3012 013e 53E8003F 		ldrex r3, [r3]
 3013              	@ 0 "" 2
 3014              		.thumb
 3015              		.syntax unified
 3016 0142 BB60     		str	r3, [r7, #8]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3017              		.loc 2 1073 10 discriminator 1
 3018 0144 BB68     		ldr	r3, [r7, #8]
 3019              	.LBE501:
 3020              	.LBE500:
 3021              		.loc 1 1625 5 discriminator 1
 3022 0146 23F04003 		bic	r3, r3, #64
 3023 014a FB66     		str	r3, [r7, #108]
 3024 014c 7B68     		ldr	r3, [r7, #4]
 3025 014e 1B68     		ldr	r3, [r3]
 3026 0150 0833     		adds	r3, r3, #8
 3027 0152 FA6E     		ldr	r2, [r7, #108]
 3028 0154 BA61     		str	r2, [r7, #24]
 3029 0156 7B61     		str	r3, [r7, #20]
 3030              	.LBB502:
 3031              	.LBB503:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3032              		.loc 2 1123 4 discriminator 1
 3033 0158 7969     		ldr	r1, [r7, #20]
 3034 015a BA69     		ldr	r2, [r7, #24]
 3035              		.syntax unified
 3036              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3037 015c 41E80023 		strex r3, r2, [r1]
 3038              	@ 0 "" 2
 3039              		.thumb
 3040              		.syntax unified
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 103


 3041 0160 3B61     		str	r3, [r7, #16]
 3042              		.loc 2 1124 10 discriminator 1
 3043 0162 3B69     		ldr	r3, [r7, #16]
 3044              	.LBE503:
 3045              	.LBE502:
 3046              		.loc 1 1625 5 discriminator 1
 3047 0164 002B     		cmp	r3, #0
 3048 0166 E5D1     		bne	.L170
 3049              	.LBE499:
1626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 3050              		.loc 1 1628 14
 3051 0168 7B68     		ldr	r3, [r7, #4]
 3052 016a 5B6F     		ldr	r3, [r3, #116]
 3053              		.loc 1 1628 8
 3054 016c 002B     		cmp	r3, #0
 3055 016e 19D0     		beq	.L167
1629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 3056              		.loc 1 1632 12
 3057 0170 7B68     		ldr	r3, [r7, #4]
 3058 0172 5B6F     		ldr	r3, [r3, #116]
 3059              		.loc 1 1632 40
 3060 0174 0022     		movs	r2, #0
 3061 0176 1A65     		str	r2, [r3, #80]
1633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 3062              		.loc 1 1634 11
 3063 0178 7B68     		ldr	r3, [r7, #4]
 3064 017a 5B6F     		ldr	r3, [r3, #116]
 3065 017c 1846     		mov	r0, r3
 3066 017e FFF7FEFF 		bl	HAL_DMA_Abort
 3067 0182 0346     		mov	r3, r0
 3068              		.loc 1 1634 10
 3069 0184 002B     		cmp	r3, #0
 3070 0186 0DD0     		beq	.L167
1635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 3071              		.loc 1 1636 13
 3072 0188 7B68     		ldr	r3, [r7, #4]
 3073 018a 5B6F     		ldr	r3, [r3, #116]
 3074 018c 1846     		mov	r0, r3
 3075 018e FFF7FEFF 		bl	HAL_DMA_GetError
 3076 0192 0346     		mov	r3, r0
 3077              		.loc 1 1636 12
 3078 0194 202B     		cmp	r3, #32
 3079 0196 05D1     		bne	.L167
1637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         {
1638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           /* Set error code to DMA */
1639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 3080              		.loc 1 1639 28
 3081 0198 7B68     		ldr	r3, [r7, #4]
 3082 019a 1022     		movs	r2, #16
 3083 019c C3F88420 		str	r2, [r3, #132]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 104


1640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           return HAL_TIMEOUT;
 3084              		.loc 1 1641 18
 3085 01a0 0323     		movs	r3, #3
 3086 01a2 22E0     		b	.L166
 3087              	.L167:
1642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         }
1643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->TxXferCount = 0U;
 3088              		.loc 1 1648 22
 3089 01a4 7B68     		ldr	r3, [r7, #4]
 3090 01a6 0022     		movs	r2, #0
 3091 01a8 A3F85220 		strh	r2, [r3, #82]	@ movhi
1649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxXferCount = 0U;
 3092              		.loc 1 1649 22
 3093 01ac 7B68     		ldr	r3, [r7, #4]
 3094 01ae 0022     		movs	r2, #0
 3095 01b0 A3F85A20 		strh	r2, [r3, #90]	@ movhi
1650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 3096              		.loc 1 1652 3
 3097 01b4 7B68     		ldr	r3, [r7, #4]
 3098 01b6 1B68     		ldr	r3, [r3]
 3099 01b8 0F22     		movs	r2, #15
 3100 01ba 1A62     		str	r2, [r3, #32]
1653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Discard the received data */
1656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 3101              		.loc 1 1656 3
 3102 01bc 7B68     		ldr	r3, [r7, #4]
 3103 01be 1B68     		ldr	r3, [r3]
 3104 01c0 9A69     		ldr	r2, [r3, #24]
 3105 01c2 7B68     		ldr	r3, [r7, #4]
 3106 01c4 1B68     		ldr	r3, [r3]
 3107 01c6 42F00802 		orr	r2, r2, #8
 3108 01ca 9A61     		str	r2, [r3, #24]
1657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 3109              		.loc 1 1659 18
 3110 01cc 7B68     		ldr	r3, [r7, #4]
 3111 01ce 2022     		movs	r2, #32
 3112 01d0 DA67     		str	r2, [r3, #124]
1660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3113              		.loc 1 1660 18
 3114 01d2 7B68     		ldr	r3, [r7, #4]
 3115 01d4 2022     		movs	r2, #32
 3116 01d6 C3F88020 		str	r2, [r3, #128]
1661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 3117              		.loc 1 1661 24
 3118 01da 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 105


 3119 01dc 0022     		movs	r2, #0
 3120 01de 1A66     		str	r2, [r3, #96]
1662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 3121              		.loc 1 1663 20
 3122 01e0 7B68     		ldr	r3, [r7, #4]
 3123 01e2 0022     		movs	r2, #0
 3124 01e4 C3F88420 		str	r2, [r3, #132]
1664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 3125              		.loc 1 1665 10
 3126 01e8 0023     		movs	r3, #0
 3127              	.L166:
1666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3128              		.loc 1 1666 1
 3129 01ea 1846     		mov	r0, r3
 3130 01ec 8037     		adds	r7, r7, #128
 3131              	.LCFI88:
 3132              		.cfi_def_cfa_offset 8
 3133 01ee BD46     		mov	sp, r7
 3134              	.LCFI89:
 3135              		.cfi_def_cfa_register 13
 3136              		@ sp needed
 3137 01f0 80BD     		pop	{r7, pc}
 3138              		.cfi_endproc
 3139              	.LFE157:
 3141              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 3142              		.align	1
 3143              		.global	HAL_UART_AbortTransmit
 3144              		.syntax unified
 3145              		.thumb
 3146              		.thumb_func
 3148              	HAL_UART_AbortTransmit:
 3149              	.LFB158:
1667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle.
1671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         This procedure performs following operations :
1673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           - Set handle State to READY
1677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3150              		.loc 1 1681 1
 3151              		.cfi_startproc
 3152              		@ args = 0, pretend = 0, frame = 56
 3153              		@ frame_needed = 1, uses_anonymous_args = 0
 3154 0000 80B5     		push	{r7, lr}
 3155              	.LCFI90:
 3156              		.cfi_def_cfa_offset 8
 3157              		.cfi_offset 7, -8
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 106


 3158              		.cfi_offset 14, -4
 3159 0002 8EB0     		sub	sp, sp, #56
 3160              	.LCFI91:
 3161              		.cfi_def_cfa_offset 64
 3162 0004 00AF     		add	r7, sp, #0
 3163              	.LCFI92:
 3164              		.cfi_def_cfa_register 7
 3165 0006 7860     		str	r0, [r7, #4]
 3166              	.L174:
 3167              	.LBB504:
1682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 3168              		.loc 1 1683 3 discriminator 1
 3169 0008 7B68     		ldr	r3, [r7, #4]
 3170 000a 1B68     		ldr	r3, [r3]
 3171 000c 3B62     		str	r3, [r7, #32]
 3172              	.LBB505:
 3173              	.LBB506:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3174              		.loc 2 1072 4 discriminator 1
 3175 000e 3B6A     		ldr	r3, [r7, #32]
 3176              		.syntax unified
 3177              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3178 0010 53E8003F 		ldrex r3, [r3]
 3179              	@ 0 "" 2
 3180              		.thumb
 3181              		.syntax unified
 3182 0014 FB61     		str	r3, [r7, #28]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3183              		.loc 2 1073 10 discriminator 1
 3184 0016 FB69     		ldr	r3, [r7, #28]
 3185              	.LBE506:
 3186              	.LBE505:
 3187              		.loc 1 1683 3 discriminator 1
 3188 0018 23F0C003 		bic	r3, r3, #192
 3189 001c 7B63     		str	r3, [r7, #52]
 3190 001e 7B68     		ldr	r3, [r7, #4]
 3191 0020 1B68     		ldr	r3, [r3]
 3192 0022 1A46     		mov	r2, r3
 3193 0024 7B6B     		ldr	r3, [r7, #52]
 3194 0026 FB62     		str	r3, [r7, #44]
 3195 0028 BA62     		str	r2, [r7, #40]
 3196              	.LBB507:
 3197              	.LBB508:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3198              		.loc 2 1123 4 discriminator 1
 3199 002a B96A     		ldr	r1, [r7, #40]
 3200 002c FA6A     		ldr	r2, [r7, #44]
 3201              		.syntax unified
 3202              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3203 002e 41E80023 		strex r3, r2, [r1]
 3204              	@ 0 "" 2
 3205              		.thumb
 3206              		.syntax unified
 3207 0032 7B62     		str	r3, [r7, #36]
 3208              		.loc 2 1124 10 discriminator 1
 3209 0034 7B6A     		ldr	r3, [r7, #36]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 107


 3210              	.LBE508:
 3211              	.LBE507:
 3212              		.loc 1 1683 3 discriminator 1
 3213 0036 002B     		cmp	r3, #0
 3214 0038 E6D1     		bne	.L174
 3215              	.LBE504:
1684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Abort the UART DMA Tx channel if enabled */
1686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 3216              		.loc 1 1686 7
 3217 003a 7B68     		ldr	r3, [r7, #4]
 3218 003c 1B68     		ldr	r3, [r3]
 3219 003e 9B68     		ldr	r3, [r3, #8]
 3220 0040 03F08003 		and	r3, r3, #128
 3221              		.loc 1 1686 6
 3222 0044 802B     		cmp	r3, #128
 3223 0046 37D1     		bne	.L175
 3224              	.L178:
 3225              	.LBB509:
1687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable the UART DMA Tx request if enabled */
1689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 3226              		.loc 1 1689 5 discriminator 1
 3227 0048 7B68     		ldr	r3, [r7, #4]
 3228 004a 1B68     		ldr	r3, [r3]
 3229 004c 0833     		adds	r3, r3, #8
 3230 004e FB60     		str	r3, [r7, #12]
 3231              	.LBB510:
 3232              	.LBB511:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3233              		.loc 2 1072 4 discriminator 1
 3234 0050 FB68     		ldr	r3, [r7, #12]
 3235              		.syntax unified
 3236              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3237 0052 53E8003F 		ldrex r3, [r3]
 3238              	@ 0 "" 2
 3239              		.thumb
 3240              		.syntax unified
 3241 0056 BB60     		str	r3, [r7, #8]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3242              		.loc 2 1073 10 discriminator 1
 3243 0058 BB68     		ldr	r3, [r7, #8]
 3244              	.LBE511:
 3245              	.LBE510:
 3246              		.loc 1 1689 5 discriminator 1
 3247 005a 23F08003 		bic	r3, r3, #128
 3248 005e 3B63     		str	r3, [r7, #48]
 3249 0060 7B68     		ldr	r3, [r7, #4]
 3250 0062 1B68     		ldr	r3, [r3]
 3251 0064 0833     		adds	r3, r3, #8
 3252 0066 3A6B     		ldr	r2, [r7, #48]
 3253 0068 BA61     		str	r2, [r7, #24]
 3254 006a 7B61     		str	r3, [r7, #20]
 3255              	.LBB512:
 3256              	.LBB513:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3257              		.loc 2 1123 4 discriminator 1
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 108


 3258 006c 7969     		ldr	r1, [r7, #20]
 3259 006e BA69     		ldr	r2, [r7, #24]
 3260              		.syntax unified
 3261              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3262 0070 41E80023 		strex r3, r2, [r1]
 3263              	@ 0 "" 2
 3264              		.thumb
 3265              		.syntax unified
 3266 0074 3B61     		str	r3, [r7, #16]
 3267              		.loc 2 1124 10 discriminator 1
 3268 0076 3B69     		ldr	r3, [r7, #16]
 3269              	.LBE513:
 3270              	.LBE512:
 3271              		.loc 1 1689 5 discriminator 1
 3272 0078 002B     		cmp	r3, #0
 3273 007a E5D1     		bne	.L178
 3274              	.LBE509:
1690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 3275              		.loc 1 1692 14
 3276 007c 7B68     		ldr	r3, [r7, #4]
 3277 007e 1B6F     		ldr	r3, [r3, #112]
 3278              		.loc 1 1692 8
 3279 0080 002B     		cmp	r3, #0
 3280 0082 19D0     		beq	.L175
1693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 3281              		.loc 1 1696 12
 3282 0084 7B68     		ldr	r3, [r7, #4]
 3283 0086 1B6F     		ldr	r3, [r3, #112]
 3284              		.loc 1 1696 40
 3285 0088 0022     		movs	r2, #0
 3286 008a 1A65     		str	r2, [r3, #80]
1697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 3287              		.loc 1 1698 11
 3288 008c 7B68     		ldr	r3, [r7, #4]
 3289 008e 1B6F     		ldr	r3, [r3, #112]
 3290 0090 1846     		mov	r0, r3
 3291 0092 FFF7FEFF 		bl	HAL_DMA_Abort
 3292 0096 0346     		mov	r3, r0
 3293              		.loc 1 1698 10
 3294 0098 002B     		cmp	r3, #0
 3295 009a 0DD0     		beq	.L175
1699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 3296              		.loc 1 1700 13
 3297 009c 7B68     		ldr	r3, [r7, #4]
 3298 009e 1B6F     		ldr	r3, [r3, #112]
 3299 00a0 1846     		mov	r0, r3
 3300 00a2 FFF7FEFF 		bl	HAL_DMA_GetError
 3301 00a6 0346     		mov	r3, r0
 3302              		.loc 1 1700 12
 3303 00a8 202B     		cmp	r3, #32
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 109


 3304 00aa 05D1     		bne	.L175
1701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         {
1702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           /* Set error code to DMA */
1703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 3305              		.loc 1 1703 28
 3306 00ac 7B68     		ldr	r3, [r7, #4]
 3307 00ae 1022     		movs	r2, #16
 3308 00b0 C3F88420 		str	r2, [r3, #132]
1704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           return HAL_TIMEOUT;
 3309              		.loc 1 1705 18
 3310 00b4 0323     		movs	r3, #3
 3311 00b6 07E0     		b	.L179
 3312              	.L175:
1706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         }
1707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Reset Tx transfer counter */
1712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->TxXferCount = 0U;
 3313              		.loc 1 1712 22
 3314 00b8 7B68     		ldr	r3, [r7, #4]
 3315 00ba 0022     		movs	r2, #0
 3316 00bc A3F85220 		strh	r2, [r3, #82]	@ movhi
1713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3317              		.loc 1 1716 17
 3318 00c0 7B68     		ldr	r3, [r7, #4]
 3319 00c2 2022     		movs	r2, #32
 3320 00c4 DA67     		str	r2, [r3, #124]
1717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 3321              		.loc 1 1718 10
 3322 00c6 0023     		movs	r3, #0
 3323              	.L179:
1719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3324              		.loc 1 1719 1
 3325 00c8 1846     		mov	r0, r3
 3326 00ca 3837     		adds	r7, r7, #56
 3327              	.LCFI93:
 3328              		.cfi_def_cfa_offset 8
 3329 00cc BD46     		mov	sp, r7
 3330              	.LCFI94:
 3331              		.cfi_def_cfa_register 13
 3332              		@ sp needed
 3333 00ce 80BD     		pop	{r7, pc}
 3334              		.cfi_endproc
 3335              	.LFE158:
 3337              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 3338              		.align	1
 3339              		.global	HAL_UART_AbortReceive
 3340              		.syntax unified
 3341              		.thumb
 3342              		.thumb_func
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 110


 3344              	HAL_UART_AbortReceive:
 3345              	.LFB159:
1720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle.
1724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         This procedure performs following operations :
1726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           - Set handle State to READY
1730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3346              		.loc 1 1734 1
 3347              		.cfi_startproc
 3348              		@ args = 0, pretend = 0, frame = 104
 3349              		@ frame_needed = 1, uses_anonymous_args = 0
 3350 0000 80B5     		push	{r7, lr}
 3351              	.LCFI95:
 3352              		.cfi_def_cfa_offset 8
 3353              		.cfi_offset 7, -8
 3354              		.cfi_offset 14, -4
 3355 0002 9AB0     		sub	sp, sp, #104
 3356              	.LCFI96:
 3357              		.cfi_def_cfa_offset 112
 3358 0004 00AF     		add	r7, sp, #0
 3359              	.LCFI97:
 3360              		.cfi_def_cfa_register 7
 3361 0006 7860     		str	r0, [r7, #4]
 3362              	.L183:
 3363              	.LBB514:
1735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 3364              		.loc 1 1736 3 discriminator 1
 3365 0008 7B68     		ldr	r3, [r7, #4]
 3366 000a 1B68     		ldr	r3, [r3]
 3367 000c BB64     		str	r3, [r7, #72]
 3368              	.LBB515:
 3369              	.LBB516:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3370              		.loc 2 1072 4 discriminator 1
 3371 000e BB6C     		ldr	r3, [r7, #72]
 3372              		.syntax unified
 3373              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3374 0010 53E8003F 		ldrex r3, [r3]
 3375              	@ 0 "" 2
 3376              		.thumb
 3377              		.syntax unified
 3378 0014 7B64     		str	r3, [r7, #68]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3379              		.loc 2 1073 10 discriminator 1
 3380 0016 7B6C     		ldr	r3, [r7, #68]
 3381              	.LBE516:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 111


 3382              	.LBE515:
 3383              		.loc 1 1736 3 discriminator 1
 3384 0018 23F49073 		bic	r3, r3, #288
 3385 001c 7B66     		str	r3, [r7, #100]
 3386 001e 7B68     		ldr	r3, [r7, #4]
 3387 0020 1B68     		ldr	r3, [r3]
 3388 0022 1A46     		mov	r2, r3
 3389 0024 7B6E     		ldr	r3, [r7, #100]
 3390 0026 7B65     		str	r3, [r7, #84]
 3391 0028 3A65     		str	r2, [r7, #80]
 3392              	.LBB517:
 3393              	.LBB518:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3394              		.loc 2 1123 4 discriminator 1
 3395 002a 396D     		ldr	r1, [r7, #80]
 3396 002c 7A6D     		ldr	r2, [r7, #84]
 3397              		.syntax unified
 3398              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3399 002e 41E80023 		strex r3, r2, [r1]
 3400              	@ 0 "" 2
 3401              		.thumb
 3402              		.syntax unified
 3403 0032 FB64     		str	r3, [r7, #76]
 3404              		.loc 2 1124 10 discriminator 1
 3405 0034 FB6C     		ldr	r3, [r7, #76]
 3406              	.LBE518:
 3407              	.LBE517:
 3408              		.loc 1 1736 3 discriminator 1
 3409 0036 002B     		cmp	r3, #0
 3410 0038 E6D1     		bne	.L183
 3411              	.L186:
 3412              	.LBE514:
 3413              	.LBB519:
1737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3414              		.loc 1 1737 3 discriminator 1
 3415 003a 7B68     		ldr	r3, [r7, #4]
 3416 003c 1B68     		ldr	r3, [r3]
 3417 003e 0833     		adds	r3, r3, #8
 3418 0040 7B63     		str	r3, [r7, #52]
 3419              	.LBB520:
 3420              	.LBB521:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3421              		.loc 2 1072 4 discriminator 1
 3422 0042 7B6B     		ldr	r3, [r7, #52]
 3423              		.syntax unified
 3424              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3425 0044 53E8003F 		ldrex r3, [r3]
 3426              	@ 0 "" 2
 3427              		.thumb
 3428              		.syntax unified
 3429 0048 3B63     		str	r3, [r7, #48]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3430              		.loc 2 1073 10 discriminator 1
 3431 004a 3B6B     		ldr	r3, [r7, #48]
 3432              	.LBE521:
 3433              	.LBE520:
 3434              		.loc 1 1737 3 discriminator 1
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 112


 3435 004c 23F00103 		bic	r3, r3, #1
 3436 0050 3B66     		str	r3, [r7, #96]
 3437 0052 7B68     		ldr	r3, [r7, #4]
 3438 0054 1B68     		ldr	r3, [r3]
 3439 0056 0833     		adds	r3, r3, #8
 3440 0058 3A6E     		ldr	r2, [r7, #96]
 3441 005a 3A64     		str	r2, [r7, #64]
 3442 005c FB63     		str	r3, [r7, #60]
 3443              	.LBB522:
 3444              	.LBB523:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3445              		.loc 2 1123 4 discriminator 1
 3446 005e F96B     		ldr	r1, [r7, #60]
 3447 0060 3A6C     		ldr	r2, [r7, #64]
 3448              		.syntax unified
 3449              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3450 0062 41E80023 		strex r3, r2, [r1]
 3451              	@ 0 "" 2
 3452              		.thumb
 3453              		.syntax unified
 3454 0066 BB63     		str	r3, [r7, #56]
 3455              		.loc 2 1124 10 discriminator 1
 3456 0068 BB6B     		ldr	r3, [r7, #56]
 3457              	.LBE523:
 3458              	.LBE522:
 3459              		.loc 1 1737 3 discriminator 1
 3460 006a 002B     		cmp	r3, #0
 3461 006c E5D1     		bne	.L186
 3462              	.LBE519:
1738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
1740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 3463              		.loc 1 1740 12
 3464 006e 7B68     		ldr	r3, [r7, #4]
 3465 0070 1B6E     		ldr	r3, [r3, #96]
 3466              		.loc 1 1740 6
 3467 0072 012B     		cmp	r3, #1
 3468 0074 18D1     		bne	.L187
 3469              	.L190:
 3470              	.LBB524:
1741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 3471              		.loc 1 1742 5 discriminator 1
 3472 0076 7B68     		ldr	r3, [r7, #4]
 3473 0078 1B68     		ldr	r3, [r3]
 3474 007a 3B62     		str	r3, [r7, #32]
 3475              	.LBB525:
 3476              	.LBB526:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3477              		.loc 2 1072 4 discriminator 1
 3478 007c 3B6A     		ldr	r3, [r7, #32]
 3479              		.syntax unified
 3480              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3481 007e 53E8003F 		ldrex r3, [r3]
 3482              	@ 0 "" 2
 3483              		.thumb
 3484              		.syntax unified
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 113


 3485 0082 FB61     		str	r3, [r7, #28]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3486              		.loc 2 1073 10 discriminator 1
 3487 0084 FB69     		ldr	r3, [r7, #28]
 3488              	.LBE526:
 3489              	.LBE525:
 3490              		.loc 1 1742 5 discriminator 1
 3491 0086 23F01003 		bic	r3, r3, #16
 3492 008a FB65     		str	r3, [r7, #92]
 3493 008c 7B68     		ldr	r3, [r7, #4]
 3494 008e 1B68     		ldr	r3, [r3]
 3495 0090 1A46     		mov	r2, r3
 3496 0092 FB6D     		ldr	r3, [r7, #92]
 3497 0094 FB62     		str	r3, [r7, #44]
 3498 0096 BA62     		str	r2, [r7, #40]
 3499              	.LBB527:
 3500              	.LBB528:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3501              		.loc 2 1123 4 discriminator 1
 3502 0098 B96A     		ldr	r1, [r7, #40]
 3503 009a FA6A     		ldr	r2, [r7, #44]
 3504              		.syntax unified
 3505              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3506 009c 41E80023 		strex r3, r2, [r1]
 3507              	@ 0 "" 2
 3508              		.thumb
 3509              		.syntax unified
 3510 00a0 7B62     		str	r3, [r7, #36]
 3511              		.loc 2 1124 10 discriminator 1
 3512 00a2 7B6A     		ldr	r3, [r7, #36]
 3513              	.LBE528:
 3514              	.LBE527:
 3515              		.loc 1 1742 5 discriminator 1
 3516 00a4 002B     		cmp	r3, #0
 3517 00a6 E6D1     		bne	.L190
 3518              	.L187:
 3519              	.LBE524:
1743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Abort the UART DMA Rx channel if enabled */
1746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3520              		.loc 1 1746 7
 3521 00a8 7B68     		ldr	r3, [r7, #4]
 3522 00aa 1B68     		ldr	r3, [r3]
 3523 00ac 9B68     		ldr	r3, [r3, #8]
 3524 00ae 03F04003 		and	r3, r3, #64
 3525              		.loc 1 1746 6
 3526 00b2 402B     		cmp	r3, #64
 3527 00b4 37D1     		bne	.L191
 3528              	.L194:
 3529              	.LBB529:
1747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable the UART DMA Rx request if enabled */
1749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3530              		.loc 1 1749 5 discriminator 1
 3531 00b6 7B68     		ldr	r3, [r7, #4]
 3532 00b8 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 114


 3533 00ba 0833     		adds	r3, r3, #8
 3534 00bc FB60     		str	r3, [r7, #12]
 3535              	.LBB530:
 3536              	.LBB531:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3537              		.loc 2 1072 4 discriminator 1
 3538 00be FB68     		ldr	r3, [r7, #12]
 3539              		.syntax unified
 3540              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3541 00c0 53E8003F 		ldrex r3, [r3]
 3542              	@ 0 "" 2
 3543              		.thumb
 3544              		.syntax unified
 3545 00c4 BB60     		str	r3, [r7, #8]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3546              		.loc 2 1073 10 discriminator 1
 3547 00c6 BB68     		ldr	r3, [r7, #8]
 3548              	.LBE531:
 3549              	.LBE530:
 3550              		.loc 1 1749 5 discriminator 1
 3551 00c8 23F04003 		bic	r3, r3, #64
 3552 00cc BB65     		str	r3, [r7, #88]
 3553 00ce 7B68     		ldr	r3, [r7, #4]
 3554 00d0 1B68     		ldr	r3, [r3]
 3555 00d2 0833     		adds	r3, r3, #8
 3556 00d4 BA6D     		ldr	r2, [r7, #88]
 3557 00d6 BA61     		str	r2, [r7, #24]
 3558 00d8 7B61     		str	r3, [r7, #20]
 3559              	.LBB532:
 3560              	.LBB533:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3561              		.loc 2 1123 4 discriminator 1
 3562 00da 7969     		ldr	r1, [r7, #20]
 3563 00dc BA69     		ldr	r2, [r7, #24]
 3564              		.syntax unified
 3565              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3566 00de 41E80023 		strex r3, r2, [r1]
 3567              	@ 0 "" 2
 3568              		.thumb
 3569              		.syntax unified
 3570 00e2 3B61     		str	r3, [r7, #16]
 3571              		.loc 2 1124 10 discriminator 1
 3572 00e4 3B69     		ldr	r3, [r7, #16]
 3573              	.LBE533:
 3574              	.LBE532:
 3575              		.loc 1 1749 5 discriminator 1
 3576 00e6 002B     		cmp	r3, #0
 3577 00e8 E5D1     		bne	.L194
 3578              	.LBE529:
1750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 3579              		.loc 1 1752 14
 3580 00ea 7B68     		ldr	r3, [r7, #4]
 3581 00ec 5B6F     		ldr	r3, [r3, #116]
 3582              		.loc 1 1752 8
 3583 00ee 002B     		cmp	r3, #0
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 115


 3584 00f0 19D0     		beq	.L191
1753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 3585              		.loc 1 1756 12
 3586 00f2 7B68     		ldr	r3, [r7, #4]
 3587 00f4 5B6F     		ldr	r3, [r3, #116]
 3588              		.loc 1 1756 40
 3589 00f6 0022     		movs	r2, #0
 3590 00f8 1A65     		str	r2, [r3, #80]
1757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 3591              		.loc 1 1758 11
 3592 00fa 7B68     		ldr	r3, [r7, #4]
 3593 00fc 5B6F     		ldr	r3, [r3, #116]
 3594 00fe 1846     		mov	r0, r3
 3595 0100 FFF7FEFF 		bl	HAL_DMA_Abort
 3596 0104 0346     		mov	r3, r0
 3597              		.loc 1 1758 10
 3598 0106 002B     		cmp	r3, #0
 3599 0108 0DD0     		beq	.L191
1759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 3600              		.loc 1 1760 13
 3601 010a 7B68     		ldr	r3, [r7, #4]
 3602 010c 5B6F     		ldr	r3, [r3, #116]
 3603 010e 1846     		mov	r0, r3
 3604 0110 FFF7FEFF 		bl	HAL_DMA_GetError
 3605 0114 0346     		mov	r3, r0
 3606              		.loc 1 1760 12
 3607 0116 202B     		cmp	r3, #32
 3608 0118 05D1     		bne	.L191
1761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         {
1762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           /* Set error code to DMA */
1763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 3609              		.loc 1 1763 28
 3610 011a 7B68     		ldr	r3, [r7, #4]
 3611 011c 1022     		movs	r2, #16
 3612 011e C3F88420 		str	r2, [r3, #132]
1764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           return HAL_TIMEOUT;
 3613              		.loc 1 1765 18
 3614 0122 0323     		movs	r3, #3
 3615 0124 17E0     		b	.L195
 3616              	.L191:
1766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         }
1767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Reset Rx transfer counter */
1772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxXferCount = 0U;
 3617              		.loc 1 1772 22
 3618 0126 7B68     		ldr	r3, [r7, #4]
 3619 0128 0022     		movs	r2, #0
 3620 012a A3F85A20 		strh	r2, [r3, #90]	@ movhi
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 116


1773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 3621              		.loc 1 1775 3
 3622 012e 7B68     		ldr	r3, [r7, #4]
 3623 0130 1B68     		ldr	r3, [r3]
 3624 0132 0F22     		movs	r2, #15
 3625 0134 1A62     		str	r2, [r3, #32]
1776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Discard the received data */
1778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 3626              		.loc 1 1778 3
 3627 0136 7B68     		ldr	r3, [r7, #4]
 3628 0138 1B68     		ldr	r3, [r3]
 3629 013a 9A69     		ldr	r2, [r3, #24]
 3630 013c 7B68     		ldr	r3, [r7, #4]
 3631 013e 1B68     		ldr	r3, [r3]
 3632 0140 42F00802 		orr	r2, r2, #8
 3633 0144 9A61     		str	r2, [r3, #24]
1779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3634              		.loc 1 1781 18
 3635 0146 7B68     		ldr	r3, [r7, #4]
 3636 0148 2022     		movs	r2, #32
 3637 014a C3F88020 		str	r2, [r3, #128]
1782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 3638              		.loc 1 1782 24
 3639 014e 7B68     		ldr	r3, [r7, #4]
 3640 0150 0022     		movs	r2, #0
 3641 0152 1A66     		str	r2, [r3, #96]
1783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 3642              		.loc 1 1784 10
 3643 0154 0023     		movs	r3, #0
 3644              	.L195:
1785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 3645              		.loc 1 1785 1
 3646 0156 1846     		mov	r0, r3
 3647 0158 6837     		adds	r7, r7, #104
 3648              	.LCFI98:
 3649              		.cfi_def_cfa_offset 8
 3650 015a BD46     		mov	sp, r7
 3651              	.LCFI99:
 3652              		.cfi_def_cfa_register 13
 3653              		@ sp needed
 3654 015c 80BD     		pop	{r7, pc}
 3655              		.cfi_endproc
 3656              	.LFE159:
 3658              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 3659              		.align	1
 3660              		.global	HAL_UART_Abort_IT
 3661              		.syntax unified
 3662              		.thumb
 3663              		.thumb_func
 3665              	HAL_UART_Abort_IT:
 3666              	.LFB160:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 117


1786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle.
1790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         This procedure performs following operations :
1792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           - Set handle State to READY
1796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 3667              		.loc 1 1802 1
 3668              		.cfi_startproc
 3669              		@ args = 0, pretend = 0, frame = 136
 3670              		@ frame_needed = 1, uses_anonymous_args = 0
 3671 0000 80B5     		push	{r7, lr}
 3672              	.LCFI100:
 3673              		.cfi_def_cfa_offset 8
 3674              		.cfi_offset 7, -8
 3675              		.cfi_offset 14, -4
 3676 0002 A2B0     		sub	sp, sp, #136
 3677              	.LCFI101:
 3678              		.cfi_def_cfa_offset 144
 3679 0004 00AF     		add	r7, sp, #0
 3680              	.LCFI102:
 3681              		.cfi_def_cfa_register 7
 3682 0006 7860     		str	r0, [r7, #4]
1803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 3683              		.loc 1 1803 12
 3684 0008 0123     		movs	r3, #1
 3685 000a C7F88430 		str	r3, [r7, #132]
 3686              	.L199:
 3687              	.LBB534:
1804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable interrupts */
1806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USA
 3688              		.loc 1 1806 3 discriminator 1
 3689 000e 7B68     		ldr	r3, [r7, #4]
 3690 0010 1B68     		ldr	r3, [r3]
 3691 0012 3B66     		str	r3, [r7, #96]
 3692              	.LBB535:
 3693              	.LBB536:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3694              		.loc 2 1072 4 discriminator 1
 3695 0014 3B6E     		ldr	r3, [r7, #96]
 3696              		.syntax unified
 3697              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3698 0016 53E8003F 		ldrex r3, [r3]
 3699              	@ 0 "" 2
 3700              		.thumb
 3701              		.syntax unified
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 118


 3702 001a FB65     		str	r3, [r7, #92]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3703              		.loc 2 1073 10 discriminator 1
 3704 001c FB6D     		ldr	r3, [r7, #92]
 3705              	.LBE536:
 3706              	.LBE535:
 3707              		.loc 1 1806 3 discriminator 1
 3708 001e 23F4F073 		bic	r3, r3, #480
 3709 0022 C7F88030 		str	r3, [r7, #128]
 3710 0026 7B68     		ldr	r3, [r7, #4]
 3711 0028 1B68     		ldr	r3, [r3]
 3712 002a 1A46     		mov	r2, r3
 3713 002c D7F88030 		ldr	r3, [r7, #128]
 3714 0030 FB66     		str	r3, [r7, #108]
 3715 0032 BA66     		str	r2, [r7, #104]
 3716              	.LBB537:
 3717              	.LBB538:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3718              		.loc 2 1123 4 discriminator 1
 3719 0034 B96E     		ldr	r1, [r7, #104]
 3720 0036 FA6E     		ldr	r2, [r7, #108]
 3721              		.syntax unified
 3722              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3723 0038 41E80023 		strex r3, r2, [r1]
 3724              	@ 0 "" 2
 3725              		.thumb
 3726              		.syntax unified
 3727 003c 7B66     		str	r3, [r7, #100]
 3728              		.loc 2 1124 10 discriminator 1
 3729 003e 7B6E     		ldr	r3, [r7, #100]
 3730              	.LBE538:
 3731              	.LBE537:
 3732              		.loc 1 1806 3 discriminator 1
 3733 0040 002B     		cmp	r3, #0
 3734 0042 E4D1     		bne	.L199
 3735              	.L202:
 3736              	.LBE534:
 3737              	.LBB539:
1807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3738              		.loc 1 1807 3 discriminator 1
 3739 0044 7B68     		ldr	r3, [r7, #4]
 3740 0046 1B68     		ldr	r3, [r3]
 3741 0048 0833     		adds	r3, r3, #8
 3742 004a FB64     		str	r3, [r7, #76]
 3743              	.LBB540:
 3744              	.LBB541:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3745              		.loc 2 1072 4 discriminator 1
 3746 004c FB6C     		ldr	r3, [r7, #76]
 3747              		.syntax unified
 3748              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3749 004e 53E8003F 		ldrex r3, [r3]
 3750              	@ 0 "" 2
 3751              		.thumb
 3752              		.syntax unified
 3753 0052 BB64     		str	r3, [r7, #72]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 119


 3754              		.loc 2 1073 10 discriminator 1
 3755 0054 BB6C     		ldr	r3, [r7, #72]
 3756              	.LBE541:
 3757              	.LBE540:
 3758              		.loc 1 1807 3 discriminator 1
 3759 0056 23F00103 		bic	r3, r3, #1
 3760 005a FB67     		str	r3, [r7, #124]
 3761 005c 7B68     		ldr	r3, [r7, #4]
 3762 005e 1B68     		ldr	r3, [r3]
 3763 0060 0833     		adds	r3, r3, #8
 3764 0062 FA6F     		ldr	r2, [r7, #124]
 3765 0064 BA65     		str	r2, [r7, #88]
 3766 0066 7B65     		str	r3, [r7, #84]
 3767              	.LBB542:
 3768              	.LBB543:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3769              		.loc 2 1123 4 discriminator 1
 3770 0068 796D     		ldr	r1, [r7, #84]
 3771 006a BA6D     		ldr	r2, [r7, #88]
 3772              		.syntax unified
 3773              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3774 006c 41E80023 		strex r3, r2, [r1]
 3775              	@ 0 "" 2
 3776              		.thumb
 3777              		.syntax unified
 3778 0070 3B65     		str	r3, [r7, #80]
 3779              		.loc 2 1124 10 discriminator 1
 3780 0072 3B6D     		ldr	r3, [r7, #80]
 3781              	.LBE543:
 3782              	.LBE542:
 3783              		.loc 1 1807 3 discriminator 1
 3784 0074 002B     		cmp	r3, #0
 3785 0076 E5D1     		bne	.L202
 3786              	.LBE539:
1808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
1810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 3787              		.loc 1 1810 12
 3788 0078 7B68     		ldr	r3, [r7, #4]
 3789 007a 1B6E     		ldr	r3, [r3, #96]
 3790              		.loc 1 1810 6
 3791 007c 012B     		cmp	r3, #1
 3792 007e 18D1     		bne	.L203
 3793              	.L206:
 3794              	.LBB544:
1811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 3795              		.loc 1 1812 5 discriminator 1
 3796 0080 7B68     		ldr	r3, [r7, #4]
 3797 0082 1B68     		ldr	r3, [r3]
 3798 0084 BB63     		str	r3, [r7, #56]
 3799              	.LBB545:
 3800              	.LBB546:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3801              		.loc 2 1072 4 discriminator 1
 3802 0086 BB6B     		ldr	r3, [r7, #56]
 3803              		.syntax unified
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 120


 3804              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3805 0088 53E8003F 		ldrex r3, [r3]
 3806              	@ 0 "" 2
 3807              		.thumb
 3808              		.syntax unified
 3809 008c 7B63     		str	r3, [r7, #52]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3810              		.loc 2 1073 10 discriminator 1
 3811 008e 7B6B     		ldr	r3, [r7, #52]
 3812              	.LBE546:
 3813              	.LBE545:
 3814              		.loc 1 1812 5 discriminator 1
 3815 0090 23F01003 		bic	r3, r3, #16
 3816 0094 BB67     		str	r3, [r7, #120]
 3817 0096 7B68     		ldr	r3, [r7, #4]
 3818 0098 1B68     		ldr	r3, [r3]
 3819 009a 1A46     		mov	r2, r3
 3820 009c BB6F     		ldr	r3, [r7, #120]
 3821 009e 7B64     		str	r3, [r7, #68]
 3822 00a0 3A64     		str	r2, [r7, #64]
 3823              	.LBB547:
 3824              	.LBB548:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3825              		.loc 2 1123 4 discriminator 1
 3826 00a2 396C     		ldr	r1, [r7, #64]
 3827 00a4 7A6C     		ldr	r2, [r7, #68]
 3828              		.syntax unified
 3829              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3830 00a6 41E80023 		strex r3, r2, [r1]
 3831              	@ 0 "" 2
 3832              		.thumb
 3833              		.syntax unified
 3834 00aa FB63     		str	r3, [r7, #60]
 3835              		.loc 2 1124 10 discriminator 1
 3836 00ac FB6B     		ldr	r3, [r7, #60]
 3837              	.LBE548:
 3838              	.LBE547:
 3839              		.loc 1 1812 5 discriminator 1
 3840 00ae 002B     		cmp	r3, #0
 3841 00b0 E6D1     		bne	.L206
 3842              	.L203:
 3843              	.LBE544:
1813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      before any call to DMA Abort functions */
1817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->hdmatx != NULL)
 3844              		.loc 1 1818 12
 3845 00b2 7B68     		ldr	r3, [r7, #4]
 3846 00b4 1B6F     		ldr	r3, [r3, #112]
 3847              		.loc 1 1818 6
 3848 00b6 002B     		cmp	r3, #0
 3849 00b8 0FD0     		beq	.L207
1819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        Otherwise, set it to NULL */
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 121


1822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 3850              		.loc 1 1822 9
 3851 00ba 7B68     		ldr	r3, [r7, #4]
 3852 00bc 1B68     		ldr	r3, [r3]
 3853 00be 9B68     		ldr	r3, [r3, #8]
 3854 00c0 03F08003 		and	r3, r3, #128
 3855              		.loc 1 1822 8
 3856 00c4 802B     		cmp	r3, #128
 3857 00c6 04D1     		bne	.L208
1823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
 3858              		.loc 1 1824 12
 3859 00c8 7B68     		ldr	r3, [r7, #4]
 3860 00ca 1B6F     		ldr	r3, [r3, #112]
 3861              		.loc 1 1824 40
 3862 00cc 5D4A     		ldr	r2, .L223
 3863 00ce 1A65     		str	r2, [r3, #80]
 3864 00d0 03E0     		b	.L207
 3865              	.L208:
1825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     else
1827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 3866              		.loc 1 1828 12
 3867 00d2 7B68     		ldr	r3, [r7, #4]
 3868 00d4 1B6F     		ldr	r3, [r3, #112]
 3869              		.loc 1 1828 40
 3870 00d6 0022     		movs	r2, #0
 3871 00d8 1A65     		str	r2, [r3, #80]
 3872              	.L207:
1829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 3873              		.loc 1 1832 12
 3874 00da 7B68     		ldr	r3, [r7, #4]
 3875 00dc 5B6F     		ldr	r3, [r3, #116]
 3876              		.loc 1 1832 6
 3877 00de 002B     		cmp	r3, #0
 3878 00e0 0FD0     		beq	.L209
1833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        Otherwise, set it to NULL */
1836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3879              		.loc 1 1836 9
 3880 00e2 7B68     		ldr	r3, [r7, #4]
 3881 00e4 1B68     		ldr	r3, [r3]
 3882 00e6 9B68     		ldr	r3, [r3, #8]
 3883 00e8 03F04003 		and	r3, r3, #64
 3884              		.loc 1 1836 8
 3885 00ec 402B     		cmp	r3, #64
 3886 00ee 04D1     		bne	.L210
1837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
 3887              		.loc 1 1838 12
 3888 00f0 7B68     		ldr	r3, [r7, #4]
 3889 00f2 5B6F     		ldr	r3, [r3, #116]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 122


 3890              		.loc 1 1838 40
 3891 00f4 544A     		ldr	r2, .L223+4
 3892 00f6 1A65     		str	r2, [r3, #80]
 3893 00f8 03E0     		b	.L209
 3894              	.L210:
1839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     else
1841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 3895              		.loc 1 1842 12
 3896 00fa 7B68     		ldr	r3, [r7, #4]
 3897 00fc 5B6F     		ldr	r3, [r3, #116]
 3898              		.loc 1 1842 40
 3899 00fe 0022     		movs	r2, #0
 3900 0100 1A65     		str	r2, [r3, #80]
 3901              	.L209:
1843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Abort the UART DMA Tx channel if enabled */
1847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 3902              		.loc 1 1847 7
 3903 0102 7B68     		ldr	r3, [r7, #4]
 3904 0104 1B68     		ldr	r3, [r3]
 3905 0106 9B68     		ldr	r3, [r3, #8]
 3906 0108 03F08003 		and	r3, r3, #128
 3907              		.loc 1 1847 6
 3908 010c 802B     		cmp	r3, #128
 3909 010e 2DD1     		bne	.L211
 3910              	.L214:
 3911              	.LBB549:
1848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 3912              		.loc 1 1850 5 discriminator 1
 3913 0110 7B68     		ldr	r3, [r7, #4]
 3914 0112 1B68     		ldr	r3, [r3]
 3915 0114 0833     		adds	r3, r3, #8
 3916 0116 7B62     		str	r3, [r7, #36]
 3917              	.LBB550:
 3918              	.LBB551:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3919              		.loc 2 1072 4 discriminator 1
 3920 0118 7B6A     		ldr	r3, [r7, #36]
 3921              		.syntax unified
 3922              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3923 011a 53E8003F 		ldrex r3, [r3]
 3924              	@ 0 "" 2
 3925              		.thumb
 3926              		.syntax unified
 3927 011e 3B62     		str	r3, [r7, #32]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3928              		.loc 2 1073 10 discriminator 1
 3929 0120 3B6A     		ldr	r3, [r7, #32]
 3930              	.LBE551:
 3931              	.LBE550:
 3932              		.loc 1 1850 5 discriminator 1
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 123


 3933 0122 23F08003 		bic	r3, r3, #128
 3934 0126 7B67     		str	r3, [r7, #116]
 3935 0128 7B68     		ldr	r3, [r7, #4]
 3936 012a 1B68     		ldr	r3, [r3]
 3937 012c 0833     		adds	r3, r3, #8
 3938 012e 7A6F     		ldr	r2, [r7, #116]
 3939 0130 3A63     		str	r2, [r7, #48]
 3940 0132 FB62     		str	r3, [r7, #44]
 3941              	.LBB552:
 3942              	.LBB553:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3943              		.loc 2 1123 4 discriminator 1
 3944 0134 F96A     		ldr	r1, [r7, #44]
 3945 0136 3A6B     		ldr	r2, [r7, #48]
 3946              		.syntax unified
 3947              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3948 0138 41E80023 		strex r3, r2, [r1]
 3949              	@ 0 "" 2
 3950              		.thumb
 3951              		.syntax unified
 3952 013c BB62     		str	r3, [r7, #40]
 3953              		.loc 2 1124 10 discriminator 1
 3954 013e BB6A     		ldr	r3, [r7, #40]
 3955              	.LBE553:
 3956              	.LBE552:
 3957              		.loc 1 1850 5 discriminator 1
 3958 0140 002B     		cmp	r3, #0
 3959 0142 E5D1     		bne	.L214
 3960              	.LBE549:
1851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 3961              		.loc 1 1853 14
 3962 0144 7B68     		ldr	r3, [r7, #4]
 3963 0146 1B6F     		ldr	r3, [r3, #112]
 3964              		.loc 1 1853 8
 3965 0148 002B     		cmp	r3, #0
 3966 014a 0FD0     		beq	.L211
1854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
1856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Abort DMA TX */
1859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 3967              		.loc 1 1859 11
 3968 014c 7B68     		ldr	r3, [r7, #4]
 3969 014e 1B6F     		ldr	r3, [r3, #112]
 3970 0150 1846     		mov	r0, r3
 3971 0152 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3972 0156 0346     		mov	r3, r0
 3973              		.loc 1 1859 10
 3974 0158 002B     		cmp	r3, #0
 3975 015a 04D0     		beq	.L215
1860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
 3976              		.loc 1 1861 14
 3977 015c 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 124


 3978 015e 1B6F     		ldr	r3, [r3, #112]
 3979              		.loc 1 1861 42
 3980 0160 0022     		movs	r2, #0
 3981 0162 1A65     		str	r2, [r3, #80]
 3982 0164 02E0     		b	.L211
 3983              	.L215:
1862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       else
1864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         abortcplt = 0U;
 3984              		.loc 1 1865 19
 3985 0166 0023     		movs	r3, #0
 3986 0168 C7F88430 		str	r3, [r7, #132]
 3987              	.L211:
1866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Abort the UART DMA Rx channel if enabled */
1871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3988              		.loc 1 1871 7
 3989 016c 7B68     		ldr	r3, [r7, #4]
 3990 016e 1B68     		ldr	r3, [r3]
 3991 0170 9B68     		ldr	r3, [r3, #8]
 3992 0172 03F04003 		and	r3, r3, #64
 3993              		.loc 1 1871 6
 3994 0176 402B     		cmp	r3, #64
 3995 0178 30D1     		bne	.L216
 3996              	.L219:
 3997              	.LBB554:
1872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable the UART DMA Rx request if enabled */
1874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3998              		.loc 1 1874 5 discriminator 1
 3999 017a 7B68     		ldr	r3, [r7, #4]
 4000 017c 1B68     		ldr	r3, [r3]
 4001 017e 0833     		adds	r3, r3, #8
 4002 0180 3B61     		str	r3, [r7, #16]
 4003              	.LBB555:
 4004              	.LBB556:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4005              		.loc 2 1072 4 discriminator 1
 4006 0182 3B69     		ldr	r3, [r7, #16]
 4007              		.syntax unified
 4008              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4009 0184 53E8003F 		ldrex r3, [r3]
 4010              	@ 0 "" 2
 4011              		.thumb
 4012              		.syntax unified
 4013 0188 FB60     		str	r3, [r7, #12]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4014              		.loc 2 1073 10 discriminator 1
 4015 018a FB68     		ldr	r3, [r7, #12]
 4016              	.LBE556:
 4017              	.LBE555:
 4018              		.loc 1 1874 5 discriminator 1
 4019 018c 23F04003 		bic	r3, r3, #64
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 125


 4020 0190 3B67     		str	r3, [r7, #112]
 4021 0192 7B68     		ldr	r3, [r7, #4]
 4022 0194 1B68     		ldr	r3, [r3]
 4023 0196 0833     		adds	r3, r3, #8
 4024 0198 3A6F     		ldr	r2, [r7, #112]
 4025 019a FA61     		str	r2, [r7, #28]
 4026 019c BB61     		str	r3, [r7, #24]
 4027              	.LBB557:
 4028              	.LBB558:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4029              		.loc 2 1123 4 discriminator 1
 4030 019e B969     		ldr	r1, [r7, #24]
 4031 01a0 FA69     		ldr	r2, [r7, #28]
 4032              		.syntax unified
 4033              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4034 01a2 41E80023 		strex r3, r2, [r1]
 4035              	@ 0 "" 2
 4036              		.thumb
 4037              		.syntax unified
 4038 01a6 7B61     		str	r3, [r7, #20]
 4039              		.loc 2 1124 10 discriminator 1
 4040 01a8 7B69     		ldr	r3, [r7, #20]
 4041              	.LBE558:
 4042              	.LBE557:
 4043              		.loc 1 1874 5 discriminator 1
 4044 01aa 002B     		cmp	r3, #0
 4045 01ac E5D1     		bne	.L219
 4046              	.LBE554:
1875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 4047              		.loc 1 1877 14
 4048 01ae 7B68     		ldr	r3, [r7, #4]
 4049 01b0 5B6F     		ldr	r3, [r3, #116]
 4050              		.loc 1 1877 8
 4051 01b2 002B     		cmp	r3, #0
 4052 01b4 12D0     		beq	.L216
1878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
1880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Abort DMA RX */
1883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 4053              		.loc 1 1883 11
 4054 01b6 7B68     		ldr	r3, [r7, #4]
 4055 01b8 5B6F     		ldr	r3, [r3, #116]
 4056 01ba 1846     		mov	r0, r3
 4057 01bc FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4058 01c0 0346     		mov	r3, r0
 4059              		.loc 1 1883 10
 4060 01c2 002B     		cmp	r3, #0
 4061 01c4 07D0     		beq	.L220
1884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
 4062              		.loc 1 1885 14
 4063 01c6 7B68     		ldr	r3, [r7, #4]
 4064 01c8 5B6F     		ldr	r3, [r3, #116]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 126


 4065              		.loc 1 1885 42
 4066 01ca 0022     		movs	r2, #0
 4067 01cc 1A65     		str	r2, [r3, #80]
1886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         abortcplt = 1U;
 4068              		.loc 1 1886 19
 4069 01ce 0123     		movs	r3, #1
 4070 01d0 C7F88430 		str	r3, [r7, #132]
 4071 01d4 02E0     		b	.L216
 4072              	.L220:
1887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       else
1889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         abortcplt = 0U;
 4073              		.loc 1 1890 19
 4074 01d6 0023     		movs	r3, #0
 4075 01d8 C7F88430 		str	r3, [r7, #132]
 4076              	.L216:
1891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (abortcplt == 1U)
 4077              		.loc 1 1896 6
 4078 01dc D7F88430 		ldr	r3, [r7, #132]
 4079 01e0 012B     		cmp	r3, #1
 4080 01e2 2AD1     		bne	.L221
1897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferCount = 0U;
 4081              		.loc 1 1899 24
 4082 01e4 7B68     		ldr	r3, [r7, #4]
 4083 01e6 0022     		movs	r2, #0
 4084 01e8 A3F85220 		strh	r2, [r3, #82]	@ movhi
1900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferCount = 0U;
 4085              		.loc 1 1900 24
 4086 01ec 7B68     		ldr	r3, [r7, #4]
 4087 01ee 0022     		movs	r2, #0
 4088 01f0 A3F85A20 		strh	r2, [r3, #90]	@ movhi
1901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Clear ISR function pointers */
1903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxISR = NULL;
 4089              		.loc 1 1903 18
 4090 01f4 7B68     		ldr	r3, [r7, #4]
 4091 01f6 0022     		movs	r2, #0
 4092 01f8 9A66     		str	r2, [r3, #104]
1904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxISR = NULL;
 4093              		.loc 1 1904 18
 4094 01fa 7B68     		ldr	r3, [r7, #4]
 4095 01fc 0022     		movs	r2, #0
 4096 01fe DA66     		str	r2, [r3, #108]
1905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Reset errorCode */
1907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 4097              		.loc 1 1907 22
 4098 0200 7B68     		ldr	r3, [r7, #4]
 4099 0202 0022     		movs	r2, #0
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 127


 4100 0204 C3F88420 		str	r2, [r3, #132]
1908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
 4101              		.loc 1 1910 5
 4102 0208 7B68     		ldr	r3, [r7, #4]
 4103 020a 1B68     		ldr	r3, [r3]
 4104 020c 0F22     		movs	r2, #15
 4105 020e 1A62     		str	r2, [r3, #32]
1911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Discard the received data */
1914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 4106              		.loc 1 1914 5
 4107 0210 7B68     		ldr	r3, [r7, #4]
 4108 0212 1B68     		ldr	r3, [r3]
 4109 0214 9A69     		ldr	r2, [r3, #24]
 4110 0216 7B68     		ldr	r3, [r7, #4]
 4111 0218 1B68     		ldr	r3, [r3]
 4112 021a 42F00802 		orr	r2, r2, #8
 4113 021e 9A61     		str	r2, [r3, #24]
1915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
 4114              		.loc 1 1917 20
 4115 0220 7B68     		ldr	r3, [r7, #4]
 4116 0222 2022     		movs	r2, #32
 4117 0224 DA67     		str	r2, [r3, #124]
1918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 4118              		.loc 1 1918 20
 4119 0226 7B68     		ldr	r3, [r7, #4]
 4120 0228 2022     		movs	r2, #32
 4121 022a C3F88020 		str	r2, [r3, #128]
1919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4122              		.loc 1 1919 26
 4123 022e 7B68     		ldr	r3, [r7, #4]
 4124 0230 0022     		movs	r2, #0
 4125 0232 1A66     		str	r2, [r3, #96]
1920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Call registered Abort complete callback */
1924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->AbortCpltCallback(huart);
1925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #else
1926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Call legacy weak Abort complete callback */
1927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
 4126              		.loc 1 1927 5
 4127 0234 7868     		ldr	r0, [r7, #4]
 4128 0236 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 4129              	.L221:
1928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 4130              		.loc 1 1931 10
 4131 023a 0023     		movs	r3, #0
1932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 128


 4132              		.loc 1 1932 1
 4133 023c 1846     		mov	r0, r3
 4134 023e 8837     		adds	r7, r7, #136
 4135              	.LCFI103:
 4136              		.cfi_def_cfa_offset 8
 4137 0240 BD46     		mov	sp, r7
 4138              	.LCFI104:
 4139              		.cfi_def_cfa_register 13
 4140              		@ sp needed
 4141 0242 80BD     		pop	{r7, pc}
 4142              	.L224:
 4143              		.align	2
 4144              	.L223:
 4145 0244 00000000 		.word	UART_DMATxAbortCallback
 4146 0248 00000000 		.word	UART_DMARxAbortCallback
 4147              		.cfi_endproc
 4148              	.LFE160:
 4150              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 4151              		.align	1
 4152              		.global	HAL_UART_AbortTransmit_IT
 4153              		.syntax unified
 4154              		.thumb
 4155              		.thumb_func
 4157              	HAL_UART_AbortTransmit_IT:
 4158              	.LFB161:
1933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
1935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle.
1937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         This procedure performs following operations :
1939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           - Set handle State to READY
1943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
1947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
1948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
1949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 4159              		.loc 1 1949 1
 4160              		.cfi_startproc
 4161              		@ args = 0, pretend = 0, frame = 56
 4162              		@ frame_needed = 1, uses_anonymous_args = 0
 4163 0000 80B5     		push	{r7, lr}
 4164              	.LCFI105:
 4165              		.cfi_def_cfa_offset 8
 4166              		.cfi_offset 7, -8
 4167              		.cfi_offset 14, -4
 4168 0002 8EB0     		sub	sp, sp, #56
 4169              	.LCFI106:
 4170              		.cfi_def_cfa_offset 64
 4171 0004 00AF     		add	r7, sp, #0
 4172              	.LCFI107:
 4173              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 129


 4174 0006 7860     		str	r0, [r7, #4]
 4175              	.L228:
 4176              	.LBB559:
1950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable interrupts */
1951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 4177              		.loc 1 1951 3 discriminator 1
 4178 0008 7B68     		ldr	r3, [r7, #4]
 4179 000a 1B68     		ldr	r3, [r3]
 4180 000c 3B62     		str	r3, [r7, #32]
 4181              	.LBB560:
 4182              	.LBB561:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4183              		.loc 2 1072 4 discriminator 1
 4184 000e 3B6A     		ldr	r3, [r7, #32]
 4185              		.syntax unified
 4186              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4187 0010 53E8003F 		ldrex r3, [r3]
 4188              	@ 0 "" 2
 4189              		.thumb
 4190              		.syntax unified
 4191 0014 FB61     		str	r3, [r7, #28]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4192              		.loc 2 1073 10 discriminator 1
 4193 0016 FB69     		ldr	r3, [r7, #28]
 4194              	.LBE561:
 4195              	.LBE560:
 4196              		.loc 1 1951 3 discriminator 1
 4197 0018 23F0C003 		bic	r3, r3, #192
 4198 001c 7B63     		str	r3, [r7, #52]
 4199 001e 7B68     		ldr	r3, [r7, #4]
 4200 0020 1B68     		ldr	r3, [r3]
 4201 0022 1A46     		mov	r2, r3
 4202 0024 7B6B     		ldr	r3, [r7, #52]
 4203 0026 FB62     		str	r3, [r7, #44]
 4204 0028 BA62     		str	r2, [r7, #40]
 4205              	.LBB562:
 4206              	.LBB563:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4207              		.loc 2 1123 4 discriminator 1
 4208 002a B96A     		ldr	r1, [r7, #40]
 4209 002c FA6A     		ldr	r2, [r7, #44]
 4210              		.syntax unified
 4211              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4212 002e 41E80023 		strex r3, r2, [r1]
 4213              	@ 0 "" 2
 4214              		.thumb
 4215              		.syntax unified
 4216 0032 7B62     		str	r3, [r7, #36]
 4217              		.loc 2 1124 10 discriminator 1
 4218 0034 7B6A     		ldr	r3, [r7, #36]
 4219              	.LBE563:
 4220              	.LBE562:
 4221              		.loc 1 1951 3 discriminator 1
 4222 0036 002B     		cmp	r3, #0
 4223 0038 E6D1     		bne	.L228
 4224              	.LBE559:
1952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 130


1953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Abort the UART DMA Tx channel if enabled */
1954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 4225              		.loc 1 1954 7
 4226 003a 7B68     		ldr	r3, [r7, #4]
 4227 003c 1B68     		ldr	r3, [r3]
 4228 003e 9B68     		ldr	r3, [r3, #8]
 4229 0040 03F08003 		and	r3, r3, #128
 4230              		.loc 1 1954 6
 4231 0044 802B     		cmp	r3, #128
 4232 0046 3FD1     		bne	.L229
 4233              	.L232:
 4234              	.LBB564:
1955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable the UART DMA Tx request if enabled */
1957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 4235              		.loc 1 1957 5 discriminator 1
 4236 0048 7B68     		ldr	r3, [r7, #4]
 4237 004a 1B68     		ldr	r3, [r3]
 4238 004c 0833     		adds	r3, r3, #8
 4239 004e FB60     		str	r3, [r7, #12]
 4240              	.LBB565:
 4241              	.LBB566:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4242              		.loc 2 1072 4 discriminator 1
 4243 0050 FB68     		ldr	r3, [r7, #12]
 4244              		.syntax unified
 4245              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4246 0052 53E8003F 		ldrex r3, [r3]
 4247              	@ 0 "" 2
 4248              		.thumb
 4249              		.syntax unified
 4250 0056 BB60     		str	r3, [r7, #8]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4251              		.loc 2 1073 10 discriminator 1
 4252 0058 BB68     		ldr	r3, [r7, #8]
 4253              	.LBE566:
 4254              	.LBE565:
 4255              		.loc 1 1957 5 discriminator 1
 4256 005a 23F08003 		bic	r3, r3, #128
 4257 005e 3B63     		str	r3, [r7, #48]
 4258 0060 7B68     		ldr	r3, [r7, #4]
 4259 0062 1B68     		ldr	r3, [r3]
 4260 0064 0833     		adds	r3, r3, #8
 4261 0066 3A6B     		ldr	r2, [r7, #48]
 4262 0068 BA61     		str	r2, [r7, #24]
 4263 006a 7B61     		str	r3, [r7, #20]
 4264              	.LBB567:
 4265              	.LBB568:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4266              		.loc 2 1123 4 discriminator 1
 4267 006c 7969     		ldr	r1, [r7, #20]
 4268 006e BA69     		ldr	r2, [r7, #24]
 4269              		.syntax unified
 4270              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4271 0070 41E80023 		strex r3, r2, [r1]
 4272              	@ 0 "" 2
 4273              		.thumb
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 131


 4274              		.syntax unified
 4275 0074 3B61     		str	r3, [r7, #16]
 4276              		.loc 2 1124 10 discriminator 1
 4277 0076 3B69     		ldr	r3, [r7, #16]
 4278              	.LBE568:
 4279              	.LBE567:
 4280              		.loc 1 1957 5 discriminator 1
 4281 0078 002B     		cmp	r3, #0
 4282 007a E5D1     		bne	.L232
 4283              	.LBE564:
1958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 4284              		.loc 1 1960 14
 4285 007c 7B68     		ldr	r3, [r7, #4]
 4286 007e 1B6F     		ldr	r3, [r3, #112]
 4287              		.loc 1 1960 8
 4288 0080 002B     		cmp	r3, #0
 4289 0082 13D0     		beq	.L233
1961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
1963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
 4290              		.loc 1 1964 12
 4291 0084 7B68     		ldr	r3, [r7, #4]
 4292 0086 1B6F     		ldr	r3, [r3, #112]
 4293              		.loc 1 1964 40
 4294 0088 184A     		ldr	r2, .L236
 4295 008a 1A65     		str	r2, [r3, #80]
1965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Abort DMA TX */
1967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 4296              		.loc 1 1967 11
 4297 008c 7B68     		ldr	r3, [r7, #4]
 4298 008e 1B6F     		ldr	r3, [r3, #112]
 4299 0090 1846     		mov	r0, r3
 4300 0092 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4301 0096 0346     		mov	r3, r0
 4302              		.loc 1 1967 10
 4303 0098 002B     		cmp	r3, #0
 4304 009a 22D0     		beq	.L234
1968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
1969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
1970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
 4305              		.loc 1 1970 14
 4306 009c 7B68     		ldr	r3, [r7, #4]
 4307 009e 1B6F     		ldr	r3, [r3, #112]
 4308              		.loc 1 1970 22
 4309 00a0 1B6D     		ldr	r3, [r3, #80]
 4310              		.loc 1 1970 47
 4311 00a2 7A68     		ldr	r2, [r7, #4]
 4312 00a4 126F     		ldr	r2, [r2, #112]
 4313              		.loc 1 1970 9
 4314 00a6 1046     		mov	r0, r2
 4315 00a8 9847     		blx	r3
 4316              	.LVL0:
 4317 00aa 1AE0     		b	.L234
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 132


 4318              	.L233:
1971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
1972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     else
1974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
1975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Reset Tx transfer counter */
1976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->TxXferCount = 0U;
 4319              		.loc 1 1976 26
 4320 00ac 7B68     		ldr	r3, [r7, #4]
 4321 00ae 0022     		movs	r2, #0
 4322 00b0 A3F85220 		strh	r2, [r3, #82]	@ movhi
1977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Clear TxISR function pointers */
1979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->TxISR = NULL;
 4323              		.loc 1 1979 20
 4324 00b4 7B68     		ldr	r3, [r7, #4]
 4325 00b6 0022     		movs	r2, #0
 4326 00b8 DA66     		str	r2, [r3, #108]
1980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Restore huart->gState to Ready */
1982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 4327              		.loc 1 1982 21
 4328 00ba 7B68     		ldr	r3, [r7, #4]
 4329 00bc 2022     		movs	r2, #32
 4330 00be DA67     		str	r2, [r3, #124]
1983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Call registered Abort Transmit Complete Callback */
1987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->AbortTransmitCpltCallback(huart);
1988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #else
1989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Call legacy weak Abort Transmit Complete Callback */
1990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
 4331              		.loc 1 1990 7
 4332 00c0 7868     		ldr	r0, [r7, #4]
 4333 00c2 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 4334 00c6 0CE0     		b	.L234
 4335              	.L229:
1991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
1993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
1994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
1995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
1996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Reset Tx transfer counter */
1997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferCount = 0U;
 4336              		.loc 1 1997 24
 4337 00c8 7B68     		ldr	r3, [r7, #4]
 4338 00ca 0022     		movs	r2, #0
 4339 00cc A3F85220 		strh	r2, [r3, #82]	@ movhi
1998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
1999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Clear TxISR function pointers */
2000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxISR = NULL;
 4340              		.loc 1 2000 18
 4341 00d0 7B68     		ldr	r3, [r7, #4]
 4342 00d2 0022     		movs	r2, #0
 4343 00d4 DA66     		str	r2, [r3, #108]
2001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 133


2002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Restore huart->gState to Ready */
2004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 4344              		.loc 1 2004 19
 4345 00d6 7B68     		ldr	r3, [r7, #4]
 4346 00d8 2022     		movs	r2, #32
 4347 00da DA67     		str	r2, [r3, #124]
2005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Call registered Abort Transmit Complete Callback */
2009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->AbortTransmitCpltCallback(huart);
2010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #else
2011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Call legacy weak Abort Transmit Complete Callback */
2012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
 4348              		.loc 1 2012 5
 4349 00dc 7868     		ldr	r0, [r7, #4]
 4350 00de FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 4351              	.L234:
2013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
2015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 4352              		.loc 1 2016 10
 4353 00e2 0023     		movs	r3, #0
2017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 4354              		.loc 1 2017 1
 4355 00e4 1846     		mov	r0, r3
 4356 00e6 3837     		adds	r7, r7, #56
 4357              	.LCFI108:
 4358              		.cfi_def_cfa_offset 8
 4359 00e8 BD46     		mov	sp, r7
 4360              	.LCFI109:
 4361              		.cfi_def_cfa_register 13
 4362              		@ sp needed
 4363 00ea 80BD     		pop	{r7, pc}
 4364              	.L237:
 4365              		.align	2
 4366              	.L236:
 4367 00ec 00000000 		.word	UART_DMATxOnlyAbortCallback
 4368              		.cfi_endproc
 4369              	.LFE161:
 4371              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 4372              		.align	1
 4373              		.global	HAL_UART_AbortReceive_IT
 4374              		.syntax unified
 4375              		.thumb
 4376              		.thumb_func
 4378              	HAL_UART_AbortReceive_IT:
 4379              	.LFB162:
2018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
2021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle.
2022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
2023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         This procedure performs following operations :
2024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 134


2025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           - Set handle State to READY
2028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
2032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
2034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 4380              		.loc 1 2034 1
 4381              		.cfi_startproc
 4382              		@ args = 0, pretend = 0, frame = 104
 4383              		@ frame_needed = 1, uses_anonymous_args = 0
 4384 0000 80B5     		push	{r7, lr}
 4385              	.LCFI110:
 4386              		.cfi_def_cfa_offset 8
 4387              		.cfi_offset 7, -8
 4388              		.cfi_offset 14, -4
 4389 0002 9AB0     		sub	sp, sp, #104
 4390              	.LCFI111:
 4391              		.cfi_def_cfa_offset 112
 4392 0004 00AF     		add	r7, sp, #0
 4393              	.LCFI112:
 4394              		.cfi_def_cfa_register 7
 4395 0006 7860     		str	r0, [r7, #4]
 4396              	.L241:
 4397              	.LBB569:
2035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 4398              		.loc 1 2036 3 discriminator 1
 4399 0008 7B68     		ldr	r3, [r7, #4]
 4400 000a 1B68     		ldr	r3, [r3]
 4401 000c BB64     		str	r3, [r7, #72]
 4402              	.LBB570:
 4403              	.LBB571:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4404              		.loc 2 1072 4 discriminator 1
 4405 000e BB6C     		ldr	r3, [r7, #72]
 4406              		.syntax unified
 4407              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4408 0010 53E8003F 		ldrex r3, [r3]
 4409              	@ 0 "" 2
 4410              		.thumb
 4411              		.syntax unified
 4412 0014 7B64     		str	r3, [r7, #68]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4413              		.loc 2 1073 10 discriminator 1
 4414 0016 7B6C     		ldr	r3, [r7, #68]
 4415              	.LBE571:
 4416              	.LBE570:
 4417              		.loc 1 2036 3 discriminator 1
 4418 0018 23F49073 		bic	r3, r3, #288
 4419 001c 7B66     		str	r3, [r7, #100]
 4420 001e 7B68     		ldr	r3, [r7, #4]
 4421 0020 1B68     		ldr	r3, [r3]
 4422 0022 1A46     		mov	r2, r3
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 135


 4423 0024 7B6E     		ldr	r3, [r7, #100]
 4424 0026 7B65     		str	r3, [r7, #84]
 4425 0028 3A65     		str	r2, [r7, #80]
 4426              	.LBB572:
 4427              	.LBB573:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4428              		.loc 2 1123 4 discriminator 1
 4429 002a 396D     		ldr	r1, [r7, #80]
 4430 002c 7A6D     		ldr	r2, [r7, #84]
 4431              		.syntax unified
 4432              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4433 002e 41E80023 		strex r3, r2, [r1]
 4434              	@ 0 "" 2
 4435              		.thumb
 4436              		.syntax unified
 4437 0032 FB64     		str	r3, [r7, #76]
 4438              		.loc 2 1124 10 discriminator 1
 4439 0034 FB6C     		ldr	r3, [r7, #76]
 4440              	.LBE573:
 4441              	.LBE572:
 4442              		.loc 1 2036 3 discriminator 1
 4443 0036 002B     		cmp	r3, #0
 4444 0038 E6D1     		bne	.L241
 4445              	.L244:
 4446              	.LBE569:
 4447              	.LBB574:
2037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4448              		.loc 1 2037 3 discriminator 1
 4449 003a 7B68     		ldr	r3, [r7, #4]
 4450 003c 1B68     		ldr	r3, [r3]
 4451 003e 0833     		adds	r3, r3, #8
 4452 0040 7B63     		str	r3, [r7, #52]
 4453              	.LBB575:
 4454              	.LBB576:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4455              		.loc 2 1072 4 discriminator 1
 4456 0042 7B6B     		ldr	r3, [r7, #52]
 4457              		.syntax unified
 4458              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4459 0044 53E8003F 		ldrex r3, [r3]
 4460              	@ 0 "" 2
 4461              		.thumb
 4462              		.syntax unified
 4463 0048 3B63     		str	r3, [r7, #48]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4464              		.loc 2 1073 10 discriminator 1
 4465 004a 3B6B     		ldr	r3, [r7, #48]
 4466              	.LBE576:
 4467              	.LBE575:
 4468              		.loc 1 2037 3 discriminator 1
 4469 004c 23F00103 		bic	r3, r3, #1
 4470 0050 3B66     		str	r3, [r7, #96]
 4471 0052 7B68     		ldr	r3, [r7, #4]
 4472 0054 1B68     		ldr	r3, [r3]
 4473 0056 0833     		adds	r3, r3, #8
 4474 0058 3A6E     		ldr	r2, [r7, #96]
 4475 005a 3A64     		str	r2, [r7, #64]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 136


 4476 005c FB63     		str	r3, [r7, #60]
 4477              	.LBB577:
 4478              	.LBB578:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4479              		.loc 2 1123 4 discriminator 1
 4480 005e F96B     		ldr	r1, [r7, #60]
 4481 0060 3A6C     		ldr	r2, [r7, #64]
 4482              		.syntax unified
 4483              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4484 0062 41E80023 		strex r3, r2, [r1]
 4485              	@ 0 "" 2
 4486              		.thumb
 4487              		.syntax unified
 4488 0066 BB63     		str	r3, [r7, #56]
 4489              		.loc 2 1124 10 discriminator 1
 4490 0068 BB6B     		ldr	r3, [r7, #56]
 4491              	.LBE578:
 4492              	.LBE577:
 4493              		.loc 1 2037 3 discriminator 1
 4494 006a 002B     		cmp	r3, #0
 4495 006c E5D1     		bne	.L244
 4496              	.LBE574:
2038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
2040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 4497              		.loc 1 2040 12
 4498 006e 7B68     		ldr	r3, [r7, #4]
 4499 0070 1B6E     		ldr	r3, [r3, #96]
 4500              		.loc 1 2040 6
 4501 0072 012B     		cmp	r3, #1
 4502 0074 18D1     		bne	.L245
 4503              	.L248:
 4504              	.LBB579:
2041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
2042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 4505              		.loc 1 2042 5 discriminator 1
 4506 0076 7B68     		ldr	r3, [r7, #4]
 4507 0078 1B68     		ldr	r3, [r3]
 4508 007a 3B62     		str	r3, [r7, #32]
 4509              	.LBB580:
 4510              	.LBB581:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4511              		.loc 2 1072 4 discriminator 1
 4512 007c 3B6A     		ldr	r3, [r7, #32]
 4513              		.syntax unified
 4514              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4515 007e 53E8003F 		ldrex r3, [r3]
 4516              	@ 0 "" 2
 4517              		.thumb
 4518              		.syntax unified
 4519 0082 FB61     		str	r3, [r7, #28]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4520              		.loc 2 1073 10 discriminator 1
 4521 0084 FB69     		ldr	r3, [r7, #28]
 4522              	.LBE581:
 4523              	.LBE580:
 4524              		.loc 1 2042 5 discriminator 1
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 137


 4525 0086 23F01003 		bic	r3, r3, #16
 4526 008a FB65     		str	r3, [r7, #92]
 4527 008c 7B68     		ldr	r3, [r7, #4]
 4528 008e 1B68     		ldr	r3, [r3]
 4529 0090 1A46     		mov	r2, r3
 4530 0092 FB6D     		ldr	r3, [r7, #92]
 4531 0094 FB62     		str	r3, [r7, #44]
 4532 0096 BA62     		str	r2, [r7, #40]
 4533              	.LBB582:
 4534              	.LBB583:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4535              		.loc 2 1123 4 discriminator 1
 4536 0098 B96A     		ldr	r1, [r7, #40]
 4537 009a FA6A     		ldr	r2, [r7, #44]
 4538              		.syntax unified
 4539              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4540 009c 41E80023 		strex r3, r2, [r1]
 4541              	@ 0 "" 2
 4542              		.thumb
 4543              		.syntax unified
 4544 00a0 7B62     		str	r3, [r7, #36]
 4545              		.loc 2 1124 10 discriminator 1
 4546 00a2 7B6A     		ldr	r3, [r7, #36]
 4547              	.LBE583:
 4548              	.LBE582:
 4549              		.loc 1 2042 5 discriminator 1
 4550 00a4 002B     		cmp	r3, #0
 4551 00a6 E6D1     		bne	.L248
 4552              	.L245:
 4553              	.LBE579:
2043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
2044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Abort the UART DMA Rx channel if enabled */
2046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 4554              		.loc 1 2046 7
 4555 00a8 7B68     		ldr	r3, [r7, #4]
 4556 00aa 1B68     		ldr	r3, [r3]
 4557 00ac 9B68     		ldr	r3, [r3, #8]
 4558 00ae 03F04003 		and	r3, r3, #64
 4559              		.loc 1 2046 6
 4560 00b2 402B     		cmp	r3, #64
 4561 00b4 4FD1     		bne	.L249
 4562              	.L252:
 4563              	.LBB584:
2047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
2048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable the UART DMA Rx request if enabled */
2049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 4564              		.loc 1 2049 5 discriminator 1
 4565 00b6 7B68     		ldr	r3, [r7, #4]
 4566 00b8 1B68     		ldr	r3, [r3]
 4567 00ba 0833     		adds	r3, r3, #8
 4568 00bc FB60     		str	r3, [r7, #12]
 4569              	.LBB585:
 4570              	.LBB586:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4571              		.loc 2 1072 4 discriminator 1
 4572 00be FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 138


 4573              		.syntax unified
 4574              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4575 00c0 53E8003F 		ldrex r3, [r3]
 4576              	@ 0 "" 2
 4577              		.thumb
 4578              		.syntax unified
 4579 00c4 BB60     		str	r3, [r7, #8]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4580              		.loc 2 1073 10 discriminator 1
 4581 00c6 BB68     		ldr	r3, [r7, #8]
 4582              	.LBE586:
 4583              	.LBE585:
 4584              		.loc 1 2049 5 discriminator 1
 4585 00c8 23F04003 		bic	r3, r3, #64
 4586 00cc BB65     		str	r3, [r7, #88]
 4587 00ce 7B68     		ldr	r3, [r7, #4]
 4588 00d0 1B68     		ldr	r3, [r3]
 4589 00d2 0833     		adds	r3, r3, #8
 4590 00d4 BA6D     		ldr	r2, [r7, #88]
 4591 00d6 BA61     		str	r2, [r7, #24]
 4592 00d8 7B61     		str	r3, [r7, #20]
 4593              	.LBB587:
 4594              	.LBB588:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4595              		.loc 2 1123 4 discriminator 1
 4596 00da 7969     		ldr	r1, [r7, #20]
 4597 00dc BA69     		ldr	r2, [r7, #24]
 4598              		.syntax unified
 4599              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4600 00de 41E80023 		strex r3, r2, [r1]
 4601              	@ 0 "" 2
 4602              		.thumb
 4603              		.syntax unified
 4604 00e2 3B61     		str	r3, [r7, #16]
 4605              		.loc 2 1124 10 discriminator 1
 4606 00e4 3B69     		ldr	r3, [r7, #16]
 4607              	.LBE588:
 4608              	.LBE587:
 4609              		.loc 1 2049 5 discriminator 1
 4610 00e6 002B     		cmp	r3, #0
 4611 00e8 E5D1     		bne	.L252
 4612              	.LBE584:
2050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
2052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 4613              		.loc 1 2052 14
 4614 00ea 7B68     		ldr	r3, [r7, #4]
 4615 00ec 5B6F     		ldr	r3, [r3, #116]
 4616              		.loc 1 2052 8
 4617 00ee 002B     		cmp	r3, #0
 4618 00f0 13D0     		beq	.L253
2053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
2054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
 4619              		.loc 1 2056 12
 4620 00f2 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 139


 4621 00f4 5B6F     		ldr	r3, [r3, #116]
 4622              		.loc 1 2056 40
 4623 00f6 254A     		ldr	r2, .L256
 4624 00f8 1A65     		str	r2, [r3, #80]
2057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Abort DMA RX */
2059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 4625              		.loc 1 2059 11
 4626 00fa 7B68     		ldr	r3, [r7, #4]
 4627 00fc 5B6F     		ldr	r3, [r3, #116]
 4628 00fe 1846     		mov	r0, r3
 4629 0100 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4630 0104 0346     		mov	r3, r0
 4631              		.loc 1 2059 10
 4632 0106 002B     		cmp	r3, #0
 4633 0108 3AD0     		beq	.L254
2060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
2061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
 4634              		.loc 1 2062 14
 4635 010a 7B68     		ldr	r3, [r7, #4]
 4636 010c 5B6F     		ldr	r3, [r3, #116]
 4637              		.loc 1 2062 22
 4638 010e 1B6D     		ldr	r3, [r3, #80]
 4639              		.loc 1 2062 47
 4640 0110 7A68     		ldr	r2, [r7, #4]
 4641 0112 526F     		ldr	r2, [r2, #116]
 4642              		.loc 1 2062 9
 4643 0114 1046     		mov	r0, r2
 4644 0116 9847     		blx	r3
 4645              	.LVL1:
 4646 0118 32E0     		b	.L254
 4647              	.L253:
2063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
2064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
2065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     else
2066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
2067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Reset Rx transfer counter */
2068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->RxXferCount = 0U;
 4648              		.loc 1 2068 26
 4649 011a 7B68     		ldr	r3, [r7, #4]
 4650 011c 0022     		movs	r2, #0
 4651 011e A3F85A20 		strh	r2, [r3, #90]	@ movhi
2069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Clear RxISR function pointer */
2071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->pRxBuffPtr = NULL;
 4652              		.loc 1 2071 25
 4653 0122 7B68     		ldr	r3, [r7, #4]
 4654 0124 0022     		movs	r2, #0
 4655 0126 5A65     		str	r2, [r3, #84]
2072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
2074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
 4656              		.loc 1 2074 7
 4657 0128 7B68     		ldr	r3, [r7, #4]
 4658 012a 1B68     		ldr	r3, [r3]
 4659 012c 0F22     		movs	r2, #15
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 140


 4660 012e 1A62     		str	r2, [r3, #32]
2075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Discard the received data */
2077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 4661              		.loc 1 2077 7
 4662 0130 7B68     		ldr	r3, [r7, #4]
 4663 0132 1B68     		ldr	r3, [r3]
 4664 0134 9A69     		ldr	r2, [r3, #24]
 4665 0136 7B68     		ldr	r3, [r7, #4]
 4666 0138 1B68     		ldr	r3, [r3]
 4667 013a 42F00802 		orr	r2, r2, #8
 4668 013e 9A61     		str	r2, [r3, #24]
2078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
2080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 4669              		.loc 1 2080 22
 4670 0140 7B68     		ldr	r3, [r7, #4]
 4671 0142 2022     		movs	r2, #32
 4672 0144 C3F88020 		str	r2, [r3, #128]
2081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4673              		.loc 1 2081 28
 4674 0148 7B68     		ldr	r3, [r7, #4]
 4675 014a 0022     		movs	r2, #0
 4676 014c 1A66     		str	r2, [r3, #96]
2082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Call registered Abort Receive Complete Callback */
2086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->AbortReceiveCpltCallback(huart);
2087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #else
2088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Call legacy weak Abort Receive Complete Callback */
2089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
 4677              		.loc 1 2089 7
 4678 014e 7868     		ldr	r0, [r7, #4]
 4679 0150 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 4680 0154 14E0     		b	.L254
 4681              	.L249:
2090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
2092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
2093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
2094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
2095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Reset Rx transfer counter */
2096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferCount = 0U;
 4682              		.loc 1 2096 24
 4683 0156 7B68     		ldr	r3, [r7, #4]
 4684 0158 0022     		movs	r2, #0
 4685 015a A3F85A20 		strh	r2, [r3, #90]	@ movhi
2097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Clear RxISR function pointer */
2099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->pRxBuffPtr = NULL;
 4686              		.loc 1 2099 23
 4687 015e 7B68     		ldr	r3, [r7, #4]
 4688 0160 0022     		movs	r2, #0
 4689 0162 5A65     		str	r2, [r3, #84]
2100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 141


2102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
 4690              		.loc 1 2102 5
 4691 0164 7B68     		ldr	r3, [r7, #4]
 4692 0166 1B68     		ldr	r3, [r3]
 4693 0168 0F22     		movs	r2, #15
 4694 016a 1A62     		str	r2, [r3, #32]
2103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
2105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 4695              		.loc 1 2105 20
 4696 016c 7B68     		ldr	r3, [r7, #4]
 4697 016e 2022     		movs	r2, #32
 4698 0170 C3F88020 		str	r2, [r3, #128]
2106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4699              		.loc 1 2106 26
 4700 0174 7B68     		ldr	r3, [r7, #4]
 4701 0176 0022     		movs	r2, #0
 4702 0178 1A66     		str	r2, [r3, #96]
2107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Call registered Abort Receive Complete Callback */
2111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->AbortReceiveCpltCallback(huart);
2112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #else
2113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Call legacy weak Abort Receive Complete Callback */
2114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
 4703              		.loc 1 2114 5
 4704 017a 7868     		ldr	r0, [r7, #4]
 4705 017c FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 4706              	.L254:
2115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
2117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 4707              		.loc 1 2118 10
 4708 0180 0023     		movs	r3, #0
2119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 4709              		.loc 1 2119 1
 4710 0182 1846     		mov	r0, r3
 4711 0184 6837     		adds	r7, r7, #104
 4712              	.LCFI113:
 4713              		.cfi_def_cfa_offset 8
 4714 0186 BD46     		mov	sp, r7
 4715              	.LCFI114:
 4716              		.cfi_def_cfa_register 13
 4717              		@ sp needed
 4718 0188 80BD     		pop	{r7, pc}
 4719              	.L257:
 4720 018a 00BF     		.align	2
 4721              	.L256:
 4722 018c 00000000 		.word	UART_DMARxOnlyAbortCallback
 4723              		.cfi_endproc
 4724              	.LFE162:
 4726              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 4727              		.align	1
 4728              		.global	HAL_UART_IRQHandler
 4729              		.syntax unified
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 142


 4730              		.thumb
 4731              		.thumb_func
 4733              	HAL_UART_IRQHandler:
 4734              	.LFB163:
2120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Handle UART interrupt request.
2123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
2124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
2125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
2127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 4735              		.loc 1 2127 1
 4736              		.cfi_startproc
 4737              		@ args = 0, pretend = 0, frame = 232
 4738              		@ frame_needed = 1, uses_anonymous_args = 0
 4739 0000 80B5     		push	{r7, lr}
 4740              	.LCFI115:
 4741              		.cfi_def_cfa_offset 8
 4742              		.cfi_offset 7, -8
 4743              		.cfi_offset 14, -4
 4744 0002 BAB0     		sub	sp, sp, #232
 4745              	.LCFI116:
 4746              		.cfi_def_cfa_offset 240
 4747 0004 00AF     		add	r7, sp, #0
 4748              	.LCFI117:
 4749              		.cfi_def_cfa_register 7
 4750 0006 7860     		str	r0, [r7, #4]
2128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 4751              		.loc 1 2128 25
 4752 0008 7B68     		ldr	r3, [r7, #4]
 4753 000a 1B68     		ldr	r3, [r3]
 4754              		.loc 1 2128 12
 4755 000c DB69     		ldr	r3, [r3, #28]
 4756 000e C7F8E430 		str	r3, [r7, #228]
2129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 4757              		.loc 1 2129 25
 4758 0012 7B68     		ldr	r3, [r7, #4]
 4759 0014 1B68     		ldr	r3, [r3]
 4760              		.loc 1 2129 12
 4761 0016 1B68     		ldr	r3, [r3]
 4762 0018 C7F8E030 		str	r3, [r7, #224]
2130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 4763              		.loc 1 2130 25
 4764 001c 7B68     		ldr	r3, [r7, #4]
 4765 001e 1B68     		ldr	r3, [r3]
 4766              		.loc 1 2130 12
 4767 0020 9B68     		ldr	r3, [r3, #8]
 4768 0022 C7F8DC30 		str	r3, [r7, #220]
2131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t errorflags;
2133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t errorcode;
2134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* If no error occurs */
2136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE | 
 4769              		.loc 1 2136 14
 4770 0026 D7F8E420 		ldr	r2, [r7, #228]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 143


 4771 002a 40F60F03 		movw	r3, #2063
 4772 002e 1340     		ands	r3, r3, r2
 4773 0030 C7F8D830 		str	r3, [r7, #216]
2137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (errorflags == 0U)
 4774              		.loc 1 2137 6
 4775 0034 D7F8D830 		ldr	r3, [r7, #216]
 4776 0038 002B     		cmp	r3, #0
 4777 003a 15D1     		bne	.L259
2138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
2139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
2140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if (((isrflags & USART_ISR_RXNE) != 0U)
 4778              		.loc 1 2140 20
 4779 003c D7F8E430 		ldr	r3, [r7, #228]
 4780 0040 03F02003 		and	r3, r3, #32
 4781              		.loc 1 2140 8
 4782 0044 002B     		cmp	r3, #0
 4783 0046 0FD0     		beq	.L259
2141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         && ((cr1its & USART_CR1_RXNEIE) != 0U))
 4784              		.loc 1 2141 21
 4785 0048 D7F8E030 		ldr	r3, [r7, #224]
 4786 004c 03F02003 		and	r3, r3, #32
 4787              		.loc 1 2141 9
 4788 0050 002B     		cmp	r3, #0
 4789 0052 09D0     		beq	.L259
2142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
2143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if (huart->RxISR != NULL)
 4790              		.loc 1 2143 16
 4791 0054 7B68     		ldr	r3, [r7, #4]
 4792 0056 9B6E     		ldr	r3, [r3, #104]
 4793              		.loc 1 2143 10
 4794 0058 002B     		cmp	r3, #0
 4795 005a 00F09782 		beq	.L308
2144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
2145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->RxISR(huart);
 4796              		.loc 1 2145 14
 4797 005e 7B68     		ldr	r3, [r7, #4]
 4798 0060 9B6E     		ldr	r3, [r3, #104]
 4799              		.loc 1 2145 9
 4800 0062 7868     		ldr	r0, [r7, #4]
 4801 0064 9847     		blx	r3
 4802              	.LVL2:
2146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
2147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return;
 4803              		.loc 1 2147 7
 4804 0066 91E2     		b	.L308
 4805              	.L259:
2148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
2149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
2150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* If some errors occur */
2152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if ((errorflags != 0U)
 4806              		.loc 1 2152 6
 4807 0068 D7F8D830 		ldr	r3, [r7, #216]
 4808 006c 002B     		cmp	r3, #0
 4809 006e 00F01781 		beq	.L262
2153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       && (((cr3its & USART_CR3_EIE) != 0U)
 4810              		.loc 1 2153 20
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 144


 4811 0072 D7F8DC30 		ldr	r3, [r7, #220]
 4812 0076 03F00103 		and	r3, r3, #1
 4813              		.loc 1 2153 7
 4814 007a 002B     		cmp	r3, #0
 4815 007c 06D1     		bne	.L263
2154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U)))
 4816              		.loc 1 2154 23
 4817 007e D7F8E020 		ldr	r2, [r7, #224]
 4818 0082 854B     		ldr	r3, .L314
 4819 0084 1340     		ands	r3, r3, r2
 4820              		.loc 1 2154 11
 4821 0086 002B     		cmp	r3, #0
 4822 0088 00F00A81 		beq	.L262
 4823              	.L263:
2155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
2156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
2157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 4824              		.loc 1 2157 20
 4825 008c D7F8E430 		ldr	r3, [r7, #228]
 4826 0090 03F00103 		and	r3, r3, #1
 4827              		.loc 1 2157 8
 4828 0094 002B     		cmp	r3, #0
 4829 0096 11D0     		beq	.L264
 4830              		.loc 1 2157 55 discriminator 1
 4831 0098 D7F8E030 		ldr	r3, [r7, #224]
 4832 009c 03F48073 		and	r3, r3, #256
 4833              		.loc 1 2157 43 discriminator 1
 4834 00a0 002B     		cmp	r3, #0
 4835 00a2 0BD0     		beq	.L264
2158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
2159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 4836              		.loc 1 2159 7
 4837 00a4 7B68     		ldr	r3, [r7, #4]
 4838 00a6 1B68     		ldr	r3, [r3]
 4839 00a8 0122     		movs	r2, #1
 4840 00aa 1A62     		str	r2, [r3, #32]
2160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
 4841              		.loc 1 2161 24
 4842 00ac 7B68     		ldr	r3, [r7, #4]
 4843 00ae D3F88430 		ldr	r3, [r3, #132]
 4844 00b2 43F00102 		orr	r2, r3, #1
 4845 00b6 7B68     		ldr	r3, [r7, #4]
 4846 00b8 C3F88420 		str	r2, [r3, #132]
 4847              	.L264:
2162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
2163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
2165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 4848              		.loc 1 2165 20
 4849 00bc D7F8E430 		ldr	r3, [r7, #228]
 4850 00c0 03F00203 		and	r3, r3, #2
 4851              		.loc 1 2165 8
 4852 00c4 002B     		cmp	r3, #0
 4853 00c6 11D0     		beq	.L265
 4854              		.loc 1 2165 55 discriminator 1
 4855 00c8 D7F8DC30 		ldr	r3, [r7, #220]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 145


 4856 00cc 03F00103 		and	r3, r3, #1
 4857              		.loc 1 2165 43 discriminator 1
 4858 00d0 002B     		cmp	r3, #0
 4859 00d2 0BD0     		beq	.L265
2166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
2167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 4860              		.loc 1 2167 7
 4861 00d4 7B68     		ldr	r3, [r7, #4]
 4862 00d6 1B68     		ldr	r3, [r3]
 4863 00d8 0222     		movs	r2, #2
 4864 00da 1A62     		str	r2, [r3, #32]
2168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
 4865              		.loc 1 2169 24
 4866 00dc 7B68     		ldr	r3, [r7, #4]
 4867 00de D3F88430 		ldr	r3, [r3, #132]
 4868 00e2 43F00402 		orr	r2, r3, #4
 4869 00e6 7B68     		ldr	r3, [r7, #4]
 4870 00e8 C3F88420 		str	r2, [r3, #132]
 4871              	.L265:
2170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
2171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
2173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 4872              		.loc 1 2173 20
 4873 00ec D7F8E430 		ldr	r3, [r7, #228]
 4874 00f0 03F00403 		and	r3, r3, #4
 4875              		.loc 1 2173 8
 4876 00f4 002B     		cmp	r3, #0
 4877 00f6 11D0     		beq	.L266
 4878              		.loc 1 2173 55 discriminator 1
 4879 00f8 D7F8DC30 		ldr	r3, [r7, #220]
 4880 00fc 03F00103 		and	r3, r3, #1
 4881              		.loc 1 2173 43 discriminator 1
 4882 0100 002B     		cmp	r3, #0
 4883 0102 0BD0     		beq	.L266
2174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
2175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 4884              		.loc 1 2175 7
 4885 0104 7B68     		ldr	r3, [r7, #4]
 4886 0106 1B68     		ldr	r3, [r3]
 4887 0108 0422     		movs	r2, #4
 4888 010a 1A62     		str	r2, [r3, #32]
2176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
 4889              		.loc 1 2177 24
 4890 010c 7B68     		ldr	r3, [r7, #4]
 4891 010e D3F88430 		ldr	r3, [r3, #132]
 4892 0112 43F00202 		orr	r2, r3, #2
 4893 0116 7B68     		ldr	r3, [r7, #4]
 4894 0118 C3F88420 		str	r2, [r3, #132]
 4895              	.L266:
2178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
2179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
2181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if (((isrflags & USART_ISR_ORE) != 0U)
 4896              		.loc 1 2181 20
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 146


 4897 011c D7F8E430 		ldr	r3, [r7, #228]
 4898 0120 03F00803 		and	r3, r3, #8
 4899              		.loc 1 2181 8
 4900 0124 002B     		cmp	r3, #0
 4901 0126 17D0     		beq	.L267
2182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 4902              		.loc 1 2182 22
 4903 0128 D7F8E030 		ldr	r3, [r7, #224]
 4904 012c 03F02003 		and	r3, r3, #32
 4905              		.loc 1 2182 9
 4906 0130 002B     		cmp	r3, #0
 4907 0132 05D1     		bne	.L268
2183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             ((cr3its & USART_CR3_EIE) != 0U)))
 4908              		.loc 1 2183 22 discriminator 1
 4909 0134 D7F8DC30 		ldr	r3, [r7, #220]
 4910 0138 03F00103 		and	r3, r3, #1
2182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 4911              		.loc 1 2182 49 discriminator 1
 4912 013c 002B     		cmp	r3, #0
 4913 013e 0BD0     		beq	.L267
 4914              	.L268:
2184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
2185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 4915              		.loc 1 2185 7
 4916 0140 7B68     		ldr	r3, [r7, #4]
 4917 0142 1B68     		ldr	r3, [r3]
 4918 0144 0822     		movs	r2, #8
 4919 0146 1A62     		str	r2, [r3, #32]
2186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
 4920              		.loc 1 2187 24
 4921 0148 7B68     		ldr	r3, [r7, #4]
 4922 014a D3F88430 		ldr	r3, [r3, #132]
 4923 014e 43F00802 		orr	r2, r3, #8
 4924 0152 7B68     		ldr	r3, [r7, #4]
 4925 0154 C3F88420 		str	r2, [r3, #132]
 4926              	.L267:
2188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
2189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* UART Receiver Timeout interrupt occurred ---------------------------------*/
2191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
 4927              		.loc 1 2191 20
 4928 0158 D7F8E430 		ldr	r3, [r7, #228]
 4929 015c 03F40063 		and	r3, r3, #2048
 4930              		.loc 1 2191 8
 4931 0160 002B     		cmp	r3, #0
 4932 0162 12D0     		beq	.L269
 4933              		.loc 1 2191 57 discriminator 1
 4934 0164 D7F8E030 		ldr	r3, [r7, #224]
 4935 0168 03F08063 		and	r3, r3, #67108864
 4936              		.loc 1 2191 45 discriminator 1
 4937 016c 002B     		cmp	r3, #0
 4938 016e 0CD0     		beq	.L269
2192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
2193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 4939              		.loc 1 2193 7
 4940 0170 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 147


 4941 0172 1B68     		ldr	r3, [r3]
 4942 0174 4FF40062 		mov	r2, #2048
 4943 0178 1A62     		str	r2, [r3, #32]
2194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_RTO;
 4944              		.loc 1 2195 24
 4945 017a 7B68     		ldr	r3, [r7, #4]
 4946 017c D3F88430 		ldr	r3, [r3, #132]
 4947 0180 43F02002 		orr	r2, r3, #32
 4948 0184 7B68     		ldr	r3, [r7, #4]
 4949 0186 C3F88420 		str	r2, [r3, #132]
 4950              	.L269:
2196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
2197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Call UART Error Call back function if need be ----------------------------*/
2199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 4951              		.loc 1 2199 14
 4952 018a 7B68     		ldr	r3, [r7, #4]
 4953 018c D3F88430 		ldr	r3, [r3, #132]
 4954              		.loc 1 2199 8
 4955 0190 002B     		cmp	r3, #0
 4956 0192 00F0FD81 		beq	.L309
2200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
2201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* UART in mode Receiver --------------------------------------------------*/
2202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if (((isrflags & USART_ISR_RXNE) != 0U)
 4957              		.loc 1 2202 22
 4958 0196 D7F8E430 		ldr	r3, [r7, #228]
 4959 019a 03F02003 		and	r3, r3, #32
 4960              		.loc 1 2202 10
 4961 019e 002B     		cmp	r3, #0
 4962 01a0 0DD0     		beq	.L271
2203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           && ((cr1its & USART_CR1_RXNEIE) != 0U))
 4963              		.loc 1 2203 23
 4964 01a2 D7F8E030 		ldr	r3, [r7, #224]
 4965 01a6 03F02003 		and	r3, r3, #32
 4966              		.loc 1 2203 11
 4967 01aa 002B     		cmp	r3, #0
 4968 01ac 07D0     		beq	.L271
2204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
2205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         if (huart->RxISR != NULL)
 4969              		.loc 1 2205 18
 4970 01ae 7B68     		ldr	r3, [r7, #4]
 4971 01b0 9B6E     		ldr	r3, [r3, #104]
 4972              		.loc 1 2205 12
 4973 01b2 002B     		cmp	r3, #0
 4974 01b4 03D0     		beq	.L271
2206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         {
2207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           huart->RxISR(huart);
 4975              		.loc 1 2207 16
 4976 01b6 7B68     		ldr	r3, [r7, #4]
 4977 01b8 9B6E     		ldr	r3, [r3, #104]
 4978              		.loc 1 2207 11
 4979 01ba 7868     		ldr	r0, [r7, #4]
 4980 01bc 9847     		blx	r3
 4981              	.LVL3:
 4982              	.L271:
2208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         }
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 148


2209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
2210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* If Error is to be considered as blocking :
2212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           - Receiver Timeout error in Reception
2213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           - Overrun error in Reception
2214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           - any error occurs in DMA mode reception
2215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       */
2216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       errorcode = huart->ErrorCode;
 4983              		.loc 1 2216 17
 4984 01be 7B68     		ldr	r3, [r7, #4]
 4985 01c0 D3F88430 		ldr	r3, [r3, #132]
 4986 01c4 C7F8D430 		str	r3, [r7, #212]
2217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 4987              		.loc 1 2217 12
 4988 01c8 7B68     		ldr	r3, [r7, #4]
 4989 01ca 1B68     		ldr	r3, [r3]
 4990 01cc 9B68     		ldr	r3, [r3, #8]
 4991 01ce 03F04003 		and	r3, r3, #64
 4992              		.loc 1 2217 10
 4993 01d2 402B     		cmp	r3, #64
 4994 01d4 05D0     		beq	.L272
2218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 4995              		.loc 1 2218 23 discriminator 1
 4996 01d6 D7F8D430 		ldr	r3, [r7, #212]
 4997 01da 03F02803 		and	r3, r3, #40
2217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 4998              		.loc 1 2217 66 discriminator 1
 4999 01de 002B     		cmp	r3, #0
 5000 01e0 4FD0     		beq	.L273
 5001              	.L272:
2219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
2220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Blocking error : transfer is aborted
2221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
2222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
2223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         UART_EndRxTransfer(huart);
 5002              		.loc 1 2223 9
 5003 01e2 7868     		ldr	r0, [r7, #4]
 5004 01e4 FFF7FEFF 		bl	UART_EndRxTransfer
2224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Abort the UART DMA Rx channel if enabled */
2226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 5005              		.loc 1 2226 13
 5006 01e8 7B68     		ldr	r3, [r7, #4]
 5007 01ea 1B68     		ldr	r3, [r3]
 5008 01ec 9B68     		ldr	r3, [r3, #8]
 5009 01ee 03F04003 		and	r3, r3, #64
 5010              		.loc 1 2226 12
 5011 01f2 402B     		cmp	r3, #64
 5012 01f4 41D1     		bne	.L274
 5013              	.L277:
 5014              	.LBB589:
2227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         {
2228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           /* Disable the UART DMA Rx request if enabled */
2229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 5015              		.loc 1 2229 11 discriminator 1
 5016 01f6 7B68     		ldr	r3, [r7, #4]
 5017 01f8 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 149


 5018 01fa 0833     		adds	r3, r3, #8
 5019 01fc C7F89C30 		str	r3, [r7, #156]
 5020              	.LBB590:
 5021              	.LBB591:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5022              		.loc 2 1072 4 discriminator 1
 5023 0200 D7F89C30 		ldr	r3, [r7, #156]
 5024              		.syntax unified
 5025              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5026 0204 53E8003F 		ldrex r3, [r3]
 5027              	@ 0 "" 2
 5028              		.thumb
 5029              		.syntax unified
 5030 0208 C7F89830 		str	r3, [r7, #152]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5031              		.loc 2 1073 10 discriminator 1
 5032 020c D7F89830 		ldr	r3, [r7, #152]
 5033              	.LBE591:
 5034              	.LBE590:
 5035              		.loc 1 2229 11 discriminator 1
 5036 0210 23F04003 		bic	r3, r3, #64
 5037 0214 C7F8D030 		str	r3, [r7, #208]
 5038 0218 7B68     		ldr	r3, [r7, #4]
 5039 021a 1B68     		ldr	r3, [r3]
 5040 021c 0833     		adds	r3, r3, #8
 5041 021e D7F8D020 		ldr	r2, [r7, #208]
 5042 0222 C7F8A820 		str	r2, [r7, #168]
 5043 0226 C7F8A430 		str	r3, [r7, #164]
 5044              	.LBB592:
 5045              	.LBB593:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5046              		.loc 2 1123 4 discriminator 1
 5047 022a D7F8A410 		ldr	r1, [r7, #164]
 5048 022e D7F8A820 		ldr	r2, [r7, #168]
 5049              		.syntax unified
 5050              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5051 0232 41E80023 		strex r3, r2, [r1]
 5052              	@ 0 "" 2
 5053              		.thumb
 5054              		.syntax unified
 5055 0236 C7F8A030 		str	r3, [r7, #160]
 5056              		.loc 2 1124 10 discriminator 1
 5057 023a D7F8A030 		ldr	r3, [r7, #160]
 5058              	.LBE593:
 5059              	.LBE592:
 5060              		.loc 1 2229 11 discriminator 1
 5061 023e 002B     		cmp	r3, #0
 5062 0240 D9D1     		bne	.L277
 5063              	.LBE589:
2230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
2232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           if (huart->hdmarx != NULL)
 5064              		.loc 1 2232 20
 5065 0242 7B68     		ldr	r3, [r7, #4]
 5066 0244 5B6F     		ldr	r3, [r3, #116]
 5067              		.loc 1 2232 14
 5068 0246 002B     		cmp	r3, #0
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 150


 5069 0248 13D0     		beq	.L278
2233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           {
2234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
2235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
2236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 5070              		.loc 1 2236 18
 5071 024a 7B68     		ldr	r3, [r7, #4]
 5072 024c 5B6F     		ldr	r3, [r3, #116]
 5073              		.loc 1 2236 46
 5074 024e 134A     		ldr	r2, .L314+4
 5075 0250 1A65     		str	r2, [r3, #80]
2237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             /* Abort DMA RX */
2239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 5076              		.loc 1 2239 17
 5077 0252 7B68     		ldr	r3, [r7, #4]
 5078 0254 5B6F     		ldr	r3, [r3, #116]
 5079 0256 1846     		mov	r0, r3
 5080 0258 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5081 025c 0346     		mov	r3, r0
 5082              		.loc 1 2239 16
 5083 025e 002B     		cmp	r3, #0
 5084 0260 17D0     		beq	.L310
2240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             {
2241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
 5085              		.loc 1 2242 20
 5086 0262 7B68     		ldr	r3, [r7, #4]
 5087 0264 5B6F     		ldr	r3, [r3, #116]
 5088              		.loc 1 2242 28
 5089 0266 1B6D     		ldr	r3, [r3, #80]
 5090              		.loc 1 2242 53
 5091 0268 7A68     		ldr	r2, [r7, #4]
 5092 026a 526F     		ldr	r2, [r2, #116]
 5093              		.loc 1 2242 15
 5094 026c 1046     		mov	r0, r2
 5095 026e 9847     		blx	r3
 5096              	.LVL4:
2226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         {
 5097              		.loc 1 2226 12
 5098 0270 0FE0     		b	.L310
 5099              	.L278:
2243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             }
2244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           }
2245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           else
2246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           {
2247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             /* Call user error callback */
2248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             /*Call registered error callback*/
2250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             huart->ErrorCallback(huart);
2251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #else
2252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             /*Call legacy weak error callback*/
2253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
 5100              		.loc 1 2253 13
 5101 0272 7868     		ldr	r0, [r7, #4]
 5102 0274 FFF7FEFF 		bl	HAL_UART_ErrorCallback
2226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         {
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 151


 5103              		.loc 1 2226 12
 5104 0278 0BE0     		b	.L310
 5105              	.L274:
2254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           }
2257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         }
2258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         else
2259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         {
2260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           /* Call user error callback */
2261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           /*Call registered error callback*/
2263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           huart->ErrorCallback(huart);
2264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #else
2265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           /*Call legacy weak error callback*/
2266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
 5106              		.loc 1 2266 11
 5107 027a 7868     		ldr	r0, [r7, #4]
 5108 027c FFF7FEFF 		bl	HAL_UART_ErrorCallback
2226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         {
 5109              		.loc 1 2226 12
 5110 0280 07E0     		b	.L310
 5111              	.L273:
2267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         }
2269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
2270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       else
2271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
2272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
2273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            Error is notified to user through user error callback */
2274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /*Call registered error callback*/
2276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->ErrorCallback(huart);
2277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #else
2278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /*Call legacy weak error callback*/
2279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
 5112              		.loc 1 2279 9
 5113 0282 7868     		ldr	r0, [r7, #4]
 5114 0284 FFF7FEFF 		bl	HAL_UART_ErrorCallback
2280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 5115              		.loc 1 2281 26
 5116 0288 7B68     		ldr	r3, [r7, #4]
 5117 028a 0022     		movs	r2, #0
 5118 028c C3F88420 		str	r2, [r3, #132]
2282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
2283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
2284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return;
 5119              		.loc 1 2284 5
 5120 0290 7EE1     		b	.L309
 5121              	.L310:
2226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         {
 5122              		.loc 1 2226 12
 5123 0292 00BF     		nop
 5124              		.loc 1 2284 5
 5125 0294 7CE1     		b	.L309
 5126              	.L315:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 152


 5127 0296 00BF     		.align	2
 5128              	.L314:
 5129 0298 20010004 		.word	67109152
 5130 029c 00000000 		.word	UART_DMAAbortOnError
 5131              	.L262:
2285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   } /* End if some error occurs */
2287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check current reception Mode :
2289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      If Reception till IDLE event has been selected : */
2290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 5132              		.loc 1 2290 13
 5133 02a0 7B68     		ldr	r3, [r7, #4]
 5134 02a2 1B6E     		ldr	r3, [r3, #96]
 5135              		.loc 1 2290 6
 5136 02a4 012B     		cmp	r3, #1
 5137 02a6 40F04C81 		bne	.L280
2291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       && ((isrflags & USART_ISR_IDLE) != 0U)
 5138              		.loc 1 2291 21
 5139 02aa D7F8E430 		ldr	r3, [r7, #228]
 5140 02ae 03F01003 		and	r3, r3, #16
 5141              		.loc 1 2291 7
 5142 02b2 002B     		cmp	r3, #0
 5143 02b4 00F04581 		beq	.L280
2292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       && ((cr1its & USART_ISR_IDLE) != 0U))
 5144              		.loc 1 2292 19
 5145 02b8 D7F8E030 		ldr	r3, [r7, #224]
 5146 02bc 03F01003 		and	r3, r3, #16
 5147              		.loc 1 2292 7
 5148 02c0 002B     		cmp	r3, #0
 5149 02c2 00F03E81 		beq	.L280
2293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
2294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 5150              		.loc 1 2294 5
 5151 02c6 7B68     		ldr	r3, [r7, #4]
 5152 02c8 1B68     		ldr	r3, [r3]
 5153 02ca 1022     		movs	r2, #16
 5154 02cc 1A62     		str	r2, [r3, #32]
2295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Check if DMA mode is enabled in UART */
2297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 5155              		.loc 1 2297 9
 5156 02ce 7B68     		ldr	r3, [r7, #4]
 5157 02d0 1B68     		ldr	r3, [r3]
 5158 02d2 9B68     		ldr	r3, [r3, #8]
 5159 02d4 03F04003 		and	r3, r3, #64
 5160              		.loc 1 2297 8
 5161 02d8 402B     		cmp	r3, #64
 5162 02da 40F0B680 		bne	.L281
 5163              	.LBB594:
2298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
2299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* DMA mode enabled */
2300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Check received length : If all expected data are received, do nothing,
2301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****          (DMA cplt callback will be called).
2302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****          Otherwise, if at least one data has already been received, IDLE event is to be notified to
2303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
 5164              		.loc 1 2303 50
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 153


 5165 02de 7B68     		ldr	r3, [r7, #4]
 5166 02e0 5B6F     		ldr	r3, [r3, #116]
 5167 02e2 1B68     		ldr	r3, [r3]
 5168 02e4 5B68     		ldr	r3, [r3, #4]
 5169              		.loc 1 2303 16
 5170 02e6 A7F8BE30 		strh	r3, [r7, #190]	@ movhi
2304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if ((nb_remaining_rx_data > 0U)
 5171              		.loc 1 2304 10
 5172 02ea B7F8BE30 		ldrh	r3, [r7, #190]
 5173 02ee 002B     		cmp	r3, #0
 5174 02f0 00F05081 		beq	.L311
2305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           && (nb_remaining_rx_data < huart->RxXferSize))
 5175              		.loc 1 2305 43
 5176 02f4 7B68     		ldr	r3, [r7, #4]
 5177 02f6 B3F85830 		ldrh	r3, [r3, #88]
 5178              		.loc 1 2305 11
 5179 02fa B7F8BE20 		ldrh	r2, [r7, #190]
 5180 02fe 9A42     		cmp	r2, r3
 5181 0300 80F04881 		bcs	.L311
2306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
2307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Reception is not complete */
2308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->RxXferCount = nb_remaining_rx_data;
 5182              		.loc 1 2308 28
 5183 0304 7B68     		ldr	r3, [r7, #4]
 5184 0306 B7F8BE20 		ldrh	r2, [r7, #190]	@ movhi
 5185 030a A3F85A20 		strh	r2, [r3, #90]	@ movhi
2309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* In Normal mode, end DMA xfer and HAL UART Rx process*/
2311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
 5186              		.loc 1 2311 18
 5187 030e 7B68     		ldr	r3, [r7, #4]
 5188 0310 5B6F     		ldr	r3, [r3, #116]
 5189              		.loc 1 2311 32
 5190 0312 DB69     		ldr	r3, [r3, #28]
 5191              		.loc 1 2311 12
 5192 0314 B3F5807F 		cmp	r3, #256
 5193 0318 00F08680 		beq	.L283
 5194              	.L286:
 5195              	.LBB595:
2312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         {
2313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
2314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 5196              		.loc 1 2314 11 discriminator 1
 5197 031c 7B68     		ldr	r3, [r7, #4]
 5198 031e 1B68     		ldr	r3, [r3]
 5199 0320 C7F88830 		str	r3, [r7, #136]
 5200              	.LBB596:
 5201              	.LBB597:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5202              		.loc 2 1072 4 discriminator 1
 5203 0324 D7F88830 		ldr	r3, [r7, #136]
 5204              		.syntax unified
 5205              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5206 0328 53E8003F 		ldrex r3, [r3]
 5207              	@ 0 "" 2
 5208              		.thumb
 5209              		.syntax unified
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 154


 5210 032c C7F88430 		str	r3, [r7, #132]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5211              		.loc 2 1073 10 discriminator 1
 5212 0330 D7F88430 		ldr	r3, [r7, #132]
 5213              	.LBE597:
 5214              	.LBE596:
 5215              		.loc 1 2314 11 discriminator 1
 5216 0334 23F48073 		bic	r3, r3, #256
 5217 0338 C7F8B830 		str	r3, [r7, #184]
 5218 033c 7B68     		ldr	r3, [r7, #4]
 5219 033e 1B68     		ldr	r3, [r3]
 5220 0340 1A46     		mov	r2, r3
 5221 0342 D7F8B830 		ldr	r3, [r7, #184]
 5222 0346 C7F89430 		str	r3, [r7, #148]
 5223 034a C7F89020 		str	r2, [r7, #144]
 5224              	.LBB598:
 5225              	.LBB599:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5226              		.loc 2 1123 4 discriminator 1
 5227 034e D7F89010 		ldr	r1, [r7, #144]
 5228 0352 D7F89420 		ldr	r2, [r7, #148]
 5229              		.syntax unified
 5230              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5231 0356 41E80023 		strex r3, r2, [r1]
 5232              	@ 0 "" 2
 5233              		.thumb
 5234              		.syntax unified
 5235 035a C7F88C30 		str	r3, [r7, #140]
 5236              		.loc 2 1124 10 discriminator 1
 5237 035e D7F88C30 		ldr	r3, [r7, #140]
 5238              	.LBE599:
 5239              	.LBE598:
 5240              		.loc 1 2314 11 discriminator 1
 5241 0362 002B     		cmp	r3, #0
 5242 0364 DAD1     		bne	.L286
 5243              	.L289:
 5244              	.LBE595:
 5245              	.LBB600:
2315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5246              		.loc 1 2315 11 discriminator 1
 5247 0366 7B68     		ldr	r3, [r7, #4]
 5248 0368 1B68     		ldr	r3, [r3]
 5249 036a 0833     		adds	r3, r3, #8
 5250 036c 7B67     		str	r3, [r7, #116]
 5251              	.LBB601:
 5252              	.LBB602:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5253              		.loc 2 1072 4 discriminator 1
 5254 036e 7B6F     		ldr	r3, [r7, #116]
 5255              		.syntax unified
 5256              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5257 0370 53E8003F 		ldrex r3, [r3]
 5258              	@ 0 "" 2
 5259              		.thumb
 5260              		.syntax unified
 5261 0374 3B67     		str	r3, [r7, #112]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 155


 5262              		.loc 2 1073 10 discriminator 1
 5263 0376 3B6F     		ldr	r3, [r7, #112]
 5264              	.LBE602:
 5265              	.LBE601:
 5266              		.loc 1 2315 11 discriminator 1
 5267 0378 23F00103 		bic	r3, r3, #1
 5268 037c C7F8B430 		str	r3, [r7, #180]
 5269 0380 7B68     		ldr	r3, [r7, #4]
 5270 0382 1B68     		ldr	r3, [r3]
 5271 0384 0833     		adds	r3, r3, #8
 5272 0386 D7F8B420 		ldr	r2, [r7, #180]
 5273 038a C7F88020 		str	r2, [r7, #128]
 5274 038e FB67     		str	r3, [r7, #124]
 5275              	.LBB603:
 5276              	.LBB604:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5277              		.loc 2 1123 4 discriminator 1
 5278 0390 F96F     		ldr	r1, [r7, #124]
 5279 0392 D7F88020 		ldr	r2, [r7, #128]
 5280              		.syntax unified
 5281              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5282 0396 41E80023 		strex r3, r2, [r1]
 5283              	@ 0 "" 2
 5284              		.thumb
 5285              		.syntax unified
 5286 039a BB67     		str	r3, [r7, #120]
 5287              		.loc 2 1124 10 discriminator 1
 5288 039c BB6F     		ldr	r3, [r7, #120]
 5289              	.LBE604:
 5290              	.LBE603:
 5291              		.loc 1 2315 11 discriminator 1
 5292 039e 002B     		cmp	r3, #0
 5293 03a0 E1D1     		bne	.L289
 5294              	.L292:
 5295              	.LBE600:
 5296              	.LBB605:
2316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
2318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****              in the UART CR3 register */
2319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 5297              		.loc 1 2319 11 discriminator 1
 5298 03a2 7B68     		ldr	r3, [r7, #4]
 5299 03a4 1B68     		ldr	r3, [r3]
 5300 03a6 0833     		adds	r3, r3, #8
 5301 03a8 3B66     		str	r3, [r7, #96]
 5302              	.LBB606:
 5303              	.LBB607:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5304              		.loc 2 1072 4 discriminator 1
 5305 03aa 3B6E     		ldr	r3, [r7, #96]
 5306              		.syntax unified
 5307              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5308 03ac 53E8003F 		ldrex r3, [r3]
 5309              	@ 0 "" 2
 5310              		.thumb
 5311              		.syntax unified
 5312 03b0 FB65     		str	r3, [r7, #92]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 156


1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5313              		.loc 2 1073 10 discriminator 1
 5314 03b2 FB6D     		ldr	r3, [r7, #92]
 5315              	.LBE607:
 5316              	.LBE606:
 5317              		.loc 1 2319 11 discriminator 1
 5318 03b4 23F04003 		bic	r3, r3, #64
 5319 03b8 C7F8B030 		str	r3, [r7, #176]
 5320 03bc 7B68     		ldr	r3, [r7, #4]
 5321 03be 1B68     		ldr	r3, [r3]
 5322 03c0 0833     		adds	r3, r3, #8
 5323 03c2 D7F8B020 		ldr	r2, [r7, #176]
 5324 03c6 FA66     		str	r2, [r7, #108]
 5325 03c8 BB66     		str	r3, [r7, #104]
 5326              	.LBB608:
 5327              	.LBB609:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5328              		.loc 2 1123 4 discriminator 1
 5329 03ca B96E     		ldr	r1, [r7, #104]
 5330 03cc FA6E     		ldr	r2, [r7, #108]
 5331              		.syntax unified
 5332              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5333 03ce 41E80023 		strex r3, r2, [r1]
 5334              	@ 0 "" 2
 5335              		.thumb
 5336              		.syntax unified
 5337 03d2 7B66     		str	r3, [r7, #100]
 5338              		.loc 2 1124 10 discriminator 1
 5339 03d4 7B6E     		ldr	r3, [r7, #100]
 5340              	.LBE609:
 5341              	.LBE608:
 5342              		.loc 1 2319 11 discriminator 1
 5343 03d6 002B     		cmp	r3, #0
 5344 03d8 E3D1     		bne	.L292
 5345              	.LBE605:
2320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           /* At end of Rx process, restore huart->RxState to Ready */
2322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
 5346              		.loc 1 2322 26
 5347 03da 7B68     		ldr	r3, [r7, #4]
 5348 03dc 2022     		movs	r2, #32
 5349 03de C3F88020 		str	r2, [r3, #128]
2323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 5350              		.loc 1 2323 32
 5351 03e2 7B68     		ldr	r3, [r7, #4]
 5352 03e4 0022     		movs	r2, #0
 5353 03e6 1A66     		str	r2, [r3, #96]
 5354              	.L295:
 5355              	.LBB610:
2324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 5356              		.loc 1 2325 11 discriminator 1
 5357 03e8 7B68     		ldr	r3, [r7, #4]
 5358 03ea 1B68     		ldr	r3, [r3]
 5359 03ec FB64     		str	r3, [r7, #76]
 5360              	.LBB611:
 5361              	.LBB612:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 157


1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5362              		.loc 2 1072 4 discriminator 1
 5363 03ee FB6C     		ldr	r3, [r7, #76]
 5364              		.syntax unified
 5365              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5366 03f0 53E8003F 		ldrex r3, [r3]
 5367              	@ 0 "" 2
 5368              		.thumb
 5369              		.syntax unified
 5370 03f4 BB64     		str	r3, [r7, #72]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5371              		.loc 2 1073 10 discriminator 1
 5372 03f6 BB6C     		ldr	r3, [r7, #72]
 5373              	.LBE612:
 5374              	.LBE611:
 5375              		.loc 1 2325 11 discriminator 1
 5376 03f8 23F01003 		bic	r3, r3, #16
 5377 03fc C7F8AC30 		str	r3, [r7, #172]
 5378 0400 7B68     		ldr	r3, [r7, #4]
 5379 0402 1B68     		ldr	r3, [r3]
 5380 0404 1A46     		mov	r2, r3
 5381 0406 D7F8AC30 		ldr	r3, [r7, #172]
 5382 040a BB65     		str	r3, [r7, #88]
 5383 040c 7A65     		str	r2, [r7, #84]
 5384              	.LBB613:
 5385              	.LBB614:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5386              		.loc 2 1123 4 discriminator 1
 5387 040e 796D     		ldr	r1, [r7, #84]
 5388 0410 BA6D     		ldr	r2, [r7, #88]
 5389              		.syntax unified
 5390              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5391 0412 41E80023 		strex r3, r2, [r1]
 5392              	@ 0 "" 2
 5393              		.thumb
 5394              		.syntax unified
 5395 0416 3B65     		str	r3, [r7, #80]
 5396              		.loc 2 1124 10 discriminator 1
 5397 0418 3B6D     		ldr	r3, [r7, #80]
 5398              	.LBE614:
 5399              	.LBE613:
 5400              		.loc 1 2325 11 discriminator 1
 5401 041a 002B     		cmp	r3, #0
 5402 041c E4D1     		bne	.L295
 5403              	.LBE610:
2326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           /* Last bytes received, so no need as the abort is immediate */
2328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           (void)HAL_DMA_Abort(huart->hdmarx);
 5404              		.loc 1 2328 17
 5405 041e 7B68     		ldr	r3, [r7, #4]
 5406 0420 5B6F     		ldr	r3, [r3, #116]
 5407 0422 1846     		mov	r0, r3
 5408 0424 FFF7FEFF 		bl	HAL_DMA_Abort
 5409              	.L283:
2329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         }
2330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Initialize type of RxEvent that correspond to RxEvent callback execution;
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 158


2332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            In this case, Rx Event type is Idle Event */
2333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 5410              		.loc 1 2333 28
 5411 0428 7B68     		ldr	r3, [r7, #4]
 5412 042a 0222     		movs	r2, #2
 5413 042c 5A66     		str	r2, [r3, #100]
2334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /*Call registered Rx Event callback*/
2337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
2338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #else
2339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
2340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 5414              		.loc 1 2340 49
 5415 042e 7B68     		ldr	r3, [r7, #4]
 5416 0430 B3F85820 		ldrh	r2, [r3, #88]
 5417              		.loc 1 2340 69
 5418 0434 7B68     		ldr	r3, [r7, #4]
 5419 0436 B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 5420 043a 9BB2     		uxth	r3, r3
 5421              		.loc 1 2340 9
 5422 043c D31A     		subs	r3, r2, r3
 5423 043e 9BB2     		uxth	r3, r3
 5424 0440 1946     		mov	r1, r3
 5425 0442 7868     		ldr	r0, [r7, #4]
 5426 0444 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
2341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
2342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
2343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return;
 5427              		.loc 1 2343 7
 5428 0448 A4E0     		b	.L311
 5429              	.L281:
 5430              	.LBE594:
 5431              	.LBB615:
2344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
2345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     else
2346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
2347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* DMA mode not enabled */
2348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Check received length : If all expected data are received, do nothing.
2349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****          Otherwise, if at least one data has already been received, IDLE event is to be notified to
2350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 5432              		.loc 1 2350 34
 5433 044a 7B68     		ldr	r3, [r7, #4]
 5434 044c B3F85820 		ldrh	r2, [r3, #88]
 5435              		.loc 1 2350 54
 5436 0450 7B68     		ldr	r3, [r7, #4]
 5437 0452 B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 5438 0456 9BB2     		uxth	r3, r3
 5439              		.loc 1 2350 16
 5440 0458 D31A     		subs	r3, r2, r3
 5441 045a A7F8CE30 		strh	r3, [r7, #206]	@ movhi
2351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if ((huart->RxXferCount > 0U)
 5442              		.loc 1 2351 17
 5443 045e 7B68     		ldr	r3, [r7, #4]
 5444 0460 B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 5445 0464 9BB2     		uxth	r3, r3
 5446              		.loc 1 2351 10
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 159


 5447 0466 002B     		cmp	r3, #0
 5448 0468 00F09680 		beq	.L312
2352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           && (nb_rx_data > 0U))
 5449              		.loc 1 2352 11
 5450 046c B7F8CE30 		ldrh	r3, [r7, #206]
 5451 0470 002B     		cmp	r3, #0
 5452 0472 00F09180 		beq	.L312
 5453              	.L299:
 5454              	.LBB616:
2353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
2354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt and RXNE interrupts */
2355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 5455              		.loc 1 2355 9 discriminator 1
 5456 0476 7B68     		ldr	r3, [r7, #4]
 5457 0478 1B68     		ldr	r3, [r3]
 5458 047a BB63     		str	r3, [r7, #56]
 5459              	.LBB617:
 5460              	.LBB618:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5461              		.loc 2 1072 4 discriminator 1
 5462 047c BB6B     		ldr	r3, [r7, #56]
 5463              		.syntax unified
 5464              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5465 047e 53E8003F 		ldrex r3, [r3]
 5466              	@ 0 "" 2
 5467              		.thumb
 5468              		.syntax unified
 5469 0482 7B63     		str	r3, [r7, #52]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5470              		.loc 2 1073 10 discriminator 1
 5471 0484 7B6B     		ldr	r3, [r7, #52]
 5472              	.LBE618:
 5473              	.LBE617:
 5474              		.loc 1 2355 9 discriminator 1
 5475 0486 23F49073 		bic	r3, r3, #288
 5476 048a C7F8C830 		str	r3, [r7, #200]
 5477 048e 7B68     		ldr	r3, [r7, #4]
 5478 0490 1B68     		ldr	r3, [r3]
 5479 0492 1A46     		mov	r2, r3
 5480 0494 D7F8C830 		ldr	r3, [r7, #200]
 5481 0498 7B64     		str	r3, [r7, #68]
 5482 049a 3A64     		str	r2, [r7, #64]
 5483              	.LBB619:
 5484              	.LBB620:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5485              		.loc 2 1123 4 discriminator 1
 5486 049c 396C     		ldr	r1, [r7, #64]
 5487 049e 7A6C     		ldr	r2, [r7, #68]
 5488              		.syntax unified
 5489              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5490 04a0 41E80023 		strex r3, r2, [r1]
 5491              	@ 0 "" 2
 5492              		.thumb
 5493              		.syntax unified
 5494 04a4 FB63     		str	r3, [r7, #60]
 5495              		.loc 2 1124 10 discriminator 1
 5496 04a6 FB6B     		ldr	r3, [r7, #60]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 160


 5497              	.LBE620:
 5498              	.LBE619:
 5499              		.loc 1 2355 9 discriminator 1
 5500 04a8 002B     		cmp	r3, #0
 5501 04aa E4D1     		bne	.L299
 5502              	.L302:
 5503              	.LBE616:
 5504              	.LBB621:
2356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
2358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5505              		.loc 1 2358 9 discriminator 1
 5506 04ac 7B68     		ldr	r3, [r7, #4]
 5507 04ae 1B68     		ldr	r3, [r3]
 5508 04b0 0833     		adds	r3, r3, #8
 5509 04b2 7B62     		str	r3, [r7, #36]
 5510              	.LBB622:
 5511              	.LBB623:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5512              		.loc 2 1072 4 discriminator 1
 5513 04b4 7B6A     		ldr	r3, [r7, #36]
 5514              		.syntax unified
 5515              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5516 04b6 53E8003F 		ldrex r3, [r3]
 5517              	@ 0 "" 2
 5518              		.thumb
 5519              		.syntax unified
 5520 04ba 3B62     		str	r3, [r7, #32]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5521              		.loc 2 1073 10 discriminator 1
 5522 04bc 3B6A     		ldr	r3, [r7, #32]
 5523              	.LBE623:
 5524              	.LBE622:
 5525              		.loc 1 2358 9 discriminator 1
 5526 04be 23F00103 		bic	r3, r3, #1
 5527 04c2 C7F8C430 		str	r3, [r7, #196]
 5528 04c6 7B68     		ldr	r3, [r7, #4]
 5529 04c8 1B68     		ldr	r3, [r3]
 5530 04ca 0833     		adds	r3, r3, #8
 5531 04cc D7F8C420 		ldr	r2, [r7, #196]
 5532 04d0 3A63     		str	r2, [r7, #48]
 5533 04d2 FB62     		str	r3, [r7, #44]
 5534              	.LBB624:
 5535              	.LBB625:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5536              		.loc 2 1123 4 discriminator 1
 5537 04d4 F96A     		ldr	r1, [r7, #44]
 5538 04d6 3A6B     		ldr	r2, [r7, #48]
 5539              		.syntax unified
 5540              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5541 04d8 41E80023 		strex r3, r2, [r1]
 5542              	@ 0 "" 2
 5543              		.thumb
 5544              		.syntax unified
 5545 04dc BB62     		str	r3, [r7, #40]
 5546              		.loc 2 1124 10 discriminator 1
 5547 04de BB6A     		ldr	r3, [r7, #40]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 161


 5548              	.LBE625:
 5549              	.LBE624:
 5550              		.loc 1 2358 9 discriminator 1
 5551 04e0 002B     		cmp	r3, #0
 5552 04e2 E3D1     		bne	.L302
 5553              	.LBE621:
2359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Rx process is completed, restore huart->RxState to Ready */
2361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 5554              		.loc 1 2361 24
 5555 04e4 7B68     		ldr	r3, [r7, #4]
 5556 04e6 2022     		movs	r2, #32
 5557 04e8 C3F88020 		str	r2, [r3, #128]
2362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 5558              		.loc 1 2362 30
 5559 04ec 7B68     		ldr	r3, [r7, #4]
 5560 04ee 0022     		movs	r2, #0
 5561 04f0 1A66     		str	r2, [r3, #96]
2363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Clear RxISR function pointer */
2365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->RxISR = NULL;
 5562              		.loc 1 2365 22
 5563 04f2 7B68     		ldr	r3, [r7, #4]
 5564 04f4 0022     		movs	r2, #0
 5565 04f6 9A66     		str	r2, [r3, #104]
 5566              	.L305:
 5567              	.LBB626:
2366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 5568              		.loc 1 2367 9 discriminator 1
 5569 04f8 7B68     		ldr	r3, [r7, #4]
 5570 04fa 1B68     		ldr	r3, [r3]
 5571 04fc 3B61     		str	r3, [r7, #16]
 5572              	.LBB627:
 5573              	.LBB628:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5574              		.loc 2 1072 4 discriminator 1
 5575 04fe 3B69     		ldr	r3, [r7, #16]
 5576              		.syntax unified
 5577              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5578 0500 53E8003F 		ldrex r3, [r3]
 5579              	@ 0 "" 2
 5580              		.thumb
 5581              		.syntax unified
 5582 0504 FB60     		str	r3, [r7, #12]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5583              		.loc 2 1073 10 discriminator 1
 5584 0506 FB68     		ldr	r3, [r7, #12]
 5585              	.LBE628:
 5586              	.LBE627:
 5587              		.loc 1 2367 9 discriminator 1
 5588 0508 23F01003 		bic	r3, r3, #16
 5589 050c C7F8C030 		str	r3, [r7, #192]
 5590 0510 7B68     		ldr	r3, [r7, #4]
 5591 0512 1B68     		ldr	r3, [r3]
 5592 0514 1A46     		mov	r2, r3
 5593 0516 D7F8C030 		ldr	r3, [r7, #192]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 162


 5594 051a FB61     		str	r3, [r7, #28]
 5595 051c BA61     		str	r2, [r7, #24]
 5596              	.LBB629:
 5597              	.LBB630:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5598              		.loc 2 1123 4 discriminator 1
 5599 051e B969     		ldr	r1, [r7, #24]
 5600 0520 FA69     		ldr	r2, [r7, #28]
 5601              		.syntax unified
 5602              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5603 0522 41E80023 		strex r3, r2, [r1]
 5604              	@ 0 "" 2
 5605              		.thumb
 5606              		.syntax unified
 5607 0526 7B61     		str	r3, [r7, #20]
 5608              		.loc 2 1124 10 discriminator 1
 5609 0528 7B69     		ldr	r3, [r7, #20]
 5610              	.LBE630:
 5611              	.LBE629:
 5612              		.loc 1 2367 9 discriminator 1
 5613 052a 002B     		cmp	r3, #0
 5614 052c E4D1     		bne	.L305
 5615              	.LBE626:
2368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Initialize type of RxEvent that correspond to RxEvent callback execution;
2370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            In this case, Rx Event type is Idle Event */
2371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 5616              		.loc 1 2371 28
 5617 052e 7B68     		ldr	r3, [r7, #4]
 5618 0530 0222     		movs	r2, #2
 5619 0532 5A66     		str	r2, [r3, #100]
2372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /*Call registered Rx complete callback*/
2375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->RxEventCallback(huart, nb_rx_data);
2376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #else
2377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
2378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
 5620              		.loc 1 2378 9
 5621 0534 B7F8CE30 		ldrh	r3, [r7, #206]
 5622 0538 1946     		mov	r1, r3
 5623 053a 7868     		ldr	r0, [r7, #4]
 5624 053c FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
2379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
2380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
2381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return;
 5625              		.loc 1 2381 7
 5626 0540 2AE0     		b	.L312
 5627              	.L280:
 5628              	.LBE615:
2382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
2383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
2384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #if defined(USART_CR1_UESM)
2385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #if defined(USART_CR3_WUFIE)
2386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
2388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (((isrflags & USART_ISR_WUF) != 0U) && ((cr3its & USART_CR3_WUFIE) != 0U))
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 163


2389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
2390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
2391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* UART Rx state is not reset as a reception process might be ongoing.
2393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        If UART handle state fields need to be reset to READY, this could be done in Wakeup callback
2394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Call registered Wakeup Callback */
2397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->WakeupCallback(huart);
2398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #else
2399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Call legacy weak Wakeup Callback */
2400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
2401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return;
2403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
2404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* USART_CR3_WUFIE */
2405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* USART_CR1_UESM */
2406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
2408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXE) != 0U)
 5629              		.loc 1 2408 18
 5630 0542 D7F8E430 		ldr	r3, [r7, #228]
 5631 0546 03F08003 		and	r3, r3, #128
 5632              		.loc 1 2408 6
 5633 054a 002B     		cmp	r3, #0
 5634 054c 0ED0     		beq	.L306
2409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       && ((cr1its & USART_CR1_TXEIE) != 0U))
 5635              		.loc 1 2409 19
 5636 054e D7F8E030 		ldr	r3, [r7, #224]
 5637 0552 03F08003 		and	r3, r3, #128
 5638              		.loc 1 2409 7
 5639 0556 002B     		cmp	r3, #0
 5640 0558 08D0     		beq	.L306
2410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
2411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if (huart->TxISR != NULL)
 5641              		.loc 1 2411 14
 5642 055a 7B68     		ldr	r3, [r7, #4]
 5643 055c DB6E     		ldr	r3, [r3, #108]
 5644              		.loc 1 2411 8
 5645 055e 002B     		cmp	r3, #0
 5646 0560 1CD0     		beq	.L313
2412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
2413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->TxISR(huart);
 5647              		.loc 1 2413 12
 5648 0562 7B68     		ldr	r3, [r7, #4]
 5649 0564 DB6E     		ldr	r3, [r3, #108]
 5650              		.loc 1 2413 7
 5651 0566 7868     		ldr	r0, [r7, #4]
 5652 0568 9847     		blx	r3
 5653              	.LVL5:
2414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
2415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return;
 5654              		.loc 1 2415 5
 5655 056a 17E0     		b	.L313
 5656              	.L306:
2416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
2417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 164


2418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
2419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
 5657              		.loc 1 2419 18
 5658 056c D7F8E430 		ldr	r3, [r7, #228]
 5659 0570 03F04003 		and	r3, r3, #64
 5660              		.loc 1 2419 6
 5661 0574 002B     		cmp	r3, #0
 5662 0576 12D0     		beq	.L258
 5663              		.loc 1 2419 53 discriminator 1
 5664 0578 D7F8E030 		ldr	r3, [r7, #224]
 5665 057c 03F04003 		and	r3, r3, #64
 5666              		.loc 1 2419 41 discriminator 1
 5667 0580 002B     		cmp	r3, #0
 5668 0582 0CD0     		beq	.L258
2420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
2421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
 5669              		.loc 1 2421 5
 5670 0584 7868     		ldr	r0, [r7, #4]
 5671 0586 FFF7FEFF 		bl	UART_EndTransmit_IT
2422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return;
 5672              		.loc 1 2422 5
 5673 058a 08E0     		b	.L258
 5674              	.L308:
2147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 5675              		.loc 1 2147 7
 5676 058c 00BF     		nop
 5677 058e 06E0     		b	.L258
 5678              	.L309:
2284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
 5679              		.loc 1 2284 5
 5680 0590 00BF     		nop
 5681 0592 04E0     		b	.L258
 5682              	.L311:
 5683              	.LBB631:
2343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 5684              		.loc 1 2343 7
 5685 0594 00BF     		nop
 5686 0596 02E0     		b	.L258
 5687              	.L312:
 5688              	.LBE631:
 5689              	.LBB632:
2381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 5690              		.loc 1 2381 7
 5691 0598 00BF     		nop
 5692 059a 00E0     		b	.L258
 5693              	.L313:
 5694              	.LBE632:
2415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 5695              		.loc 1 2415 5
 5696 059c 00BF     		nop
 5697              	.L258:
2423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
2424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 5698              		.loc 1 2425 1
 5699 059e E837     		adds	r7, r7, #232
 5700              	.LCFI118:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 165


 5701              		.cfi_def_cfa_offset 8
 5702 05a0 BD46     		mov	sp, r7
 5703              	.LCFI119:
 5704              		.cfi_def_cfa_register 13
 5705              		@ sp needed
 5706 05a2 80BD     		pop	{r7, pc}
 5707              		.cfi_endproc
 5708              	.LFE163:
 5710              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 5711              		.align	1
 5712              		.weak	HAL_UART_TxCpltCallback
 5713              		.syntax unified
 5714              		.thumb
 5715              		.thumb_func
 5717              	HAL_UART_TxCpltCallback:
 5718              	.LFB164:
2426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
2429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
2430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
2431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
2433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 5719              		.loc 1 2433 1
 5720              		.cfi_startproc
 5721              		@ args = 0, pretend = 0, frame = 8
 5722              		@ frame_needed = 1, uses_anonymous_args = 0
 5723              		@ link register save eliminated.
 5724 0000 80B4     		push	{r7}
 5725              	.LCFI120:
 5726              		.cfi_def_cfa_offset 4
 5727              		.cfi_offset 7, -4
 5728 0002 83B0     		sub	sp, sp, #12
 5729              	.LCFI121:
 5730              		.cfi_def_cfa_offset 16
 5731 0004 00AF     		add	r7, sp, #0
 5732              	.LCFI122:
 5733              		.cfi_def_cfa_register 7
 5734 0006 7860     		str	r0, [r7, #4]
2434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
2436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
2439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
2440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 5735              		.loc 1 2440 1
 5736 0008 00BF     		nop
 5737 000a 0C37     		adds	r7, r7, #12
 5738              	.LCFI123:
 5739              		.cfi_def_cfa_offset 4
 5740 000c BD46     		mov	sp, r7
 5741              	.LCFI124:
 5742              		.cfi_def_cfa_register 13
 5743              		@ sp needed
 5744 000e 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 166


 5745              	.LCFI125:
 5746              		.cfi_restore 7
 5747              		.cfi_def_cfa_offset 0
 5748 0012 7047     		bx	lr
 5749              		.cfi_endproc
 5750              	.LFE164:
 5752              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 5753              		.align	1
 5754              		.weak	HAL_UART_TxHalfCpltCallback
 5755              		.syntax unified
 5756              		.thumb
 5757              		.thumb_func
 5759              	HAL_UART_TxHalfCpltCallback:
 5760              	.LFB165:
2441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
2444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle.
2445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
2446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
2448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 5761              		.loc 1 2448 1
 5762              		.cfi_startproc
 5763              		@ args = 0, pretend = 0, frame = 8
 5764              		@ frame_needed = 1, uses_anonymous_args = 0
 5765              		@ link register save eliminated.
 5766 0000 80B4     		push	{r7}
 5767              	.LCFI126:
 5768              		.cfi_def_cfa_offset 4
 5769              		.cfi_offset 7, -4
 5770 0002 83B0     		sub	sp, sp, #12
 5771              	.LCFI127:
 5772              		.cfi_def_cfa_offset 16
 5773 0004 00AF     		add	r7, sp, #0
 5774              	.LCFI128:
 5775              		.cfi_def_cfa_register 7
 5776 0006 7860     		str	r0, [r7, #4]
2449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
2451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
2454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
2455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 5777              		.loc 1 2455 1
 5778 0008 00BF     		nop
 5779 000a 0C37     		adds	r7, r7, #12
 5780              	.LCFI129:
 5781              		.cfi_def_cfa_offset 4
 5782 000c BD46     		mov	sp, r7
 5783              	.LCFI130:
 5784              		.cfi_def_cfa_register 13
 5785              		@ sp needed
 5786 000e 5DF8047B 		ldr	r7, [sp], #4
 5787              	.LCFI131:
 5788              		.cfi_restore 7
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 167


 5789              		.cfi_def_cfa_offset 0
 5790 0012 7047     		bx	lr
 5791              		.cfi_endproc
 5792              	.LFE165:
 5794              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 5795              		.align	1
 5796              		.weak	HAL_UART_RxCpltCallback
 5797              		.syntax unified
 5798              		.thumb
 5799              		.thumb_func
 5801              	HAL_UART_RxCpltCallback:
 5802              	.LFB166:
2456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Rx Transfer completed callback.
2459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle.
2460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
2461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
2463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 5803              		.loc 1 2463 1
 5804              		.cfi_startproc
 5805              		@ args = 0, pretend = 0, frame = 8
 5806              		@ frame_needed = 1, uses_anonymous_args = 0
 5807              		@ link register save eliminated.
 5808 0000 80B4     		push	{r7}
 5809              	.LCFI132:
 5810              		.cfi_def_cfa_offset 4
 5811              		.cfi_offset 7, -4
 5812 0002 83B0     		sub	sp, sp, #12
 5813              	.LCFI133:
 5814              		.cfi_def_cfa_offset 16
 5815 0004 00AF     		add	r7, sp, #0
 5816              	.LCFI134:
 5817              		.cfi_def_cfa_register 7
 5818 0006 7860     		str	r0, [r7, #4]
2464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
2466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
2469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
2470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 5819              		.loc 1 2470 1
 5820 0008 00BF     		nop
 5821 000a 0C37     		adds	r7, r7, #12
 5822              	.LCFI135:
 5823              		.cfi_def_cfa_offset 4
 5824 000c BD46     		mov	sp, r7
 5825              	.LCFI136:
 5826              		.cfi_def_cfa_register 13
 5827              		@ sp needed
 5828 000e 5DF8047B 		ldr	r7, [sp], #4
 5829              	.LCFI137:
 5830              		.cfi_restore 7
 5831              		.cfi_def_cfa_offset 0
 5832 0012 7047     		bx	lr
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 168


 5833              		.cfi_endproc
 5834              	.LFE166:
 5836              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 5837              		.align	1
 5838              		.weak	HAL_UART_RxHalfCpltCallback
 5839              		.syntax unified
 5840              		.thumb
 5841              		.thumb_func
 5843              	HAL_UART_RxHalfCpltCallback:
 5844              	.LFB167:
2471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
2474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle.
2475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
2476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
2478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 5845              		.loc 1 2478 1
 5846              		.cfi_startproc
 5847              		@ args = 0, pretend = 0, frame = 8
 5848              		@ frame_needed = 1, uses_anonymous_args = 0
 5849              		@ link register save eliminated.
 5850 0000 80B4     		push	{r7}
 5851              	.LCFI138:
 5852              		.cfi_def_cfa_offset 4
 5853              		.cfi_offset 7, -4
 5854 0002 83B0     		sub	sp, sp, #12
 5855              	.LCFI139:
 5856              		.cfi_def_cfa_offset 16
 5857 0004 00AF     		add	r7, sp, #0
 5858              	.LCFI140:
 5859              		.cfi_def_cfa_register 7
 5860 0006 7860     		str	r0, [r7, #4]
2479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
2481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
2484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
2485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 5861              		.loc 1 2485 1
 5862 0008 00BF     		nop
 5863 000a 0C37     		adds	r7, r7, #12
 5864              	.LCFI141:
 5865              		.cfi_def_cfa_offset 4
 5866 000c BD46     		mov	sp, r7
 5867              	.LCFI142:
 5868              		.cfi_def_cfa_register 13
 5869              		@ sp needed
 5870 000e 5DF8047B 		ldr	r7, [sp], #4
 5871              	.LCFI143:
 5872              		.cfi_restore 7
 5873              		.cfi_def_cfa_offset 0
 5874 0012 7047     		bx	lr
 5875              		.cfi_endproc
 5876              	.LFE167:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 169


 5878              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 5879              		.align	1
 5880              		.weak	HAL_UART_ErrorCallback
 5881              		.syntax unified
 5882              		.thumb
 5883              		.thumb_func
 5885              	HAL_UART_ErrorCallback:
 5886              	.LFB168:
2486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  UART error callback.
2489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle.
2490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
2491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
2493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 5887              		.loc 1 2493 1
 5888              		.cfi_startproc
 5889              		@ args = 0, pretend = 0, frame = 8
 5890              		@ frame_needed = 1, uses_anonymous_args = 0
 5891              		@ link register save eliminated.
 5892 0000 80B4     		push	{r7}
 5893              	.LCFI144:
 5894              		.cfi_def_cfa_offset 4
 5895              		.cfi_offset 7, -4
 5896 0002 83B0     		sub	sp, sp, #12
 5897              	.LCFI145:
 5898              		.cfi_def_cfa_offset 16
 5899 0004 00AF     		add	r7, sp, #0
 5900              	.LCFI146:
 5901              		.cfi_def_cfa_register 7
 5902 0006 7860     		str	r0, [r7, #4]
2494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
2496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
2499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
2500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 5903              		.loc 1 2500 1
 5904 0008 00BF     		nop
 5905 000a 0C37     		adds	r7, r7, #12
 5906              	.LCFI147:
 5907              		.cfi_def_cfa_offset 4
 5908 000c BD46     		mov	sp, r7
 5909              	.LCFI148:
 5910              		.cfi_def_cfa_register 13
 5911              		@ sp needed
 5912 000e 5DF8047B 		ldr	r7, [sp], #4
 5913              	.LCFI149:
 5914              		.cfi_restore 7
 5915              		.cfi_def_cfa_offset 0
 5916 0012 7047     		bx	lr
 5917              		.cfi_endproc
 5918              	.LFE168:
 5920              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 5921              		.align	1
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 170


 5922              		.weak	HAL_UART_AbortCpltCallback
 5923              		.syntax unified
 5924              		.thumb
 5925              		.thumb_func
 5927              	HAL_UART_AbortCpltCallback:
 5928              	.LFB169:
2501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle.
2505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
2506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
2508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 5929              		.loc 1 2508 1
 5930              		.cfi_startproc
 5931              		@ args = 0, pretend = 0, frame = 8
 5932              		@ frame_needed = 1, uses_anonymous_args = 0
 5933              		@ link register save eliminated.
 5934 0000 80B4     		push	{r7}
 5935              	.LCFI150:
 5936              		.cfi_def_cfa_offset 4
 5937              		.cfi_offset 7, -4
 5938 0002 83B0     		sub	sp, sp, #12
 5939              	.LCFI151:
 5940              		.cfi_def_cfa_offset 16
 5941 0004 00AF     		add	r7, sp, #0
 5942              	.LCFI152:
 5943              		.cfi_def_cfa_register 7
 5944 0006 7860     		str	r0, [r7, #4]
2509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
2511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
2514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
2515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 5945              		.loc 1 2515 1
 5946 0008 00BF     		nop
 5947 000a 0C37     		adds	r7, r7, #12
 5948              	.LCFI153:
 5949              		.cfi_def_cfa_offset 4
 5950 000c BD46     		mov	sp, r7
 5951              	.LCFI154:
 5952              		.cfi_def_cfa_register 13
 5953              		@ sp needed
 5954 000e 5DF8047B 		ldr	r7, [sp], #4
 5955              	.LCFI155:
 5956              		.cfi_restore 7
 5957              		.cfi_def_cfa_offset 0
 5958 0012 7047     		bx	lr
 5959              		.cfi_endproc
 5960              	.LFE169:
 5962              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 5963              		.align	1
 5964              		.weak	HAL_UART_AbortTransmitCpltCallback
 5965              		.syntax unified
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 171


 5966              		.thumb
 5967              		.thumb_func
 5969              	HAL_UART_AbortTransmitCpltCallback:
 5970              	.LFB170:
2516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle.
2520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
2521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
2523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 5971              		.loc 1 2523 1
 5972              		.cfi_startproc
 5973              		@ args = 0, pretend = 0, frame = 8
 5974              		@ frame_needed = 1, uses_anonymous_args = 0
 5975              		@ link register save eliminated.
 5976 0000 80B4     		push	{r7}
 5977              	.LCFI156:
 5978              		.cfi_def_cfa_offset 4
 5979              		.cfi_offset 7, -4
 5980 0002 83B0     		sub	sp, sp, #12
 5981              	.LCFI157:
 5982              		.cfi_def_cfa_offset 16
 5983 0004 00AF     		add	r7, sp, #0
 5984              	.LCFI158:
 5985              		.cfi_def_cfa_register 7
 5986 0006 7860     		str	r0, [r7, #4]
2524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
2526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
2530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 5987              		.loc 1 2530 1
 5988 0008 00BF     		nop
 5989 000a 0C37     		adds	r7, r7, #12
 5990              	.LCFI159:
 5991              		.cfi_def_cfa_offset 4
 5992 000c BD46     		mov	sp, r7
 5993              	.LCFI160:
 5994              		.cfi_def_cfa_register 13
 5995              		@ sp needed
 5996 000e 5DF8047B 		ldr	r7, [sp], #4
 5997              	.LCFI161:
 5998              		.cfi_restore 7
 5999              		.cfi_def_cfa_offset 0
 6000 0012 7047     		bx	lr
 6001              		.cfi_endproc
 6002              	.LFE170:
 6004              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 6005              		.align	1
 6006              		.weak	HAL_UART_AbortReceiveCpltCallback
 6007              		.syntax unified
 6008              		.thumb
 6009              		.thumb_func
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 172


 6011              	HAL_UART_AbortReceiveCpltCallback:
 6012              	.LFB171:
2531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
2534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle.
2535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
2536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
2538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 6013              		.loc 1 2538 1
 6014              		.cfi_startproc
 6015              		@ args = 0, pretend = 0, frame = 8
 6016              		@ frame_needed = 1, uses_anonymous_args = 0
 6017              		@ link register save eliminated.
 6018 0000 80B4     		push	{r7}
 6019              	.LCFI162:
 6020              		.cfi_def_cfa_offset 4
 6021              		.cfi_offset 7, -4
 6022 0002 83B0     		sub	sp, sp, #12
 6023              	.LCFI163:
 6024              		.cfi_def_cfa_offset 16
 6025 0004 00AF     		add	r7, sp, #0
 6026              	.LCFI164:
 6027              		.cfi_def_cfa_register 7
 6028 0006 7860     		str	r0, [r7, #4]
2539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
2541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
2544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
2545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 6029              		.loc 1 2545 1
 6030 0008 00BF     		nop
 6031 000a 0C37     		adds	r7, r7, #12
 6032              	.LCFI165:
 6033              		.cfi_def_cfa_offset 4
 6034 000c BD46     		mov	sp, r7
 6035              	.LCFI166:
 6036              		.cfi_def_cfa_register 13
 6037              		@ sp needed
 6038 000e 5DF8047B 		ldr	r7, [sp], #4
 6039              	.LCFI167:
 6040              		.cfi_restore 7
 6041              		.cfi_def_cfa_offset 0
 6042 0012 7047     		bx	lr
 6043              		.cfi_endproc
 6044              	.LFE171:
 6046              		.section	.text.HAL_UARTEx_RxEventCallback,"ax",%progbits
 6047              		.align	1
 6048              		.weak	HAL_UARTEx_RxEventCallback
 6049              		.syntax unified
 6050              		.thumb
 6051              		.thumb_func
 6053              	HAL_UARTEx_RxEventCallback:
 6054              	.LFB172:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 173


2546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Reception Event Callback (Rx event notification called after use of advanced reception 
2549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle
2550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  Size  Number of data available in application reception buffer (indicates a position in
2551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *               reception buffer until which, data are available)
2552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
2553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** __weak void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
2555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 6055              		.loc 1 2555 1
 6056              		.cfi_startproc
 6057              		@ args = 0, pretend = 0, frame = 8
 6058              		@ frame_needed = 1, uses_anonymous_args = 0
 6059              		@ link register save eliminated.
 6060 0000 80B4     		push	{r7}
 6061              	.LCFI168:
 6062              		.cfi_def_cfa_offset 4
 6063              		.cfi_offset 7, -4
 6064 0002 83B0     		sub	sp, sp, #12
 6065              	.LCFI169:
 6066              		.cfi_def_cfa_offset 16
 6067 0004 00AF     		add	r7, sp, #0
 6068              	.LCFI170:
 6069              		.cfi_def_cfa_register 7
 6070 0006 7860     		str	r0, [r7, #4]
 6071 0008 0B46     		mov	r3, r1
 6072 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
2558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(Size);
2559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             the HAL_UARTEx_RxEventCallback can be implemented in the user file.
2562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
2563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 6073              		.loc 1 2563 1
 6074 000c 00BF     		nop
 6075 000e 0C37     		adds	r7, r7, #12
 6076              	.LCFI171:
 6077              		.cfi_def_cfa_offset 4
 6078 0010 BD46     		mov	sp, r7
 6079              	.LCFI172:
 6080              		.cfi_def_cfa_register 13
 6081              		@ sp needed
 6082 0012 5DF8047B 		ldr	r7, [sp], #4
 6083              	.LCFI173:
 6084              		.cfi_restore 7
 6085              		.cfi_def_cfa_offset 0
 6086 0016 7047     		bx	lr
 6087              		.cfi_endproc
 6088              	.LFE172:
 6090              		.section	.text.HAL_UART_ReceiverTimeout_Config,"ax",%progbits
 6091              		.align	1
 6092              		.global	HAL_UART_ReceiverTimeout_Config
 6093              		.syntax unified
 6094              		.thumb
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 174


 6095              		.thumb_func
 6097              	HAL_UART_ReceiverTimeout_Config:
 6098              	.LFB173:
2564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #if defined(USART_CR1_UESM)
2566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief UART wakeup from Stop mode callback.
2568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
2569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
2570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** __weak void HAL_UARTEx_WakeupCallback(UART_HandleTypeDef *huart)
2572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
2573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UNUSED(huart);
2575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             the HAL_UARTEx_WakeupCallback can be implemented in the user file.
2578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****    */
2579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
2580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* USART_CR1_UESM */
2582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @}
2584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
2587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *  @brief   UART control functions
2588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
2589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** @verbatim
2590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  ===============================================================================
2591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                       ##### Peripheral Control functions #####
2592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****  ===============================================================================
2593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     [..]
2594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
2595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_UART_ReceiverTimeout_Config() API allows to configure the receiver timeout value on th
2596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_UART_EnableReceiverTimeout() API enables the receiver timeout feature
2597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_UART_DisableReceiverTimeout() API disables the receiver timeout feature
2598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
2599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
2600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
2601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) UART_SetConfig() API configures the UART peripheral
2602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) UART_AdvFeatureConfig() API optionally configures the UART advanced features
2603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) UART_CheckIdleState() API ensures that TEACK and/or REACK are set after initialization
2604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
2605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
2606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
2607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** @endverbatim
2608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
2609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Update on the fly the receiver timeout value in RTOR register.
2613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  TimeoutValue receiver timeout value in number of baud blocks. The timeout
2616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                     value must be less or equal to 0x0FFFFFFFF.
2617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 175


2618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** void HAL_UART_ReceiverTimeout_Config(UART_HandleTypeDef *huart, uint32_t TimeoutValue)
2620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 6099              		.loc 1 2620 1
 6100              		.cfi_startproc
 6101              		@ args = 0, pretend = 0, frame = 8
 6102              		@ frame_needed = 1, uses_anonymous_args = 0
 6103              		@ link register save eliminated.
 6104 0000 80B4     		push	{r7}
 6105              	.LCFI174:
 6106              		.cfi_def_cfa_offset 4
 6107              		.cfi_offset 7, -4
 6108 0002 83B0     		sub	sp, sp, #12
 6109              	.LCFI175:
 6110              		.cfi_def_cfa_offset 16
 6111 0004 00AF     		add	r7, sp, #0
 6112              	.LCFI176:
 6113              		.cfi_def_cfa_register 7
 6114 0006 7860     		str	r0, [r7, #4]
 6115 0008 3960     		str	r1, [r7]
2621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_RECEIVER_TIMEOUT_VALUE(TimeoutValue));
2622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->RTOR, USART_RTOR_RTO, TimeoutValue);
 6116              		.loc 1 2622 3
 6117 000a 7B68     		ldr	r3, [r7, #4]
 6118 000c 1B68     		ldr	r3, [r3]
 6119 000e 5B69     		ldr	r3, [r3, #20]
 6120 0010 03F07F41 		and	r1, r3, #-16777216
 6121 0014 7B68     		ldr	r3, [r7, #4]
 6122 0016 1B68     		ldr	r3, [r3]
 6123 0018 3A68     		ldr	r2, [r7]
 6124 001a 0A43     		orrs	r2, r2, r1
 6125 001c 5A61     		str	r2, [r3, #20]
2623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 6126              		.loc 1 2623 1
 6127 001e 00BF     		nop
 6128 0020 0C37     		adds	r7, r7, #12
 6129              	.LCFI177:
 6130              		.cfi_def_cfa_offset 4
 6131 0022 BD46     		mov	sp, r7
 6132              	.LCFI178:
 6133              		.cfi_def_cfa_register 13
 6134              		@ sp needed
 6135 0024 5DF8047B 		ldr	r7, [sp], #4
 6136              	.LCFI179:
 6137              		.cfi_restore 7
 6138              		.cfi_def_cfa_offset 0
 6139 0028 7047     		bx	lr
 6140              		.cfi_endproc
 6141              	.LFE173:
 6143              		.section	.text.HAL_UART_EnableReceiverTimeout,"ax",%progbits
 6144              		.align	1
 6145              		.global	HAL_UART_EnableReceiverTimeout
 6146              		.syntax unified
 6147              		.thumb
 6148              		.thumb_func
 6150              	HAL_UART_EnableReceiverTimeout:
 6151              	.LFB174:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 176


2624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Enable the UART receiver timeout feature.
2627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
2630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_EnableReceiverTimeout(UART_HandleTypeDef *huart)
2632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 6152              		.loc 1 2632 1
 6153              		.cfi_startproc
 6154              		@ args = 0, pretend = 0, frame = 8
 6155              		@ frame_needed = 1, uses_anonymous_args = 0
 6156              		@ link register save eliminated.
 6157 0000 80B4     		push	{r7}
 6158              	.LCFI180:
 6159              		.cfi_def_cfa_offset 4
 6160              		.cfi_offset 7, -4
 6161 0002 83B0     		sub	sp, sp, #12
 6162              	.LCFI181:
 6163              		.cfi_def_cfa_offset 16
 6164 0004 00AF     		add	r7, sp, #0
 6165              	.LCFI182:
 6166              		.cfi_def_cfa_register 7
 6167 0006 7860     		str	r0, [r7, #4]
2633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 6168              		.loc 1 2633 12
 6169 0008 7B68     		ldr	r3, [r7, #4]
 6170 000a DB6F     		ldr	r3, [r3, #124]
 6171              		.loc 1 2633 6
 6172 000c 202B     		cmp	r3, #32
 6173 000e 1ED1     		bne	.L327
2634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
2635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Locked */
2636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_LOCK(huart);
 6174              		.loc 1 2636 5
 6175 0010 7B68     		ldr	r3, [r7, #4]
 6176 0012 93F87830 		ldrb	r3, [r3, #120]	@ zero_extendqisi2
 6177 0016 012B     		cmp	r3, #1
 6178 0018 01D1     		bne	.L328
 6179              		.loc 1 2636 5 is_stmt 0 discriminator 1
 6180 001a 0223     		movs	r3, #2
 6181 001c 18E0     		b	.L329
 6182              	.L328:
 6183              		.loc 1 2636 5 discriminator 2
 6184 001e 7B68     		ldr	r3, [r7, #4]
 6185 0020 0122     		movs	r2, #1
 6186 0022 83F87820 		strb	r2, [r3, #120]
2637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY;
 6187              		.loc 1 2638 19 is_stmt 1 discriminator 2
 6188 0026 7B68     		ldr	r3, [r7, #4]
 6189 0028 2422     		movs	r2, #36
 6190 002a DA67     		str	r2, [r3, #124]
2639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the USART RTOEN bit */
2641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR2, USART_CR2_RTOEN);
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 177


 6191              		.loc 1 2641 5 discriminator 2
 6192 002c 7B68     		ldr	r3, [r7, #4]
 6193 002e 1B68     		ldr	r3, [r3]
 6194 0030 5A68     		ldr	r2, [r3, #4]
 6195 0032 7B68     		ldr	r3, [r7, #4]
 6196 0034 1B68     		ldr	r3, [r3]
 6197 0036 42F40002 		orr	r2, r2, #8388608
 6198 003a 5A60     		str	r2, [r3, #4]
2642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 6199              		.loc 1 2643 19 discriminator 2
 6200 003c 7B68     		ldr	r3, [r7, #4]
 6201 003e 2022     		movs	r2, #32
 6202 0040 DA67     		str	r2, [r3, #124]
2644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Unlocked */
2646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 6203              		.loc 1 2646 5 discriminator 2
 6204 0042 7B68     		ldr	r3, [r7, #4]
 6205 0044 0022     		movs	r2, #0
 6206 0046 83F87820 		strb	r2, [r3, #120]
2647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
 6207              		.loc 1 2648 12 discriminator 2
 6208 004a 0023     		movs	r3, #0
 6209 004c 00E0     		b	.L329
 6210              	.L327:
2649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
2650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
2651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
2652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
 6211              		.loc 1 2652 12
 6212 004e 0223     		movs	r3, #2
 6213              	.L329:
2653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
2654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 6214              		.loc 1 2654 1
 6215 0050 1846     		mov	r0, r3
 6216 0052 0C37     		adds	r7, r7, #12
 6217              	.LCFI183:
 6218              		.cfi_def_cfa_offset 4
 6219 0054 BD46     		mov	sp, r7
 6220              	.LCFI184:
 6221              		.cfi_def_cfa_register 13
 6222              		@ sp needed
 6223 0056 5DF8047B 		ldr	r7, [sp], #4
 6224              	.LCFI185:
 6225              		.cfi_restore 7
 6226              		.cfi_def_cfa_offset 0
 6227 005a 7047     		bx	lr
 6228              		.cfi_endproc
 6229              	.LFE174:
 6231              		.section	.text.HAL_UART_DisableReceiverTimeout,"ax",%progbits
 6232              		.align	1
 6233              		.global	HAL_UART_DisableReceiverTimeout
 6234              		.syntax unified
 6235              		.thumb
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 178


 6236              		.thumb_func
 6238              	HAL_UART_DisableReceiverTimeout:
 6239              	.LFB175:
2655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Disable the UART receiver timeout feature.
2658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
2661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DisableReceiverTimeout(UART_HandleTypeDef *huart)
2663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 6240              		.loc 1 2663 1
 6241              		.cfi_startproc
 6242              		@ args = 0, pretend = 0, frame = 8
 6243              		@ frame_needed = 1, uses_anonymous_args = 0
 6244              		@ link register save eliminated.
 6245 0000 80B4     		push	{r7}
 6246              	.LCFI186:
 6247              		.cfi_def_cfa_offset 4
 6248              		.cfi_offset 7, -4
 6249 0002 83B0     		sub	sp, sp, #12
 6250              	.LCFI187:
 6251              		.cfi_def_cfa_offset 16
 6252 0004 00AF     		add	r7, sp, #0
 6253              	.LCFI188:
 6254              		.cfi_def_cfa_register 7
 6255 0006 7860     		str	r0, [r7, #4]
2664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 6256              		.loc 1 2664 12
 6257 0008 7B68     		ldr	r3, [r7, #4]
 6258 000a DB6F     		ldr	r3, [r3, #124]
 6259              		.loc 1 2664 6
 6260 000c 202B     		cmp	r3, #32
 6261 000e 1ED1     		bne	.L331
2665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
2666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Locked */
2667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_LOCK(huart);
 6262              		.loc 1 2667 5
 6263 0010 7B68     		ldr	r3, [r7, #4]
 6264 0012 93F87830 		ldrb	r3, [r3, #120]	@ zero_extendqisi2
 6265 0016 012B     		cmp	r3, #1
 6266 0018 01D1     		bne	.L332
 6267              		.loc 1 2667 5 is_stmt 0 discriminator 1
 6268 001a 0223     		movs	r3, #2
 6269 001c 18E0     		b	.L333
 6270              	.L332:
 6271              		.loc 1 2667 5 discriminator 2
 6272 001e 7B68     		ldr	r3, [r7, #4]
 6273 0020 0122     		movs	r2, #1
 6274 0022 83F87820 		strb	r2, [r3, #120]
2668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY;
 6275              		.loc 1 2669 19 is_stmt 1 discriminator 2
 6276 0026 7B68     		ldr	r3, [r7, #4]
 6277 0028 2422     		movs	r2, #36
 6278 002a DA67     		str	r2, [r3, #124]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 179


2670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Clear the USART RTOEN bit */
2672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR2, USART_CR2_RTOEN);
 6279              		.loc 1 2672 5 discriminator 2
 6280 002c 7B68     		ldr	r3, [r7, #4]
 6281 002e 1B68     		ldr	r3, [r3]
 6282 0030 5A68     		ldr	r2, [r3, #4]
 6283 0032 7B68     		ldr	r3, [r7, #4]
 6284 0034 1B68     		ldr	r3, [r3]
 6285 0036 22F40002 		bic	r2, r2, #8388608
 6286 003a 5A60     		str	r2, [r3, #4]
2673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 6287              		.loc 1 2674 19 discriminator 2
 6288 003c 7B68     		ldr	r3, [r7, #4]
 6289 003e 2022     		movs	r2, #32
 6290 0040 DA67     		str	r2, [r3, #124]
2675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Process Unlocked */
2677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 6291              		.loc 1 2677 5 discriminator 2
 6292 0042 7B68     		ldr	r3, [r7, #4]
 6293 0044 0022     		movs	r2, #0
 6294 0046 83F87820 		strb	r2, [r3, #120]
2678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_OK;
 6295              		.loc 1 2679 12 discriminator 2
 6296 004a 0023     		movs	r3, #0
 6297 004c 00E0     		b	.L333
 6298              	.L331:
2680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
2681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
2682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
2683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     return HAL_BUSY;
 6299              		.loc 1 2683 12
 6300 004e 0223     		movs	r3, #2
 6301              	.L333:
2684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
2685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 6302              		.loc 1 2685 1
 6303 0050 1846     		mov	r0, r3
 6304 0052 0C37     		adds	r7, r7, #12
 6305              	.LCFI189:
 6306              		.cfi_def_cfa_offset 4
 6307 0054 BD46     		mov	sp, r7
 6308              	.LCFI190:
 6309              		.cfi_def_cfa_register 13
 6310              		@ sp needed
 6311 0056 5DF8047B 		ldr	r7, [sp], #4
 6312              	.LCFI191:
 6313              		.cfi_restore 7
 6314              		.cfi_def_cfa_offset 0
 6315 005a 7047     		bx	lr
 6316              		.cfi_endproc
 6317              	.LFE175:
 6319              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 6320              		.align	1
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 180


 6321              		.global	HAL_MultiProcessor_EnableMuteMode
 6322              		.syntax unified
 6323              		.thumb
 6324              		.thumb_func
 6326              	HAL_MultiProcessor_EnableMuteMode:
 6327              	.LFB176:
2686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Enable UART in mute mode (does not mean UART enters mute mode;
2689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
2690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle.
2691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
2692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
2694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 6328              		.loc 1 2694 1
 6329              		.cfi_startproc
 6330              		@ args = 0, pretend = 0, frame = 32
 6331              		@ frame_needed = 1, uses_anonymous_args = 0
 6332 0000 80B5     		push	{r7, lr}
 6333              	.LCFI192:
 6334              		.cfi_def_cfa_offset 8
 6335              		.cfi_offset 7, -8
 6336              		.cfi_offset 14, -4
 6337 0002 88B0     		sub	sp, sp, #32
 6338              	.LCFI193:
 6339              		.cfi_def_cfa_offset 40
 6340 0004 00AF     		add	r7, sp, #0
 6341              	.LCFI194:
 6342              		.cfi_def_cfa_register 7
 6343 0006 7860     		str	r0, [r7, #4]
2695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
 6344              		.loc 1 2695 3
 6345 0008 7B68     		ldr	r3, [r7, #4]
 6346 000a 93F87830 		ldrb	r3, [r3, #120]	@ zero_extendqisi2
 6347 000e 012B     		cmp	r3, #1
 6348 0010 01D1     		bne	.L335
 6349              		.loc 1 2695 3 is_stmt 0 discriminator 1
 6350 0012 0223     		movs	r3, #2
 6351 0014 26E0     		b	.L336
 6352              	.L335:
 6353              		.loc 1 2695 3 discriminator 2
 6354 0016 7B68     		ldr	r3, [r7, #4]
 6355 0018 0122     		movs	r2, #1
 6356 001a 83F87820 		strb	r2, [r3, #120]
2696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 6357              		.loc 1 2697 17 is_stmt 1 discriminator 2
 6358 001e 7B68     		ldr	r3, [r7, #4]
 6359 0020 2422     		movs	r2, #36
 6360 0022 DA67     		str	r2, [r3, #124]
 6361              	.L339:
 6362              	.LBB633:
2698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
2700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_MME);
 6363              		.loc 1 2700 3 discriminator 1
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 181


 6364 0024 7B68     		ldr	r3, [r7, #4]
 6365 0026 1B68     		ldr	r3, [r3]
 6366 0028 FB60     		str	r3, [r7, #12]
 6367              	.LBB634:
 6368              	.LBB635:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6369              		.loc 2 1072 4 discriminator 1
 6370 002a FB68     		ldr	r3, [r7, #12]
 6371              		.syntax unified
 6372              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6373 002c 53E8003F 		ldrex r3, [r3]
 6374              	@ 0 "" 2
 6375              		.thumb
 6376              		.syntax unified
 6377 0030 BB60     		str	r3, [r7, #8]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6378              		.loc 2 1073 10 discriminator 1
 6379 0032 BB68     		ldr	r3, [r7, #8]
 6380              	.LBE635:
 6381              	.LBE634:
 6382              		.loc 1 2700 3 discriminator 1
 6383 0034 43F40053 		orr	r3, r3, #8192
 6384 0038 FB61     		str	r3, [r7, #28]
 6385 003a 7B68     		ldr	r3, [r7, #4]
 6386 003c 1B68     		ldr	r3, [r3]
 6387 003e 1A46     		mov	r2, r3
 6388 0040 FB69     		ldr	r3, [r7, #28]
 6389 0042 BB61     		str	r3, [r7, #24]
 6390 0044 7A61     		str	r2, [r7, #20]
 6391              	.LBB636:
 6392              	.LBB637:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6393              		.loc 2 1123 4 discriminator 1
 6394 0046 7969     		ldr	r1, [r7, #20]
 6395 0048 BA69     		ldr	r2, [r7, #24]
 6396              		.syntax unified
 6397              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6398 004a 41E80023 		strex r3, r2, [r1]
 6399              	@ 0 "" 2
 6400              		.thumb
 6401              		.syntax unified
 6402 004e 3B61     		str	r3, [r7, #16]
 6403              		.loc 2 1124 10 discriminator 1
 6404 0050 3B69     		ldr	r3, [r7, #16]
 6405              	.LBE637:
 6406              	.LBE636:
 6407              		.loc 1 2700 3 discriminator 1
 6408 0052 002B     		cmp	r3, #0
 6409 0054 E6D1     		bne	.L339
 6410              	.LBE633:
2701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6411              		.loc 1 2702 17
 6412 0056 7B68     		ldr	r3, [r7, #4]
 6413 0058 2022     		movs	r2, #32
 6414 005a DA67     		str	r2, [r3, #124]
2703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 182


2704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 6415              		.loc 1 2704 11
 6416 005c 7868     		ldr	r0, [r7, #4]
 6417 005e FFF7FEFF 		bl	UART_CheckIdleState
 6418 0062 0346     		mov	r3, r0
 6419              	.L336:
2705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 6420              		.loc 1 2705 1
 6421 0064 1846     		mov	r0, r3
 6422 0066 2037     		adds	r7, r7, #32
 6423              	.LCFI195:
 6424              		.cfi_def_cfa_offset 8
 6425 0068 BD46     		mov	sp, r7
 6426              	.LCFI196:
 6427              		.cfi_def_cfa_register 13
 6428              		@ sp needed
 6429 006a 80BD     		pop	{r7, pc}
 6430              		.cfi_endproc
 6431              	.LFE176:
 6433              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 6434              		.align	1
 6435              		.global	HAL_MultiProcessor_DisableMuteMode
 6436              		.syntax unified
 6437              		.thumb
 6438              		.thumb_func
 6440              	HAL_MultiProcessor_DisableMuteMode:
 6441              	.LFB177:
2706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Disable UART mute mode (does not mean the UART actually exits mute mode
2709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         as it may not have been in mute mode at this very moment).
2710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle.
2711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
2712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
2714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 6442              		.loc 1 2714 1
 6443              		.cfi_startproc
 6444              		@ args = 0, pretend = 0, frame = 32
 6445              		@ frame_needed = 1, uses_anonymous_args = 0
 6446 0000 80B5     		push	{r7, lr}
 6447              	.LCFI197:
 6448              		.cfi_def_cfa_offset 8
 6449              		.cfi_offset 7, -8
 6450              		.cfi_offset 14, -4
 6451 0002 88B0     		sub	sp, sp, #32
 6452              	.LCFI198:
 6453              		.cfi_def_cfa_offset 40
 6454 0004 00AF     		add	r7, sp, #0
 6455              	.LCFI199:
 6456              		.cfi_def_cfa_register 7
 6457 0006 7860     		str	r0, [r7, #4]
2715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
 6458              		.loc 1 2715 3
 6459 0008 7B68     		ldr	r3, [r7, #4]
 6460 000a 93F87830 		ldrb	r3, [r3, #120]	@ zero_extendqisi2
 6461 000e 012B     		cmp	r3, #1
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 183


 6462 0010 01D1     		bne	.L341
 6463              		.loc 1 2715 3 is_stmt 0 discriminator 1
 6464 0012 0223     		movs	r3, #2
 6465 0014 26E0     		b	.L342
 6466              	.L341:
 6467              		.loc 1 2715 3 discriminator 2
 6468 0016 7B68     		ldr	r3, [r7, #4]
 6469 0018 0122     		movs	r2, #1
 6470 001a 83F87820 		strb	r2, [r3, #120]
2716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 6471              		.loc 1 2717 17 is_stmt 1 discriminator 2
 6472 001e 7B68     		ldr	r3, [r7, #4]
 6473 0020 2422     		movs	r2, #36
 6474 0022 DA67     		str	r2, [r3, #124]
 6475              	.L345:
 6476              	.LBB638:
2718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable USART mute mode by clearing the MME bit in the CR1 register */
2720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
 6477              		.loc 1 2720 3 discriminator 1
 6478 0024 7B68     		ldr	r3, [r7, #4]
 6479 0026 1B68     		ldr	r3, [r3]
 6480 0028 FB60     		str	r3, [r7, #12]
 6481              	.LBB639:
 6482              	.LBB640:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6483              		.loc 2 1072 4 discriminator 1
 6484 002a FB68     		ldr	r3, [r7, #12]
 6485              		.syntax unified
 6486              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6487 002c 53E8003F 		ldrex r3, [r3]
 6488              	@ 0 "" 2
 6489              		.thumb
 6490              		.syntax unified
 6491 0030 BB60     		str	r3, [r7, #8]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6492              		.loc 2 1073 10 discriminator 1
 6493 0032 BB68     		ldr	r3, [r7, #8]
 6494              	.LBE640:
 6495              	.LBE639:
 6496              		.loc 1 2720 3 discriminator 1
 6497 0034 23F40053 		bic	r3, r3, #8192
 6498 0038 FB61     		str	r3, [r7, #28]
 6499 003a 7B68     		ldr	r3, [r7, #4]
 6500 003c 1B68     		ldr	r3, [r3]
 6501 003e 1A46     		mov	r2, r3
 6502 0040 FB69     		ldr	r3, [r7, #28]
 6503 0042 BB61     		str	r3, [r7, #24]
 6504 0044 7A61     		str	r2, [r7, #20]
 6505              	.LBB641:
 6506              	.LBB642:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6507              		.loc 2 1123 4 discriminator 1
 6508 0046 7969     		ldr	r1, [r7, #20]
 6509 0048 BA69     		ldr	r2, [r7, #24]
 6510              		.syntax unified
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 184


 6511              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6512 004a 41E80023 		strex r3, r2, [r1]
 6513              	@ 0 "" 2
 6514              		.thumb
 6515              		.syntax unified
 6516 004e 3B61     		str	r3, [r7, #16]
 6517              		.loc 2 1124 10 discriminator 1
 6518 0050 3B69     		ldr	r3, [r7, #16]
 6519              	.LBE642:
 6520              	.LBE641:
 6521              		.loc 1 2720 3 discriminator 1
 6522 0052 002B     		cmp	r3, #0
 6523 0054 E6D1     		bne	.L345
 6524              	.LBE638:
2721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6525              		.loc 1 2722 17
 6526 0056 7B68     		ldr	r3, [r7, #4]
 6527 0058 2022     		movs	r2, #32
 6528 005a DA67     		str	r2, [r3, #124]
2723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 6529              		.loc 1 2724 11
 6530 005c 7868     		ldr	r0, [r7, #4]
 6531 005e FFF7FEFF 		bl	UART_CheckIdleState
 6532 0062 0346     		mov	r3, r0
 6533              	.L342:
2725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 6534              		.loc 1 2725 1
 6535 0064 1846     		mov	r0, r3
 6536 0066 2037     		adds	r7, r7, #32
 6537              	.LCFI200:
 6538              		.cfi_def_cfa_offset 8
 6539 0068 BD46     		mov	sp, r7
 6540              	.LCFI201:
 6541              		.cfi_def_cfa_register 13
 6542              		@ sp needed
 6543 006a 80BD     		pop	{r7, pc}
 6544              		.cfi_endproc
 6545              	.LFE177:
 6547              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 6548              		.align	1
 6549              		.global	HAL_MultiProcessor_EnterMuteMode
 6550              		.syntax unified
 6551              		.thumb
 6552              		.thumb_func
 6554              	HAL_MultiProcessor_EnterMuteMode:
 6555              	.LFB178:
2726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
2729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
2730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
2731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
2732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 185


 6556              		.loc 1 2734 1
 6557              		.cfi_startproc
 6558              		@ args = 0, pretend = 0, frame = 8
 6559              		@ frame_needed = 1, uses_anonymous_args = 0
 6560              		@ link register save eliminated.
 6561 0000 80B4     		push	{r7}
 6562              	.LCFI202:
 6563              		.cfi_def_cfa_offset 4
 6564              		.cfi_offset 7, -4
 6565 0002 83B0     		sub	sp, sp, #12
 6566              	.LCFI203:
 6567              		.cfi_def_cfa_offset 16
 6568 0004 00AF     		add	r7, sp, #0
 6569              	.LCFI204:
 6570              		.cfi_def_cfa_register 7
 6571 0006 7860     		str	r0, [r7, #4]
2735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 6572              		.loc 1 2735 3
 6573 0008 7B68     		ldr	r3, [r7, #4]
 6574 000a 1B68     		ldr	r3, [r3]
 6575 000c 9A69     		ldr	r2, [r3, #24]
 6576 000e 7B68     		ldr	r3, [r7, #4]
 6577 0010 1B68     		ldr	r3, [r3]
 6578 0012 42F00402 		orr	r2, r2, #4
 6579 0016 9A61     		str	r2, [r3, #24]
2736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 6580              		.loc 1 2736 1
 6581 0018 00BF     		nop
 6582 001a 0C37     		adds	r7, r7, #12
 6583              	.LCFI205:
 6584              		.cfi_def_cfa_offset 4
 6585 001c BD46     		mov	sp, r7
 6586              	.LCFI206:
 6587              		.cfi_def_cfa_register 13
 6588              		@ sp needed
 6589 001e 5DF8047B 		ldr	r7, [sp], #4
 6590              	.LCFI207:
 6591              		.cfi_restore 7
 6592              		.cfi_def_cfa_offset 0
 6593 0022 7047     		bx	lr
 6594              		.cfi_endproc
 6595              	.LFE178:
 6597              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 6598              		.align	1
 6599              		.global	HAL_HalfDuplex_EnableTransmitter
 6600              		.syntax unified
 6601              		.thumb
 6602              		.thumb_func
 6604              	HAL_HalfDuplex_EnableTransmitter:
 6605              	.LFB179:
2737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
2740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle.
2741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
2742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 186


2744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 6606              		.loc 1 2744 1
 6607              		.cfi_startproc
 6608              		@ args = 0, pretend = 0, frame = 56
 6609              		@ frame_needed = 1, uses_anonymous_args = 0
 6610              		@ link register save eliminated.
 6611 0000 80B4     		push	{r7}
 6612              	.LCFI208:
 6613              		.cfi_def_cfa_offset 4
 6614              		.cfi_offset 7, -4
 6615 0002 8FB0     		sub	sp, sp, #60
 6616              	.LCFI209:
 6617              		.cfi_def_cfa_offset 64
 6618 0004 00AF     		add	r7, sp, #0
 6619              	.LCFI210:
 6620              		.cfi_def_cfa_register 7
 6621 0006 7860     		str	r0, [r7, #4]
2745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
 6622              		.loc 1 2745 3
 6623 0008 7B68     		ldr	r3, [r7, #4]
 6624 000a 93F87830 		ldrb	r3, [r3, #120]	@ zero_extendqisi2
 6625 000e 012B     		cmp	r3, #1
 6626 0010 01D1     		bne	.L348
 6627              		.loc 1 2745 3 is_stmt 0 discriminator 1
 6628 0012 0223     		movs	r3, #2
 6629 0014 40E0     		b	.L349
 6630              	.L348:
 6631              		.loc 1 2745 3 discriminator 2
 6632 0016 7B68     		ldr	r3, [r7, #4]
 6633 0018 0122     		movs	r2, #1
 6634 001a 83F87820 		strb	r2, [r3, #120]
2746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 6635              		.loc 1 2746 17 is_stmt 1 discriminator 2
 6636 001e 7B68     		ldr	r3, [r7, #4]
 6637 0020 2422     		movs	r2, #36
 6638 0022 DA67     		str	r2, [r3, #124]
 6639              	.L352:
 6640              	.LBB643:
2747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Clear TE and RE bits */
2749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
 6641              		.loc 1 2749 3 discriminator 1
 6642 0024 7B68     		ldr	r3, [r7, #4]
 6643 0026 1B68     		ldr	r3, [r3]
 6644 0028 3B62     		str	r3, [r7, #32]
 6645              	.LBB644:
 6646              	.LBB645:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6647              		.loc 2 1072 4 discriminator 1
 6648 002a 3B6A     		ldr	r3, [r7, #32]
 6649              		.syntax unified
 6650              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6651 002c 53E8003F 		ldrex r3, [r3]
 6652              	@ 0 "" 2
 6653              		.thumb
 6654              		.syntax unified
 6655 0030 FB61     		str	r3, [r7, #28]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 187


1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6656              		.loc 2 1073 10 discriminator 1
 6657 0032 FB69     		ldr	r3, [r7, #28]
 6658              	.LBE645:
 6659              	.LBE644:
 6660              		.loc 1 2749 3 discriminator 1
 6661 0034 23F00C03 		bic	r3, r3, #12
 6662 0038 7B63     		str	r3, [r7, #52]
 6663 003a 7B68     		ldr	r3, [r7, #4]
 6664 003c 1B68     		ldr	r3, [r3]
 6665 003e 1A46     		mov	r2, r3
 6666 0040 7B6B     		ldr	r3, [r7, #52]
 6667 0042 FB62     		str	r3, [r7, #44]
 6668 0044 BA62     		str	r2, [r7, #40]
 6669              	.LBB646:
 6670              	.LBB647:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6671              		.loc 2 1123 4 discriminator 1
 6672 0046 B96A     		ldr	r1, [r7, #40]
 6673 0048 FA6A     		ldr	r2, [r7, #44]
 6674              		.syntax unified
 6675              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6676 004a 41E80023 		strex r3, r2, [r1]
 6677              	@ 0 "" 2
 6678              		.thumb
 6679              		.syntax unified
 6680 004e 7B62     		str	r3, [r7, #36]
 6681              		.loc 2 1124 10 discriminator 1
 6682 0050 7B6A     		ldr	r3, [r7, #36]
 6683              	.LBE647:
 6684              	.LBE646:
 6685              		.loc 1 2749 3 discriminator 1
 6686 0052 002B     		cmp	r3, #0
 6687 0054 E6D1     		bne	.L352
 6688              	.L355:
 6689              	.LBE643:
 6690              	.LBB648:
2750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TE);
 6691              		.loc 1 2752 3 discriminator 1
 6692 0056 7B68     		ldr	r3, [r7, #4]
 6693 0058 1B68     		ldr	r3, [r3]
 6694 005a FB60     		str	r3, [r7, #12]
 6695              	.LBB649:
 6696              	.LBB650:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6697              		.loc 2 1072 4 discriminator 1
 6698 005c FB68     		ldr	r3, [r7, #12]
 6699              		.syntax unified
 6700              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6701 005e 53E8003F 		ldrex r3, [r3]
 6702              	@ 0 "" 2
 6703              		.thumb
 6704              		.syntax unified
 6705 0062 BB60     		str	r3, [r7, #8]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 188


 6706              		.loc 2 1073 10 discriminator 1
 6707 0064 BB68     		ldr	r3, [r7, #8]
 6708              	.LBE650:
 6709              	.LBE649:
 6710              		.loc 1 2752 3 discriminator 1
 6711 0066 43F00803 		orr	r3, r3, #8
 6712 006a 3B63     		str	r3, [r7, #48]
 6713 006c 7B68     		ldr	r3, [r7, #4]
 6714 006e 1B68     		ldr	r3, [r3]
 6715 0070 1A46     		mov	r2, r3
 6716 0072 3B6B     		ldr	r3, [r7, #48]
 6717 0074 BB61     		str	r3, [r7, #24]
 6718 0076 7A61     		str	r2, [r7, #20]
 6719              	.LBB651:
 6720              	.LBB652:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6721              		.loc 2 1123 4 discriminator 1
 6722 0078 7969     		ldr	r1, [r7, #20]
 6723 007a BA69     		ldr	r2, [r7, #24]
 6724              		.syntax unified
 6725              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6726 007c 41E80023 		strex r3, r2, [r1]
 6727              	@ 0 "" 2
 6728              		.thumb
 6729              		.syntax unified
 6730 0080 3B61     		str	r3, [r7, #16]
 6731              		.loc 2 1124 10 discriminator 1
 6732 0082 3B69     		ldr	r3, [r7, #16]
 6733              	.LBE652:
 6734              	.LBE651:
 6735              		.loc 1 2752 3 discriminator 1
 6736 0084 002B     		cmp	r3, #0
 6737 0086 E6D1     		bne	.L355
 6738              	.LBE648:
2753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6739              		.loc 1 2754 17
 6740 0088 7B68     		ldr	r3, [r7, #4]
 6741 008a 2022     		movs	r2, #32
 6742 008c DA67     		str	r2, [r3, #124]
2755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 6743              		.loc 1 2756 3
 6744 008e 7B68     		ldr	r3, [r7, #4]
 6745 0090 0022     		movs	r2, #0
 6746 0092 83F87820 		strb	r2, [r3, #120]
2757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 6747              		.loc 1 2758 10
 6748 0096 0023     		movs	r3, #0
 6749              	.L349:
2759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 6750              		.loc 1 2759 1
 6751 0098 1846     		mov	r0, r3
 6752 009a 3C37     		adds	r7, r7, #60
 6753              	.LCFI211:
 6754              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 189


 6755 009c BD46     		mov	sp, r7
 6756              	.LCFI212:
 6757              		.cfi_def_cfa_register 13
 6758              		@ sp needed
 6759 009e 5DF8047B 		ldr	r7, [sp], #4
 6760              	.LCFI213:
 6761              		.cfi_restore 7
 6762              		.cfi_def_cfa_offset 0
 6763 00a2 7047     		bx	lr
 6764              		.cfi_endproc
 6765              	.LFE179:
 6767              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 6768              		.align	1
 6769              		.global	HAL_HalfDuplex_EnableReceiver
 6770              		.syntax unified
 6771              		.thumb
 6772              		.thumb_func
 6774              	HAL_HalfDuplex_EnableReceiver:
 6775              	.LFB180:
2760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
2763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle.
2764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status.
2765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 6776              		.loc 1 2767 1
 6777              		.cfi_startproc
 6778              		@ args = 0, pretend = 0, frame = 56
 6779              		@ frame_needed = 1, uses_anonymous_args = 0
 6780              		@ link register save eliminated.
 6781 0000 80B4     		push	{r7}
 6782              	.LCFI214:
 6783              		.cfi_def_cfa_offset 4
 6784              		.cfi_offset 7, -4
 6785 0002 8FB0     		sub	sp, sp, #60
 6786              	.LCFI215:
 6787              		.cfi_def_cfa_offset 64
 6788 0004 00AF     		add	r7, sp, #0
 6789              	.LCFI216:
 6790              		.cfi_def_cfa_register 7
 6791 0006 7860     		str	r0, [r7, #4]
2768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
 6792              		.loc 1 2768 3
 6793 0008 7B68     		ldr	r3, [r7, #4]
 6794 000a 93F87830 		ldrb	r3, [r3, #120]	@ zero_extendqisi2
 6795 000e 012B     		cmp	r3, #1
 6796 0010 01D1     		bne	.L357
 6797              		.loc 1 2768 3 is_stmt 0 discriminator 1
 6798 0012 0223     		movs	r3, #2
 6799 0014 40E0     		b	.L358
 6800              	.L357:
 6801              		.loc 1 2768 3 discriminator 2
 6802 0016 7B68     		ldr	r3, [r7, #4]
 6803 0018 0122     		movs	r2, #1
 6804 001a 83F87820 		strb	r2, [r3, #120]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 190


2769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 6805              		.loc 1 2769 17 is_stmt 1 discriminator 2
 6806 001e 7B68     		ldr	r3, [r7, #4]
 6807 0020 2422     		movs	r2, #36
 6808 0022 DA67     		str	r2, [r3, #124]
 6809              	.L361:
 6810              	.LBB653:
2770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Clear TE and RE bits */
2772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
 6811              		.loc 1 2772 3 discriminator 1
 6812 0024 7B68     		ldr	r3, [r7, #4]
 6813 0026 1B68     		ldr	r3, [r3]
 6814 0028 3B62     		str	r3, [r7, #32]
 6815              	.LBB654:
 6816              	.LBB655:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6817              		.loc 2 1072 4 discriminator 1
 6818 002a 3B6A     		ldr	r3, [r7, #32]
 6819              		.syntax unified
 6820              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6821 002c 53E8003F 		ldrex r3, [r3]
 6822              	@ 0 "" 2
 6823              		.thumb
 6824              		.syntax unified
 6825 0030 FB61     		str	r3, [r7, #28]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6826              		.loc 2 1073 10 discriminator 1
 6827 0032 FB69     		ldr	r3, [r7, #28]
 6828              	.LBE655:
 6829              	.LBE654:
 6830              		.loc 1 2772 3 discriminator 1
 6831 0034 23F00C03 		bic	r3, r3, #12
 6832 0038 7B63     		str	r3, [r7, #52]
 6833 003a 7B68     		ldr	r3, [r7, #4]
 6834 003c 1B68     		ldr	r3, [r3]
 6835 003e 1A46     		mov	r2, r3
 6836 0040 7B6B     		ldr	r3, [r7, #52]
 6837 0042 FB62     		str	r3, [r7, #44]
 6838 0044 BA62     		str	r2, [r7, #40]
 6839              	.LBB656:
 6840              	.LBB657:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6841              		.loc 2 1123 4 discriminator 1
 6842 0046 B96A     		ldr	r1, [r7, #40]
 6843 0048 FA6A     		ldr	r2, [r7, #44]
 6844              		.syntax unified
 6845              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6846 004a 41E80023 		strex r3, r2, [r1]
 6847              	@ 0 "" 2
 6848              		.thumb
 6849              		.syntax unified
 6850 004e 7B62     		str	r3, [r7, #36]
 6851              		.loc 2 1124 10 discriminator 1
 6852 0050 7B6A     		ldr	r3, [r7, #36]
 6853              	.LBE657:
 6854              	.LBE656:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 191


 6855              		.loc 1 2772 3 discriminator 1
 6856 0052 002B     		cmp	r3, #0
 6857 0054 E6D1     		bne	.L361
 6858              	.L364:
 6859              	.LBE653:
 6860              	.LBB658:
2773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RE);
 6861              		.loc 1 2775 3 discriminator 1
 6862 0056 7B68     		ldr	r3, [r7, #4]
 6863 0058 1B68     		ldr	r3, [r3]
 6864 005a FB60     		str	r3, [r7, #12]
 6865              	.LBB659:
 6866              	.LBB660:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6867              		.loc 2 1072 4 discriminator 1
 6868 005c FB68     		ldr	r3, [r7, #12]
 6869              		.syntax unified
 6870              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6871 005e 53E8003F 		ldrex r3, [r3]
 6872              	@ 0 "" 2
 6873              		.thumb
 6874              		.syntax unified
 6875 0062 BB60     		str	r3, [r7, #8]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6876              		.loc 2 1073 10 discriminator 1
 6877 0064 BB68     		ldr	r3, [r7, #8]
 6878              	.LBE660:
 6879              	.LBE659:
 6880              		.loc 1 2775 3 discriminator 1
 6881 0066 43F00403 		orr	r3, r3, #4
 6882 006a 3B63     		str	r3, [r7, #48]
 6883 006c 7B68     		ldr	r3, [r7, #4]
 6884 006e 1B68     		ldr	r3, [r3]
 6885 0070 1A46     		mov	r2, r3
 6886 0072 3B6B     		ldr	r3, [r7, #48]
 6887 0074 BB61     		str	r3, [r7, #24]
 6888 0076 7A61     		str	r2, [r7, #20]
 6889              	.LBB661:
 6890              	.LBB662:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6891              		.loc 2 1123 4 discriminator 1
 6892 0078 7969     		ldr	r1, [r7, #20]
 6893 007a BA69     		ldr	r2, [r7, #24]
 6894              		.syntax unified
 6895              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6896 007c 41E80023 		strex r3, r2, [r1]
 6897              	@ 0 "" 2
 6898              		.thumb
 6899              		.syntax unified
 6900 0080 3B61     		str	r3, [r7, #16]
 6901              		.loc 2 1124 10 discriminator 1
 6902 0082 3B69     		ldr	r3, [r7, #16]
 6903              	.LBE662:
 6904              	.LBE661:
 6905              		.loc 1 2775 3 discriminator 1
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 192


 6906 0084 002B     		cmp	r3, #0
 6907 0086 E6D1     		bne	.L364
 6908              	.LBE658:
2776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6909              		.loc 1 2777 17
 6910 0088 7B68     		ldr	r3, [r7, #4]
 6911 008a 2022     		movs	r2, #32
 6912 008c DA67     		str	r2, [r3, #124]
2778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 6913              		.loc 1 2779 3
 6914 008e 7B68     		ldr	r3, [r7, #4]
 6915 0090 0022     		movs	r2, #0
 6916 0092 83F87820 		strb	r2, [r3, #120]
2780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 6917              		.loc 1 2781 10
 6918 0096 0023     		movs	r3, #0
 6919              	.L358:
2782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 6920              		.loc 1 2782 1
 6921 0098 1846     		mov	r0, r3
 6922 009a 3C37     		adds	r7, r7, #60
 6923              	.LCFI217:
 6924              		.cfi_def_cfa_offset 4
 6925 009c BD46     		mov	sp, r7
 6926              	.LCFI218:
 6927              		.cfi_def_cfa_register 13
 6928              		@ sp needed
 6929 009e 5DF8047B 		ldr	r7, [sp], #4
 6930              	.LCFI219:
 6931              		.cfi_restore 7
 6932              		.cfi_def_cfa_offset 0
 6933 00a2 7047     		bx	lr
 6934              		.cfi_endproc
 6935              	.LFE180:
 6937              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 6938              		.align	1
 6939              		.global	HAL_LIN_SendBreak
 6940              		.syntax unified
 6941              		.thumb
 6942              		.thumb_func
 6944              	HAL_LIN_SendBreak:
 6945              	.LFB181:
2783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Transmit break characters.
2787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle.
2788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
2789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 6946              		.loc 1 2791 1
 6947              		.cfi_startproc
 6948              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 193


 6949              		@ frame_needed = 1, uses_anonymous_args = 0
 6950              		@ link register save eliminated.
 6951 0000 80B4     		push	{r7}
 6952              	.LCFI220:
 6953              		.cfi_def_cfa_offset 4
 6954              		.cfi_offset 7, -4
 6955 0002 83B0     		sub	sp, sp, #12
 6956              	.LCFI221:
 6957              		.cfi_def_cfa_offset 16
 6958 0004 00AF     		add	r7, sp, #0
 6959              	.LCFI222:
 6960              		.cfi_def_cfa_register 7
 6961 0006 7860     		str	r0, [r7, #4]
2792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the parameters */
2793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
2794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_LOCK(huart);
 6962              		.loc 1 2795 3
 6963 0008 7B68     		ldr	r3, [r7, #4]
 6964 000a 93F87830 		ldrb	r3, [r3, #120]	@ zero_extendqisi2
 6965 000e 012B     		cmp	r3, #1
 6966 0010 01D1     		bne	.L366
 6967              		.loc 1 2795 3 is_stmt 0 discriminator 1
 6968 0012 0223     		movs	r3, #2
 6969 0014 16E0     		b	.L367
 6970              	.L366:
 6971              		.loc 1 2795 3 discriminator 2
 6972 0016 7B68     		ldr	r3, [r7, #4]
 6973 0018 0122     		movs	r2, #1
 6974 001a 83F87820 		strb	r2, [r3, #120]
2796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 6975              		.loc 1 2797 17 is_stmt 1 discriminator 2
 6976 001e 7B68     		ldr	r3, [r7, #4]
 6977 0020 2422     		movs	r2, #36
 6978 0022 DA67     		str	r2, [r3, #124]
2798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Send break characters */
2800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_SENDBREAK_REQUEST);
 6979              		.loc 1 2800 3 discriminator 2
 6980 0024 7B68     		ldr	r3, [r7, #4]
 6981 0026 1B68     		ldr	r3, [r3]
 6982 0028 9A69     		ldr	r2, [r3, #24]
 6983 002a 7B68     		ldr	r3, [r7, #4]
 6984 002c 1B68     		ldr	r3, [r3]
 6985 002e 42F00202 		orr	r2, r2, #2
 6986 0032 9A61     		str	r2, [r3, #24]
2801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6987              		.loc 1 2802 17 discriminator 2
 6988 0034 7B68     		ldr	r3, [r7, #4]
 6989 0036 2022     		movs	r2, #32
 6990 0038 DA67     		str	r2, [r3, #124]
2803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 6991              		.loc 1 2804 3 discriminator 2
 6992 003a 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 194


 6993 003c 0022     		movs	r2, #0
 6994 003e 83F87820 		strb	r2, [r3, #120]
2805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 6995              		.loc 1 2806 10 discriminator 2
 6996 0042 0023     		movs	r3, #0
 6997              	.L367:
2807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 6998              		.loc 1 2807 1
 6999 0044 1846     		mov	r0, r3
 7000 0046 0C37     		adds	r7, r7, #12
 7001              	.LCFI223:
 7002              		.cfi_def_cfa_offset 4
 7003 0048 BD46     		mov	sp, r7
 7004              	.LCFI224:
 7005              		.cfi_def_cfa_register 13
 7006              		@ sp needed
 7007 004a 5DF8047B 		ldr	r7, [sp], #4
 7008              	.LCFI225:
 7009              		.cfi_restore 7
 7010              		.cfi_def_cfa_offset 0
 7011 004e 7047     		bx	lr
 7012              		.cfi_endproc
 7013              	.LFE181:
 7015              		.section	.text.HAL_UART_GetState,"ax",%progbits
 7016              		.align	1
 7017              		.global	HAL_UART_GetState
 7018              		.syntax unified
 7019              		.thumb
 7020              		.thumb_func
 7022              	HAL_UART_GetState:
 7023              	.LFB182:
2808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @}
2811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
2814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *  @brief   UART Peripheral State functions
2815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *
2816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** @verbatim
2817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ==============================================================================
2818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
2819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ==============================================================================
2820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     [..]
2821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     This subsection provides functions allowing to :
2822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) Return the UART handle state.
2823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (+) Return the UART handle error code
2824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** @endverbatim
2826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
2827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Return the UART handle state.
2831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *               the configuration information for the specified UART.
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 195


2833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL state
2834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(const UART_HandleTypeDef *huart)
2836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 7024              		.loc 1 2836 1
 7025              		.cfi_startproc
 7026              		@ args = 0, pretend = 0, frame = 16
 7027              		@ frame_needed = 1, uses_anonymous_args = 0
 7028              		@ link register save eliminated.
 7029 0000 80B4     		push	{r7}
 7030              	.LCFI226:
 7031              		.cfi_def_cfa_offset 4
 7032              		.cfi_offset 7, -4
 7033 0002 85B0     		sub	sp, sp, #20
 7034              	.LCFI227:
 7035              		.cfi_def_cfa_offset 24
 7036 0004 00AF     		add	r7, sp, #0
 7037              	.LCFI228:
 7038              		.cfi_def_cfa_register 7
 7039 0006 7860     		str	r0, [r7, #4]
2837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t temp1;
2838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t temp2;
2839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   temp1 = huart->gState;
 7040              		.loc 1 2839 9
 7041 0008 7B68     		ldr	r3, [r7, #4]
 7042 000a DB6F     		ldr	r3, [r3, #124]
 7043 000c FB60     		str	r3, [r7, #12]
2840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   temp2 = huart->RxState;
 7044              		.loc 1 2840 9
 7045 000e 7B68     		ldr	r3, [r7, #4]
 7046 0010 D3F88030 		ldr	r3, [r3, #128]
 7047 0014 BB60     		str	r3, [r7, #8]
2841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
 7048              		.loc 1 2842 10
 7049 0016 FA68     		ldr	r2, [r7, #12]
 7050 0018 BB68     		ldr	r3, [r7, #8]
 7051 001a 1343     		orrs	r3, r3, r2
2843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 7052              		.loc 1 2843 1
 7053 001c 1846     		mov	r0, r3
 7054 001e 1437     		adds	r7, r7, #20
 7055              	.LCFI229:
 7056              		.cfi_def_cfa_offset 4
 7057 0020 BD46     		mov	sp, r7
 7058              	.LCFI230:
 7059              		.cfi_def_cfa_register 13
 7060              		@ sp needed
 7061 0022 5DF8047B 		ldr	r7, [sp], #4
 7062              	.LCFI231:
 7063              		.cfi_restore 7
 7064              		.cfi_def_cfa_offset 0
 7065 0026 7047     		bx	lr
 7066              		.cfi_endproc
 7067              	.LFE182:
 7069              		.section	.text.HAL_UART_GetError,"ax",%progbits
 7070              		.align	1
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 196


 7071              		.global	HAL_UART_GetError
 7072              		.syntax unified
 7073              		.thumb
 7074              		.thumb_func
 7076              	HAL_UART_GetError:
 7077              	.LFB183:
2844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Return the UART handle error code.
2847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *               the configuration information for the specified UART.
2849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval UART Error Code
2850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** uint32_t HAL_UART_GetError(const UART_HandleTypeDef *huart)
2852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 7078              		.loc 1 2852 1
 7079              		.cfi_startproc
 7080              		@ args = 0, pretend = 0, frame = 8
 7081              		@ frame_needed = 1, uses_anonymous_args = 0
 7082              		@ link register save eliminated.
 7083 0000 80B4     		push	{r7}
 7084              	.LCFI232:
 7085              		.cfi_def_cfa_offset 4
 7086              		.cfi_offset 7, -4
 7087 0002 83B0     		sub	sp, sp, #12
 7088              	.LCFI233:
 7089              		.cfi_def_cfa_offset 16
 7090 0004 00AF     		add	r7, sp, #0
 7091              	.LCFI234:
 7092              		.cfi_def_cfa_register 7
 7093 0006 7860     		str	r0, [r7, #4]
2853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return huart->ErrorCode;
 7094              		.loc 1 2853 15
 7095 0008 7B68     		ldr	r3, [r7, #4]
 7096 000a D3F88430 		ldr	r3, [r3, #132]
2854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 7097              		.loc 1 2854 1
 7098 000e 1846     		mov	r0, r3
 7099 0010 0C37     		adds	r7, r7, #12
 7100              	.LCFI235:
 7101              		.cfi_def_cfa_offset 4
 7102 0012 BD46     		mov	sp, r7
 7103              	.LCFI236:
 7104              		.cfi_def_cfa_register 13
 7105              		@ sp needed
 7106 0014 5DF8047B 		ldr	r7, [sp], #4
 7107              	.LCFI237:
 7108              		.cfi_restore 7
 7109              		.cfi_def_cfa_offset 0
 7110 0018 7047     		bx	lr
 7111              		.cfi_endproc
 7112              	.LFE183:
 7114              		.section	.text.UART_SetConfig,"ax",%progbits
 7115              		.align	1
 7116              		.global	UART_SetConfig
 7117              		.syntax unified
 7118              		.thumb
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 197


 7119              		.thumb_func
 7121              	UART_SetConfig:
 7122              	.LFB184:
2855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @}
2857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @}
2861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @{
2865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Initialize the callbacks to their default values.
2869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle.
2870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval none
2871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
2874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
2875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Init the UART Callback settings */
2876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
2877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallb
2878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
2879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallb
2880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallba
2881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCa
2882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
2883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
2884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #if defined(USART_CR1_UESM)
2885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #if defined(USART_CR3_WUFIE)
2886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->WakeupCallback            = HAL_UARTEx_WakeupCallback;          /* Legacy weak WakeupCallb
2887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* USART_CR3_WUFIE */
2888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* USART_CR1_UESM */
2889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxEventCallback           = HAL_UARTEx_RxEventCallback;         /* Legacy weak RxEventCall
2890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
2892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
2895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Configure the UART peripheral.
2896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
2897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
2898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
2899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
2900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 7123              		.loc 1 2900 1
 7124              		.cfi_startproc
 7125              		@ args = 0, pretend = 0, frame = 32
 7126              		@ frame_needed = 1, uses_anonymous_args = 0
 7127 0000 80B5     		push	{r7, lr}
 7128              	.LCFI238:
 7129              		.cfi_def_cfa_offset 8
 7130              		.cfi_offset 7, -8
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 198


 7131              		.cfi_offset 14, -4
 7132 0002 88B0     		sub	sp, sp, #32
 7133              	.LCFI239:
 7134              		.cfi_def_cfa_offset 40
 7135 0004 00AF     		add	r7, sp, #0
 7136              	.LCFI240:
 7137              		.cfi_def_cfa_register 7
 7138 0006 7860     		str	r0, [r7, #4]
2901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t tmpreg;
2902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t brrtemp;
2903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource;
2904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t usartdiv;
2905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 7139              		.loc 1 2905 21
 7140 0008 0023     		movs	r3, #0
 7141 000a BB77     		strb	r3, [r7, #30]
2906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t pclk;
2907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check the parameters */
2909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
2911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
2913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
2915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
2916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
2917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
2918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
2921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *  the UART Word Length, Parity, Mode and oversampling:
2922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *  set the M bits according to huart->Init.WordLength value
2923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *  set PCE and PS bits according to huart->Init.Parity value
2924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *  set TE and RE bits according to huart->Init.Mode value
2925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *  set OVER8 bit according to huart->Init.OverSampling value */
2926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
 7142              		.loc 1 2926 33
 7143 000c 7B68     		ldr	r3, [r7, #4]
 7144 000e 9A68     		ldr	r2, [r3, #8]
 7145              		.loc 1 2926 58
 7146 0010 7B68     		ldr	r3, [r7, #4]
 7147 0012 1B69     		ldr	r3, [r3, #16]
 7148              		.loc 1 2926 45
 7149 0014 1A43     		orrs	r2, r2, r3
 7150              		.loc 1 2926 79
 7151 0016 7B68     		ldr	r3, [r7, #4]
 7152 0018 5B69     		ldr	r3, [r3, #20]
 7153              		.loc 1 2926 66
 7154 001a 1A43     		orrs	r2, r2, r3
 7155              		.loc 1 2926 98
 7156 001c 7B68     		ldr	r3, [r7, #4]
 7157 001e DB69     		ldr	r3, [r3, #28]
 7158              		.loc 1 2926 10
 7159 0020 1343     		orrs	r3, r3, r2
 7160 0022 7B61     		str	r3, [r7, #20]
2927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 199


 7161              		.loc 1 2927 3
 7162 0024 7B68     		ldr	r3, [r7, #4]
 7163 0026 1B68     		ldr	r3, [r3]
 7164 0028 1A68     		ldr	r2, [r3]
 7165 002a A64B     		ldr	r3, .L454
 7166 002c 1340     		ands	r3, r3, r2
 7167 002e 7A68     		ldr	r2, [r7, #4]
 7168 0030 1268     		ldr	r2, [r2]
 7169 0032 7969     		ldr	r1, [r7, #20]
 7170 0034 0B43     		orrs	r3, r3, r1
 7171 0036 1360     		str	r3, [r2]
2928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
2930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
2931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * to huart->Init.StopBits value */
2932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 7172              		.loc 1 2932 3
 7173 0038 7B68     		ldr	r3, [r7, #4]
 7174 003a 1B68     		ldr	r3, [r3]
 7175 003c 5B68     		ldr	r3, [r3, #4]
 7176 003e 23F44051 		bic	r1, r3, #12288
 7177 0042 7B68     		ldr	r3, [r7, #4]
 7178 0044 DA68     		ldr	r2, [r3, #12]
 7179 0046 7B68     		ldr	r3, [r7, #4]
 7180 0048 1B68     		ldr	r3, [r3]
 7181 004a 0A43     		orrs	r2, r2, r1
 7182 004c 5A60     		str	r2, [r3, #4]
2933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
2935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Configure
2936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * - UART HardWare Flow Control: set CTSE and RTSE bits according
2937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *   to huart->Init.HwFlowCtl value
2938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * - one-bit sampling method versus three samples' majority rule according
2939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *   to huart->Init.OneBitSampling (not applicable to LPUART) */
2940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 7183              		.loc 1 2940 10
 7184 004e 7B68     		ldr	r3, [r7, #4]
 7185 0050 9B69     		ldr	r3, [r3, #24]
 7186 0052 7B61     		str	r3, [r7, #20]
2941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   tmpreg |= huart->Init.OneBitSampling;
 7187              		.loc 1 2942 24
 7188 0054 7B68     		ldr	r3, [r7, #4]
 7189 0056 1B6A     		ldr	r3, [r3, #32]
 7190              		.loc 1 2942 10
 7191 0058 7A69     		ldr	r2, [r7, #20]
 7192 005a 1343     		orrs	r3, r3, r2
 7193 005c 7B61     		str	r3, [r7, #20]
2943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 7194              		.loc 1 2943 3
 7195 005e 7B68     		ldr	r3, [r7, #4]
 7196 0060 1B68     		ldr	r3, [r3]
 7197 0062 9B68     		ldr	r3, [r3, #8]
 7198 0064 23F43061 		bic	r1, r3, #2816
 7199 0068 7B68     		ldr	r3, [r7, #4]
 7200 006a 1B68     		ldr	r3, [r3]
 7201 006c 7A69     		ldr	r2, [r7, #20]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 200


 7202 006e 0A43     		orrs	r2, r2, r1
 7203 0070 9A60     		str	r2, [r3, #8]
2944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
2947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
 7204              		.loc 1 2947 3
 7205 0072 7B68     		ldr	r3, [r7, #4]
 7206 0074 1B68     		ldr	r3, [r3]
 7207 0076 944A     		ldr	r2, .L454+4
 7208 0078 9342     		cmp	r3, r2
 7209 007a 20D1     		bne	.L373
 7210              		.loc 1 2947 3 is_stmt 0 discriminator 1
 7211 007c 934B     		ldr	r3, .L454+8
 7212 007e D3F89030 		ldr	r3, [r3, #144]
 7213 0082 03F00303 		and	r3, r3, #3
 7214 0086 032B     		cmp	r3, #3
 7215 0088 16D8     		bhi	.L374
 7216 008a 01A2     		adr	r2, .L376
 7217 008c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7218              		.p2align 2
 7219              	.L376:
 7220 0090 A1000000 		.word	.L379+1
 7221 0094 AD000000 		.word	.L378+1
 7222 0098 A7000000 		.word	.L377+1
 7223 009c B3000000 		.word	.L375+1
 7224              		.p2align 1
 7225              	.L379:
 7226              		.loc 1 2947 3 discriminator 4
 7227 00a0 0123     		movs	r3, #1
 7228 00a2 FB77     		strb	r3, [r7, #31]
 7229 00a4 50E1     		b	.L381
 7230              	.L377:
 7231              		.loc 1 2947 3 discriminator 6
 7232 00a6 0223     		movs	r3, #2
 7233 00a8 FB77     		strb	r3, [r7, #31]
 7234 00aa 4DE1     		b	.L381
 7235              	.L378:
 7236              		.loc 1 2947 3 discriminator 5
 7237 00ac 0423     		movs	r3, #4
 7238 00ae FB77     		strb	r3, [r7, #31]
 7239 00b0 4AE1     		b	.L381
 7240              	.L375:
 7241              		.loc 1 2947 3 discriminator 7
 7242 00b2 0823     		movs	r3, #8
 7243 00b4 FB77     		strb	r3, [r7, #31]
 7244 00b6 47E1     		b	.L381
 7245              	.L374:
 7246              		.loc 1 2947 3 discriminator 3
 7247 00b8 1023     		movs	r3, #16
 7248 00ba FB77     		strb	r3, [r7, #31]
 7249 00bc 44E1     		b	.L381
 7250              	.L373:
 7251              		.loc 1 2947 3 discriminator 2
 7252 00be 7B68     		ldr	r3, [r7, #4]
 7253 00c0 1B68     		ldr	r3, [r3]
 7254 00c2 834A     		ldr	r2, .L454+12
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 201


 7255 00c4 9342     		cmp	r3, r2
 7256 00c6 32D1     		bne	.L382
 7257              		.loc 1 2947 3 discriminator 13
 7258 00c8 804B     		ldr	r3, .L454+8
 7259 00ca D3F89030 		ldr	r3, [r3, #144]
 7260 00ce 03F00C03 		and	r3, r3, #12
 7261 00d2 0C2B     		cmp	r3, #12
 7262 00d4 28D8     		bhi	.L383
 7263 00d6 01A2     		adr	r2, .L385
 7264 00d8 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7265              		.p2align 2
 7266              	.L385:
 7267 00dc 11010000 		.word	.L388+1
 7268 00e0 29010000 		.word	.L383+1
 7269 00e4 29010000 		.word	.L383+1
 7270 00e8 29010000 		.word	.L383+1
 7271 00ec 1D010000 		.word	.L387+1
 7272 00f0 29010000 		.word	.L383+1
 7273 00f4 29010000 		.word	.L383+1
 7274 00f8 29010000 		.word	.L383+1
 7275 00fc 17010000 		.word	.L386+1
 7276 0100 29010000 		.word	.L383+1
 7277 0104 29010000 		.word	.L383+1
 7278 0108 29010000 		.word	.L383+1
 7279 010c 23010000 		.word	.L384+1
 7280              		.p2align 1
 7281              	.L388:
 7282              		.loc 1 2947 3 discriminator 16
 7283 0110 0023     		movs	r3, #0
 7284 0112 FB77     		strb	r3, [r7, #31]
 7285 0114 18E1     		b	.L381
 7286              	.L386:
 7287              		.loc 1 2947 3 discriminator 18
 7288 0116 0223     		movs	r3, #2
 7289 0118 FB77     		strb	r3, [r7, #31]
 7290 011a 15E1     		b	.L381
 7291              	.L387:
 7292              		.loc 1 2947 3 discriminator 17
 7293 011c 0423     		movs	r3, #4
 7294 011e FB77     		strb	r3, [r7, #31]
 7295 0120 12E1     		b	.L381
 7296              	.L384:
 7297              		.loc 1 2947 3 discriminator 19
 7298 0122 0823     		movs	r3, #8
 7299 0124 FB77     		strb	r3, [r7, #31]
 7300 0126 0FE1     		b	.L381
 7301              	.L383:
 7302              		.loc 1 2947 3 discriminator 15
 7303 0128 1023     		movs	r3, #16
 7304 012a FB77     		strb	r3, [r7, #31]
 7305 012c 0CE1     		b	.L381
 7306              	.L382:
 7307              		.loc 1 2947 3 discriminator 14
 7308 012e 7B68     		ldr	r3, [r7, #4]
 7309 0130 1B68     		ldr	r3, [r3]
 7310 0132 684A     		ldr	r2, .L454+16
 7311 0134 9342     		cmp	r3, r2
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 202


 7312 0136 20D1     		bne	.L390
 7313              		.loc 1 2947 3 discriminator 25
 7314 0138 644B     		ldr	r3, .L454+8
 7315 013a D3F89030 		ldr	r3, [r3, #144]
 7316 013e 03F03003 		and	r3, r3, #48
 7317 0142 302B     		cmp	r3, #48
 7318 0144 13D0     		beq	.L391
 7319              		.loc 1 2947 3
 7320 0146 302B     		cmp	r3, #48
 7321 0148 14D8     		bhi	.L392
 7322 014a 202B     		cmp	r3, #32
 7323 014c 09D0     		beq	.L393
 7324 014e 202B     		cmp	r3, #32
 7325 0150 10D8     		bhi	.L392
 7326 0152 002B     		cmp	r3, #0
 7327 0154 02D0     		beq	.L394
 7328 0156 102B     		cmp	r3, #16
 7329 0158 06D0     		beq	.L395
 7330 015a 0BE0     		b	.L392
 7331              	.L394:
 7332              		.loc 1 2947 3 discriminator 28
 7333 015c 0023     		movs	r3, #0
 7334 015e FB77     		strb	r3, [r7, #31]
 7335 0160 F2E0     		b	.L381
 7336              	.L393:
 7337              		.loc 1 2947 3 discriminator 30
 7338 0162 0223     		movs	r3, #2
 7339 0164 FB77     		strb	r3, [r7, #31]
 7340 0166 EFE0     		b	.L381
 7341              	.L395:
 7342              		.loc 1 2947 3 discriminator 29
 7343 0168 0423     		movs	r3, #4
 7344 016a FB77     		strb	r3, [r7, #31]
 7345 016c ECE0     		b	.L381
 7346              	.L391:
 7347              		.loc 1 2947 3 discriminator 31
 7348 016e 0823     		movs	r3, #8
 7349 0170 FB77     		strb	r3, [r7, #31]
 7350 0172 E9E0     		b	.L381
 7351              	.L392:
 7352              		.loc 1 2947 3 discriminator 27
 7353 0174 1023     		movs	r3, #16
 7354 0176 FB77     		strb	r3, [r7, #31]
 7355 0178 E6E0     		b	.L381
 7356              	.L390:
 7357              		.loc 1 2947 3 discriminator 26
 7358 017a 7B68     		ldr	r3, [r7, #4]
 7359 017c 1B68     		ldr	r3, [r3]
 7360 017e 564A     		ldr	r2, .L454+20
 7361 0180 9342     		cmp	r3, r2
 7362 0182 20D1     		bne	.L397
 7363              		.loc 1 2947 3 discriminator 37
 7364 0184 514B     		ldr	r3, .L454+8
 7365 0186 D3F89030 		ldr	r3, [r3, #144]
 7366 018a 03F0C003 		and	r3, r3, #192
 7367 018e C02B     		cmp	r3, #192
 7368 0190 13D0     		beq	.L398
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 203


 7369              		.loc 1 2947 3
 7370 0192 C02B     		cmp	r3, #192
 7371 0194 14D8     		bhi	.L399
 7372 0196 802B     		cmp	r3, #128
 7373 0198 09D0     		beq	.L400
 7374 019a 802B     		cmp	r3, #128
 7375 019c 10D8     		bhi	.L399
 7376 019e 002B     		cmp	r3, #0
 7377 01a0 02D0     		beq	.L401
 7378 01a2 402B     		cmp	r3, #64
 7379 01a4 06D0     		beq	.L402
 7380 01a6 0BE0     		b	.L399
 7381              	.L401:
 7382              		.loc 1 2947 3 discriminator 40
 7383 01a8 0023     		movs	r3, #0
 7384 01aa FB77     		strb	r3, [r7, #31]
 7385 01ac CCE0     		b	.L381
 7386              	.L400:
 7387              		.loc 1 2947 3 discriminator 42
 7388 01ae 0223     		movs	r3, #2
 7389 01b0 FB77     		strb	r3, [r7, #31]
 7390 01b2 C9E0     		b	.L381
 7391              	.L402:
 7392              		.loc 1 2947 3 discriminator 41
 7393 01b4 0423     		movs	r3, #4
 7394 01b6 FB77     		strb	r3, [r7, #31]
 7395 01b8 C6E0     		b	.L381
 7396              	.L398:
 7397              		.loc 1 2947 3 discriminator 43
 7398 01ba 0823     		movs	r3, #8
 7399 01bc FB77     		strb	r3, [r7, #31]
 7400 01be C3E0     		b	.L381
 7401              	.L399:
 7402              		.loc 1 2947 3 discriminator 39
 7403 01c0 1023     		movs	r3, #16
 7404 01c2 FB77     		strb	r3, [r7, #31]
 7405 01c4 C0E0     		b	.L381
 7406              	.L397:
 7407              		.loc 1 2947 3 discriminator 38
 7408 01c6 7B68     		ldr	r3, [r7, #4]
 7409 01c8 1B68     		ldr	r3, [r3]
 7410 01ca 444A     		ldr	r2, .L454+24
 7411 01cc 9342     		cmp	r3, r2
 7412 01ce 25D1     		bne	.L404
 7413              		.loc 1 2947 3 discriminator 49
 7414 01d0 3E4B     		ldr	r3, .L454+8
 7415 01d2 D3F89030 		ldr	r3, [r3, #144]
 7416 01d6 03F44073 		and	r3, r3, #768
 7417 01da B3F5407F 		cmp	r3, #768
 7418 01de 17D0     		beq	.L405
 7419              		.loc 1 2947 3
 7420 01e0 B3F5407F 		cmp	r3, #768
 7421 01e4 17D8     		bhi	.L406
 7422 01e6 B3F5007F 		cmp	r3, #512
 7423 01ea 0BD0     		beq	.L407
 7424 01ec B3F5007F 		cmp	r3, #512
 7425 01f0 11D8     		bhi	.L406
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 204


 7426 01f2 002B     		cmp	r3, #0
 7427 01f4 03D0     		beq	.L408
 7428 01f6 B3F5807F 		cmp	r3, #256
 7429 01fa 06D0     		beq	.L409
 7430 01fc 0BE0     		b	.L406
 7431              	.L408:
 7432              		.loc 1 2947 3 discriminator 52
 7433 01fe 0023     		movs	r3, #0
 7434 0200 FB77     		strb	r3, [r7, #31]
 7435 0202 A1E0     		b	.L381
 7436              	.L407:
 7437              		.loc 1 2947 3 discriminator 54
 7438 0204 0223     		movs	r3, #2
 7439 0206 FB77     		strb	r3, [r7, #31]
 7440 0208 9EE0     		b	.L381
 7441              	.L409:
 7442              		.loc 1 2947 3 discriminator 53
 7443 020a 0423     		movs	r3, #4
 7444 020c FB77     		strb	r3, [r7, #31]
 7445 020e 9BE0     		b	.L381
 7446              	.L405:
 7447              		.loc 1 2947 3 discriminator 55
 7448 0210 0823     		movs	r3, #8
 7449 0212 FB77     		strb	r3, [r7, #31]
 7450 0214 98E0     		b	.L381
 7451              	.L406:
 7452              		.loc 1 2947 3 discriminator 51
 7453 0216 1023     		movs	r3, #16
 7454 0218 FB77     		strb	r3, [r7, #31]
 7455 021a 95E0     		b	.L381
 7456              	.L404:
 7457              		.loc 1 2947 3 discriminator 50
 7458 021c 7B68     		ldr	r3, [r7, #4]
 7459 021e 1B68     		ldr	r3, [r3]
 7460 0220 2F4A     		ldr	r2, .L454+28
 7461 0222 9342     		cmp	r3, r2
 7462 0224 25D1     		bne	.L411
 7463              		.loc 1 2947 3 discriminator 61
 7464 0226 294B     		ldr	r3, .L454+8
 7465 0228 D3F89030 		ldr	r3, [r3, #144]
 7466 022c 03F44063 		and	r3, r3, #3072
 7467 0230 B3F5406F 		cmp	r3, #3072
 7468 0234 17D0     		beq	.L412
 7469              		.loc 1 2947 3
 7470 0236 B3F5406F 		cmp	r3, #3072
 7471 023a 17D8     		bhi	.L413
 7472 023c B3F5006F 		cmp	r3, #2048
 7473 0240 0BD0     		beq	.L414
 7474 0242 B3F5006F 		cmp	r3, #2048
 7475 0246 11D8     		bhi	.L413
 7476 0248 002B     		cmp	r3, #0
 7477 024a 03D0     		beq	.L415
 7478 024c B3F5806F 		cmp	r3, #1024
 7479 0250 06D0     		beq	.L416
 7480 0252 0BE0     		b	.L413
 7481              	.L415:
 7482              		.loc 1 2947 3 discriminator 64
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 205


 7483 0254 0123     		movs	r3, #1
 7484 0256 FB77     		strb	r3, [r7, #31]
 7485 0258 76E0     		b	.L381
 7486              	.L414:
 7487              		.loc 1 2947 3 discriminator 66
 7488 025a 0223     		movs	r3, #2
 7489 025c FB77     		strb	r3, [r7, #31]
 7490 025e 73E0     		b	.L381
 7491              	.L416:
 7492              		.loc 1 2947 3 discriminator 65
 7493 0260 0423     		movs	r3, #4
 7494 0262 FB77     		strb	r3, [r7, #31]
 7495 0264 70E0     		b	.L381
 7496              	.L412:
 7497              		.loc 1 2947 3 discriminator 67
 7498 0266 0823     		movs	r3, #8
 7499 0268 FB77     		strb	r3, [r7, #31]
 7500 026a 6DE0     		b	.L381
 7501              	.L413:
 7502              		.loc 1 2947 3 discriminator 63
 7503 026c 1023     		movs	r3, #16
 7504 026e FB77     		strb	r3, [r7, #31]
 7505 0270 6AE0     		b	.L381
 7506              	.L411:
 7507              		.loc 1 2947 3 discriminator 62
 7508 0272 7B68     		ldr	r3, [r7, #4]
 7509 0274 1B68     		ldr	r3, [r3]
 7510 0276 1B4A     		ldr	r2, .L454+32
 7511 0278 9342     		cmp	r3, r2
 7512 027a 38D1     		bne	.L418
 7513              		.loc 1 2947 3 discriminator 73
 7514 027c 134B     		ldr	r3, .L454+8
 7515 027e D3F89030 		ldr	r3, [r3, #144]
 7516 0282 03F44053 		and	r3, r3, #12288
 7517 0286 B3F5405F 		cmp	r3, #12288
 7518 028a 17D0     		beq	.L419
 7519              		.loc 1 2947 3
 7520 028c B3F5405F 		cmp	r3, #12288
 7521 0290 2AD8     		bhi	.L420
 7522 0292 B3F5005F 		cmp	r3, #8192
 7523 0296 0BD0     		beq	.L421
 7524 0298 B3F5005F 		cmp	r3, #8192
 7525 029c 24D8     		bhi	.L420
 7526 029e 002B     		cmp	r3, #0
 7527 02a0 03D0     		beq	.L422
 7528 02a2 B3F5805F 		cmp	r3, #4096
 7529 02a6 06D0     		beq	.L423
 7530 02a8 1EE0     		b	.L420
 7531              	.L422:
 7532              		.loc 1 2947 3 discriminator 76
 7533 02aa 0023     		movs	r3, #0
 7534 02ac FB77     		strb	r3, [r7, #31]
 7535 02ae 4BE0     		b	.L381
 7536              	.L421:
 7537              		.loc 1 2947 3 discriminator 78
 7538 02b0 0223     		movs	r3, #2
 7539 02b2 FB77     		strb	r3, [r7, #31]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 206


 7540 02b4 48E0     		b	.L381
 7541              	.L423:
 7542              		.loc 1 2947 3 discriminator 77
 7543 02b6 0423     		movs	r3, #4
 7544 02b8 FB77     		strb	r3, [r7, #31]
 7545 02ba 45E0     		b	.L381
 7546              	.L419:
 7547              		.loc 1 2947 3 discriminator 79
 7548 02bc 0823     		movs	r3, #8
 7549 02be FB77     		strb	r3, [r7, #31]
 7550 02c0 42E0     		b	.L381
 7551              	.L455:
 7552 02c2 00BF     		.align	2
 7553              	.L454:
 7554 02c4 F369FFEF 		.word	-268473869
 7555 02c8 00100140 		.word	1073811456
 7556 02cc 00380240 		.word	1073887232
 7557 02d0 00440040 		.word	1073759232
 7558 02d4 00480040 		.word	1073760256
 7559 02d8 004C0040 		.word	1073761280
 7560 02dc 00500040 		.word	1073762304
 7561 02e0 00140140 		.word	1073812480
 7562 02e4 00780040 		.word	1073772544
 7563              	.L420:
 7564              		.loc 1 2947 3 discriminator 75
 7565 02e8 1023     		movs	r3, #16
 7566 02ea FB77     		strb	r3, [r7, #31]
 7567 02ec 2CE0     		b	.L381
 7568              	.L418:
 7569              		.loc 1 2947 3 discriminator 74
 7570 02ee 7B68     		ldr	r3, [r7, #4]
 7571 02f0 1B68     		ldr	r3, [r3]
 7572 02f2 724A     		ldr	r2, .L456
 7573 02f4 9342     		cmp	r3, r2
 7574 02f6 25D1     		bne	.L425
 7575              		.loc 1 2947 3 discriminator 85
 7576 02f8 714B     		ldr	r3, .L456+4
 7577 02fa D3F89030 		ldr	r3, [r3, #144]
 7578 02fe 03F44043 		and	r3, r3, #49152
 7579 0302 B3F5404F 		cmp	r3, #49152
 7580 0306 17D0     		beq	.L426
 7581              		.loc 1 2947 3
 7582 0308 B3F5404F 		cmp	r3, #49152
 7583 030c 17D8     		bhi	.L427
 7584 030e B3F5004F 		cmp	r3, #32768
 7585 0312 0BD0     		beq	.L428
 7586 0314 B3F5004F 		cmp	r3, #32768
 7587 0318 11D8     		bhi	.L427
 7588 031a 002B     		cmp	r3, #0
 7589 031c 03D0     		beq	.L429
 7590 031e B3F5804F 		cmp	r3, #16384
 7591 0322 06D0     		beq	.L430
 7592 0324 0BE0     		b	.L427
 7593              	.L429:
 7594              		.loc 1 2947 3 discriminator 88
 7595 0326 0023     		movs	r3, #0
 7596 0328 FB77     		strb	r3, [r7, #31]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 207


 7597 032a 0DE0     		b	.L381
 7598              	.L428:
 7599              		.loc 1 2947 3 discriminator 90
 7600 032c 0223     		movs	r3, #2
 7601 032e FB77     		strb	r3, [r7, #31]
 7602 0330 0AE0     		b	.L381
 7603              	.L430:
 7604              		.loc 1 2947 3 discriminator 89
 7605 0332 0423     		movs	r3, #4
 7606 0334 FB77     		strb	r3, [r7, #31]
 7607 0336 07E0     		b	.L381
 7608              	.L426:
 7609              		.loc 1 2947 3 discriminator 91
 7610 0338 0823     		movs	r3, #8
 7611 033a FB77     		strb	r3, [r7, #31]
 7612 033c 04E0     		b	.L381
 7613              	.L427:
 7614              		.loc 1 2947 3 discriminator 87
 7615 033e 1023     		movs	r3, #16
 7616 0340 FB77     		strb	r3, [r7, #31]
 7617 0342 01E0     		b	.L381
 7618              	.L425:
 7619              		.loc 1 2947 3 discriminator 86
 7620 0344 1023     		movs	r3, #16
 7621 0346 FB77     		strb	r3, [r7, #31]
 7622              	.L381:
2948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 7623              		.loc 1 2949 18 is_stmt 1
 7624 0348 7B68     		ldr	r3, [r7, #4]
 7625 034a DB69     		ldr	r3, [r3, #28]
 7626              		.loc 1 2949 6
 7627 034c B3F5004F 		cmp	r3, #32768
 7628 0350 5BD1     		bne	.L432
2950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
2951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     switch (clocksource)
 7629              		.loc 1 2951 5
 7630 0352 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 7631 0354 082B     		cmp	r3, #8
 7632 0356 28D8     		bhi	.L433
 7633 0358 01A2     		adr	r2, .L435
 7634 035a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7635 035e 00BF     		.p2align 2
 7636              	.L435:
 7637 0360 85030000 		.word	.L439+1
 7638 0364 8D030000 		.word	.L438+1
 7639 0368 95030000 		.word	.L437+1
 7640 036c AB030000 		.word	.L433+1
 7641 0370 9B030000 		.word	.L436+1
 7642 0374 AB030000 		.word	.L433+1
 7643 0378 AB030000 		.word	.L433+1
 7644 037c AB030000 		.word	.L433+1
 7645 0380 A3030000 		.word	.L434+1
 7646              		.p2align 1
 7647              	.L439:
2952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
2953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 208


2954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
 7648              		.loc 1 2954 16
 7649 0384 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 7650 0388 B861     		str	r0, [r7, #24]
2955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         break;
 7651              		.loc 1 2955 9
 7652 038a 13E0     		b	.L440
 7653              	.L438:
2956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
2957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK2Freq();
 7654              		.loc 1 2957 16
 7655 038c FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 7656 0390 B861     		str	r0, [r7, #24]
2958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         break;
 7657              		.loc 1 2958 9
 7658 0392 0FE0     		b	.L440
 7659              	.L437:
2959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         pclk = (uint32_t) HSI_VALUE;
 7660              		.loc 1 2960 14
 7661 0394 4B4B     		ldr	r3, .L456+8
 7662 0396 BB61     		str	r3, [r7, #24]
2961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         break;
 7663              		.loc 1 2961 9
 7664 0398 0CE0     		b	.L440
 7665              	.L436:
2962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         pclk = HAL_RCC_GetSysClockFreq();
 7666              		.loc 1 2963 16
 7667 039a FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 7668 039e B861     		str	r0, [r7, #24]
2964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         break;
 7669              		.loc 1 2964 9
 7670 03a0 08E0     		b	.L440
 7671              	.L434:
2965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         pclk = (uint32_t) LSE_VALUE;
 7672              		.loc 1 2966 14
 7673 03a2 4FF40043 		mov	r3, #32768
 7674 03a6 BB61     		str	r3, [r7, #24]
2967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         break;
 7675              		.loc 1 2967 9
 7676 03a8 04E0     		b	.L440
 7677              	.L433:
2968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       default:
2969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         pclk = 0U;
 7678              		.loc 1 2969 14
 7679 03aa 0023     		movs	r3, #0
 7680 03ac BB61     		str	r3, [r7, #24]
2970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         ret = HAL_ERROR;
 7681              		.loc 1 2970 13
 7682 03ae 0123     		movs	r3, #1
 7683 03b0 BB77     		strb	r3, [r7, #30]
2971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         break;
 7684              		.loc 1 2971 9
 7685 03b2 00BF     		nop
 7686              	.L440:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 209


2972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
2973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
2974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
2975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if (pclk != 0U)
 7687              		.loc 1 2975 8
 7688 03b4 BB69     		ldr	r3, [r7, #24]
 7689 03b6 002B     		cmp	r3, #0
 7690 03b8 74D0     		beq	.L443
2976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
2977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 7691              		.loc 1 2977 29
 7692 03ba BB69     		ldr	r3, [r7, #24]
 7693 03bc 5A00     		lsls	r2, r3, #1
 7694 03be 7B68     		ldr	r3, [r7, #4]
 7695 03c0 5B68     		ldr	r3, [r3, #4]
 7696 03c2 5B08     		lsrs	r3, r3, #1
 7697 03c4 1A44     		add	r2, r2, r3
 7698 03c6 7B68     		ldr	r3, [r7, #4]
 7699 03c8 5B68     		ldr	r3, [r3, #4]
 7700              		.loc 1 2977 16
 7701 03ca B2FBF3F3 		udiv	r3, r2, r3
 7702 03ce 3B61     		str	r3, [r7, #16]
2978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 7703              		.loc 1 2978 10
 7704 03d0 3B69     		ldr	r3, [r7, #16]
 7705 03d2 0F2B     		cmp	r3, #15
 7706 03d4 16D9     		bls	.L442
 7707              		.loc 1 2978 38 discriminator 1
 7708 03d6 3B69     		ldr	r3, [r7, #16]
 7709 03d8 B3F5803F 		cmp	r3, #65536
 7710 03dc 12D2     		bcs	.L442
2979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
2980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 7711              		.loc 1 2980 19
 7712 03de 3B69     		ldr	r3, [r7, #16]
 7713 03e0 9BB2     		uxth	r3, r3
 7714              		.loc 1 2980 17
 7715 03e2 23F00F03 		bic	r3, r3, #15
 7716 03e6 FB81     		strh	r3, [r7, #14]	@ movhi
2981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 7717              		.loc 1 2981 62
 7718 03e8 3B69     		ldr	r3, [r7, #16]
 7719 03ea 5B08     		lsrs	r3, r3, #1
 7720              		.loc 1 2981 20
 7721 03ec 9BB2     		uxth	r3, r3
 7722 03ee 03F00703 		and	r3, r3, #7
 7723 03f2 9AB2     		uxth	r2, r3
 7724              		.loc 1 2981 17
 7725 03f4 FB89     		ldrh	r3, [r7, #14]	@ movhi
 7726 03f6 1343     		orrs	r3, r3, r2
 7727 03f8 FB81     		strh	r3, [r7, #14]	@ movhi
2982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->BRR = brrtemp;
 7728              		.loc 1 2982 14
 7729 03fa 7B68     		ldr	r3, [r7, #4]
 7730 03fc 1B68     		ldr	r3, [r3]
 7731              		.loc 1 2982 30
 7732 03fe FA89     		ldrh	r2, [r7, #14]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 210


 7733 0400 DA60     		str	r2, [r3, #12]
 7734 0402 4FE0     		b	.L443
 7735              	.L442:
2983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
2984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       else
2985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
2986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         ret = HAL_ERROR;
 7736              		.loc 1 2986 13
 7737 0404 0123     		movs	r3, #1
 7738 0406 BB77     		strb	r3, [r7, #30]
 7739 0408 4CE0     		b	.L443
 7740              	.L432:
2987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
2988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
2989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
2990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
2991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
2992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     switch (clocksource)
 7741              		.loc 1 2992 5
 7742 040a FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 7743 040c 082B     		cmp	r3, #8
 7744 040e 28D8     		bhi	.L444
 7745 0410 01A2     		adr	r2, .L446
 7746 0412 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7747 0416 00BF     		.p2align 2
 7748              	.L446:
 7749 0418 3D040000 		.word	.L450+1
 7750 041c 45040000 		.word	.L449+1
 7751 0420 4D040000 		.word	.L448+1
 7752 0424 63040000 		.word	.L444+1
 7753 0428 53040000 		.word	.L447+1
 7754 042c 63040000 		.word	.L444+1
 7755 0430 63040000 		.word	.L444+1
 7756 0434 63040000 		.word	.L444+1
 7757 0438 5B040000 		.word	.L445+1
 7758              		.p2align 1
 7759              	.L450:
2993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
2994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
 7760              		.loc 1 2995 16
 7761 043c FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 7762 0440 B861     		str	r0, [r7, #24]
2996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         break;
 7763              		.loc 1 2996 9
 7764 0442 13E0     		b	.L451
 7765              	.L449:
2997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
2998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK2Freq();
 7766              		.loc 1 2998 16
 7767 0444 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 7768 0448 B861     		str	r0, [r7, #24]
2999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         break;
 7769              		.loc 1 2999 9
 7770 044a 0FE0     		b	.L451
 7771              	.L448:
3000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 211


3001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         pclk = (uint32_t) HSI_VALUE;
 7772              		.loc 1 3001 14
 7773 044c 1D4B     		ldr	r3, .L456+8
 7774 044e BB61     		str	r3, [r7, #24]
3002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         break;
 7775              		.loc 1 3002 9
 7776 0450 0CE0     		b	.L451
 7777              	.L447:
3003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
3004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         pclk = HAL_RCC_GetSysClockFreq();
 7778              		.loc 1 3004 16
 7779 0452 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 7780 0456 B861     		str	r0, [r7, #24]
3005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         break;
 7781              		.loc 1 3005 9
 7782 0458 08E0     		b	.L451
 7783              	.L445:
3006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
3007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         pclk = (uint32_t) LSE_VALUE;
 7784              		.loc 1 3007 14
 7785 045a 4FF40043 		mov	r3, #32768
 7786 045e BB61     		str	r3, [r7, #24]
3008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         break;
 7787              		.loc 1 3008 9
 7788 0460 04E0     		b	.L451
 7789              	.L444:
3009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       default:
3010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         pclk = 0U;
 7790              		.loc 1 3010 14
 7791 0462 0023     		movs	r3, #0
 7792 0464 BB61     		str	r3, [r7, #24]
3011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         ret = HAL_ERROR;
 7793              		.loc 1 3011 13
 7794 0466 0123     		movs	r3, #1
 7795 0468 BB77     		strb	r3, [r7, #30]
3012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         break;
 7796              		.loc 1 3012 9
 7797 046a 00BF     		nop
 7798              	.L451:
3013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
3014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if (pclk != 0U)
 7799              		.loc 1 3015 8
 7800 046c BB69     		ldr	r3, [r7, #24]
 7801 046e 002B     		cmp	r3, #0
 7802 0470 18D0     		beq	.L443
3016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
3017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* USARTDIV must be greater than or equal to 0d16 */
3018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 7803              		.loc 1 3018 29
 7804 0472 7B68     		ldr	r3, [r7, #4]
 7805 0474 5B68     		ldr	r3, [r3, #4]
 7806 0476 5A08     		lsrs	r2, r3, #1
 7807 0478 BB69     		ldr	r3, [r7, #24]
 7808 047a 1A44     		add	r2, r2, r3
 7809 047c 7B68     		ldr	r3, [r7, #4]
 7810 047e 5B68     		ldr	r3, [r3, #4]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 212


 7811              		.loc 1 3018 16
 7812 0480 B2FBF3F3 		udiv	r3, r2, r3
 7813 0484 3B61     		str	r3, [r7, #16]
3019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 7814              		.loc 1 3019 10
 7815 0486 3B69     		ldr	r3, [r7, #16]
 7816 0488 0F2B     		cmp	r3, #15
 7817 048a 09D9     		bls	.L452
 7818              		.loc 1 3019 38 discriminator 1
 7819 048c 3B69     		ldr	r3, [r7, #16]
 7820 048e B3F5803F 		cmp	r3, #65536
 7821 0492 05D2     		bcs	.L452
3020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
3021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)usartdiv;
 7822              		.loc 1 3021 32
 7823 0494 3B69     		ldr	r3, [r7, #16]
 7824 0496 9AB2     		uxth	r2, r3
 7825              		.loc 1 3021 14
 7826 0498 7B68     		ldr	r3, [r7, #4]
 7827 049a 1B68     		ldr	r3, [r3]
 7828              		.loc 1 3021 30
 7829 049c DA60     		str	r2, [r3, #12]
 7830 049e 01E0     		b	.L443
 7831              	.L452:
3022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
3023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       else
3024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
3025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         ret = HAL_ERROR;
 7832              		.loc 1 3025 13
 7833 04a0 0123     		movs	r3, #1
 7834 04a2 BB77     		strb	r3, [r7, #30]
 7835              	.L443:
3026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
3027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
3028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
3029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Clear ISR function pointers */
3032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxISR = NULL;
 7836              		.loc 1 3032 16
 7837 04a4 7B68     		ldr	r3, [r7, #4]
 7838 04a6 0022     		movs	r2, #0
 7839 04a8 9A66     		str	r2, [r3, #104]
3033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->TxISR = NULL;
 7840              		.loc 1 3033 16
 7841 04aa 7B68     		ldr	r3, [r7, #4]
 7842 04ac 0022     		movs	r2, #0
 7843 04ae DA66     		str	r2, [r3, #108]
3034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return ret;
 7844              		.loc 1 3035 10
 7845 04b0 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
3036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 7846              		.loc 1 3036 1
 7847 04b2 1846     		mov	r0, r3
 7848 04b4 2037     		adds	r7, r7, #32
 7849              	.LCFI241:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 213


 7850              		.cfi_def_cfa_offset 8
 7851 04b6 BD46     		mov	sp, r7
 7852              	.LCFI242:
 7853              		.cfi_def_cfa_register 13
 7854              		@ sp needed
 7855 04b8 80BD     		pop	{r7, pc}
 7856              	.L457:
 7857 04ba 00BF     		.align	2
 7858              	.L456:
 7859 04bc 007C0040 		.word	1073773568
 7860 04c0 00380240 		.word	1073887232
 7861 04c4 0024F400 		.word	16000000
 7862              		.cfi_endproc
 7863              	.LFE184:
 7865              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 7866              		.align	1
 7867              		.global	UART_AdvFeatureConfig
 7868              		.syntax unified
 7869              		.thumb
 7870              		.thumb_func
 7872              	UART_AdvFeatureConfig:
 7873              	.LFB185:
3037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
3039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
3040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
3041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
3042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
3043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
3044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 7874              		.loc 1 3044 1
 7875              		.cfi_startproc
 7876              		@ args = 0, pretend = 0, frame = 8
 7877              		@ frame_needed = 1, uses_anonymous_args = 0
 7878              		@ link register save eliminated.
 7879 0000 80B4     		push	{r7}
 7880              	.LCFI243:
 7881              		.cfi_def_cfa_offset 4
 7882              		.cfi_offset 7, -4
 7883 0002 83B0     		sub	sp, sp, #12
 7884              	.LCFI244:
 7885              		.cfi_def_cfa_offset 16
 7886 0004 00AF     		add	r7, sp, #0
 7887              	.LCFI245:
 7888              		.cfi_def_cfa_register 7
 7889 0006 7860     		str	r0, [r7, #4]
3045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
3046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
3047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
3049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 7890              		.loc 1 3049 7
 7891 0008 7B68     		ldr	r3, [r7, #4]
 7892 000a 5B6A     		ldr	r3, [r3, #36]
 7893 000c 03F00103 		and	r3, r3, #1
 7894              		.loc 1 3049 6
 7895 0010 002B     		cmp	r3, #0
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 214


 7896 0012 0AD0     		beq	.L459
3050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
3051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
3052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 7897              		.loc 1 3052 5
 7898 0014 7B68     		ldr	r3, [r7, #4]
 7899 0016 1B68     		ldr	r3, [r3]
 7900 0018 5B68     		ldr	r3, [r3, #4]
 7901 001a 23F40031 		bic	r1, r3, #131072
 7902 001e 7B68     		ldr	r3, [r7, #4]
 7903 0020 9A6A     		ldr	r2, [r3, #40]
 7904 0022 7B68     		ldr	r3, [r7, #4]
 7905 0024 1B68     		ldr	r3, [r3]
 7906 0026 0A43     		orrs	r2, r2, r1
 7907 0028 5A60     		str	r2, [r3, #4]
 7908              	.L459:
3053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
3054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
3056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 7909              		.loc 1 3056 7
 7910 002a 7B68     		ldr	r3, [r7, #4]
 7911 002c 5B6A     		ldr	r3, [r3, #36]
 7912 002e 03F00203 		and	r3, r3, #2
 7913              		.loc 1 3056 6
 7914 0032 002B     		cmp	r3, #0
 7915 0034 0AD0     		beq	.L460
3057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
3058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
3059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 7916              		.loc 1 3059 5
 7917 0036 7B68     		ldr	r3, [r7, #4]
 7918 0038 1B68     		ldr	r3, [r3]
 7919 003a 5B68     		ldr	r3, [r3, #4]
 7920 003c 23F48031 		bic	r1, r3, #65536
 7921 0040 7B68     		ldr	r3, [r7, #4]
 7922 0042 DA6A     		ldr	r2, [r3, #44]
 7923 0044 7B68     		ldr	r3, [r7, #4]
 7924 0046 1B68     		ldr	r3, [r3]
 7925 0048 0A43     		orrs	r2, r2, r1
 7926 004a 5A60     		str	r2, [r3, #4]
 7927              	.L460:
3060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
3061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure data inversion */
3063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 7928              		.loc 1 3063 7
 7929 004c 7B68     		ldr	r3, [r7, #4]
 7930 004e 5B6A     		ldr	r3, [r3, #36]
 7931 0050 03F00403 		and	r3, r3, #4
 7932              		.loc 1 3063 6
 7933 0054 002B     		cmp	r3, #0
 7934 0056 0AD0     		beq	.L461
3064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
3065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
3066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 7935              		.loc 1 3066 5
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 215


 7936 0058 7B68     		ldr	r3, [r7, #4]
 7937 005a 1B68     		ldr	r3, [r3]
 7938 005c 5B68     		ldr	r3, [r3, #4]
 7939 005e 23F48021 		bic	r1, r3, #262144
 7940 0062 7B68     		ldr	r3, [r7, #4]
 7941 0064 1A6B     		ldr	r2, [r3, #48]
 7942 0066 7B68     		ldr	r3, [r7, #4]
 7943 0068 1B68     		ldr	r3, [r3]
 7944 006a 0A43     		orrs	r2, r2, r1
 7945 006c 5A60     		str	r2, [r3, #4]
 7946              	.L461:
3067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
3068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
3070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 7947              		.loc 1 3070 7
 7948 006e 7B68     		ldr	r3, [r7, #4]
 7949 0070 5B6A     		ldr	r3, [r3, #36]
 7950 0072 03F00803 		and	r3, r3, #8
 7951              		.loc 1 3070 6
 7952 0076 002B     		cmp	r3, #0
 7953 0078 0AD0     		beq	.L462
3071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
3072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
3073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 7954              		.loc 1 3073 5
 7955 007a 7B68     		ldr	r3, [r7, #4]
 7956 007c 1B68     		ldr	r3, [r3]
 7957 007e 5B68     		ldr	r3, [r3, #4]
 7958 0080 23F40041 		bic	r1, r3, #32768
 7959 0084 7B68     		ldr	r3, [r7, #4]
 7960 0086 5A6B     		ldr	r2, [r3, #52]
 7961 0088 7B68     		ldr	r3, [r7, #4]
 7962 008a 1B68     		ldr	r3, [r3]
 7963 008c 0A43     		orrs	r2, r2, r1
 7964 008e 5A60     		str	r2, [r3, #4]
 7965              	.L462:
3074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
3075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
3077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 7966              		.loc 1 3077 7
 7967 0090 7B68     		ldr	r3, [r7, #4]
 7968 0092 5B6A     		ldr	r3, [r3, #36]
 7969 0094 03F01003 		and	r3, r3, #16
 7970              		.loc 1 3077 6
 7971 0098 002B     		cmp	r3, #0
 7972 009a 0AD0     		beq	.L463
3078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
3079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
3080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 7973              		.loc 1 3080 5
 7974 009c 7B68     		ldr	r3, [r7, #4]
 7975 009e 1B68     		ldr	r3, [r3]
 7976 00a0 9B68     		ldr	r3, [r3, #8]
 7977 00a2 23F48051 		bic	r1, r3, #4096
 7978 00a6 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 216


 7979 00a8 9A6B     		ldr	r2, [r3, #56]
 7980 00aa 7B68     		ldr	r3, [r7, #4]
 7981 00ac 1B68     		ldr	r3, [r3]
 7982 00ae 0A43     		orrs	r2, r2, r1
 7983 00b0 9A60     		str	r2, [r3, #8]
 7984              	.L463:
3081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
3082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
3084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 7985              		.loc 1 3084 7
 7986 00b2 7B68     		ldr	r3, [r7, #4]
 7987 00b4 5B6A     		ldr	r3, [r3, #36]
 7988 00b6 03F02003 		and	r3, r3, #32
 7989              		.loc 1 3084 6
 7990 00ba 002B     		cmp	r3, #0
 7991 00bc 0AD0     		beq	.L464
3085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
3086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
3087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 7992              		.loc 1 3087 5
 7993 00be 7B68     		ldr	r3, [r7, #4]
 7994 00c0 1B68     		ldr	r3, [r3]
 7995 00c2 9B68     		ldr	r3, [r3, #8]
 7996 00c4 23F40051 		bic	r1, r3, #8192
 7997 00c8 7B68     		ldr	r3, [r7, #4]
 7998 00ca DA6B     		ldr	r2, [r3, #60]
 7999 00cc 7B68     		ldr	r3, [r7, #4]
 8000 00ce 1B68     		ldr	r3, [r3]
 8001 00d0 0A43     		orrs	r2, r2, r1
 8002 00d2 9A60     		str	r2, [r3, #8]
 8003              	.L464:
3088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
3089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
3091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 8004              		.loc 1 3091 7
 8005 00d4 7B68     		ldr	r3, [r7, #4]
 8006 00d6 5B6A     		ldr	r3, [r3, #36]
 8007 00d8 03F04003 		and	r3, r3, #64
 8008              		.loc 1 3091 6
 8009 00dc 002B     		cmp	r3, #0
 8010 00de 1AD0     		beq	.L465
3092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
3093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
3094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
3095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 8011              		.loc 1 3095 5
 8012 00e0 7B68     		ldr	r3, [r7, #4]
 8013 00e2 1B68     		ldr	r3, [r3]
 8014 00e4 5B68     		ldr	r3, [r3, #4]
 8015 00e6 23F48011 		bic	r1, r3, #1048576
 8016 00ea 7B68     		ldr	r3, [r7, #4]
 8017 00ec 1A6C     		ldr	r2, [r3, #64]
 8018 00ee 7B68     		ldr	r3, [r7, #4]
 8019 00f0 1B68     		ldr	r3, [r3]
 8020 00f2 0A43     		orrs	r2, r2, r1
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 217


 8021 00f4 5A60     		str	r2, [r3, #4]
3096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
3097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 8022              		.loc 1 3097 28
 8023 00f6 7B68     		ldr	r3, [r7, #4]
 8024 00f8 1B6C     		ldr	r3, [r3, #64]
 8025              		.loc 1 3097 8
 8026 00fa B3F5801F 		cmp	r3, #1048576
 8027 00fe 0AD1     		bne	.L465
3098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
3099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
3100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 8028              		.loc 1 3100 7
 8029 0100 7B68     		ldr	r3, [r7, #4]
 8030 0102 1B68     		ldr	r3, [r3]
 8031 0104 5B68     		ldr	r3, [r3, #4]
 8032 0106 23F4C001 		bic	r1, r3, #6291456
 8033 010a 7B68     		ldr	r3, [r7, #4]
 8034 010c 5A6C     		ldr	r2, [r3, #68]
 8035 010e 7B68     		ldr	r3, [r7, #4]
 8036 0110 1B68     		ldr	r3, [r3]
 8037 0112 0A43     		orrs	r2, r2, r1
 8038 0114 5A60     		str	r2, [r3, #4]
 8039              	.L465:
3101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
3102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
3103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
3105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 8040              		.loc 1 3105 7
 8041 0116 7B68     		ldr	r3, [r7, #4]
 8042 0118 5B6A     		ldr	r3, [r3, #36]
 8043 011a 03F08003 		and	r3, r3, #128
 8044              		.loc 1 3105 6
 8045 011e 002B     		cmp	r3, #0
 8046 0120 0AD0     		beq	.L467
3106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
3107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
3108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 8047              		.loc 1 3108 5
 8048 0122 7B68     		ldr	r3, [r7, #4]
 8049 0124 1B68     		ldr	r3, [r3]
 8050 0126 5B68     		ldr	r3, [r3, #4]
 8051 0128 23F40021 		bic	r1, r3, #524288
 8052 012c 7B68     		ldr	r3, [r7, #4]
 8053 012e 9A6C     		ldr	r2, [r3, #72]
 8054 0130 7B68     		ldr	r3, [r7, #4]
 8055 0132 1B68     		ldr	r3, [r3]
 8056 0134 0A43     		orrs	r2, r2, r1
 8057 0136 5A60     		str	r2, [r3, #4]
 8058              	.L467:
3109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
3110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 8059              		.loc 1 3110 1
 8060 0138 00BF     		nop
 8061 013a 0C37     		adds	r7, r7, #12
 8062              	.LCFI246:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 218


 8063              		.cfi_def_cfa_offset 4
 8064 013c BD46     		mov	sp, r7
 8065              	.LCFI247:
 8066              		.cfi_def_cfa_register 13
 8067              		@ sp needed
 8068 013e 5DF8047B 		ldr	r7, [sp], #4
 8069              	.LCFI248:
 8070              		.cfi_restore 7
 8071              		.cfi_def_cfa_offset 0
 8072 0142 7047     		bx	lr
 8073              		.cfi_endproc
 8074              	.LFE185:
 8076              		.section	.text.UART_CheckIdleState,"ax",%progbits
 8077              		.align	1
 8078              		.global	UART_CheckIdleState
 8079              		.syntax unified
 8080              		.thumb
 8081              		.thumb_func
 8083              	UART_CheckIdleState:
 8084              	.LFB186:
3111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
3113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief Check the UART Idle State.
3114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
3115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
3116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
3117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
3118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 8085              		.loc 1 3118 1
 8086              		.cfi_startproc
 8087              		@ args = 0, pretend = 0, frame = 16
 8088              		@ frame_needed = 1, uses_anonymous_args = 0
 8089 0000 80B5     		push	{r7, lr}
 8090              	.LCFI249:
 8091              		.cfi_def_cfa_offset 8
 8092              		.cfi_offset 7, -8
 8093              		.cfi_offset 14, -4
 8094 0002 86B0     		sub	sp, sp, #24
 8095              	.LCFI250:
 8096              		.cfi_def_cfa_offset 32
 8097 0004 02AF     		add	r7, sp, #8
 8098              	.LCFI251:
 8099              		.cfi_def_cfa 7, 24
 8100 0006 7860     		str	r0, [r7, #4]
3119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint32_t tickstart;
3120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
3122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 8101              		.loc 1 3122 20
 8102 0008 7B68     		ldr	r3, [r7, #4]
 8103 000a 0022     		movs	r2, #0
 8104 000c C3F88420 		str	r2, [r3, #132]
3123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Init tickstart for timeout management */
3125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   tickstart = HAL_GetTick();
 8105              		.loc 1 3125 15
 8106 0010 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 219


 8107 0014 F860     		str	r0, [r7, #12]
3126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
3128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8108              		.loc 1 3128 13
 8109 0016 7B68     		ldr	r3, [r7, #4]
 8110 0018 1B68     		ldr	r3, [r3]
 8111              		.loc 1 3128 23
 8112 001a 1B68     		ldr	r3, [r3]
 8113              		.loc 1 3128 29
 8114 001c 03F00803 		and	r3, r3, #8
 8115              		.loc 1 3128 6
 8116 0020 082B     		cmp	r3, #8
 8117 0022 0ED1     		bne	.L469
3129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
3130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Wait until TEACK flag is set */
3131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
 8118              		.loc 1 3131 9
 8119 0024 6FF07E43 		mvn	r3, #-33554432
 8120 0028 0093     		str	r3, [sp]
 8121 002a FB68     		ldr	r3, [r7, #12]
 8122 002c 0022     		movs	r2, #0
 8123 002e 4FF40011 		mov	r1, #2097152
 8124 0032 7868     		ldr	r0, [r7, #4]
 8125 0034 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 8126 0038 0346     		mov	r3, r0
 8127              		.loc 1 3131 8
 8128 003a 002B     		cmp	r3, #0
 8129 003c 01D0     		beq	.L469
3132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
3133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Timeout occurred */
3134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_TIMEOUT;
 8130              		.loc 1 3134 14
 8131 003e 0323     		movs	r3, #3
 8132 0040 11E0     		b	.L470
 8133              	.L469:
3135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
3136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
3137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #if defined(USART_ISR_REACK)
3138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check if the Receiver is enabled */
3140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
3141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
3142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Wait until REACK flag is set */
3143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
3144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
3145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Timeout occurred */
3146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_TIMEOUT;
3147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
3148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
3149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* USART_ISR_REACK */
3150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Initialize the UART State */
3152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 8134              		.loc 1 3152 17
 8135 0042 7B68     		ldr	r3, [r7, #4]
 8136 0044 2022     		movs	r2, #32
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 220


 8137 0046 DA67     		str	r2, [r3, #124]
3153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 8138              		.loc 1 3153 18
 8139 0048 7B68     		ldr	r3, [r7, #4]
 8140 004a 2022     		movs	r2, #32
 8141 004c C3F88020 		str	r2, [r3, #128]
3154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8142              		.loc 1 3154 24
 8143 0050 7B68     		ldr	r3, [r7, #4]
 8144 0052 0022     		movs	r2, #0
 8145 0054 1A66     		str	r2, [r3, #96]
3155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
 8146              		.loc 1 3155 22
 8147 0056 7B68     		ldr	r3, [r7, #4]
 8148 0058 0022     		movs	r2, #0
 8149 005a 5A66     		str	r2, [r3, #100]
3156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 8150              		.loc 1 3157 3
 8151 005c 7B68     		ldr	r3, [r7, #4]
 8152 005e 0022     		movs	r2, #0
 8153 0060 83F87820 		strb	r2, [r3, #120]
3158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 8154              		.loc 1 3159 10
 8155 0064 0023     		movs	r3, #0
 8156              	.L470:
3160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 8157              		.loc 1 3160 1
 8158 0066 1846     		mov	r0, r3
 8159 0068 1037     		adds	r7, r7, #16
 8160              	.LCFI252:
 8161              		.cfi_def_cfa_offset 8
 8162 006a BD46     		mov	sp, r7
 8163              	.LCFI253:
 8164              		.cfi_def_cfa_register 13
 8165              		@ sp needed
 8166 006c 80BD     		pop	{r7, pc}
 8167              		.cfi_endproc
 8168              	.LFE186:
 8170              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 8171              		.align	1
 8172              		.global	UART_WaitOnFlagUntilTimeout
 8173              		.syntax unified
 8174              		.thumb
 8175              		.thumb_func
 8177              	UART_WaitOnFlagUntilTimeout:
 8178              	.LFB187:
3161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
3163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  This function handles UART Communication Timeout. It waits
3164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                  until a flag is no longer in the specified status.
3165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart     UART handle.
3166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Flag      Specifies the UART flag to check
3167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Status    The actual Flag status (SET or RESET)
3168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Tickstart Tick start value
3169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param Timeout   Timeout duration
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 221


3170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
3171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
3172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
3173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****                                               uint32_t Tickstart, uint32_t Timeout)
3174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 8179              		.loc 1 3174 1
 8180              		.cfi_startproc
 8181              		@ args = 4, pretend = 0, frame = 112
 8182              		@ frame_needed = 1, uses_anonymous_args = 0
 8183 0000 80B5     		push	{r7, lr}
 8184              	.LCFI254:
 8185              		.cfi_def_cfa_offset 8
 8186              		.cfi_offset 7, -8
 8187              		.cfi_offset 14, -4
 8188 0002 9CB0     		sub	sp, sp, #112
 8189              	.LCFI255:
 8190              		.cfi_def_cfa_offset 120
 8191 0004 00AF     		add	r7, sp, #0
 8192              	.LCFI256:
 8193              		.cfi_def_cfa_register 7
 8194 0006 F860     		str	r0, [r7, #12]
 8195 0008 B960     		str	r1, [r7, #8]
 8196 000a 3B60     		str	r3, [r7]
 8197 000c 1346     		mov	r3, r2
 8198 000e FB71     		strb	r3, [r7, #7]
3175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Wait until flag is set */
3176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8199              		.loc 1 3176 9
 8200 0010 A7E0     		b	.L472
 8201              	.L488:
3177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
3178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Check for the Timeout */
3179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if (Timeout != HAL_MAX_DELAY)
 8202              		.loc 1 3179 8
 8203 0012 BB6F     		ldr	r3, [r7, #120]
 8204 0014 B3F1FF3F 		cmp	r3, #-1
 8205 0018 00F0A380 		beq	.L472
3180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
3181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8206              		.loc 1 3181 13
 8207 001c FFF7FEFF 		bl	HAL_GetTick
 8208 0020 0246     		mov	r2, r0
 8209              		.loc 1 3181 27
 8210 0022 3B68     		ldr	r3, [r7]
 8211 0024 D31A     		subs	r3, r2, r3
 8212              		.loc 1 3181 10
 8213 0026 BA6F     		ldr	r2, [r7, #120]
 8214 0028 9A42     		cmp	r2, r3
 8215 002a 02D3     		bcc	.L477
 8216              		.loc 1 3181 51 discriminator 1
 8217 002c BB6F     		ldr	r3, [r7, #120]
 8218 002e 002B     		cmp	r3, #0
 8219 0030 3FD1     		bne	.L474
 8220              	.L477:
 8221              	.LBB663:
3182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
3183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error)
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 222


3184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****            interrupts for the interrupt process */
3185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE
 8222              		.loc 1 3185 9 discriminator 1
 8223 0032 FB68     		ldr	r3, [r7, #12]
 8224 0034 1B68     		ldr	r3, [r3]
 8225 0036 3B65     		str	r3, [r7, #80]
 8226              	.LBB664:
 8227              	.LBB665:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8228              		.loc 2 1072 4 discriminator 1
 8229 0038 3B6D     		ldr	r3, [r7, #80]
 8230              		.syntax unified
 8231              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8232 003a 53E8003F 		ldrex r3, [r3]
 8233              	@ 0 "" 2
 8234              		.thumb
 8235              		.syntax unified
 8236 003e FB64     		str	r3, [r7, #76]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8237              		.loc 2 1073 10 discriminator 1
 8238 0040 FB6C     		ldr	r3, [r7, #76]
 8239              	.LBE665:
 8240              	.LBE664:
 8241              		.loc 1 3185 9 discriminator 1
 8242 0042 23F4D073 		bic	r3, r3, #416
 8243 0046 7B66     		str	r3, [r7, #100]
 8244 0048 FB68     		ldr	r3, [r7, #12]
 8245 004a 1B68     		ldr	r3, [r3]
 8246 004c 1A46     		mov	r2, r3
 8247 004e 7B6E     		ldr	r3, [r7, #100]
 8248 0050 FB65     		str	r3, [r7, #92]
 8249 0052 BA65     		str	r2, [r7, #88]
 8250              	.LBB666:
 8251              	.LBB667:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8252              		.loc 2 1123 4 discriminator 1
 8253 0054 B96D     		ldr	r1, [r7, #88]
 8254 0056 FA6D     		ldr	r2, [r7, #92]
 8255              		.syntax unified
 8256              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8257 0058 41E80023 		strex r3, r2, [r1]
 8258              	@ 0 "" 2
 8259              		.thumb
 8260              		.syntax unified
 8261 005c 7B65     		str	r3, [r7, #84]
 8262              		.loc 2 1124 10 discriminator 1
 8263 005e 7B6D     		ldr	r3, [r7, #84]
 8264              	.LBE667:
 8265              	.LBE666:
 8266              		.loc 1 3185 9 discriminator 1
 8267 0060 002B     		cmp	r3, #0
 8268 0062 E6D1     		bne	.L477
 8269              	.L480:
 8270              	.LBE663:
 8271              	.LBB668:
3186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8272              		.loc 1 3186 9 discriminator 1
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 223


 8273 0064 FB68     		ldr	r3, [r7, #12]
 8274 0066 1B68     		ldr	r3, [r3]
 8275 0068 0833     		adds	r3, r3, #8
 8276 006a FB63     		str	r3, [r7, #60]
 8277              	.LBB669:
 8278              	.LBB670:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8279              		.loc 2 1072 4 discriminator 1
 8280 006c FB6B     		ldr	r3, [r7, #60]
 8281              		.syntax unified
 8282              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8283 006e 53E8003F 		ldrex r3, [r3]
 8284              	@ 0 "" 2
 8285              		.thumb
 8286              		.syntax unified
 8287 0072 BB63     		str	r3, [r7, #56]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8288              		.loc 2 1073 10 discriminator 1
 8289 0074 BB6B     		ldr	r3, [r7, #56]
 8290              	.LBE670:
 8291              	.LBE669:
 8292              		.loc 1 3186 9 discriminator 1
 8293 0076 23F00103 		bic	r3, r3, #1
 8294 007a 3B66     		str	r3, [r7, #96]
 8295 007c FB68     		ldr	r3, [r7, #12]
 8296 007e 1B68     		ldr	r3, [r3]
 8297 0080 0833     		adds	r3, r3, #8
 8298 0082 3A6E     		ldr	r2, [r7, #96]
 8299 0084 BA64     		str	r2, [r7, #72]
 8300 0086 7B64     		str	r3, [r7, #68]
 8301              	.LBB671:
 8302              	.LBB672:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8303              		.loc 2 1123 4 discriminator 1
 8304 0088 796C     		ldr	r1, [r7, #68]
 8305 008a BA6C     		ldr	r2, [r7, #72]
 8306              		.syntax unified
 8307              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8308 008c 41E80023 		strex r3, r2, [r1]
 8309              	@ 0 "" 2
 8310              		.thumb
 8311              		.syntax unified
 8312 0090 3B64     		str	r3, [r7, #64]
 8313              		.loc 2 1124 10 discriminator 1
 8314 0092 3B6C     		ldr	r3, [r7, #64]
 8315              	.LBE672:
 8316              	.LBE671:
 8317              		.loc 1 3186 9 discriminator 1
 8318 0094 002B     		cmp	r3, #0
 8319 0096 E5D1     		bne	.L480
 8320              	.LBE668:
3187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
 8321              		.loc 1 3188 23
 8322 0098 FB68     		ldr	r3, [r7, #12]
 8323 009a 2022     		movs	r2, #32
 8324 009c DA67     		str	r2, [r3, #124]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 224


3189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 8325              		.loc 1 3189 24
 8326 009e FB68     		ldr	r3, [r7, #12]
 8327 00a0 2022     		movs	r2, #32
 8328 00a2 C3F88020 		str	r2, [r3, #128]
3190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         __HAL_UNLOCK(huart);
 8329              		.loc 1 3191 9
 8330 00a6 FB68     		ldr	r3, [r7, #12]
 8331 00a8 0022     		movs	r2, #0
 8332 00aa 83F87820 		strb	r2, [r3, #120]
3192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         return HAL_TIMEOUT;
 8333              		.loc 1 3193 16
 8334 00ae 0323     		movs	r3, #3
 8335 00b0 68E0     		b	.L481
 8336              	.L474:
3194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
3195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 8337              		.loc 1 3196 11
 8338 00b2 FB68     		ldr	r3, [r7, #12]
 8339 00b4 1B68     		ldr	r3, [r3]
 8340 00b6 1B68     		ldr	r3, [r3]
 8341 00b8 03F00403 		and	r3, r3, #4
 8342              		.loc 1 3196 10
 8343 00bc 002B     		cmp	r3, #0
 8344 00be 50D0     		beq	.L472
3197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
3198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 8345              		.loc 1 3198 13
 8346 00c0 FB68     		ldr	r3, [r7, #12]
 8347 00c2 1B68     		ldr	r3, [r3]
 8348 00c4 DB69     		ldr	r3, [r3, #28]
 8349 00c6 03F40063 		and	r3, r3, #2048
 8350              		.loc 1 3198 12
 8351 00ca B3F5006F 		cmp	r3, #2048
 8352 00ce 48D1     		bne	.L472
3199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         {
3200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           /* Clear Receiver Timeout flag*/
3201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 8353              		.loc 1 3201 11
 8354 00d0 FB68     		ldr	r3, [r7, #12]
 8355 00d2 1B68     		ldr	r3, [r3]
 8356 00d4 4FF40062 		mov	r2, #2048
 8357 00d8 1A62     		str	r2, [r3, #32]
 8358              	.L484:
 8359              	.LBB673:
3202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error)
3204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****              interrupts for the interrupt process */
3205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXE
 8360              		.loc 1 3205 11 discriminator 1
 8361 00da FB68     		ldr	r3, [r7, #12]
 8362 00dc 1B68     		ldr	r3, [r3]
 8363 00de BB62     		str	r3, [r7, #40]
 8364              	.LBB674:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 225


 8365              	.LBB675:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8366              		.loc 2 1072 4 discriminator 1
 8367 00e0 BB6A     		ldr	r3, [r7, #40]
 8368              		.syntax unified
 8369              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8370 00e2 53E8003F 		ldrex r3, [r3]
 8371              	@ 0 "" 2
 8372              		.thumb
 8373              		.syntax unified
 8374 00e6 7B62     		str	r3, [r7, #36]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8375              		.loc 2 1073 10 discriminator 1
 8376 00e8 7B6A     		ldr	r3, [r7, #36]
 8377              	.LBE675:
 8378              	.LBE674:
 8379              		.loc 1 3205 11 discriminator 1
 8380 00ea 23F4D073 		bic	r3, r3, #416
 8381 00ee FB66     		str	r3, [r7, #108]
 8382 00f0 FB68     		ldr	r3, [r7, #12]
 8383 00f2 1B68     		ldr	r3, [r3]
 8384 00f4 1A46     		mov	r2, r3
 8385 00f6 FB6E     		ldr	r3, [r7, #108]
 8386 00f8 7B63     		str	r3, [r7, #52]
 8387 00fa 3A63     		str	r2, [r7, #48]
 8388              	.LBB676:
 8389              	.LBB677:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8390              		.loc 2 1123 4 discriminator 1
 8391 00fc 396B     		ldr	r1, [r7, #48]
 8392 00fe 7A6B     		ldr	r2, [r7, #52]
 8393              		.syntax unified
 8394              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8395 0100 41E80023 		strex r3, r2, [r1]
 8396              	@ 0 "" 2
 8397              		.thumb
 8398              		.syntax unified
 8399 0104 FB62     		str	r3, [r7, #44]
 8400              		.loc 2 1124 10 discriminator 1
 8401 0106 FB6A     		ldr	r3, [r7, #44]
 8402              	.LBE677:
 8403              	.LBE676:
 8404              		.loc 1 3205 11 discriminator 1
 8405 0108 002B     		cmp	r3, #0
 8406 010a E6D1     		bne	.L484
 8407              	.L487:
 8408              	.LBE673:
 8409              	.LBB678:
3206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8410              		.loc 1 3206 11 discriminator 1
 8411 010c FB68     		ldr	r3, [r7, #12]
 8412 010e 1B68     		ldr	r3, [r3]
 8413 0110 0833     		adds	r3, r3, #8
 8414 0112 7B61     		str	r3, [r7, #20]
 8415              	.LBB679:
 8416              	.LBB680:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 226


 8417              		.loc 2 1072 4 discriminator 1
 8418 0114 7B69     		ldr	r3, [r7, #20]
 8419              		.syntax unified
 8420              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8421 0116 53E8003F 		ldrex r3, [r3]
 8422              	@ 0 "" 2
 8423              		.thumb
 8424              		.syntax unified
 8425 011a 3B61     		str	r3, [r7, #16]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8426              		.loc 2 1073 10 discriminator 1
 8427 011c 3B69     		ldr	r3, [r7, #16]
 8428              	.LBE680:
 8429              	.LBE679:
 8430              		.loc 1 3206 11 discriminator 1
 8431 011e 23F00103 		bic	r3, r3, #1
 8432 0122 BB66     		str	r3, [r7, #104]
 8433 0124 FB68     		ldr	r3, [r7, #12]
 8434 0126 1B68     		ldr	r3, [r3]
 8435 0128 0833     		adds	r3, r3, #8
 8436 012a BA6E     		ldr	r2, [r7, #104]
 8437 012c 3A62     		str	r2, [r7, #32]
 8438 012e FB61     		str	r3, [r7, #28]
 8439              	.LBB681:
 8440              	.LBB682:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8441              		.loc 2 1123 4 discriminator 1
 8442 0130 F969     		ldr	r1, [r7, #28]
 8443 0132 3A6A     		ldr	r2, [r7, #32]
 8444              		.syntax unified
 8445              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8446 0134 41E80023 		strex r3, r2, [r1]
 8447              	@ 0 "" 2
 8448              		.thumb
 8449              		.syntax unified
 8450 0138 BB61     		str	r3, [r7, #24]
 8451              		.loc 2 1124 10 discriminator 1
 8452 013a BB69     		ldr	r3, [r7, #24]
 8453              	.LBE682:
 8454              	.LBE681:
 8455              		.loc 1 3206 11 discriminator 1
 8456 013c 002B     		cmp	r3, #0
 8457 013e E5D1     		bne	.L487
 8458              	.LBE678:
3207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           huart->gState = HAL_UART_STATE_READY;
 8459              		.loc 1 3208 25
 8460 0140 FB68     		ldr	r3, [r7, #12]
 8461 0142 2022     		movs	r2, #32
 8462 0144 DA67     		str	r2, [r3, #124]
3209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
 8463              		.loc 1 3209 26
 8464 0146 FB68     		ldr	r3, [r7, #12]
 8465 0148 2022     		movs	r2, #32
 8466 014a C3F88020 		str	r2, [r3, #128]
3210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_RTO;
 8467              		.loc 1 3210 28
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 227


 8468 014e FB68     		ldr	r3, [r7, #12]
 8469 0150 2022     		movs	r2, #32
 8470 0152 C3F88420 		str	r2, [r3, #132]
3211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           /* Process Unlocked */
3213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           __HAL_UNLOCK(huart);
 8471              		.loc 1 3213 11
 8472 0156 FB68     		ldr	r3, [r7, #12]
 8473 0158 0022     		movs	r2, #0
 8474 015a 83F87820 		strb	r2, [r3, #120]
3214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           return HAL_TIMEOUT;
 8475              		.loc 1 3215 18
 8476 015e 0323     		movs	r3, #3
 8477 0160 10E0     		b	.L481
 8478              	.L472:
3176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 8479              		.loc 1 3176 11
 8480 0162 FB68     		ldr	r3, [r7, #12]
 8481 0164 1B68     		ldr	r3, [r3]
 8482 0166 DA69     		ldr	r2, [r3, #28]
 8483 0168 BB68     		ldr	r3, [r7, #8]
 8484 016a 1340     		ands	r3, r3, r2
3176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 8485              		.loc 1 3176 50
 8486 016c BA68     		ldr	r2, [r7, #8]
 8487 016e 9A42     		cmp	r2, r3
 8488 0170 0CBF     		ite	eq
 8489 0172 0123     		moveq	r3, #1
 8490 0174 0023     		movne	r3, #0
 8491 0176 DBB2     		uxtb	r3, r3
 8492 0178 1A46     		mov	r2, r3
3176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 8493              		.loc 1 3176 59
 8494 017a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
3176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
 8495              		.loc 1 3176 9
 8496 017c 9A42     		cmp	r2, r3
 8497 017e 3FF448AF 		beq	.L488
3216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         }
3217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
3218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
3219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
3220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 8498              		.loc 1 3220 10
 8499 0182 0023     		movs	r3, #0
 8500              	.L481:
3221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 8501              		.loc 1 3221 1
 8502 0184 1846     		mov	r0, r3
 8503 0186 7037     		adds	r7, r7, #112
 8504              	.LCFI257:
 8505              		.cfi_def_cfa_offset 8
 8506 0188 BD46     		mov	sp, r7
 8507              	.LCFI258:
 8508              		.cfi_def_cfa_register 13
 8509              		@ sp needed
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 228


 8510 018a 80BD     		pop	{r7, pc}
 8511              		.cfi_endproc
 8512              	.LFE187:
 8514              		.section	.text.UART_Start_Receive_IT,"ax",%progbits
 8515              		.align	1
 8516              		.global	UART_Start_Receive_IT
 8517              		.syntax unified
 8518              		.thumb
 8519              		.thumb_func
 8521              	UART_Start_Receive_IT:
 8522              	.LFB188:
3222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
3224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Start Receive operation in interrupt mode.
3225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note   This function could be called by all HAL UART API providing reception in Interrupt mode
3226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note   When calling this function, parameters validity is considered as already checked,
3227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         i.e. Rx State, buffer address, ...
3228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         UART Handle is assumed as Locked.
3229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle.
3230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
3231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
3232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
3233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
3234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef UART_Start_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
3235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 8523              		.loc 1 3235 1
 8524              		.cfi_startproc
 8525              		@ args = 0, pretend = 0, frame = 88
 8526              		@ frame_needed = 1, uses_anonymous_args = 0
 8527              		@ link register save eliminated.
 8528 0000 80B4     		push	{r7}
 8529              	.LCFI259:
 8530              		.cfi_def_cfa_offset 4
 8531              		.cfi_offset 7, -4
 8532 0002 97B0     		sub	sp, sp, #92
 8533              	.LCFI260:
 8534              		.cfi_def_cfa_offset 96
 8535 0004 00AF     		add	r7, sp, #0
 8536              	.LCFI261:
 8537              		.cfi_def_cfa_register 7
 8538 0006 F860     		str	r0, [r7, #12]
 8539 0008 B960     		str	r1, [r7, #8]
 8540 000a 1346     		mov	r3, r2
 8541 000c FB80     		strh	r3, [r7, #6]	@ movhi
3236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->pRxBuffPtr  = pData;
 8542              		.loc 1 3236 22
 8543 000e FB68     		ldr	r3, [r7, #12]
 8544 0010 BA68     		ldr	r2, [r7, #8]
 8545 0012 5A65     		str	r2, [r3, #84]
3237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxXferSize  = Size;
 8546              		.loc 1 3237 22
 8547 0014 FB68     		ldr	r3, [r7, #12]
 8548 0016 FA88     		ldrh	r2, [r7, #6]	@ movhi
 8549 0018 A3F85820 		strh	r2, [r3, #88]	@ movhi
3238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxXferCount = Size;
 8550              		.loc 1 3238 22
 8551 001c FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 229


 8552 001e FA88     		ldrh	r2, [r7, #6]	@ movhi
 8553 0020 A3F85A20 		strh	r2, [r3, #90]	@ movhi
3239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxISR       = NULL;
 8554              		.loc 1 3239 22
 8555 0024 FB68     		ldr	r3, [r7, #12]
 8556 0026 0022     		movs	r2, #0
 8557 0028 9A66     		str	r2, [r3, #104]
3240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Computation of UART mask to apply to RDR register */
3242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_MASK_COMPUTATION(huart);
 8558              		.loc 1 3242 3
 8559 002a FB68     		ldr	r3, [r7, #12]
 8560 002c 9B68     		ldr	r3, [r3, #8]
 8561 002e B3F5805F 		cmp	r3, #4096
 8562 0032 0ED1     		bne	.L490
 8563              		.loc 1 3242 3 is_stmt 0 discriminator 1
 8564 0034 FB68     		ldr	r3, [r7, #12]
 8565 0036 1B69     		ldr	r3, [r3, #16]
 8566 0038 002B     		cmp	r3, #0
 8567 003a 05D1     		bne	.L491
 8568              		.loc 1 3242 3 discriminator 3
 8569 003c FB68     		ldr	r3, [r7, #12]
 8570 003e 40F2FF12 		movw	r2, #511
 8571 0042 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 8572 0046 2DE0     		b	.L492
 8573              	.L491:
 8574              		.loc 1 3242 3 discriminator 4
 8575 0048 FB68     		ldr	r3, [r7, #12]
 8576 004a FF22     		movs	r2, #255
 8577 004c A3F85C20 		strh	r2, [r3, #92]	@ movhi
 8578 0050 28E0     		b	.L492
 8579              	.L490:
 8580              		.loc 1 3242 3 discriminator 2
 8581 0052 FB68     		ldr	r3, [r7, #12]
 8582 0054 9B68     		ldr	r3, [r3, #8]
 8583 0056 002B     		cmp	r3, #0
 8584 0058 0DD1     		bne	.L493
 8585              		.loc 1 3242 3 discriminator 5
 8586 005a FB68     		ldr	r3, [r7, #12]
 8587 005c 1B69     		ldr	r3, [r3, #16]
 8588 005e 002B     		cmp	r3, #0
 8589 0060 04D1     		bne	.L494
 8590              		.loc 1 3242 3 discriminator 7
 8591 0062 FB68     		ldr	r3, [r7, #12]
 8592 0064 FF22     		movs	r2, #255
 8593 0066 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 8594 006a 1BE0     		b	.L492
 8595              	.L494:
 8596              		.loc 1 3242 3 discriminator 8
 8597 006c FB68     		ldr	r3, [r7, #12]
 8598 006e 7F22     		movs	r2, #127
 8599 0070 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 8600 0074 16E0     		b	.L492
 8601              	.L493:
 8602              		.loc 1 3242 3 discriminator 6
 8603 0076 FB68     		ldr	r3, [r7, #12]
 8604 0078 9B68     		ldr	r3, [r3, #8]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 230


 8605 007a B3F1805F 		cmp	r3, #268435456
 8606 007e 0DD1     		bne	.L495
 8607              		.loc 1 3242 3 discriminator 9
 8608 0080 FB68     		ldr	r3, [r7, #12]
 8609 0082 1B69     		ldr	r3, [r3, #16]
 8610 0084 002B     		cmp	r3, #0
 8611 0086 04D1     		bne	.L496
 8612              		.loc 1 3242 3 discriminator 11
 8613 0088 FB68     		ldr	r3, [r7, #12]
 8614 008a 7F22     		movs	r2, #127
 8615 008c A3F85C20 		strh	r2, [r3, #92]	@ movhi
 8616 0090 08E0     		b	.L492
 8617              	.L496:
 8618              		.loc 1 3242 3 discriminator 12
 8619 0092 FB68     		ldr	r3, [r7, #12]
 8620 0094 3F22     		movs	r2, #63
 8621 0096 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 8622 009a 03E0     		b	.L492
 8623              	.L495:
 8624              		.loc 1 3242 3 discriminator 10
 8625 009c FB68     		ldr	r3, [r7, #12]
 8626 009e 0022     		movs	r2, #0
 8627 00a0 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 8628              	.L492:
3243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 8629              		.loc 1 3244 20 is_stmt 1
 8630 00a4 FB68     		ldr	r3, [r7, #12]
 8631 00a6 0022     		movs	r2, #0
 8632 00a8 C3F88420 		str	r2, [r3, #132]
3245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
 8633              		.loc 1 3245 18
 8634 00ac FB68     		ldr	r3, [r7, #12]
 8635 00ae 2222     		movs	r2, #34
 8636 00b0 C3F88020 		str	r2, [r3, #128]
 8637              	.L499:
 8638              	.LBB683:
3246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8639              		.loc 1 3248 3 discriminator 1
 8640 00b4 FB68     		ldr	r3, [r7, #12]
 8641 00b6 1B68     		ldr	r3, [r3]
 8642 00b8 0833     		adds	r3, r3, #8
 8643 00ba FB63     		str	r3, [r7, #60]
 8644              	.LBB684:
 8645              	.LBB685:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8646              		.loc 2 1072 4 discriminator 1
 8647 00bc FB6B     		ldr	r3, [r7, #60]
 8648              		.syntax unified
 8649              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8650 00be 53E8003F 		ldrex r3, [r3]
 8651              	@ 0 "" 2
 8652              		.thumb
 8653              		.syntax unified
 8654 00c2 BB63     		str	r3, [r7, #56]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 231


1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8655              		.loc 2 1073 10 discriminator 1
 8656 00c4 BB6B     		ldr	r3, [r7, #56]
 8657              	.LBE685:
 8658              	.LBE684:
 8659              		.loc 1 3248 3 discriminator 1
 8660 00c6 43F00103 		orr	r3, r3, #1
 8661 00ca 7B65     		str	r3, [r7, #84]
 8662 00cc FB68     		ldr	r3, [r7, #12]
 8663 00ce 1B68     		ldr	r3, [r3]
 8664 00d0 0833     		adds	r3, r3, #8
 8665 00d2 7A6D     		ldr	r2, [r7, #84]
 8666 00d4 BA64     		str	r2, [r7, #72]
 8667 00d6 7B64     		str	r3, [r7, #68]
 8668              	.LBB686:
 8669              	.LBB687:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8670              		.loc 2 1123 4 discriminator 1
 8671 00d8 796C     		ldr	r1, [r7, #68]
 8672 00da BA6C     		ldr	r2, [r7, #72]
 8673              		.syntax unified
 8674              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8675 00dc 41E80023 		strex r3, r2, [r1]
 8676              	@ 0 "" 2
 8677              		.thumb
 8678              		.syntax unified
 8679 00e0 3B64     		str	r3, [r7, #64]
 8680              		.loc 2 1124 10 discriminator 1
 8681 00e2 3B6C     		ldr	r3, [r7, #64]
 8682              	.LBE687:
 8683              	.LBE686:
 8684              		.loc 1 3248 3 discriminator 1
 8685 00e4 002B     		cmp	r3, #0
 8686 00e6 E5D1     		bne	.L499
 8687              	.LBE683:
3249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Set the Rx ISR function pointer according to the data word length */
3251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8688              		.loc 1 3251 19
 8689 00e8 FB68     		ldr	r3, [r7, #12]
 8690 00ea 9B68     		ldr	r3, [r3, #8]
 8691              		.loc 1 3251 6
 8692 00ec B3F5805F 		cmp	r3, #4096
 8693 00f0 07D1     		bne	.L500
 8694              		.loc 1 3251 69 discriminator 1
 8695 00f2 FB68     		ldr	r3, [r7, #12]
 8696 00f4 1B69     		ldr	r3, [r3, #16]
 8697              		.loc 1 3251 54 discriminator 1
 8698 00f6 002B     		cmp	r3, #0
 8699 00f8 03D1     		bne	.L500
3252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
3253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxISR = UART_RxISR_16BIT;
 8700              		.loc 1 3253 18
 8701 00fa FB68     		ldr	r3, [r7, #12]
 8702 00fc 214A     		ldr	r2, .L510
 8703 00fe 9A66     		str	r2, [r3, #104]
 8704 0100 02E0     		b	.L501
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 232


 8705              	.L500:
3254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
3255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
3256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
3257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxISR = UART_RxISR_8BIT;
 8706              		.loc 1 3257 18
 8707 0102 FB68     		ldr	r3, [r7, #12]
 8708 0104 204A     		ldr	r2, .L510+4
 8709 0106 9A66     		str	r2, [r3, #104]
 8710              	.L501:
3258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
3259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the UART Parity Error interrupt and Data Register Not Empty interrupt */
3261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->Init.Parity != UART_PARITY_NONE)
 8711              		.loc 1 3261 18
 8712 0108 FB68     		ldr	r3, [r7, #12]
 8713 010a 1B69     		ldr	r3, [r3, #16]
 8714              		.loc 1 3261 6
 8715 010c 002B     		cmp	r3, #0
 8716 010e 19D0     		beq	.L502
 8717              	.L505:
 8718              	.LBB688:
3262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
3263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 8719              		.loc 1 3263 5 discriminator 1
 8720 0110 FB68     		ldr	r3, [r7, #12]
 8721 0112 1B68     		ldr	r3, [r3]
 8722 0114 BB62     		str	r3, [r7, #40]
 8723              	.LBB689:
 8724              	.LBB690:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8725              		.loc 2 1072 4 discriminator 1
 8726 0116 BB6A     		ldr	r3, [r7, #40]
 8727              		.syntax unified
 8728              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8729 0118 53E8003F 		ldrex r3, [r3]
 8730              	@ 0 "" 2
 8731              		.thumb
 8732              		.syntax unified
 8733 011c 7B62     		str	r3, [r7, #36]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8734              		.loc 2 1073 10 discriminator 1
 8735 011e 7B6A     		ldr	r3, [r7, #36]
 8736              	.LBE690:
 8737              	.LBE689:
 8738              		.loc 1 3263 5 discriminator 1
 8739 0120 43F49073 		orr	r3, r3, #288
 8740 0124 FB64     		str	r3, [r7, #76]
 8741 0126 FB68     		ldr	r3, [r7, #12]
 8742 0128 1B68     		ldr	r3, [r3]
 8743 012a 1A46     		mov	r2, r3
 8744 012c FB6C     		ldr	r3, [r7, #76]
 8745 012e 7B63     		str	r3, [r7, #52]
 8746 0130 3A63     		str	r2, [r7, #48]
 8747              	.LBB691:
 8748              	.LBB692:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 233


 8749              		.loc 2 1123 4 discriminator 1
 8750 0132 396B     		ldr	r1, [r7, #48]
 8751 0134 7A6B     		ldr	r2, [r7, #52]
 8752              		.syntax unified
 8753              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8754 0136 41E80023 		strex r3, r2, [r1]
 8755              	@ 0 "" 2
 8756              		.thumb
 8757              		.syntax unified
 8758 013a FB62     		str	r3, [r7, #44]
 8759              		.loc 2 1124 10 discriminator 1
 8760 013c FB6A     		ldr	r3, [r7, #44]
 8761              	.LBE692:
 8762              	.LBE691:
 8763              		.loc 1 3263 5 discriminator 1
 8764 013e 002B     		cmp	r3, #0
 8765 0140 E6D1     		bne	.L505
 8766 0142 18E0     		b	.L506
 8767              	.L502:
 8768              	.LBE688:
 8769              	.LBB693:
3264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
3265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
3266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
3267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE);
 8770              		.loc 1 3267 5 discriminator 1
 8771 0144 FB68     		ldr	r3, [r7, #12]
 8772 0146 1B68     		ldr	r3, [r3]
 8773 0148 7B61     		str	r3, [r7, #20]
 8774              	.LBB694:
 8775              	.LBB695:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8776              		.loc 2 1072 4 discriminator 1
 8777 014a 7B69     		ldr	r3, [r7, #20]
 8778              		.syntax unified
 8779              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8780 014c 53E8003F 		ldrex r3, [r3]
 8781              	@ 0 "" 2
 8782              		.thumb
 8783              		.syntax unified
 8784 0150 3B61     		str	r3, [r7, #16]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8785              		.loc 2 1073 10 discriminator 1
 8786 0152 3B69     		ldr	r3, [r7, #16]
 8787              	.LBE695:
 8788              	.LBE694:
 8789              		.loc 1 3267 5 discriminator 1
 8790 0154 43F02003 		orr	r3, r3, #32
 8791 0158 3B65     		str	r3, [r7, #80]
 8792 015a FB68     		ldr	r3, [r7, #12]
 8793 015c 1B68     		ldr	r3, [r3]
 8794 015e 1A46     		mov	r2, r3
 8795 0160 3B6D     		ldr	r3, [r7, #80]
 8796 0162 3B62     		str	r3, [r7, #32]
 8797 0164 FA61     		str	r2, [r7, #28]
 8798              	.LBB696:
 8799              	.LBB697:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 234


1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8800              		.loc 2 1123 4 discriminator 1
 8801 0166 F969     		ldr	r1, [r7, #28]
 8802 0168 3A6A     		ldr	r2, [r7, #32]
 8803              		.syntax unified
 8804              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8805 016a 41E80023 		strex r3, r2, [r1]
 8806              	@ 0 "" 2
 8807              		.thumb
 8808              		.syntax unified
 8809 016e BB61     		str	r3, [r7, #24]
 8810              		.loc 2 1124 10 discriminator 1
 8811 0170 BB69     		ldr	r3, [r7, #24]
 8812              	.LBE697:
 8813              	.LBE696:
 8814              		.loc 1 3267 5 discriminator 1
 8815 0172 002B     		cmp	r3, #0
 8816 0174 E6D1     		bne	.L502
 8817              	.L506:
 8818              	.LBE693:
3268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
3269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 8819              		.loc 1 3269 10
 8820 0176 0023     		movs	r3, #0
3270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 8821              		.loc 1 3270 1
 8822 0178 1846     		mov	r0, r3
 8823 017a 5C37     		adds	r7, r7, #92
 8824              	.LCFI262:
 8825              		.cfi_def_cfa_offset 4
 8826 017c BD46     		mov	sp, r7
 8827              	.LCFI263:
 8828              		.cfi_def_cfa_register 13
 8829              		@ sp needed
 8830 017e 5DF8047B 		ldr	r7, [sp], #4
 8831              	.LCFI264:
 8832              		.cfi_restore 7
 8833              		.cfi_def_cfa_offset 0
 8834 0182 7047     		bx	lr
 8835              	.L511:
 8836              		.align	2
 8837              	.L510:
 8838 0184 00000000 		.word	UART_RxISR_16BIT
 8839 0188 00000000 		.word	UART_RxISR_8BIT
 8840              		.cfi_endproc
 8841              	.LFE188:
 8843              		.section	.text.UART_Start_Receive_DMA,"ax",%progbits
 8844              		.align	1
 8845              		.global	UART_Start_Receive_DMA
 8846              		.syntax unified
 8847              		.thumb
 8848              		.thumb_func
 8850              	UART_Start_Receive_DMA:
 8851              	.LFB189:
3271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
3273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Start Receive operation in DMA mode.
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 235


3274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note   This function could be called by all HAL UART API providing reception in DMA mode.
3275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note   When calling this function, parameters validity is considered as already checked,
3276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         i.e. Rx State, buffer address, ...
3277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         UART Handle is assumed as Locked.
3278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle.
3279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
3280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
3281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval HAL status
3282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
3283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** HAL_StatusTypeDef UART_Start_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
3284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 8852              		.loc 1 3284 1
 8853              		.cfi_startproc
 8854              		@ args = 0, pretend = 0, frame = 88
 8855              		@ frame_needed = 1, uses_anonymous_args = 0
 8856 0000 80B5     		push	{r7, lr}
 8857              	.LCFI265:
 8858              		.cfi_def_cfa_offset 8
 8859              		.cfi_offset 7, -8
 8860              		.cfi_offset 14, -4
 8861 0002 96B0     		sub	sp, sp, #88
 8862              	.LCFI266:
 8863              		.cfi_def_cfa_offset 96
 8864 0004 00AF     		add	r7, sp, #0
 8865              	.LCFI267:
 8866              		.cfi_def_cfa_register 7
 8867 0006 F860     		str	r0, [r7, #12]
 8868 0008 B960     		str	r1, [r7, #8]
 8869 000a 1346     		mov	r3, r2
 8870 000c FB80     		strh	r3, [r7, #6]	@ movhi
3285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->pRxBuffPtr = pData;
 8871              		.loc 1 3285 21
 8872 000e FB68     		ldr	r3, [r7, #12]
 8873 0010 BA68     		ldr	r2, [r7, #8]
 8874 0012 5A65     		str	r2, [r3, #84]
3286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxXferSize = Size;
 8875              		.loc 1 3286 21
 8876 0014 FB68     		ldr	r3, [r7, #12]
 8877 0016 FA88     		ldrh	r2, [r7, #6]	@ movhi
 8878 0018 A3F85820 		strh	r2, [r3, #88]	@ movhi
3287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 8879              		.loc 1 3288 20
 8880 001c FB68     		ldr	r3, [r7, #12]
 8881 001e 0022     		movs	r2, #0
 8882 0020 C3F88420 		str	r2, [r3, #132]
3289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
 8883              		.loc 1 3289 18
 8884 0024 FB68     		ldr	r3, [r7, #12]
 8885 0026 2222     		movs	r2, #34
 8886 0028 C3F88020 		str	r2, [r3, #128]
3290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 8887              		.loc 1 3291 12
 8888 002c FB68     		ldr	r3, [r7, #12]
 8889 002e 5B6F     		ldr	r3, [r3, #116]
 8890              		.loc 1 3291 6
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 236


 8891 0030 002B     		cmp	r3, #0
 8892 0032 28D0     		beq	.L513
3292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
3293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
3294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 8893              		.loc 1 3294 10
 8894 0034 FB68     		ldr	r3, [r7, #12]
 8895 0036 5B6F     		ldr	r3, [r3, #116]
 8896              		.loc 1 3294 37
 8897 0038 3E4A     		ldr	r2, .L525
 8898 003a DA63     		str	r2, [r3, #60]
3295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
3297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 8899              		.loc 1 3297 10
 8900 003c FB68     		ldr	r3, [r7, #12]
 8901 003e 5B6F     		ldr	r3, [r3, #116]
 8902              		.loc 1 3297 41
 8903 0040 3D4A     		ldr	r2, .L525+4
 8904 0042 1A64     		str	r2, [r3, #64]
3298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the DMA error callback */
3300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
 8905              		.loc 1 3300 10
 8906 0044 FB68     		ldr	r3, [r7, #12]
 8907 0046 5B6F     		ldr	r3, [r3, #116]
 8908              		.loc 1 3300 38
 8909 0048 3C4A     		ldr	r2, .L525+8
 8910 004a DA64     		str	r2, [r3, #76]
3301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Set the DMA abort callback */
3303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
 8911              		.loc 1 3303 10
 8912 004c FB68     		ldr	r3, [r7, #12]
 8913 004e 5B6F     		ldr	r3, [r3, #116]
 8914              		.loc 1 3303 38
 8915 0050 0022     		movs	r2, #0
 8916 0052 1A65     		str	r2, [r3, #80]
3304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the DMA channel */
3306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if (HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pRxBuffPt
 8917              		.loc 1 3306 9
 8918 0054 FB68     		ldr	r3, [r7, #12]
 8919 0056 586F     		ldr	r0, [r3, #116]
 8920              		.loc 1 3306 57
 8921 0058 FB68     		ldr	r3, [r7, #12]
 8922 005a 1B68     		ldr	r3, [r3]
 8923              		.loc 1 3306 51
 8924 005c 2433     		adds	r3, r3, #36
 8925              		.loc 1 3306 9
 8926 005e 1946     		mov	r1, r3
 8927              		.loc 1 3306 89
 8928 0060 FB68     		ldr	r3, [r7, #12]
 8929 0062 5B6D     		ldr	r3, [r3, #84]
 8930              		.loc 1 3306 9
 8931 0064 1A46     		mov	r2, r3
 8932 0066 FB88     		ldrh	r3, [r7, #6]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 237


 8933 0068 FFF7FEFF 		bl	HAL_DMA_Start_IT
 8934 006c 0346     		mov	r3, r0
 8935              		.loc 1 3306 8
 8936 006e 002B     		cmp	r3, #0
 8937 0070 09D0     		beq	.L513
3307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
3308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Set error code to DMA */
3309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->ErrorCode = HAL_UART_ERROR_DMA;
 8938              		.loc 1 3309 24
 8939 0072 FB68     		ldr	r3, [r7, #12]
 8940 0074 1022     		movs	r2, #16
 8941 0076 C3F88420 		str	r2, [r3, #132]
3310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Restore huart->RxState to ready */
3312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 8942              		.loc 1 3312 22
 8943 007a FB68     		ldr	r3, [r7, #12]
 8944 007c 2022     		movs	r2, #32
 8945 007e C3F88020 		str	r2, [r3, #128]
3313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return HAL_ERROR;
 8946              		.loc 1 3314 14
 8947 0082 0123     		movs	r3, #1
 8948 0084 51E0     		b	.L514
 8949              	.L513:
3315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
3316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
3317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the UART Parity Error Interrupt */
3319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->Init.Parity != UART_PARITY_NONE)
 8950              		.loc 1 3319 18
 8951 0086 FB68     		ldr	r3, [r7, #12]
 8952 0088 1B69     		ldr	r3, [r3, #16]
 8953              		.loc 1 3319 6
 8954 008a 002B     		cmp	r3, #0
 8955 008c 18D0     		beq	.L521
 8956              	.L518:
 8957              	.LBB698:
3320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
3321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 8958              		.loc 1 3321 5 discriminator 1
 8959 008e FB68     		ldr	r3, [r7, #12]
 8960 0090 1B68     		ldr	r3, [r3]
 8961 0092 FB63     		str	r3, [r7, #60]
 8962              	.LBB699:
 8963              	.LBB700:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8964              		.loc 2 1072 4 discriminator 1
 8965 0094 FB6B     		ldr	r3, [r7, #60]
 8966              		.syntax unified
 8967              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8968 0096 53E8003F 		ldrex r3, [r3]
 8969              	@ 0 "" 2
 8970              		.thumb
 8971              		.syntax unified
 8972 009a BB63     		str	r3, [r7, #56]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 238


 8973              		.loc 2 1073 10 discriminator 1
 8974 009c BB6B     		ldr	r3, [r7, #56]
 8975              	.LBE700:
 8976              	.LBE699:
 8977              		.loc 1 3321 5 discriminator 1
 8978 009e 43F48073 		orr	r3, r3, #256
 8979 00a2 7B65     		str	r3, [r7, #84]
 8980 00a4 FB68     		ldr	r3, [r7, #12]
 8981 00a6 1B68     		ldr	r3, [r3]
 8982 00a8 1A46     		mov	r2, r3
 8983 00aa 7B6D     		ldr	r3, [r7, #84]
 8984 00ac BB64     		str	r3, [r7, #72]
 8985 00ae 7A64     		str	r2, [r7, #68]
 8986              	.LBB701:
 8987              	.LBB702:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8988              		.loc 2 1123 4 discriminator 1
 8989 00b0 796C     		ldr	r1, [r7, #68]
 8990 00b2 BA6C     		ldr	r2, [r7, #72]
 8991              		.syntax unified
 8992              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8993 00b4 41E80023 		strex r3, r2, [r1]
 8994              	@ 0 "" 2
 8995              		.thumb
 8996              		.syntax unified
 8997 00b8 3B64     		str	r3, [r7, #64]
 8998              		.loc 2 1124 10 discriminator 1
 8999 00ba 3B6C     		ldr	r3, [r7, #64]
 9000              	.LBE702:
 9001              	.LBE701:
 9002              		.loc 1 3321 5 discriminator 1
 9003 00bc 002B     		cmp	r3, #0
 9004 00be E6D1     		bne	.L518
 9005              	.L521:
 9006              	.LBE698:
 9007              	.LBB703:
3322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
3323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 9008              		.loc 1 3325 3 discriminator 1
 9009 00c0 FB68     		ldr	r3, [r7, #12]
 9010 00c2 1B68     		ldr	r3, [r3]
 9011 00c4 0833     		adds	r3, r3, #8
 9012 00c6 BB62     		str	r3, [r7, #40]
 9013              	.LBB704:
 9014              	.LBB705:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9015              		.loc 2 1072 4 discriminator 1
 9016 00c8 BB6A     		ldr	r3, [r7, #40]
 9017              		.syntax unified
 9018              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9019 00ca 53E8003F 		ldrex r3, [r3]
 9020              	@ 0 "" 2
 9021              		.thumb
 9022              		.syntax unified
 9023 00ce 7B62     		str	r3, [r7, #36]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 239


1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9024              		.loc 2 1073 10 discriminator 1
 9025 00d0 7B6A     		ldr	r3, [r7, #36]
 9026              	.LBE705:
 9027              	.LBE704:
 9028              		.loc 1 3325 3 discriminator 1
 9029 00d2 43F00103 		orr	r3, r3, #1
 9030 00d6 3B65     		str	r3, [r7, #80]
 9031 00d8 FB68     		ldr	r3, [r7, #12]
 9032 00da 1B68     		ldr	r3, [r3]
 9033 00dc 0833     		adds	r3, r3, #8
 9034 00de 3A6D     		ldr	r2, [r7, #80]
 9035 00e0 7A63     		str	r2, [r7, #52]
 9036 00e2 3B63     		str	r3, [r7, #48]
 9037              	.LBB706:
 9038              	.LBB707:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9039              		.loc 2 1123 4 discriminator 1
 9040 00e4 396B     		ldr	r1, [r7, #48]
 9041 00e6 7A6B     		ldr	r2, [r7, #52]
 9042              		.syntax unified
 9043              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9044 00e8 41E80023 		strex r3, r2, [r1]
 9045              	@ 0 "" 2
 9046              		.thumb
 9047              		.syntax unified
 9048 00ec FB62     		str	r3, [r7, #44]
 9049              		.loc 2 1124 10 discriminator 1
 9050 00ee FB6A     		ldr	r3, [r7, #44]
 9051              	.LBE707:
 9052              	.LBE706:
 9053              		.loc 1 3325 3 discriminator 1
 9054 00f0 002B     		cmp	r3, #0
 9055 00f2 E5D1     		bne	.L521
 9056              	.L524:
 9057              	.LBE703:
 9058              	.LBB708:
3326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Enable the DMA transfer for the receiver request by setting the DMAR bit
3328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   in the UART CR3 register */
3329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 9059              		.loc 1 3329 3 discriminator 1
 9060 00f4 FB68     		ldr	r3, [r7, #12]
 9061 00f6 1B68     		ldr	r3, [r3]
 9062 00f8 0833     		adds	r3, r3, #8
 9063 00fa 7B61     		str	r3, [r7, #20]
 9064              	.LBB709:
 9065              	.LBB710:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9066              		.loc 2 1072 4 discriminator 1
 9067 00fc 7B69     		ldr	r3, [r7, #20]
 9068              		.syntax unified
 9069              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9070 00fe 53E8003F 		ldrex r3, [r3]
 9071              	@ 0 "" 2
 9072              		.thumb
 9073              		.syntax unified
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 240


 9074 0102 3B61     		str	r3, [r7, #16]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9075              		.loc 2 1073 10 discriminator 1
 9076 0104 3B69     		ldr	r3, [r7, #16]
 9077              	.LBE710:
 9078              	.LBE709:
 9079              		.loc 1 3329 3 discriminator 1
 9080 0106 43F04003 		orr	r3, r3, #64
 9081 010a FB64     		str	r3, [r7, #76]
 9082 010c FB68     		ldr	r3, [r7, #12]
 9083 010e 1B68     		ldr	r3, [r3]
 9084 0110 0833     		adds	r3, r3, #8
 9085 0112 FA6C     		ldr	r2, [r7, #76]
 9086 0114 3A62     		str	r2, [r7, #32]
 9087 0116 FB61     		str	r3, [r7, #28]
 9088              	.LBB711:
 9089              	.LBB712:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9090              		.loc 2 1123 4 discriminator 1
 9091 0118 F969     		ldr	r1, [r7, #28]
 9092 011a 3A6A     		ldr	r2, [r7, #32]
 9093              		.syntax unified
 9094              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9095 011c 41E80023 		strex r3, r2, [r1]
 9096              	@ 0 "" 2
 9097              		.thumb
 9098              		.syntax unified
 9099 0120 BB61     		str	r3, [r7, #24]
 9100              		.loc 2 1124 10 discriminator 1
 9101 0122 BB69     		ldr	r3, [r7, #24]
 9102              	.LBE712:
 9103              	.LBE711:
 9104              		.loc 1 3329 3 discriminator 1
 9105 0124 002B     		cmp	r3, #0
 9106 0126 E5D1     		bne	.L524
 9107              	.LBE708:
3330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   return HAL_OK;
 9108              		.loc 1 3331 10
 9109 0128 0023     		movs	r3, #0
 9110              	.L514:
3332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 9111              		.loc 1 3332 1
 9112 012a 1846     		mov	r0, r3
 9113 012c 5837     		adds	r7, r7, #88
 9114              	.LCFI268:
 9115              		.cfi_def_cfa_offset 8
 9116 012e BD46     		mov	sp, r7
 9117              	.LCFI269:
 9118              		.cfi_def_cfa_register 13
 9119              		@ sp needed
 9120 0130 80BD     		pop	{r7, pc}
 9121              	.L526:
 9122 0132 00BF     		.align	2
 9123              	.L525:
 9124 0134 00000000 		.word	UART_DMAReceiveCplt
 9125 0138 00000000 		.word	UART_DMARxHalfCplt
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 241


 9126 013c 00000000 		.word	UART_DMAError
 9127              		.cfi_endproc
 9128              	.LFE189:
 9130              		.section	.text.UART_EndTxTransfer,"ax",%progbits
 9131              		.align	1
 9132              		.syntax unified
 9133              		.thumb
 9134              		.thumb_func
 9136              	UART_EndTxTransfer:
 9137              	.LFB190:
3333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
3336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
3337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle.
3338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
3339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
3340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
3341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 9138              		.loc 1 3341 1
 9139              		.cfi_startproc
 9140              		@ args = 0, pretend = 0, frame = 32
 9141              		@ frame_needed = 1, uses_anonymous_args = 0
 9142              		@ link register save eliminated.
 9143 0000 80B4     		push	{r7}
 9144              	.LCFI270:
 9145              		.cfi_def_cfa_offset 4
 9146              		.cfi_offset 7, -4
 9147 0002 89B0     		sub	sp, sp, #36
 9148              	.LCFI271:
 9149              		.cfi_def_cfa_offset 40
 9150 0004 00AF     		add	r7, sp, #0
 9151              	.LCFI272:
 9152              		.cfi_def_cfa_register 7
 9153 0006 7860     		str	r0, [r7, #4]
 9154              	.L530:
 9155              	.LBB713:
3342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
3343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 9156              		.loc 1 3343 3 discriminator 1
 9157 0008 7B68     		ldr	r3, [r7, #4]
 9158 000a 1B68     		ldr	r3, [r3]
 9159 000c FB60     		str	r3, [r7, #12]
 9160              	.LBB714:
 9161              	.LBB715:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9162              		.loc 2 1072 4 discriminator 1
 9163 000e FB68     		ldr	r3, [r7, #12]
 9164              		.syntax unified
 9165              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9166 0010 53E8003F 		ldrex r3, [r3]
 9167              	@ 0 "" 2
 9168              		.thumb
 9169              		.syntax unified
 9170 0014 BB60     		str	r3, [r7, #8]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9171              		.loc 2 1073 10 discriminator 1
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 242


 9172 0016 BB68     		ldr	r3, [r7, #8]
 9173              	.LBE715:
 9174              	.LBE714:
 9175              		.loc 1 3343 3 discriminator 1
 9176 0018 23F0C003 		bic	r3, r3, #192
 9177 001c FB61     		str	r3, [r7, #28]
 9178 001e 7B68     		ldr	r3, [r7, #4]
 9179 0020 1B68     		ldr	r3, [r3]
 9180 0022 1A46     		mov	r2, r3
 9181 0024 FB69     		ldr	r3, [r7, #28]
 9182 0026 BB61     		str	r3, [r7, #24]
 9183 0028 7A61     		str	r2, [r7, #20]
 9184              	.LBB716:
 9185              	.LBB717:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9186              		.loc 2 1123 4 discriminator 1
 9187 002a 7969     		ldr	r1, [r7, #20]
 9188 002c BA69     		ldr	r2, [r7, #24]
 9189              		.syntax unified
 9190              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9191 002e 41E80023 		strex r3, r2, [r1]
 9192              	@ 0 "" 2
 9193              		.thumb
 9194              		.syntax unified
 9195 0032 3B61     		str	r3, [r7, #16]
 9196              		.loc 2 1124 10 discriminator 1
 9197 0034 3B69     		ldr	r3, [r7, #16]
 9198              	.LBE717:
 9199              	.LBE716:
 9200              		.loc 1 3343 3 discriminator 1
 9201 0036 002B     		cmp	r3, #0
 9202 0038 E6D1     		bne	.L530
 9203              	.LBE713:
3344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
3346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 9204              		.loc 1 3346 17
 9205 003a 7B68     		ldr	r3, [r7, #4]
 9206 003c 2022     		movs	r2, #32
 9207 003e DA67     		str	r2, [r3, #124]
3347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 9208              		.loc 1 3347 1
 9209 0040 00BF     		nop
 9210 0042 2437     		adds	r7, r7, #36
 9211              	.LCFI273:
 9212              		.cfi_def_cfa_offset 4
 9213 0044 BD46     		mov	sp, r7
 9214              	.LCFI274:
 9215              		.cfi_def_cfa_register 13
 9216              		@ sp needed
 9217 0046 5DF8047B 		ldr	r7, [sp], #4
 9218              	.LCFI275:
 9219              		.cfi_restore 7
 9220              		.cfi_def_cfa_offset 0
 9221 004a 7047     		bx	lr
 9222              		.cfi_endproc
 9223              	.LFE190:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 243


 9225              		.section	.text.UART_EndRxTransfer,"ax",%progbits
 9226              		.align	1
 9227              		.syntax unified
 9228              		.thumb
 9229              		.thumb_func
 9231              	UART_EndRxTransfer:
 9232              	.LFB191:
3348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
3351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
3352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart UART handle.
3353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
3354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
3355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
3356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 9233              		.loc 1 3356 1
 9234              		.cfi_startproc
 9235              		@ args = 0, pretend = 0, frame = 80
 9236              		@ frame_needed = 1, uses_anonymous_args = 0
 9237              		@ link register save eliminated.
 9238 0000 80B4     		push	{r7}
 9239              	.LCFI276:
 9240              		.cfi_def_cfa_offset 4
 9241              		.cfi_offset 7, -4
 9242 0002 95B0     		sub	sp, sp, #84
 9243              	.LCFI277:
 9244              		.cfi_def_cfa_offset 88
 9245 0004 00AF     		add	r7, sp, #0
 9246              	.LCFI278:
 9247              		.cfi_def_cfa_register 7
 9248 0006 7860     		str	r0, [r7, #4]
 9249              	.L534:
 9250              	.LBB718:
3357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 9251              		.loc 1 3358 3 discriminator 1
 9252 0008 7B68     		ldr	r3, [r7, #4]
 9253 000a 1B68     		ldr	r3, [r3]
 9254 000c 7B63     		str	r3, [r7, #52]
 9255              	.LBB719:
 9256              	.LBB720:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9257              		.loc 2 1072 4 discriminator 1
 9258 000e 7B6B     		ldr	r3, [r7, #52]
 9259              		.syntax unified
 9260              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9261 0010 53E8003F 		ldrex r3, [r3]
 9262              	@ 0 "" 2
 9263              		.thumb
 9264              		.syntax unified
 9265 0014 3B63     		str	r3, [r7, #48]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9266              		.loc 2 1073 10 discriminator 1
 9267 0016 3B6B     		ldr	r3, [r7, #48]
 9268              	.LBE720:
 9269              	.LBE719:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 244


 9270              		.loc 1 3358 3 discriminator 1
 9271 0018 23F49073 		bic	r3, r3, #288
 9272 001c FB64     		str	r3, [r7, #76]
 9273 001e 7B68     		ldr	r3, [r7, #4]
 9274 0020 1B68     		ldr	r3, [r3]
 9275 0022 1A46     		mov	r2, r3
 9276 0024 FB6C     		ldr	r3, [r7, #76]
 9277 0026 3B64     		str	r3, [r7, #64]
 9278 0028 FA63     		str	r2, [r7, #60]
 9279              	.LBB721:
 9280              	.LBB722:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9281              		.loc 2 1123 4 discriminator 1
 9282 002a F96B     		ldr	r1, [r7, #60]
 9283 002c 3A6C     		ldr	r2, [r7, #64]
 9284              		.syntax unified
 9285              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9286 002e 41E80023 		strex r3, r2, [r1]
 9287              	@ 0 "" 2
 9288              		.thumb
 9289              		.syntax unified
 9290 0032 BB63     		str	r3, [r7, #56]
 9291              		.loc 2 1124 10 discriminator 1
 9292 0034 BB6B     		ldr	r3, [r7, #56]
 9293              	.LBE722:
 9294              	.LBE721:
 9295              		.loc 1 3358 3 discriminator 1
 9296 0036 002B     		cmp	r3, #0
 9297 0038 E6D1     		bne	.L534
 9298              	.L537:
 9299              	.LBE718:
 9300              	.LBB723:
3359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 9301              		.loc 1 3359 3 discriminator 1
 9302 003a 7B68     		ldr	r3, [r7, #4]
 9303 003c 1B68     		ldr	r3, [r3]
 9304 003e 0833     		adds	r3, r3, #8
 9305 0040 3B62     		str	r3, [r7, #32]
 9306              	.LBB724:
 9307              	.LBB725:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9308              		.loc 2 1072 4 discriminator 1
 9309 0042 3B6A     		ldr	r3, [r7, #32]
 9310              		.syntax unified
 9311              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9312 0044 53E8003F 		ldrex r3, [r3]
 9313              	@ 0 "" 2
 9314              		.thumb
 9315              		.syntax unified
 9316 0048 FB61     		str	r3, [r7, #28]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9317              		.loc 2 1073 10 discriminator 1
 9318 004a FB69     		ldr	r3, [r7, #28]
 9319              	.LBE725:
 9320              	.LBE724:
 9321              		.loc 1 3359 3 discriminator 1
 9322 004c 23F00103 		bic	r3, r3, #1
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 245


 9323 0050 BB64     		str	r3, [r7, #72]
 9324 0052 7B68     		ldr	r3, [r7, #4]
 9325 0054 1B68     		ldr	r3, [r3]
 9326 0056 0833     		adds	r3, r3, #8
 9327 0058 BA6C     		ldr	r2, [r7, #72]
 9328 005a FA62     		str	r2, [r7, #44]
 9329 005c BB62     		str	r3, [r7, #40]
 9330              	.LBB726:
 9331              	.LBB727:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9332              		.loc 2 1123 4 discriminator 1
 9333 005e B96A     		ldr	r1, [r7, #40]
 9334 0060 FA6A     		ldr	r2, [r7, #44]
 9335              		.syntax unified
 9336              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9337 0062 41E80023 		strex r3, r2, [r1]
 9338              	@ 0 "" 2
 9339              		.thumb
 9340              		.syntax unified
 9341 0066 7B62     		str	r3, [r7, #36]
 9342              		.loc 2 1124 10 discriminator 1
 9343 0068 7B6A     		ldr	r3, [r7, #36]
 9344              	.LBE727:
 9345              	.LBE726:
 9346              		.loc 1 3359 3 discriminator 1
 9347 006a 002B     		cmp	r3, #0
 9348 006c E5D1     		bne	.L537
 9349              	.LBE723:
3360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
3362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 9350              		.loc 1 3362 12
 9351 006e 7B68     		ldr	r3, [r7, #4]
 9352 0070 1B6E     		ldr	r3, [r3, #96]
 9353              		.loc 1 3362 6
 9354 0072 012B     		cmp	r3, #1
 9355 0074 18D1     		bne	.L538
 9356              	.L541:
 9357              	.LBB728:
3363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
3364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 9358              		.loc 1 3364 5 discriminator 1
 9359 0076 7B68     		ldr	r3, [r7, #4]
 9360 0078 1B68     		ldr	r3, [r3]
 9361 007a FB60     		str	r3, [r7, #12]
 9362              	.LBB729:
 9363              	.LBB730:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9364              		.loc 2 1072 4 discriminator 1
 9365 007c FB68     		ldr	r3, [r7, #12]
 9366              		.syntax unified
 9367              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9368 007e 53E8003F 		ldrex r3, [r3]
 9369              	@ 0 "" 2
 9370              		.thumb
 9371              		.syntax unified
 9372 0082 BB60     		str	r3, [r7, #8]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 246


1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9373              		.loc 2 1073 10 discriminator 1
 9374 0084 BB68     		ldr	r3, [r7, #8]
 9375              	.LBE730:
 9376              	.LBE729:
 9377              		.loc 1 3364 5 discriminator 1
 9378 0086 23F01003 		bic	r3, r3, #16
 9379 008a 7B64     		str	r3, [r7, #68]
 9380 008c 7B68     		ldr	r3, [r7, #4]
 9381 008e 1B68     		ldr	r3, [r3]
 9382 0090 1A46     		mov	r2, r3
 9383 0092 7B6C     		ldr	r3, [r7, #68]
 9384 0094 BB61     		str	r3, [r7, #24]
 9385 0096 7A61     		str	r2, [r7, #20]
 9386              	.LBB731:
 9387              	.LBB732:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9388              		.loc 2 1123 4 discriminator 1
 9389 0098 7969     		ldr	r1, [r7, #20]
 9390 009a BA69     		ldr	r2, [r7, #24]
 9391              		.syntax unified
 9392              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9393 009c 41E80023 		strex r3, r2, [r1]
 9394              	@ 0 "" 2
 9395              		.thumb
 9396              		.syntax unified
 9397 00a0 3B61     		str	r3, [r7, #16]
 9398              		.loc 2 1124 10 discriminator 1
 9399 00a2 3B69     		ldr	r3, [r7, #16]
 9400              	.LBE732:
 9401              	.LBE731:
 9402              		.loc 1 3364 5 discriminator 1
 9403 00a4 002B     		cmp	r3, #0
 9404 00a6 E6D1     		bne	.L541
 9405              	.L538:
 9406              	.LBE728:
3365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
3366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
3368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 9407              		.loc 1 3368 18
 9408 00a8 7B68     		ldr	r3, [r7, #4]
 9409 00aa 2022     		movs	r2, #32
 9410 00ac C3F88020 		str	r2, [r3, #128]
3369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 9411              		.loc 1 3369 24
 9412 00b0 7B68     		ldr	r3, [r7, #4]
 9413 00b2 0022     		movs	r2, #0
 9414 00b4 1A66     		str	r2, [r3, #96]
3370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Reset RxIsr function pointer */
3372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxISR = NULL;
 9415              		.loc 1 3372 16
 9416 00b6 7B68     		ldr	r3, [r7, #4]
 9417 00b8 0022     		movs	r2, #0
 9418 00ba 9A66     		str	r2, [r3, #104]
3373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 247


 9419              		.loc 1 3373 1
 9420 00bc 00BF     		nop
 9421 00be 5437     		adds	r7, r7, #84
 9422              	.LCFI279:
 9423              		.cfi_def_cfa_offset 4
 9424 00c0 BD46     		mov	sp, r7
 9425              	.LCFI280:
 9426              		.cfi_def_cfa_register 13
 9427              		@ sp needed
 9428 00c2 5DF8047B 		ldr	r7, [sp], #4
 9429              	.LCFI281:
 9430              		.cfi_restore 7
 9431              		.cfi_def_cfa_offset 0
 9432 00c6 7047     		bx	lr
 9433              		.cfi_endproc
 9434              	.LFE191:
 9436              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 9437              		.align	1
 9438              		.syntax unified
 9439              		.thumb
 9440              		.thumb_func
 9442              	UART_DMATransmitCplt:
 9443              	.LFB192:
3374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
3377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
3378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param hdma DMA handle.
3379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
3380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
3381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
3382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 9444              		.loc 1 3382 1
 9445              		.cfi_startproc
 9446              		@ args = 0, pretend = 0, frame = 64
 9447              		@ frame_needed = 1, uses_anonymous_args = 0
 9448 0000 80B5     		push	{r7, lr}
 9449              	.LCFI282:
 9450              		.cfi_def_cfa_offset 8
 9451              		.cfi_offset 7, -8
 9452              		.cfi_offset 14, -4
 9453 0002 90B0     		sub	sp, sp, #64
 9454              	.LCFI283:
 9455              		.cfi_def_cfa_offset 72
 9456 0004 00AF     		add	r7, sp, #0
 9457              	.LCFI284:
 9458              		.cfi_def_cfa_register 7
 9459 0006 7860     		str	r0, [r7, #4]
3383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 9460              		.loc 1 3383 23
 9461 0008 7B68     		ldr	r3, [r7, #4]
 9462 000a 9B6B     		ldr	r3, [r3, #56]
 9463 000c FB63     		str	r3, [r7, #60]
3384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* DMA Normal mode */
3386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (hdma->Init.Mode != DMA_CIRCULAR)
 9464              		.loc 1 3386 17
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 248


 9465 000e 7B68     		ldr	r3, [r7, #4]
 9466 0010 DB69     		ldr	r3, [r3, #28]
 9467              		.loc 1 3386 6
 9468 0012 B3F5807F 		cmp	r3, #256
 9469 0016 37D0     		beq	.L543
3387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
3388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferCount = 0U;
 9470              		.loc 1 3388 24
 9471 0018 FB6B     		ldr	r3, [r7, #60]
 9472 001a 0022     		movs	r2, #0
 9473 001c A3F85220 		strh	r2, [r3, #82]	@ movhi
 9474              	.L546:
 9475              	.LBB733:
3389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
3391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        in the UART CR3 register */
3392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 9476              		.loc 1 3392 5 discriminator 1
 9477 0020 FB6B     		ldr	r3, [r7, #60]
 9478 0022 1B68     		ldr	r3, [r3]
 9479 0024 0833     		adds	r3, r3, #8
 9480 0026 7B62     		str	r3, [r7, #36]
 9481              	.LBB734:
 9482              	.LBB735:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9483              		.loc 2 1072 4 discriminator 1
 9484 0028 7B6A     		ldr	r3, [r7, #36]
 9485              		.syntax unified
 9486              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9487 002a 53E8003F 		ldrex r3, [r3]
 9488              	@ 0 "" 2
 9489              		.thumb
 9490              		.syntax unified
 9491 002e 3B62     		str	r3, [r7, #32]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9492              		.loc 2 1073 10 discriminator 1
 9493 0030 3B6A     		ldr	r3, [r7, #32]
 9494              	.LBE735:
 9495              	.LBE734:
 9496              		.loc 1 3392 5 discriminator 1
 9497 0032 23F08003 		bic	r3, r3, #128
 9498 0036 BB63     		str	r3, [r7, #56]
 9499 0038 FB6B     		ldr	r3, [r7, #60]
 9500 003a 1B68     		ldr	r3, [r3]
 9501 003c 0833     		adds	r3, r3, #8
 9502 003e BA6B     		ldr	r2, [r7, #56]
 9503 0040 3A63     		str	r2, [r7, #48]
 9504 0042 FB62     		str	r3, [r7, #44]
 9505              	.LBB736:
 9506              	.LBB737:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9507              		.loc 2 1123 4 discriminator 1
 9508 0044 F96A     		ldr	r1, [r7, #44]
 9509 0046 3A6B     		ldr	r2, [r7, #48]
 9510              		.syntax unified
 9511              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9512 0048 41E80023 		strex r3, r2, [r1]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 249


 9513              	@ 0 "" 2
 9514              		.thumb
 9515              		.syntax unified
 9516 004c BB62     		str	r3, [r7, #40]
 9517              		.loc 2 1124 10 discriminator 1
 9518 004e BB6A     		ldr	r3, [r7, #40]
 9519              	.LBE737:
 9520              	.LBE736:
 9521              		.loc 1 3392 5 discriminator 1
 9522 0050 002B     		cmp	r3, #0
 9523 0052 E5D1     		bne	.L546
 9524              	.L549:
 9525              	.LBE733:
 9526              	.LBB738:
3393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
3395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 9527              		.loc 1 3395 5 discriminator 1
 9528 0054 FB6B     		ldr	r3, [r7, #60]
 9529 0056 1B68     		ldr	r3, [r3]
 9530 0058 3B61     		str	r3, [r7, #16]
 9531              	.LBB739:
 9532              	.LBB740:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9533              		.loc 2 1072 4 discriminator 1
 9534 005a 3B69     		ldr	r3, [r7, #16]
 9535              		.syntax unified
 9536              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9537 005c 53E8003F 		ldrex r3, [r3]
 9538              	@ 0 "" 2
 9539              		.thumb
 9540              		.syntax unified
 9541 0060 FB60     		str	r3, [r7, #12]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9542              		.loc 2 1073 10 discriminator 1
 9543 0062 FB68     		ldr	r3, [r7, #12]
 9544              	.LBE740:
 9545              	.LBE739:
 9546              		.loc 1 3395 5 discriminator 1
 9547 0064 43F04003 		orr	r3, r3, #64
 9548 0068 7B63     		str	r3, [r7, #52]
 9549 006a FB6B     		ldr	r3, [r7, #60]
 9550 006c 1B68     		ldr	r3, [r3]
 9551 006e 1A46     		mov	r2, r3
 9552 0070 7B6B     		ldr	r3, [r7, #52]
 9553 0072 FB61     		str	r3, [r7, #28]
 9554 0074 BA61     		str	r2, [r7, #24]
 9555              	.LBB741:
 9556              	.LBB742:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9557              		.loc 2 1123 4 discriminator 1
 9558 0076 B969     		ldr	r1, [r7, #24]
 9559 0078 FA69     		ldr	r2, [r7, #28]
 9560              		.syntax unified
 9561              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9562 007a 41E80023 		strex r3, r2, [r1]
 9563              	@ 0 "" 2
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 250


 9564              		.thumb
 9565              		.syntax unified
 9566 007e 7B61     		str	r3, [r7, #20]
 9567              		.loc 2 1124 10 discriminator 1
 9568 0080 7B69     		ldr	r3, [r7, #20]
 9569              	.LBE742:
 9570              	.LBE741:
 9571              		.loc 1 3395 5 discriminator 1
 9572 0082 002B     		cmp	r3, #0
 9573 0084 E6D1     		bne	.L549
 9574              	.LBE738:
3396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
3397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* DMA Circular mode */
3398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
3399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
3400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /*Call registered Tx complete callback*/
3402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxCpltCallback(huart);
3403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #else
3404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /*Call legacy weak Tx complete callback*/
3405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
3406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
3408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 9575              		.loc 1 3408 1
 9576 0086 02E0     		b	.L551
 9577              	.L543:
3405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 9578              		.loc 1 3405 5
 9579 0088 F86B     		ldr	r0, [r7, #60]
 9580 008a FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 9581              	.L551:
 9582              		.loc 1 3408 1
 9583 008e 00BF     		nop
 9584 0090 4037     		adds	r7, r7, #64
 9585              	.LCFI285:
 9586              		.cfi_def_cfa_offset 8
 9587 0092 BD46     		mov	sp, r7
 9588              	.LCFI286:
 9589              		.cfi_def_cfa_register 13
 9590              		@ sp needed
 9591 0094 80BD     		pop	{r7, pc}
 9592              		.cfi_endproc
 9593              	.LFE192:
 9595              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 9596              		.align	1
 9597              		.syntax unified
 9598              		.thumb
 9599              		.thumb_func
 9601              	UART_DMATxHalfCplt:
 9602              	.LFB193:
3409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
3411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
3412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param hdma DMA handle.
3413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
3414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 251


3415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
3416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 9603              		.loc 1 3416 1
 9604              		.cfi_startproc
 9605              		@ args = 0, pretend = 0, frame = 16
 9606              		@ frame_needed = 1, uses_anonymous_args = 0
 9607 0000 80B5     		push	{r7, lr}
 9608              	.LCFI287:
 9609              		.cfi_def_cfa_offset 8
 9610              		.cfi_offset 7, -8
 9611              		.cfi_offset 14, -4
 9612 0002 84B0     		sub	sp, sp, #16
 9613              	.LCFI288:
 9614              		.cfi_def_cfa_offset 24
 9615 0004 00AF     		add	r7, sp, #0
 9616              	.LCFI289:
 9617              		.cfi_def_cfa_register 7
 9618 0006 7860     		str	r0, [r7, #4]
3417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 9619              		.loc 1 3417 23
 9620 0008 7B68     		ldr	r3, [r7, #4]
 9621 000a 9B6B     		ldr	r3, [r3, #56]
 9622 000c FB60     		str	r3, [r7, #12]
3418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /*Call registered Tx Half complete callback*/
3421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->TxHalfCpltCallback(huart);
3422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #else
3423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /*Call legacy weak Tx Half complete callback*/
3424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
 9623              		.loc 1 3424 3
 9624 000e F868     		ldr	r0, [r7, #12]
 9625 0010 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
3425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 9626              		.loc 1 3426 1
 9627 0014 00BF     		nop
 9628 0016 1037     		adds	r7, r7, #16
 9629              	.LCFI290:
 9630              		.cfi_def_cfa_offset 8
 9631 0018 BD46     		mov	sp, r7
 9632              	.LCFI291:
 9633              		.cfi_def_cfa_register 13
 9634              		@ sp needed
 9635 001a 80BD     		pop	{r7, pc}
 9636              		.cfi_endproc
 9637              	.LFE193:
 9639              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 9640              		.align	1
 9641              		.syntax unified
 9642              		.thumb
 9643              		.thumb_func
 9645              	UART_DMAReceiveCplt:
 9646              	.LFB194:
3427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
3429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 252


3430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param hdma DMA handle.
3431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
3432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
3433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
3434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 9647              		.loc 1 3434 1
 9648              		.cfi_startproc
 9649              		@ args = 0, pretend = 0, frame = 112
 9650              		@ frame_needed = 1, uses_anonymous_args = 0
 9651 0000 80B5     		push	{r7, lr}
 9652              	.LCFI292:
 9653              		.cfi_def_cfa_offset 8
 9654              		.cfi_offset 7, -8
 9655              		.cfi_offset 14, -4
 9656 0002 9CB0     		sub	sp, sp, #112
 9657              	.LCFI293:
 9658              		.cfi_def_cfa_offset 120
 9659 0004 00AF     		add	r7, sp, #0
 9660              	.LCFI294:
 9661              		.cfi_def_cfa_register 7
 9662 0006 7860     		str	r0, [r7, #4]
3435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 9663              		.loc 1 3435 23
 9664 0008 7B68     		ldr	r3, [r7, #4]
 9665 000a 9B6B     		ldr	r3, [r3, #56]
 9666 000c FB66     		str	r3, [r7, #108]
3436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* DMA Normal mode */
3438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (hdma->Init.Mode != DMA_CIRCULAR)
 9667              		.loc 1 3438 17
 9668 000e 7B68     		ldr	r3, [r7, #4]
 9669 0010 DB69     		ldr	r3, [r3, #28]
 9670              		.loc 1 3438 6
 9671 0012 B3F5807F 		cmp	r3, #256
 9672 0016 71D0     		beq	.L554
3439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
3440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferCount = 0U;
 9673              		.loc 1 3440 24
 9674 0018 FB6E     		ldr	r3, [r7, #108]
 9675 001a 0022     		movs	r2, #0
 9676 001c A3F85A20 		strh	r2, [r3, #90]	@ movhi
 9677              	.L557:
 9678              	.LBB743:
3441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
3443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 9679              		.loc 1 3443 5 discriminator 1
 9680 0020 FB6E     		ldr	r3, [r7, #108]
 9681 0022 1B68     		ldr	r3, [r3]
 9682 0024 FB64     		str	r3, [r7, #76]
 9683              	.LBB744:
 9684              	.LBB745:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9685              		.loc 2 1072 4 discriminator 1
 9686 0026 FB6C     		ldr	r3, [r7, #76]
 9687              		.syntax unified
 9688              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 253


 9689 0028 53E8003F 		ldrex r3, [r3]
 9690              	@ 0 "" 2
 9691              		.thumb
 9692              		.syntax unified
 9693 002c BB64     		str	r3, [r7, #72]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9694              		.loc 2 1073 10 discriminator 1
 9695 002e BB6C     		ldr	r3, [r7, #72]
 9696              	.LBE745:
 9697              	.LBE744:
 9698              		.loc 1 3443 5 discriminator 1
 9699 0030 23F48073 		bic	r3, r3, #256
 9700 0034 BB66     		str	r3, [r7, #104]
 9701 0036 FB6E     		ldr	r3, [r7, #108]
 9702 0038 1B68     		ldr	r3, [r3]
 9703 003a 1A46     		mov	r2, r3
 9704 003c BB6E     		ldr	r3, [r7, #104]
 9705 003e BB65     		str	r3, [r7, #88]
 9706 0040 7A65     		str	r2, [r7, #84]
 9707              	.LBB746:
 9708              	.LBB747:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9709              		.loc 2 1123 4 discriminator 1
 9710 0042 796D     		ldr	r1, [r7, #84]
 9711 0044 BA6D     		ldr	r2, [r7, #88]
 9712              		.syntax unified
 9713              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9714 0046 41E80023 		strex r3, r2, [r1]
 9715              	@ 0 "" 2
 9716              		.thumb
 9717              		.syntax unified
 9718 004a 3B65     		str	r3, [r7, #80]
 9719              		.loc 2 1124 10 discriminator 1
 9720 004c 3B6D     		ldr	r3, [r7, #80]
 9721              	.LBE747:
 9722              	.LBE746:
 9723              		.loc 1 3443 5 discriminator 1
 9724 004e 002B     		cmp	r3, #0
 9725 0050 E6D1     		bne	.L557
 9726              	.L560:
 9727              	.LBE743:
 9728              	.LBB748:
3444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 9729              		.loc 1 3444 5 discriminator 1
 9730 0052 FB6E     		ldr	r3, [r7, #108]
 9731 0054 1B68     		ldr	r3, [r3]
 9732 0056 0833     		adds	r3, r3, #8
 9733 0058 BB63     		str	r3, [r7, #56]
 9734              	.LBB749:
 9735              	.LBB750:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9736              		.loc 2 1072 4 discriminator 1
 9737 005a BB6B     		ldr	r3, [r7, #56]
 9738              		.syntax unified
 9739              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9740 005c 53E8003F 		ldrex r3, [r3]
 9741              	@ 0 "" 2
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 254


 9742              		.thumb
 9743              		.syntax unified
 9744 0060 7B63     		str	r3, [r7, #52]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9745              		.loc 2 1073 10 discriminator 1
 9746 0062 7B6B     		ldr	r3, [r7, #52]
 9747              	.LBE750:
 9748              	.LBE749:
 9749              		.loc 1 3444 5 discriminator 1
 9750 0064 23F00103 		bic	r3, r3, #1
 9751 0068 7B66     		str	r3, [r7, #100]
 9752 006a FB6E     		ldr	r3, [r7, #108]
 9753 006c 1B68     		ldr	r3, [r3]
 9754 006e 0833     		adds	r3, r3, #8
 9755 0070 7A6E     		ldr	r2, [r7, #100]
 9756 0072 7A64     		str	r2, [r7, #68]
 9757 0074 3B64     		str	r3, [r7, #64]
 9758              	.LBB751:
 9759              	.LBB752:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9760              		.loc 2 1123 4 discriminator 1
 9761 0076 396C     		ldr	r1, [r7, #64]
 9762 0078 7A6C     		ldr	r2, [r7, #68]
 9763              		.syntax unified
 9764              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9765 007a 41E80023 		strex r3, r2, [r1]
 9766              	@ 0 "" 2
 9767              		.thumb
 9768              		.syntax unified
 9769 007e FB63     		str	r3, [r7, #60]
 9770              		.loc 2 1124 10 discriminator 1
 9771 0080 FB6B     		ldr	r3, [r7, #60]
 9772              	.LBE752:
 9773              	.LBE751:
 9774              		.loc 1 3444 5 discriminator 1
 9775 0082 002B     		cmp	r3, #0
 9776 0084 E5D1     		bne	.L560
 9777              	.L563:
 9778              	.LBE748:
 9779              	.LBB753:
3445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
3447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****        in the UART CR3 register */
3448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 9780              		.loc 1 3448 5 discriminator 1
 9781 0086 FB6E     		ldr	r3, [r7, #108]
 9782 0088 1B68     		ldr	r3, [r3]
 9783 008a 0833     		adds	r3, r3, #8
 9784 008c 7B62     		str	r3, [r7, #36]
 9785              	.LBB754:
 9786              	.LBB755:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9787              		.loc 2 1072 4 discriminator 1
 9788 008e 7B6A     		ldr	r3, [r7, #36]
 9789              		.syntax unified
 9790              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9791 0090 53E8003F 		ldrex r3, [r3]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 255


 9792              	@ 0 "" 2
 9793              		.thumb
 9794              		.syntax unified
 9795 0094 3B62     		str	r3, [r7, #32]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9796              		.loc 2 1073 10 discriminator 1
 9797 0096 3B6A     		ldr	r3, [r7, #32]
 9798              	.LBE755:
 9799              	.LBE754:
 9800              		.loc 1 3448 5 discriminator 1
 9801 0098 23F04003 		bic	r3, r3, #64
 9802 009c 3B66     		str	r3, [r7, #96]
 9803 009e FB6E     		ldr	r3, [r7, #108]
 9804 00a0 1B68     		ldr	r3, [r3]
 9805 00a2 0833     		adds	r3, r3, #8
 9806 00a4 3A6E     		ldr	r2, [r7, #96]
 9807 00a6 3A63     		str	r2, [r7, #48]
 9808 00a8 FB62     		str	r3, [r7, #44]
 9809              	.LBB756:
 9810              	.LBB757:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9811              		.loc 2 1123 4 discriminator 1
 9812 00aa F96A     		ldr	r1, [r7, #44]
 9813 00ac 3A6B     		ldr	r2, [r7, #48]
 9814              		.syntax unified
 9815              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9816 00ae 41E80023 		strex r3, r2, [r1]
 9817              	@ 0 "" 2
 9818              		.thumb
 9819              		.syntax unified
 9820 00b2 BB62     		str	r3, [r7, #40]
 9821              		.loc 2 1124 10 discriminator 1
 9822 00b4 BB6A     		ldr	r3, [r7, #40]
 9823              	.LBE757:
 9824              	.LBE756:
 9825              		.loc 1 3448 5 discriminator 1
 9826 00b6 002B     		cmp	r3, #0
 9827 00b8 E5D1     		bne	.L563
 9828              	.LBE753:
3449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
3451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 9829              		.loc 1 3451 20
 9830 00ba FB6E     		ldr	r3, [r7, #108]
 9831 00bc 2022     		movs	r2, #32
 9832 00be C3F88020 		str	r2, [r3, #128]
3452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* If Reception till IDLE event has been selected, Disable IDLE Interrupt */
3454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 9833              		.loc 1 3454 14
 9834 00c2 FB6E     		ldr	r3, [r7, #108]
 9835 00c4 1B6E     		ldr	r3, [r3, #96]
 9836              		.loc 1 3454 8
 9837 00c6 012B     		cmp	r3, #1
 9838 00c8 18D1     		bne	.L554
 9839              	.L566:
 9840              	.LBB758:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 256


3455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
3456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 9841              		.loc 1 3456 7 discriminator 1
 9842 00ca FB6E     		ldr	r3, [r7, #108]
 9843 00cc 1B68     		ldr	r3, [r3]
 9844 00ce 3B61     		str	r3, [r7, #16]
 9845              	.LBB759:
 9846              	.LBB760:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9847              		.loc 2 1072 4 discriminator 1
 9848 00d0 3B69     		ldr	r3, [r7, #16]
 9849              		.syntax unified
 9850              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9851 00d2 53E8003F 		ldrex r3, [r3]
 9852              	@ 0 "" 2
 9853              		.thumb
 9854              		.syntax unified
 9855 00d6 FB60     		str	r3, [r7, #12]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9856              		.loc 2 1073 10 discriminator 1
 9857 00d8 FB68     		ldr	r3, [r7, #12]
 9858              	.LBE760:
 9859              	.LBE759:
 9860              		.loc 1 3456 7 discriminator 1
 9861 00da 23F01003 		bic	r3, r3, #16
 9862 00de FB65     		str	r3, [r7, #92]
 9863 00e0 FB6E     		ldr	r3, [r7, #108]
 9864 00e2 1B68     		ldr	r3, [r3]
 9865 00e4 1A46     		mov	r2, r3
 9866 00e6 FB6D     		ldr	r3, [r7, #92]
 9867 00e8 FB61     		str	r3, [r7, #28]
 9868 00ea BA61     		str	r2, [r7, #24]
 9869              	.LBB761:
 9870              	.LBB762:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9871              		.loc 2 1123 4 discriminator 1
 9872 00ec B969     		ldr	r1, [r7, #24]
 9873 00ee FA69     		ldr	r2, [r7, #28]
 9874              		.syntax unified
 9875              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9876 00f0 41E80023 		strex r3, r2, [r1]
 9877              	@ 0 "" 2
 9878              		.thumb
 9879              		.syntax unified
 9880 00f4 7B61     		str	r3, [r7, #20]
 9881              		.loc 2 1124 10 discriminator 1
 9882 00f6 7B69     		ldr	r3, [r7, #20]
 9883              	.LBE762:
 9884              	.LBE761:
 9885              		.loc 1 3456 7 discriminator 1
 9886 00f8 002B     		cmp	r3, #0
 9887 00fa E6D1     		bne	.L566
 9888              	.L554:
 9889              	.LBE758:
3457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
3458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
3459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 257


3460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Initialize type of RxEvent that correspond to RxEvent callback execution;
3461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      In this case, Rx Event type is Transfer Complete */
3462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
 9890              		.loc 1 3462 22
 9891 00fc FB6E     		ldr	r3, [r7, #108]
 9892 00fe 0022     		movs	r2, #0
 9893 0100 5A66     		str	r2, [r3, #100]
3463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check current reception Mode :
3465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      If Reception till IDLE event has been selected : use Rx Event callback */
3466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 9894              		.loc 1 3466 12
 9895 0102 FB6E     		ldr	r3, [r7, #108]
 9896 0104 1B6E     		ldr	r3, [r3, #96]
 9897              		.loc 1 3466 6
 9898 0106 012B     		cmp	r3, #1
 9899 0108 07D1     		bne	.L567
3467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
3468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /*Call registered Rx Event callback*/
3470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxEventCallback(huart, huart->RxXferSize);
3471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #else
3472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /*Call legacy weak Rx Event callback*/
3473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 9900              		.loc 1 3473 5
 9901 010a FB6E     		ldr	r3, [r7, #108]
 9902 010c B3F85830 		ldrh	r3, [r3, #88]
 9903 0110 1946     		mov	r1, r3
 9904 0112 F86E     		ldr	r0, [r7, #108]
 9905 0114 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
3474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
3476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
3477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
3478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* In other cases : use Rx Complete callback */
3479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /*Call registered Rx complete callback*/
3481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxCpltCallback(huart);
3482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #else
3483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /*Call legacy weak Rx complete callback*/
3484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UART_RxCpltCallback(huart);
3485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
3487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 9906              		.loc 1 3487 1
 9907 0118 02E0     		b	.L569
 9908              	.L567:
3484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 9909              		.loc 1 3484 5
 9910 011a F86E     		ldr	r0, [r7, #108]
 9911 011c FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 9912              	.L569:
 9913              		.loc 1 3487 1
 9914 0120 00BF     		nop
 9915 0122 7037     		adds	r7, r7, #112
 9916              	.LCFI295:
 9917              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 258


 9918 0124 BD46     		mov	sp, r7
 9919              	.LCFI296:
 9920              		.cfi_def_cfa_register 13
 9921              		@ sp needed
 9922 0126 80BD     		pop	{r7, pc}
 9923              		.cfi_endproc
 9924              	.LFE194:
 9926              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 9927              		.align	1
 9928              		.syntax unified
 9929              		.thumb
 9930              		.thumb_func
 9932              	UART_DMARxHalfCplt:
 9933              	.LFB195:
3488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
3490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
3491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param hdma DMA handle.
3492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
3493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
3494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
3495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 9934              		.loc 1 3495 1
 9935              		.cfi_startproc
 9936              		@ args = 0, pretend = 0, frame = 16
 9937              		@ frame_needed = 1, uses_anonymous_args = 0
 9938 0000 80B5     		push	{r7, lr}
 9939              	.LCFI297:
 9940              		.cfi_def_cfa_offset 8
 9941              		.cfi_offset 7, -8
 9942              		.cfi_offset 14, -4
 9943 0002 84B0     		sub	sp, sp, #16
 9944              	.LCFI298:
 9945              		.cfi_def_cfa_offset 24
 9946 0004 00AF     		add	r7, sp, #0
 9947              	.LCFI299:
 9948              		.cfi_def_cfa_register 7
 9949 0006 7860     		str	r0, [r7, #4]
3496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 9950              		.loc 1 3496 23
 9951 0008 7B68     		ldr	r3, [r7, #4]
 9952 000a 9B6B     		ldr	r3, [r3, #56]
 9953 000c FB60     		str	r3, [r7, #12]
3497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Initialize type of RxEvent that correspond to RxEvent callback execution;
3499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      In this case, Rx Event type is Half Transfer */
3500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_HT;
 9954              		.loc 1 3500 22
 9955 000e FB68     		ldr	r3, [r7, #12]
 9956 0010 0122     		movs	r2, #1
 9957 0012 5A66     		str	r2, [r3, #100]
3501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check current reception Mode :
3503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****      If Reception till IDLE event has been selected : use Rx Event callback */
3504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 9958              		.loc 1 3504 12
 9959 0014 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 259


 9960 0016 1B6E     		ldr	r3, [r3, #96]
 9961              		.loc 1 3504 6
 9962 0018 012B     		cmp	r3, #1
 9963 001a 09D1     		bne	.L571
3505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
3506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /*Call registered Rx Event callback*/
3508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxEventCallback(huart, huart->RxXferSize / 2U);
3509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #else
3510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /*Call legacy weak Rx Event callback*/
3511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize / 2U);
 9964              		.loc 1 3511 44
 9965 001c FB68     		ldr	r3, [r7, #12]
 9966 001e B3F85830 		ldrh	r3, [r3, #88]
 9967              		.loc 1 3511 5
 9968 0022 5B08     		lsrs	r3, r3, #1
 9969 0024 9BB2     		uxth	r3, r3
 9970 0026 1946     		mov	r1, r3
 9971 0028 F868     		ldr	r0, [r7, #12]
 9972 002a FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
3512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
3514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
3515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
3516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* In other cases : use Rx Half Complete callback */
3517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /*Call registered Rx Half complete callback*/
3519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxHalfCpltCallback(huart);
3520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #else
3521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /*Call legacy weak Rx Half complete callback*/
3522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     HAL_UART_RxHalfCpltCallback(huart);
3523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
3525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 9973              		.loc 1 3525 1
 9974 002e 02E0     		b	.L573
 9975              	.L571:
3522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 9976              		.loc 1 3522 5
 9977 0030 F868     		ldr	r0, [r7, #12]
 9978 0032 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 9979              	.L573:
 9980              		.loc 1 3525 1
 9981 0036 00BF     		nop
 9982 0038 1037     		adds	r7, r7, #16
 9983              	.LCFI300:
 9984              		.cfi_def_cfa_offset 8
 9985 003a BD46     		mov	sp, r7
 9986              	.LCFI301:
 9987              		.cfi_def_cfa_register 13
 9988              		@ sp needed
 9989 003c 80BD     		pop	{r7, pc}
 9990              		.cfi_endproc
 9991              	.LFE195:
 9993              		.section	.text.UART_DMAError,"ax",%progbits
 9994              		.align	1
 9995              		.syntax unified
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 260


 9996              		.thumb
 9997              		.thumb_func
 9999              	UART_DMAError:
 10000              	.LFB196:
3526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
3528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief DMA UART communication error callback.
3529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param hdma DMA handle.
3530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
3531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
3532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
3533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 10001              		.loc 1 3533 1
 10002              		.cfi_startproc
 10003              		@ args = 0, pretend = 0, frame = 24
 10004              		@ frame_needed = 1, uses_anonymous_args = 0
 10005 0000 80B5     		push	{r7, lr}
 10006              	.LCFI302:
 10007              		.cfi_def_cfa_offset 8
 10008              		.cfi_offset 7, -8
 10009              		.cfi_offset 14, -4
 10010 0002 86B0     		sub	sp, sp, #24
 10011              	.LCFI303:
 10012              		.cfi_def_cfa_offset 32
 10013 0004 00AF     		add	r7, sp, #0
 10014              	.LCFI304:
 10015              		.cfi_def_cfa_register 7
 10016 0006 7860     		str	r0, [r7, #4]
3534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 10017              		.loc 1 3534 23
 10018 0008 7B68     		ldr	r3, [r7, #4]
 10019 000a 9B6B     		ldr	r3, [r3, #56]
 10020 000c 7B61     		str	r3, [r7, #20]
3535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 10021              		.loc 1 3536 31
 10022 000e 7B69     		ldr	r3, [r7, #20]
 10023 0010 DB6F     		ldr	r3, [r3, #124]
 10024 0012 3B61     		str	r3, [r7, #16]
3537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 10025              		.loc 1 3537 31
 10026 0014 7B69     		ldr	r3, [r7, #20]
 10027 0016 D3F88030 		ldr	r3, [r3, #128]
 10028 001a FB60     		str	r3, [r7, #12]
3538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
3540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
 10029              		.loc 1 3540 8
 10030 001c 7B69     		ldr	r3, [r7, #20]
 10031 001e 1B68     		ldr	r3, [r3]
 10032 0020 9B68     		ldr	r3, [r3, #8]
 10033 0022 03F08003 		and	r3, r3, #128
 10034              		.loc 1 3540 6
 10035 0026 802B     		cmp	r3, #128
 10036 0028 09D1     		bne	.L575
 10037              		.loc 1 3540 62 discriminator 1
 10038 002a 3B69     		ldr	r3, [r7, #16]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 261


 10039 002c 212B     		cmp	r3, #33
 10040 002e 06D1     		bne	.L575
3541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
3542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
3543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->TxXferCount = 0U;
 10041              		.loc 1 3543 24
 10042 0030 7B69     		ldr	r3, [r7, #20]
 10043 0032 0022     		movs	r2, #0
 10044 0034 A3F85220 		strh	r2, [r3, #82]	@ movhi
3544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 10045              		.loc 1 3544 5
 10046 0038 7869     		ldr	r0, [r7, #20]
 10047 003a FFF7FEFF 		bl	UART_EndTxTransfer
 10048              	.L575:
3545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
3546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
3548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
 10049              		.loc 1 3548 8
 10050 003e 7B69     		ldr	r3, [r7, #20]
 10051 0040 1B68     		ldr	r3, [r3]
 10052 0042 9B68     		ldr	r3, [r3, #8]
 10053 0044 03F04003 		and	r3, r3, #64
 10054              		.loc 1 3548 6
 10055 0048 402B     		cmp	r3, #64
 10056 004a 09D1     		bne	.L576
 10057              		.loc 1 3548 62 discriminator 1
 10058 004c FB68     		ldr	r3, [r7, #12]
 10059 004e 222B     		cmp	r3, #34
 10060 0050 06D1     		bne	.L576
3549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
3550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
3551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferCount = 0U;
 10061              		.loc 1 3551 24
 10062 0052 7B69     		ldr	r3, [r7, #20]
 10063 0054 0022     		movs	r2, #0
 10064 0056 A3F85A20 		strh	r2, [r3, #90]	@ movhi
3552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 10065              		.loc 1 3552 5
 10066 005a 7869     		ldr	r0, [r7, #20]
 10067 005c FFF7FEFF 		bl	UART_EndRxTransfer
 10068              	.L576:
3553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
3554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
 10069              		.loc 1 3555 20
 10070 0060 7B69     		ldr	r3, [r7, #20]
 10071 0062 D3F88430 		ldr	r3, [r3, #132]
 10072 0066 43F01002 		orr	r2, r3, #16
 10073 006a 7B69     		ldr	r3, [r7, #20]
 10074 006c C3F88420 		str	r2, [r3, #132]
3556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /*Call registered error callback*/
3559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->ErrorCallback(huart);
3560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #else
3561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /*Call legacy weak error callback*/
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 262


3562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 10075              		.loc 1 3562 3
 10076 0070 7869     		ldr	r0, [r7, #20]
 10077 0072 FFF7FEFF 		bl	HAL_UART_ErrorCallback
3563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 10078              		.loc 1 3564 1
 10079 0076 00BF     		nop
 10080 0078 1837     		adds	r7, r7, #24
 10081              	.LCFI305:
 10082              		.cfi_def_cfa_offset 8
 10083 007a BD46     		mov	sp, r7
 10084              	.LCFI306:
 10085              		.cfi_def_cfa_register 13
 10086              		@ sp needed
 10087 007c 80BD     		pop	{r7, pc}
 10088              		.cfi_endproc
 10089              	.LFE196:
 10091              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 10092              		.align	1
 10093              		.syntax unified
 10094              		.thumb
 10095              		.thumb_func
 10097              	UART_DMAAbortOnError:
 10098              	.LFB197:
3565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
3567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
3568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  hdma DMA handle.
3570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
3571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
3572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 10099              		.loc 1 3573 1
 10100              		.cfi_startproc
 10101              		@ args = 0, pretend = 0, frame = 16
 10102              		@ frame_needed = 1, uses_anonymous_args = 0
 10103 0000 80B5     		push	{r7, lr}
 10104              	.LCFI307:
 10105              		.cfi_def_cfa_offset 8
 10106              		.cfi_offset 7, -8
 10107              		.cfi_offset 14, -4
 10108 0002 84B0     		sub	sp, sp, #16
 10109              	.LCFI308:
 10110              		.cfi_def_cfa_offset 24
 10111 0004 00AF     		add	r7, sp, #0
 10112              	.LCFI309:
 10113              		.cfi_def_cfa_register 7
 10114 0006 7860     		str	r0, [r7, #4]
3574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 10115              		.loc 1 3574 23
 10116 0008 7B68     		ldr	r3, [r7, #4]
 10117 000a 9B6B     		ldr	r3, [r3, #56]
 10118 000c FB60     		str	r3, [r7, #12]
3575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxXferCount = 0U;
 10119              		.loc 1 3575 22
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 263


 10120 000e FB68     		ldr	r3, [r7, #12]
 10121 0010 0022     		movs	r2, #0
 10122 0012 A3F85A20 		strh	r2, [r3, #90]	@ movhi
3576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->TxXferCount = 0U;
 10123              		.loc 1 3576 22
 10124 0016 FB68     		ldr	r3, [r7, #12]
 10125 0018 0022     		movs	r2, #0
 10126 001a A3F85220 		strh	r2, [r3, #82]	@ movhi
3577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /*Call registered error callback*/
3580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->ErrorCallback(huart);
3581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #else
3582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /*Call legacy weak error callback*/
3583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 10127              		.loc 1 3583 3
 10128 001e F868     		ldr	r0, [r7, #12]
 10129 0020 FFF7FEFF 		bl	HAL_UART_ErrorCallback
3584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 10130              		.loc 1 3585 1
 10131 0024 00BF     		nop
 10132 0026 1037     		adds	r7, r7, #16
 10133              	.LCFI310:
 10134              		.cfi_def_cfa_offset 8
 10135 0028 BD46     		mov	sp, r7
 10136              	.LCFI311:
 10137              		.cfi_def_cfa_register 13
 10138              		@ sp needed
 10139 002a 80BD     		pop	{r7, pc}
 10140              		.cfi_endproc
 10141              	.LFE197:
 10143              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 10144              		.align	1
 10145              		.syntax unified
 10146              		.thumb
 10147              		.thumb_func
 10149              	UART_DMATxAbortCallback:
 10150              	.LFB198:
3586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
3588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
3589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
3592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  hdma DMA handle.
3593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
3594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
3595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 10151              		.loc 1 3596 1
 10152              		.cfi_startproc
 10153              		@ args = 0, pretend = 0, frame = 16
 10154              		@ frame_needed = 1, uses_anonymous_args = 0
 10155 0000 80B5     		push	{r7, lr}
 10156              	.LCFI312:
 10157              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 264


 10158              		.cfi_offset 7, -8
 10159              		.cfi_offset 14, -4
 10160 0002 84B0     		sub	sp, sp, #16
 10161              	.LCFI313:
 10162              		.cfi_def_cfa_offset 24
 10163 0004 00AF     		add	r7, sp, #0
 10164              	.LCFI314:
 10165              		.cfi_def_cfa_register 7
 10166 0006 7860     		str	r0, [r7, #4]
3597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 10167              		.loc 1 3597 23
 10168 0008 7B68     		ldr	r3, [r7, #4]
 10169 000a 9B6B     		ldr	r3, [r3, #56]
 10170 000c FB60     		str	r3, [r7, #12]
3598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
 10171              		.loc 1 3599 8
 10172 000e FB68     		ldr	r3, [r7, #12]
 10173 0010 1B6F     		ldr	r3, [r3, #112]
 10174              		.loc 1 3599 36
 10175 0012 0022     		movs	r2, #0
 10176 0014 1A65     		str	r2, [r3, #80]
3600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 10177              		.loc 1 3602 12
 10178 0016 FB68     		ldr	r3, [r7, #12]
 10179 0018 5B6F     		ldr	r3, [r3, #116]
 10180              		.loc 1 3602 6
 10181 001a 002B     		cmp	r3, #0
 10182 001c 04D0     		beq	.L579
3603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
3604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if (huart->hdmarx->XferAbortCallback != NULL)
 10183              		.loc 1 3604 14
 10184 001e FB68     		ldr	r3, [r7, #12]
 10185 0020 5B6F     		ldr	r3, [r3, #116]
 10186              		.loc 1 3604 22
 10187 0022 1B6D     		ldr	r3, [r3, #80]
 10188              		.loc 1 3604 8
 10189 0024 002B     		cmp	r3, #0
 10190 0026 1DD1     		bne	.L581
 10191              	.L579:
3605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
3606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return;
3607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
3608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
3609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->TxXferCount = 0U;
 10192              		.loc 1 3611 22
 10193 0028 FB68     		ldr	r3, [r7, #12]
 10194 002a 0022     		movs	r2, #0
 10195 002c A3F85220 		strh	r2, [r3, #82]	@ movhi
3612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxXferCount = 0U;
 10196              		.loc 1 3612 22
 10197 0030 FB68     		ldr	r3, [r7, #12]
 10198 0032 0022     		movs	r2, #0
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 265


 10199 0034 A3F85A20 		strh	r2, [r3, #90]	@ movhi
3613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Reset errorCode */
3615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 10200              		.loc 1 3615 20
 10201 0038 FB68     		ldr	r3, [r7, #12]
 10202 003a 0022     		movs	r2, #0
 10203 003c C3F88420 		str	r2, [r3, #132]
3616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 10204              		.loc 1 3618 3
 10205 0040 FB68     		ldr	r3, [r7, #12]
 10206 0042 1B68     		ldr	r3, [r3]
 10207 0044 0F22     		movs	r2, #15
 10208 0046 1A62     		str	r2, [r3, #32]
3619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 10209              		.loc 1 3622 18
 10210 0048 FB68     		ldr	r3, [r7, #12]
 10211 004a 2022     		movs	r2, #32
 10212 004c DA67     		str	r2, [r3, #124]
3623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 10213              		.loc 1 3623 18
 10214 004e FB68     		ldr	r3, [r7, #12]
 10215 0050 2022     		movs	r2, #32
 10216 0052 C3F88020 		str	r2, [r3, #128]
3624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 10217              		.loc 1 3624 24
 10218 0056 FB68     		ldr	r3, [r7, #12]
 10219 0058 0022     		movs	r2, #0
 10220 005a 1A66     		str	r2, [r3, #96]
3625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Call user Abort complete callback */
3627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Call registered Abort complete callback */
3629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #else
3631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 10221              		.loc 1 3632 3
 10222 005c F868     		ldr	r0, [r7, #12]
 10223 005e FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 10224 0062 00E0     		b	.L578
 10225              	.L581:
3606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 10226              		.loc 1 3606 7
 10227 0064 00BF     		nop
 10228              	.L578:
3633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 10229              		.loc 1 3634 1
 10230 0066 1037     		adds	r7, r7, #16
 10231              	.LCFI315:
 10232              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 266


 10233 0068 BD46     		mov	sp, r7
 10234              	.LCFI316:
 10235              		.cfi_def_cfa_register 13
 10236              		@ sp needed
 10237 006a 80BD     		pop	{r7, pc}
 10238              		.cfi_endproc
 10239              	.LFE198:
 10241              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 10242              		.align	1
 10243              		.syntax unified
 10244              		.thumb
 10245              		.thumb_func
 10247              	UART_DMARxAbortCallback:
 10248              	.LFB199:
3635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
3638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
3639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
3642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  hdma DMA handle.
3643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
3644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
3645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 10249              		.loc 1 3646 1
 10250              		.cfi_startproc
 10251              		@ args = 0, pretend = 0, frame = 16
 10252              		@ frame_needed = 1, uses_anonymous_args = 0
 10253 0000 80B5     		push	{r7, lr}
 10254              	.LCFI317:
 10255              		.cfi_def_cfa_offset 8
 10256              		.cfi_offset 7, -8
 10257              		.cfi_offset 14, -4
 10258 0002 84B0     		sub	sp, sp, #16
 10259              	.LCFI318:
 10260              		.cfi_def_cfa_offset 24
 10261 0004 00AF     		add	r7, sp, #0
 10262              	.LCFI319:
 10263              		.cfi_def_cfa_register 7
 10264 0006 7860     		str	r0, [r7, #4]
3647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 10265              		.loc 1 3647 23
 10266 0008 7B68     		ldr	r3, [r7, #4]
 10267 000a 9B6B     		ldr	r3, [r3, #56]
 10268 000c FB60     		str	r3, [r7, #12]
3648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
 10269              		.loc 1 3649 8
 10270 000e FB68     		ldr	r3, [r7, #12]
 10271 0010 5B6F     		ldr	r3, [r3, #116]
 10272              		.loc 1 3649 36
 10273 0012 0022     		movs	r2, #0
 10274 0014 1A65     		str	r2, [r3, #80]
3650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 267


3652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->hdmatx != NULL)
 10275              		.loc 1 3652 12
 10276 0016 FB68     		ldr	r3, [r7, #12]
 10277 0018 1B6F     		ldr	r3, [r3, #112]
 10278              		.loc 1 3652 6
 10279 001a 002B     		cmp	r3, #0
 10280 001c 04D0     		beq	.L583
3653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
3654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if (huart->hdmatx->XferAbortCallback != NULL)
 10281              		.loc 1 3654 14
 10282 001e FB68     		ldr	r3, [r7, #12]
 10283 0020 1B6F     		ldr	r3, [r3, #112]
 10284              		.loc 1 3654 22
 10285 0022 1B6D     		ldr	r3, [r3, #80]
 10286              		.loc 1 3654 8
 10287 0024 002B     		cmp	r3, #0
 10288 0026 25D1     		bne	.L585
 10289              	.L583:
3655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
3656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       return;
3657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
3658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
3659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->TxXferCount = 0U;
 10290              		.loc 1 3661 22
 10291 0028 FB68     		ldr	r3, [r7, #12]
 10292 002a 0022     		movs	r2, #0
 10293 002c A3F85220 		strh	r2, [r3, #82]	@ movhi
3662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxXferCount = 0U;
 10294              		.loc 1 3662 22
 10295 0030 FB68     		ldr	r3, [r7, #12]
 10296 0032 0022     		movs	r2, #0
 10297 0034 A3F85A20 		strh	r2, [r3, #90]	@ movhi
3663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Reset errorCode */
3665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 10298              		.loc 1 3665 20
 10299 0038 FB68     		ldr	r3, [r7, #12]
 10300 003a 0022     		movs	r2, #0
 10301 003c C3F88420 		str	r2, [r3, #132]
3666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 10302              		.loc 1 3668 3
 10303 0040 FB68     		ldr	r3, [r7, #12]
 10304 0042 1B68     		ldr	r3, [r3]
 10305 0044 0F22     		movs	r2, #15
 10306 0046 1A62     		str	r2, [r3, #32]
3669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Discard the received data */
3671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 10307              		.loc 1 3671 3
 10308 0048 FB68     		ldr	r3, [r7, #12]
 10309 004a 1B68     		ldr	r3, [r3]
 10310 004c 9A69     		ldr	r2, [r3, #24]
 10311 004e FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 268


 10312 0050 1B68     		ldr	r3, [r3]
 10313 0052 42F00802 		orr	r2, r2, #8
 10314 0056 9A61     		str	r2, [r3, #24]
3672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 10315              		.loc 1 3674 18
 10316 0058 FB68     		ldr	r3, [r7, #12]
 10317 005a 2022     		movs	r2, #32
 10318 005c DA67     		str	r2, [r3, #124]
3675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 10319              		.loc 1 3675 18
 10320 005e FB68     		ldr	r3, [r7, #12]
 10321 0060 2022     		movs	r2, #32
 10322 0062 C3F88020 		str	r2, [r3, #128]
3676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 10323              		.loc 1 3676 24
 10324 0066 FB68     		ldr	r3, [r7, #12]
 10325 0068 0022     		movs	r2, #0
 10326 006a 1A66     		str	r2, [r3, #96]
3677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Call user Abort complete callback */
3679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Call registered Abort complete callback */
3681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #else
3683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 10327              		.loc 1 3684 3
 10328 006c F868     		ldr	r0, [r7, #12]
 10329 006e FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 10330 0072 00E0     		b	.L582
 10331              	.L585:
3656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 10332              		.loc 1 3656 7
 10333 0074 00BF     		nop
 10334              	.L582:
3685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 10335              		.loc 1 3686 1
 10336 0076 1037     		adds	r7, r7, #16
 10337              	.LCFI320:
 10338              		.cfi_def_cfa_offset 8
 10339 0078 BD46     		mov	sp, r7
 10340              	.LCFI321:
 10341              		.cfi_def_cfa_register 13
 10342              		@ sp needed
 10343 007a 80BD     		pop	{r7, pc}
 10344              		.cfi_endproc
 10345              	.LFE199:
 10347              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 10348              		.align	1
 10349              		.syntax unified
 10350              		.thumb
 10351              		.thumb_func
 10353              	UART_DMATxOnlyAbortCallback:
 10354              	.LFB200:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 269


3687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
3690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
3691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
3692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
3693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
3694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  hdma DMA handle.
3695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
3696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
3697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 10355              		.loc 1 3698 1
 10356              		.cfi_startproc
 10357              		@ args = 0, pretend = 0, frame = 16
 10358              		@ frame_needed = 1, uses_anonymous_args = 0
 10359 0000 80B5     		push	{r7, lr}
 10360              	.LCFI322:
 10361              		.cfi_def_cfa_offset 8
 10362              		.cfi_offset 7, -8
 10363              		.cfi_offset 14, -4
 10364 0002 84B0     		sub	sp, sp, #16
 10365              	.LCFI323:
 10366              		.cfi_def_cfa_offset 24
 10367 0004 00AF     		add	r7, sp, #0
 10368              	.LCFI324:
 10369              		.cfi_def_cfa_register 7
 10370 0006 7860     		str	r0, [r7, #4]
3699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 10371              		.loc 1 3699 23
 10372 0008 7B68     		ldr	r3, [r7, #4]
 10373 000a 9B6B     		ldr	r3, [r3, #56]
 10374 000c FB60     		str	r3, [r7, #12]
3700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->TxXferCount = 0U;
 10375              		.loc 1 3701 22
 10376 000e FB68     		ldr	r3, [r7, #12]
 10377 0010 0022     		movs	r2, #0
 10378 0012 A3F85220 		strh	r2, [r3, #82]	@ movhi
3702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Restore huart->gState to Ready */
3705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 10379              		.loc 1 3705 17
 10380 0016 FB68     		ldr	r3, [r7, #12]
 10381 0018 2022     		movs	r2, #32
 10382 001a DA67     		str	r2, [r3, #124]
3706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Call user Abort complete callback */
3708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Call registered Abort Transmit Complete Callback */
3710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->AbortTransmitCpltCallback(huart);
3711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #else
3712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Call legacy weak Abort Transmit Complete Callback */
3713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
 10383              		.loc 1 3713 3
 10384 001c F868     		ldr	r0, [r7, #12]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 270


 10385 001e FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
3714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 10386              		.loc 1 3715 1
 10387 0022 00BF     		nop
 10388 0024 1037     		adds	r7, r7, #16
 10389              	.LCFI325:
 10390              		.cfi_def_cfa_offset 8
 10391 0026 BD46     		mov	sp, r7
 10392              	.LCFI326:
 10393              		.cfi_def_cfa_register 13
 10394              		@ sp needed
 10395 0028 80BD     		pop	{r7, pc}
 10396              		.cfi_endproc
 10397              	.LFE200:
 10399              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 10400              		.align	1
 10401              		.syntax unified
 10402              		.thumb
 10403              		.thumb_func
 10405              	UART_DMARxOnlyAbortCallback:
 10406              	.LFB201:
3716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
3718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
3719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
3720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
3721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
3722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  hdma DMA handle.
3723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
3724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
3725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 10407              		.loc 1 3726 1
 10408              		.cfi_startproc
 10409              		@ args = 0, pretend = 0, frame = 16
 10410              		@ frame_needed = 1, uses_anonymous_args = 0
 10411 0000 80B5     		push	{r7, lr}
 10412              	.LCFI327:
 10413              		.cfi_def_cfa_offset 8
 10414              		.cfi_offset 7, -8
 10415              		.cfi_offset 14, -4
 10416 0002 84B0     		sub	sp, sp, #16
 10417              	.LCFI328:
 10418              		.cfi_def_cfa_offset 24
 10419 0004 00AF     		add	r7, sp, #0
 10420              	.LCFI329:
 10421              		.cfi_def_cfa_register 7
 10422 0006 7860     		str	r0, [r7, #4]
3727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 10423              		.loc 1 3727 23
 10424 0008 7B68     		ldr	r3, [r7, #4]
 10425 000a 9B6B     		ldr	r3, [r3, #56]
 10426 000c FB60     		str	r3, [r7, #12]
3728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxXferCount = 0U;
 10427              		.loc 1 3729 22
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 271


 10428 000e FB68     		ldr	r3, [r7, #12]
 10429 0010 0022     		movs	r2, #0
 10430 0012 A3F85A20 		strh	r2, [r3, #90]	@ movhi
3730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 10431              		.loc 1 3732 3
 10432 0016 FB68     		ldr	r3, [r7, #12]
 10433 0018 1B68     		ldr	r3, [r3]
 10434 001a 0F22     		movs	r2, #15
 10435 001c 1A62     		str	r2, [r3, #32]
3733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Discard the received data */
3735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 10436              		.loc 1 3735 3
 10437 001e FB68     		ldr	r3, [r7, #12]
 10438 0020 1B68     		ldr	r3, [r3]
 10439 0022 9A69     		ldr	r2, [r3, #24]
 10440 0024 FB68     		ldr	r3, [r7, #12]
 10441 0026 1B68     		ldr	r3, [r3]
 10442 0028 42F00802 		orr	r2, r2, #8
 10443 002c 9A61     		str	r2, [r3, #24]
3736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
3738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 10444              		.loc 1 3738 18
 10445 002e FB68     		ldr	r3, [r7, #12]
 10446 0030 2022     		movs	r2, #32
 10447 0032 C3F88020 		str	r2, [r3, #128]
3739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 10448              		.loc 1 3739 24
 10449 0036 FB68     		ldr	r3, [r7, #12]
 10450 0038 0022     		movs	r2, #0
 10451 003a 1A66     		str	r2, [r3, #96]
3740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Call user Abort complete callback */
3742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Call registered Abort Receive Complete Callback */
3744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->AbortReceiveCpltCallback(huart);
3745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #else
3746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Call legacy weak Abort Receive Complete Callback */
3747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
 10452              		.loc 1 3747 3
 10453 003c F868     		ldr	r0, [r7, #12]
 10454 003e FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
3748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 10455              		.loc 1 3749 1
 10456 0042 00BF     		nop
 10457 0044 1037     		adds	r7, r7, #16
 10458              	.LCFI330:
 10459              		.cfi_def_cfa_offset 8
 10460 0046 BD46     		mov	sp, r7
 10461              	.LCFI331:
 10462              		.cfi_def_cfa_register 13
 10463              		@ sp needed
 10464 0048 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 272


 10465              		.cfi_endproc
 10466              	.LFE201:
 10468              		.section	.text.UART_TxISR_8BIT,"ax",%progbits
 10469              		.align	1
 10470              		.syntax unified
 10471              		.thumb
 10472              		.thumb_func
 10474              	UART_TxISR_8BIT:
 10475              	.LFB202:
3750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
3752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief TX interrupt handler for 7 or 8 bits data word length .
3753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
3756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
3757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
3758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart)
3759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 10476              		.loc 1 3759 1
 10477              		.cfi_startproc
 10478              		@ args = 0, pretend = 0, frame = 56
 10479              		@ frame_needed = 1, uses_anonymous_args = 0
 10480              		@ link register save eliminated.
 10481 0000 80B4     		push	{r7}
 10482              	.LCFI332:
 10483              		.cfi_def_cfa_offset 4
 10484              		.cfi_offset 7, -4
 10485 0002 8FB0     		sub	sp, sp, #60
 10486              	.LCFI333:
 10487              		.cfi_def_cfa_offset 64
 10488 0004 00AF     		add	r7, sp, #0
 10489              	.LCFI334:
 10490              		.cfi_def_cfa_register 7
 10491 0006 7860     		str	r0, [r7, #4]
3760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 10492              		.loc 1 3761 12
 10493 0008 7B68     		ldr	r3, [r7, #4]
 10494 000a DB6F     		ldr	r3, [r3, #124]
 10495              		.loc 1 3761 6
 10496 000c 212B     		cmp	r3, #33
 10497 000e 4CD1     		bne	.L597
3762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
3763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
 10498              		.loc 1 3763 14
 10499 0010 7B68     		ldr	r3, [r7, #4]
 10500 0012 B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 10501 0016 9BB2     		uxth	r3, r3
 10502              		.loc 1 3763 8
 10503 0018 002B     		cmp	r3, #0
 10504 001a 32D1     		bne	.L590
 10505              	.L593:
 10506              	.LBB763:
3764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
3765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 273


 10507              		.loc 1 3766 7 discriminator 1
 10508 001c 7B68     		ldr	r3, [r7, #4]
 10509 001e 1B68     		ldr	r3, [r3]
 10510 0020 3B62     		str	r3, [r7, #32]
 10511              	.LBB764:
 10512              	.LBB765:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10513              		.loc 2 1072 4 discriminator 1
 10514 0022 3B6A     		ldr	r3, [r7, #32]
 10515              		.syntax unified
 10516              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10517 0024 53E8003F 		ldrex r3, [r3]
 10518              	@ 0 "" 2
 10519              		.thumb
 10520              		.syntax unified
 10521 0028 FB61     		str	r3, [r7, #28]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 10522              		.loc 2 1073 10 discriminator 1
 10523 002a FB69     		ldr	r3, [r7, #28]
 10524              	.LBE765:
 10525              	.LBE764:
 10526              		.loc 1 3766 7 discriminator 1
 10527 002c 23F08003 		bic	r3, r3, #128
 10528 0030 7B63     		str	r3, [r7, #52]
 10529 0032 7B68     		ldr	r3, [r7, #4]
 10530 0034 1B68     		ldr	r3, [r3]
 10531 0036 1A46     		mov	r2, r3
 10532 0038 7B6B     		ldr	r3, [r7, #52]
 10533 003a FB62     		str	r3, [r7, #44]
 10534 003c BA62     		str	r2, [r7, #40]
 10535              	.LBB766:
 10536              	.LBB767:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10537              		.loc 2 1123 4 discriminator 1
 10538 003e B96A     		ldr	r1, [r7, #40]
 10539 0040 FA6A     		ldr	r2, [r7, #44]
 10540              		.syntax unified
 10541              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10542 0042 41E80023 		strex r3, r2, [r1]
 10543              	@ 0 "" 2
 10544              		.thumb
 10545              		.syntax unified
 10546 0046 7B62     		str	r3, [r7, #36]
 10547              		.loc 2 1124 10 discriminator 1
 10548 0048 7B6A     		ldr	r3, [r7, #36]
 10549              	.LBE767:
 10550              	.LBE766:
 10551              		.loc 1 3766 7 discriminator 1
 10552 004a 002B     		cmp	r3, #0
 10553 004c E6D1     		bne	.L593
 10554              	.L596:
 10555              	.LBE763:
 10556              	.LBB768:
3767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 10557              		.loc 1 3769 7 discriminator 1
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 274


 10558 004e 7B68     		ldr	r3, [r7, #4]
 10559 0050 1B68     		ldr	r3, [r3]
 10560 0052 FB60     		str	r3, [r7, #12]
 10561              	.LBB769:
 10562              	.LBB770:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10563              		.loc 2 1072 4 discriminator 1
 10564 0054 FB68     		ldr	r3, [r7, #12]
 10565              		.syntax unified
 10566              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10567 0056 53E8003F 		ldrex r3, [r3]
 10568              	@ 0 "" 2
 10569              		.thumb
 10570              		.syntax unified
 10571 005a BB60     		str	r3, [r7, #8]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 10572              		.loc 2 1073 10 discriminator 1
 10573 005c BB68     		ldr	r3, [r7, #8]
 10574              	.LBE770:
 10575              	.LBE769:
 10576              		.loc 1 3769 7 discriminator 1
 10577 005e 43F04003 		orr	r3, r3, #64
 10578 0062 3B63     		str	r3, [r7, #48]
 10579 0064 7B68     		ldr	r3, [r7, #4]
 10580 0066 1B68     		ldr	r3, [r3]
 10581 0068 1A46     		mov	r2, r3
 10582 006a 3B6B     		ldr	r3, [r7, #48]
 10583 006c BB61     		str	r3, [r7, #24]
 10584 006e 7A61     		str	r2, [r7, #20]
 10585              	.LBB771:
 10586              	.LBB772:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10587              		.loc 2 1123 4 discriminator 1
 10588 0070 7969     		ldr	r1, [r7, #20]
 10589 0072 BA69     		ldr	r2, [r7, #24]
 10590              		.syntax unified
 10591              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10592 0074 41E80023 		strex r3, r2, [r1]
 10593              	@ 0 "" 2
 10594              		.thumb
 10595              		.syntax unified
 10596 0078 3B61     		str	r3, [r7, #16]
 10597              		.loc 2 1124 10 discriminator 1
 10598 007a 3B69     		ldr	r3, [r7, #16]
 10599              	.LBE772:
 10600              	.LBE771:
 10601              		.loc 1 3769 7 discriminator 1
 10602 007c 002B     		cmp	r3, #0
 10603 007e E6D1     		bne	.L596
 10604              	.LBE768:
3770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
3771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     else
3772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
3773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
3774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->pTxBuffPtr++;
3775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->TxXferCount--;
3776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 275


3777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
3778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 10605              		.loc 1 3778 1
 10606 0080 13E0     		b	.L597
 10607              	.L590:
3773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->pTxBuffPtr++;
 10608              		.loc 1 3773 46
 10609 0082 7B68     		ldr	r3, [r7, #4]
 10610 0084 DB6C     		ldr	r3, [r3, #76]
3773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->pTxBuffPtr++;
 10611              		.loc 1 3773 40
 10612 0086 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
3773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->pTxBuffPtr++;
 10613              		.loc 1 3773 12
 10614 0088 7B68     		ldr	r3, [r7, #4]
 10615 008a 1B68     		ldr	r3, [r3]
3773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->pTxBuffPtr++;
 10616              		.loc 1 3773 28
 10617 008c 9A62     		str	r2, [r3, #40]
3774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->TxXferCount--;
 10618              		.loc 1 3774 12
 10619 008e 7B68     		ldr	r3, [r7, #4]
 10620 0090 DB6C     		ldr	r3, [r3, #76]
3774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->TxXferCount--;
 10621              		.loc 1 3774 24
 10622 0092 5A1C     		adds	r2, r3, #1
 10623 0094 7B68     		ldr	r3, [r7, #4]
 10624 0096 DA64     		str	r2, [r3, #76]
3775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 10625              		.loc 1 3775 12
 10626 0098 7B68     		ldr	r3, [r7, #4]
 10627 009a B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 10628 009e 9BB2     		uxth	r3, r3
3775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 10629              		.loc 1 3775 25
 10630 00a0 013B     		subs	r3, r3, #1
 10631 00a2 9AB2     		uxth	r2, r3
 10632 00a4 7B68     		ldr	r3, [r7, #4]
 10633 00a6 A3F85220 		strh	r2, [r3, #82]	@ movhi
 10634              	.L597:
 10635              		.loc 1 3778 1
 10636 00aa 00BF     		nop
 10637 00ac 3C37     		adds	r7, r7, #60
 10638              	.LCFI335:
 10639              		.cfi_def_cfa_offset 4
 10640 00ae BD46     		mov	sp, r7
 10641              	.LCFI336:
 10642              		.cfi_def_cfa_register 13
 10643              		@ sp needed
 10644 00b0 5DF8047B 		ldr	r7, [sp], #4
 10645              	.LCFI337:
 10646              		.cfi_restore 7
 10647              		.cfi_def_cfa_offset 0
 10648 00b4 7047     		bx	lr
 10649              		.cfi_endproc
 10650              	.LFE202:
 10652              		.section	.text.UART_TxISR_16BIT,"ax",%progbits
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 276


 10653              		.align	1
 10654              		.syntax unified
 10655              		.thumb
 10656              		.thumb_func
 10658              	UART_TxISR_16BIT:
 10659              	.LFB203:
3779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
3781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief TX interrupt handler for 9 bits data word length.
3782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
3785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
3786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
3787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart)
3788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 10660              		.loc 1 3788 1
 10661              		.cfi_startproc
 10662              		@ args = 0, pretend = 0, frame = 64
 10663              		@ frame_needed = 1, uses_anonymous_args = 0
 10664              		@ link register save eliminated.
 10665 0000 80B4     		push	{r7}
 10666              	.LCFI338:
 10667              		.cfi_def_cfa_offset 4
 10668              		.cfi_offset 7, -4
 10669 0002 91B0     		sub	sp, sp, #68
 10670              	.LCFI339:
 10671              		.cfi_def_cfa_offset 72
 10672 0004 00AF     		add	r7, sp, #0
 10673              	.LCFI340:
 10674              		.cfi_def_cfa_register 7
 10675 0006 7860     		str	r0, [r7, #4]
3789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   const uint16_t *tmp;
3790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 10676              		.loc 1 3792 12
 10677 0008 7B68     		ldr	r3, [r7, #4]
 10678 000a DB6F     		ldr	r3, [r3, #124]
 10679              		.loc 1 3792 6
 10680 000c 212B     		cmp	r3, #33
 10681 000e 51D1     		bne	.L607
3793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
3794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
 10682              		.loc 1 3794 14
 10683 0010 7B68     		ldr	r3, [r7, #4]
 10684 0012 B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 10685 0016 9BB2     		uxth	r3, r3
 10686              		.loc 1 3794 8
 10687 0018 002B     		cmp	r3, #0
 10688 001a 32D1     		bne	.L600
 10689              	.L603:
 10690              	.LBB773:
3795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
3796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 10691              		.loc 1 3797 7 discriminator 1
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 277


 10692 001c 7B68     		ldr	r3, [r7, #4]
 10693 001e 1B68     		ldr	r3, [r3]
 10694 0020 7B62     		str	r3, [r7, #36]
 10695              	.LBB774:
 10696              	.LBB775:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10697              		.loc 2 1072 4 discriminator 1
 10698 0022 7B6A     		ldr	r3, [r7, #36]
 10699              		.syntax unified
 10700              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10701 0024 53E8003F 		ldrex r3, [r3]
 10702              	@ 0 "" 2
 10703              		.thumb
 10704              		.syntax unified
 10705 0028 3B62     		str	r3, [r7, #32]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 10706              		.loc 2 1073 10 discriminator 1
 10707 002a 3B6A     		ldr	r3, [r7, #32]
 10708              	.LBE775:
 10709              	.LBE774:
 10710              		.loc 1 3797 7 discriminator 1
 10711 002c 23F08003 		bic	r3, r3, #128
 10712 0030 BB63     		str	r3, [r7, #56]
 10713 0032 7B68     		ldr	r3, [r7, #4]
 10714 0034 1B68     		ldr	r3, [r3]
 10715 0036 1A46     		mov	r2, r3
 10716 0038 BB6B     		ldr	r3, [r7, #56]
 10717 003a 3B63     		str	r3, [r7, #48]
 10718 003c FA62     		str	r2, [r7, #44]
 10719              	.LBB776:
 10720              	.LBB777:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10721              		.loc 2 1123 4 discriminator 1
 10722 003e F96A     		ldr	r1, [r7, #44]
 10723 0040 3A6B     		ldr	r2, [r7, #48]
 10724              		.syntax unified
 10725              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10726 0042 41E80023 		strex r3, r2, [r1]
 10727              	@ 0 "" 2
 10728              		.thumb
 10729              		.syntax unified
 10730 0046 BB62     		str	r3, [r7, #40]
 10731              		.loc 2 1124 10 discriminator 1
 10732 0048 BB6A     		ldr	r3, [r7, #40]
 10733              	.LBE777:
 10734              	.LBE776:
 10735              		.loc 1 3797 7 discriminator 1
 10736 004a 002B     		cmp	r3, #0
 10737 004c E6D1     		bne	.L603
 10738              	.L606:
 10739              	.LBE773:
 10740              	.LBB778:
3798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 10741              		.loc 1 3800 7 discriminator 1
 10742 004e 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 278


 10743 0050 1B68     		ldr	r3, [r3]
 10744 0052 3B61     		str	r3, [r7, #16]
 10745              	.LBB779:
 10746              	.LBB780:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10747              		.loc 2 1072 4 discriminator 1
 10748 0054 3B69     		ldr	r3, [r7, #16]
 10749              		.syntax unified
 10750              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10751 0056 53E8003F 		ldrex r3, [r3]
 10752              	@ 0 "" 2
 10753              		.thumb
 10754              		.syntax unified
 10755 005a FB60     		str	r3, [r7, #12]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 10756              		.loc 2 1073 10 discriminator 1
 10757 005c FB68     		ldr	r3, [r7, #12]
 10758              	.LBE780:
 10759              	.LBE779:
 10760              		.loc 1 3800 7 discriminator 1
 10761 005e 43F04003 		orr	r3, r3, #64
 10762 0062 7B63     		str	r3, [r7, #52]
 10763 0064 7B68     		ldr	r3, [r7, #4]
 10764 0066 1B68     		ldr	r3, [r3]
 10765 0068 1A46     		mov	r2, r3
 10766 006a 7B6B     		ldr	r3, [r7, #52]
 10767 006c FB61     		str	r3, [r7, #28]
 10768 006e BA61     		str	r2, [r7, #24]
 10769              	.LBB781:
 10770              	.LBB782:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10771              		.loc 2 1123 4 discriminator 1
 10772 0070 B969     		ldr	r1, [r7, #24]
 10773 0072 FA69     		ldr	r2, [r7, #28]
 10774              		.syntax unified
 10775              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10776 0074 41E80023 		strex r3, r2, [r1]
 10777              	@ 0 "" 2
 10778              		.thumb
 10779              		.syntax unified
 10780 0078 7B61     		str	r3, [r7, #20]
 10781              		.loc 2 1124 10 discriminator 1
 10782 007a 7B69     		ldr	r3, [r7, #20]
 10783              	.LBE782:
 10784              	.LBE781:
 10785              		.loc 1 3800 7 discriminator 1
 10786 007c 002B     		cmp	r3, #0
 10787 007e E6D1     		bne	.L606
 10788              	.LBE778:
3801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
3802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     else
3803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
3804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       tmp = (const uint16_t *) huart->pTxBuffPtr;
3805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
3806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
3807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->TxXferCount--;
3808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 279


3809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
3810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 10789              		.loc 1 3810 1
 10790 0080 18E0     		b	.L607
 10791              	.L600:
3804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
 10792              		.loc 1 3804 11
 10793 0082 7B68     		ldr	r3, [r7, #4]
 10794 0084 DB6C     		ldr	r3, [r3, #76]
 10795 0086 FB63     		str	r3, [r7, #60]
3805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 10796              		.loc 1 3805 43
 10797 0088 FB6B     		ldr	r3, [r7, #60]
 10798 008a 1B88     		ldrh	r3, [r3]
3805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 10799              		.loc 1 3805 50
 10800 008c 1A46     		mov	r2, r3
3805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 10801              		.loc 1 3805 12
 10802 008e 7B68     		ldr	r3, [r7, #4]
 10803 0090 1B68     		ldr	r3, [r3]
3805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 10804              		.loc 1 3805 50
 10805 0092 C2F30802 		ubfx	r2, r2, #0, #9
3805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 10806              		.loc 1 3805 28
 10807 0096 9A62     		str	r2, [r3, #40]
3806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->TxXferCount--;
 10808              		.loc 1 3806 25
 10809 0098 7B68     		ldr	r3, [r7, #4]
 10810 009a DB6C     		ldr	r3, [r3, #76]
 10811 009c 9A1C     		adds	r2, r3, #2
 10812 009e 7B68     		ldr	r3, [r7, #4]
 10813 00a0 DA64     		str	r2, [r3, #76]
3807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 10814              		.loc 1 3807 12
 10815 00a2 7B68     		ldr	r3, [r7, #4]
 10816 00a4 B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 10817 00a8 9BB2     		uxth	r3, r3
3807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
 10818              		.loc 1 3807 25
 10819 00aa 013B     		subs	r3, r3, #1
 10820 00ac 9AB2     		uxth	r2, r3
 10821 00ae 7B68     		ldr	r3, [r7, #4]
 10822 00b0 A3F85220 		strh	r2, [r3, #82]	@ movhi
 10823              	.L607:
 10824              		.loc 1 3810 1
 10825 00b4 00BF     		nop
 10826 00b6 4437     		adds	r7, r7, #68
 10827              	.LCFI341:
 10828              		.cfi_def_cfa_offset 4
 10829 00b8 BD46     		mov	sp, r7
 10830              	.LCFI342:
 10831              		.cfi_def_cfa_register 13
 10832              		@ sp needed
 10833 00ba 5DF8047B 		ldr	r7, [sp], #4
 10834              	.LCFI343:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 280


 10835              		.cfi_restore 7
 10836              		.cfi_def_cfa_offset 0
 10837 00be 7047     		bx	lr
 10838              		.cfi_endproc
 10839              	.LFE203:
 10841              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 10842              		.align	1
 10843              		.syntax unified
 10844              		.thumb
 10845              		.thumb_func
 10847              	UART_EndTransmit_IT:
 10848              	.LFB204:
3811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
3814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
3815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
3816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
3818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
3819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
3820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 10849              		.loc 1 3820 1
 10850              		.cfi_startproc
 10851              		@ args = 0, pretend = 0, frame = 32
 10852              		@ frame_needed = 1, uses_anonymous_args = 0
 10853 0000 80B5     		push	{r7, lr}
 10854              	.LCFI344:
 10855              		.cfi_def_cfa_offset 8
 10856              		.cfi_offset 7, -8
 10857              		.cfi_offset 14, -4
 10858 0002 88B0     		sub	sp, sp, #32
 10859              	.LCFI345:
 10860              		.cfi_def_cfa_offset 40
 10861 0004 00AF     		add	r7, sp, #0
 10862              	.LCFI346:
 10863              		.cfi_def_cfa_register 7
 10864 0006 7860     		str	r0, [r7, #4]
 10865              	.L611:
 10866              	.LBB783:
3821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
3822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 10867              		.loc 1 3822 3 discriminator 1
 10868 0008 7B68     		ldr	r3, [r7, #4]
 10869 000a 1B68     		ldr	r3, [r3]
 10870 000c FB60     		str	r3, [r7, #12]
 10871              	.LBB784:
 10872              	.LBB785:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10873              		.loc 2 1072 4 discriminator 1
 10874 000e FB68     		ldr	r3, [r7, #12]
 10875              		.syntax unified
 10876              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10877 0010 53E8003F 		ldrex r3, [r3]
 10878              	@ 0 "" 2
 10879              		.thumb
 10880              		.syntax unified
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 281


 10881 0014 BB60     		str	r3, [r7, #8]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 10882              		.loc 2 1073 10 discriminator 1
 10883 0016 BB68     		ldr	r3, [r7, #8]
 10884              	.LBE785:
 10885              	.LBE784:
 10886              		.loc 1 3822 3 discriminator 1
 10887 0018 23F04003 		bic	r3, r3, #64
 10888 001c FB61     		str	r3, [r7, #28]
 10889 001e 7B68     		ldr	r3, [r7, #4]
 10890 0020 1B68     		ldr	r3, [r3]
 10891 0022 1A46     		mov	r2, r3
 10892 0024 FB69     		ldr	r3, [r7, #28]
 10893 0026 BB61     		str	r3, [r7, #24]
 10894 0028 7A61     		str	r2, [r7, #20]
 10895              	.LBB786:
 10896              	.LBB787:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10897              		.loc 2 1123 4 discriminator 1
 10898 002a 7969     		ldr	r1, [r7, #20]
 10899 002c BA69     		ldr	r2, [r7, #24]
 10900              		.syntax unified
 10901              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10902 002e 41E80023 		strex r3, r2, [r1]
 10903              	@ 0 "" 2
 10904              		.thumb
 10905              		.syntax unified
 10906 0032 3B61     		str	r3, [r7, #16]
 10907              		.loc 2 1124 10 discriminator 1
 10908 0034 3B69     		ldr	r3, [r7, #16]
 10909              	.LBE787:
 10910              	.LBE786:
 10911              		.loc 1 3822 3 discriminator 1
 10912 0036 002B     		cmp	r3, #0
 10913 0038 E6D1     		bne	.L611
 10914              	.LBE783:
3823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
3825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 10915              		.loc 1 3825 17
 10916 003a 7B68     		ldr	r3, [r7, #4]
 10917 003c 2022     		movs	r2, #32
 10918 003e DA67     		str	r2, [r3, #124]
3826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Cleat TxISR function pointer */
3828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->TxISR = NULL;
 10919              		.loc 1 3828 16
 10920 0040 7B68     		ldr	r3, [r7, #4]
 10921 0042 0022     		movs	r2, #0
 10922 0044 DA66     		str	r2, [r3, #108]
3829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /*Call registered Tx complete callback*/
3832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   huart->TxCpltCallback(huart);
3833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #else
3834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
3835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 282


 10923              		.loc 1 3835 3
 10924 0046 7868     		ldr	r0, [r7, #4]
 10925 0048 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
3836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 10926              		.loc 1 3837 1
 10927 004c 00BF     		nop
 10928 004e 2037     		adds	r7, r7, #32
 10929              	.LCFI347:
 10930              		.cfi_def_cfa_offset 8
 10931 0050 BD46     		mov	sp, r7
 10932              	.LCFI348:
 10933              		.cfi_def_cfa_register 13
 10934              		@ sp needed
 10935 0052 80BD     		pop	{r7, pc}
 10936              		.cfi_endproc
 10937              	.LFE204:
 10939              		.section	.text.UART_RxISR_8BIT,"ax",%progbits
 10940              		.align	1
 10941              		.syntax unified
 10942              		.thumb
 10943              		.thumb_func
 10945              	UART_RxISR_8BIT:
 10946              	.LFB205:
3838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
3840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief RX interrupt handler for 7 or 8 bits data word length .
3841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
3842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
3843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
3844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart)
3845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 10947              		.loc 1 3845 1
 10948              		.cfi_startproc
 10949              		@ args = 0, pretend = 0, frame = 88
 10950              		@ frame_needed = 1, uses_anonymous_args = 0
 10951 0000 80B5     		push	{r7, lr}
 10952              	.LCFI349:
 10953              		.cfi_def_cfa_offset 8
 10954              		.cfi_offset 7, -8
 10955              		.cfi_offset 14, -4
 10956 0002 96B0     		sub	sp, sp, #88
 10957              	.LCFI350:
 10958              		.cfi_def_cfa_offset 96
 10959 0004 00AF     		add	r7, sp, #0
 10960              	.LCFI351:
 10961              		.cfi_def_cfa_register 7
 10962 0006 7860     		str	r0, [r7, #4]
3846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 10963              		.loc 1 3846 12
 10964 0008 7B68     		ldr	r3, [r7, #4]
 10965 000a B3F85C30 		ldrh	r3, [r3, #92]	@ movhi
 10966 000e A7F85630 		strh	r3, [r7, #86]	@ movhi
3847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t  uhdata;
3848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 283


 10967              		.loc 1 3850 12
 10968 0012 7B68     		ldr	r3, [r7, #4]
 10969 0014 D3F88030 		ldr	r3, [r3, #128]
 10970              		.loc 1 3850 6
 10971 0018 222B     		cmp	r3, #34
 10972 001a 40F09880 		bne	.L613
3851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
3852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 10973              		.loc 1 3852 25
 10974 001e 7B68     		ldr	r3, [r7, #4]
 10975 0020 1B68     		ldr	r3, [r3]
 10976 0022 5B6A     		ldr	r3, [r3, #36]
 10977              		.loc 1 3852 12
 10978 0024 A7F85430 		strh	r3, [r7, #84]	@ movhi
3853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 10979              		.loc 1 3853 26
 10980 0028 B7F85430 		ldrh	r3, [r7, #84]	@ movhi
 10981 002c D9B2     		uxtb	r1, r3
 10982              		.loc 1 3853 45
 10983 002e B7F85630 		ldrh	r3, [r7, #86]	@ movhi
 10984 0032 DAB2     		uxtb	r2, r3
 10985              		.loc 1 3853 11
 10986 0034 7B68     		ldr	r3, [r7, #4]
 10987 0036 5B6D     		ldr	r3, [r3, #84]
 10988              		.loc 1 3853 26
 10989 0038 0A40     		ands	r2, r2, r1
 10990 003a D2B2     		uxtb	r2, r2
 10991              		.loc 1 3853 24
 10992 003c 1A70     		strb	r2, [r3]
3854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->pRxBuffPtr++;
 10993              		.loc 1 3854 10
 10994 003e 7B68     		ldr	r3, [r7, #4]
 10995 0040 5B6D     		ldr	r3, [r3, #84]
 10996              		.loc 1 3854 22
 10997 0042 5A1C     		adds	r2, r3, #1
 10998 0044 7B68     		ldr	r3, [r7, #4]
 10999 0046 5A65     		str	r2, [r3, #84]
3855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferCount--;
 11000              		.loc 1 3855 10
 11001 0048 7B68     		ldr	r3, [r7, #4]
 11002 004a B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 11003 004e 9BB2     		uxth	r3, r3
 11004              		.loc 1 3855 23
 11005 0050 013B     		subs	r3, r3, #1
 11006 0052 9AB2     		uxth	r2, r3
 11007 0054 7B68     		ldr	r3, [r7, #4]
 11008 0056 A3F85A20 		strh	r2, [r3, #90]	@ movhi
3856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
 11009              		.loc 1 3857 14
 11010 005a 7B68     		ldr	r3, [r7, #4]
 11011 005c B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 11012 0060 9BB2     		uxth	r3, r3
 11013              		.loc 1 3857 8
 11014 0062 002B     		cmp	r3, #0
 11015 0064 7BD1     		bne	.L626
 11016              	.L617:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 284


 11017              	.LBB788:
3858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
3859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupts */
3860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 11018              		.loc 1 3860 7 discriminator 1
 11019 0066 7B68     		ldr	r3, [r7, #4]
 11020 0068 1B68     		ldr	r3, [r3]
 11021 006a BB63     		str	r3, [r7, #56]
 11022              	.LBB789:
 11023              	.LBB790:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11024              		.loc 2 1072 4 discriminator 1
 11025 006c BB6B     		ldr	r3, [r7, #56]
 11026              		.syntax unified
 11027              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11028 006e 53E8003F 		ldrex r3, [r3]
 11029              	@ 0 "" 2
 11030              		.thumb
 11031              		.syntax unified
 11032 0072 7B63     		str	r3, [r7, #52]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11033              		.loc 2 1073 10 discriminator 1
 11034 0074 7B6B     		ldr	r3, [r7, #52]
 11035              	.LBE790:
 11036              	.LBE789:
 11037              		.loc 1 3860 7 discriminator 1
 11038 0076 23F49073 		bic	r3, r3, #288
 11039 007a 3B65     		str	r3, [r7, #80]
 11040 007c 7B68     		ldr	r3, [r7, #4]
 11041 007e 1B68     		ldr	r3, [r3]
 11042 0080 1A46     		mov	r2, r3
 11043 0082 3B6D     		ldr	r3, [r7, #80]
 11044 0084 7B64     		str	r3, [r7, #68]
 11045 0086 3A64     		str	r2, [r7, #64]
 11046              	.LBB791:
 11047              	.LBB792:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11048              		.loc 2 1123 4 discriminator 1
 11049 0088 396C     		ldr	r1, [r7, #64]
 11050 008a 7A6C     		ldr	r2, [r7, #68]
 11051              		.syntax unified
 11052              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11053 008c 41E80023 		strex r3, r2, [r1]
 11054              	@ 0 "" 2
 11055              		.thumb
 11056              		.syntax unified
 11057 0090 FB63     		str	r3, [r7, #60]
 11058              		.loc 2 1124 10 discriminator 1
 11059 0092 FB6B     		ldr	r3, [r7, #60]
 11060              	.LBE792:
 11061              	.LBE791:
 11062              		.loc 1 3860 7 discriminator 1
 11063 0094 002B     		cmp	r3, #0
 11064 0096 E6D1     		bne	.L617
 11065              	.L620:
 11066              	.LBE788:
 11067              	.LBB793:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 285


3861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 11068              		.loc 1 3863 7 discriminator 1
 11069 0098 7B68     		ldr	r3, [r7, #4]
 11070 009a 1B68     		ldr	r3, [r3]
 11071 009c 0833     		adds	r3, r3, #8
 11072 009e 7B62     		str	r3, [r7, #36]
 11073              	.LBB794:
 11074              	.LBB795:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11075              		.loc 2 1072 4 discriminator 1
 11076 00a0 7B6A     		ldr	r3, [r7, #36]
 11077              		.syntax unified
 11078              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11079 00a2 53E8003F 		ldrex r3, [r3]
 11080              	@ 0 "" 2
 11081              		.thumb
 11082              		.syntax unified
 11083 00a6 3B62     		str	r3, [r7, #32]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11084              		.loc 2 1073 10 discriminator 1
 11085 00a8 3B6A     		ldr	r3, [r7, #32]
 11086              	.LBE795:
 11087              	.LBE794:
 11088              		.loc 1 3863 7 discriminator 1
 11089 00aa 23F00103 		bic	r3, r3, #1
 11090 00ae FB64     		str	r3, [r7, #76]
 11091 00b0 7B68     		ldr	r3, [r7, #4]
 11092 00b2 1B68     		ldr	r3, [r3]
 11093 00b4 0833     		adds	r3, r3, #8
 11094 00b6 FA6C     		ldr	r2, [r7, #76]
 11095 00b8 3A63     		str	r2, [r7, #48]
 11096 00ba FB62     		str	r3, [r7, #44]
 11097              	.LBB796:
 11098              	.LBB797:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11099              		.loc 2 1123 4 discriminator 1
 11100 00bc F96A     		ldr	r1, [r7, #44]
 11101 00be 3A6B     		ldr	r2, [r7, #48]
 11102              		.syntax unified
 11103              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11104 00c0 41E80023 		strex r3, r2, [r1]
 11105              	@ 0 "" 2
 11106              		.thumb
 11107              		.syntax unified
 11108 00c4 BB62     		str	r3, [r7, #40]
 11109              		.loc 2 1124 10 discriminator 1
 11110 00c6 BB6A     		ldr	r3, [r7, #40]
 11111              	.LBE797:
 11112              	.LBE796:
 11113              		.loc 1 3863 7 discriminator 1
 11114 00c8 002B     		cmp	r3, #0
 11115 00ca E5D1     		bne	.L620
 11116              	.LBE793:
3864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 286


3866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 11117              		.loc 1 3866 22
 11118 00cc 7B68     		ldr	r3, [r7, #4]
 11119 00ce 2022     		movs	r2, #32
 11120 00d0 C3F88020 		str	r2, [r3, #128]
3867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Clear RxISR function pointer */
3869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->RxISR = NULL;
 11121              		.loc 1 3869 20
 11122 00d4 7B68     		ldr	r3, [r7, #4]
 11123 00d6 0022     		movs	r2, #0
 11124 00d8 9A66     		str	r2, [r3, #104]
3870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Initialize type of RxEvent to Transfer Complete */
3872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->RxEventType = HAL_UART_RXEVENT_TC;
 11125              		.loc 1 3872 26
 11126 00da 7B68     		ldr	r3, [r7, #4]
 11127 00dc 0022     		movs	r2, #0
 11128 00de 5A66     		str	r2, [r3, #100]
3873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Check current reception Mode :
3875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****          If Reception till IDLE event has been selected : */
3876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 11129              		.loc 1 3876 16
 11130 00e0 7B68     		ldr	r3, [r7, #4]
 11131 00e2 1B6E     		ldr	r3, [r3, #96]
 11132              		.loc 1 3876 10
 11133 00e4 012B     		cmp	r3, #1
 11134 00e6 2ED1     		bne	.L621
3877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
3878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Set reception type to Standard */
3879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 11135              		.loc 1 3879 30
 11136 00e8 7B68     		ldr	r3, [r7, #4]
 11137 00ea 0022     		movs	r2, #0
 11138 00ec 1A66     		str	r2, [r3, #96]
 11139              	.L624:
 11140              	.LBB798:
3880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Disable IDLE interrupt */
3882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 11141              		.loc 1 3882 9 discriminator 1
 11142 00ee 7B68     		ldr	r3, [r7, #4]
 11143 00f0 1B68     		ldr	r3, [r3]
 11144 00f2 3B61     		str	r3, [r7, #16]
 11145              	.LBB799:
 11146              	.LBB800:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11147              		.loc 2 1072 4 discriminator 1
 11148 00f4 3B69     		ldr	r3, [r7, #16]
 11149              		.syntax unified
 11150              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11151 00f6 53E8003F 		ldrex r3, [r3]
 11152              	@ 0 "" 2
 11153              		.thumb
 11154              		.syntax unified
 11155 00fa FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 287


1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11156              		.loc 2 1073 10 discriminator 1
 11157 00fc FB68     		ldr	r3, [r7, #12]
 11158              	.LBE800:
 11159              	.LBE799:
 11160              		.loc 1 3882 9 discriminator 1
 11161 00fe 23F01003 		bic	r3, r3, #16
 11162 0102 BB64     		str	r3, [r7, #72]
 11163 0104 7B68     		ldr	r3, [r7, #4]
 11164 0106 1B68     		ldr	r3, [r3]
 11165 0108 1A46     		mov	r2, r3
 11166 010a BB6C     		ldr	r3, [r7, #72]
 11167 010c FB61     		str	r3, [r7, #28]
 11168 010e BA61     		str	r2, [r7, #24]
 11169              	.LBB801:
 11170              	.LBB802:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11171              		.loc 2 1123 4 discriminator 1
 11172 0110 B969     		ldr	r1, [r7, #24]
 11173 0112 FA69     		ldr	r2, [r7, #28]
 11174              		.syntax unified
 11175              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11176 0114 41E80023 		strex r3, r2, [r1]
 11177              	@ 0 "" 2
 11178              		.thumb
 11179              		.syntax unified
 11180 0118 7B61     		str	r3, [r7, #20]
 11181              		.loc 2 1124 10 discriminator 1
 11182 011a 7B69     		ldr	r3, [r7, #20]
 11183              	.LBE802:
 11184              	.LBE801:
 11185              		.loc 1 3882 9 discriminator 1
 11186 011c 002B     		cmp	r3, #0
 11187 011e E6D1     		bne	.L624
 11188              	.LBE798:
3883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 11189              		.loc 1 3884 13
 11190 0120 7B68     		ldr	r3, [r7, #4]
 11191 0122 1B68     		ldr	r3, [r3]
 11192 0124 DB69     		ldr	r3, [r3, #28]
 11193 0126 03F01003 		and	r3, r3, #16
 11194              		.loc 1 3884 12
 11195 012a 102B     		cmp	r3, #16
 11196 012c 03D1     		bne	.L625
3885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         {
3886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           /* Clear IDLE Flag */
3887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 11197              		.loc 1 3887 11
 11198 012e 7B68     		ldr	r3, [r7, #4]
 11199 0130 1B68     		ldr	r3, [r3]
 11200 0132 1022     		movs	r2, #16
 11201 0134 1A62     		str	r2, [r3, #32]
 11202              	.L625:
3888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         }
3889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 288


3891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /*Call registered Rx Event callback*/
3892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->RxEventCallback(huart, huart->RxXferSize);
3893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #else
3894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
3895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 11203              		.loc 1 3895 9
 11204 0136 7B68     		ldr	r3, [r7, #4]
 11205 0138 B3F85830 		ldrh	r3, [r3, #88]
 11206 013c 1946     		mov	r1, r3
 11207 013e 7868     		ldr	r0, [r7, #4]
 11208 0140 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
3896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
3897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
3898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       else
3899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
3900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Standard reception API called */
3901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /*Call registered Rx complete callback*/
3903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->RxCpltCallback(huart);
3904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #else
3905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /*Call legacy weak Rx complete callback*/
3906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         HAL_UART_RxCpltCallback(huart);
3907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
3909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
3910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
3911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
3912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
3913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
3914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
3916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 11209              		.loc 1 3916 1
 11210 0144 0BE0     		b	.L626
 11211              	.L621:
3906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 11212              		.loc 1 3906 9
 11213 0146 7868     		ldr	r0, [r7, #4]
 11214 0148 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 11215              		.loc 1 3916 1
 11216 014c 07E0     		b	.L626
 11217              	.L613:
3914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 11218              		.loc 1 3914 5
 11219 014e 7B68     		ldr	r3, [r7, #4]
 11220 0150 1B68     		ldr	r3, [r3]
 11221 0152 9A69     		ldr	r2, [r3, #24]
 11222 0154 7B68     		ldr	r3, [r7, #4]
 11223 0156 1B68     		ldr	r3, [r3]
 11224 0158 42F00802 		orr	r2, r2, #8
 11225 015c 9A61     		str	r2, [r3, #24]
 11226              	.L626:
 11227              		.loc 1 3916 1
 11228 015e 00BF     		nop
 11229 0160 5837     		adds	r7, r7, #88
 11230              	.LCFI352:
 11231              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 289


 11232 0162 BD46     		mov	sp, r7
 11233              	.LCFI353:
 11234              		.cfi_def_cfa_register 13
 11235              		@ sp needed
 11236 0164 80BD     		pop	{r7, pc}
 11237              		.cfi_endproc
 11238              	.LFE205:
 11240              		.section	.text.UART_RxISR_16BIT,"ax",%progbits
 11241              		.align	1
 11242              		.syntax unified
 11243              		.thumb
 11244              		.thumb_func
 11246              	UART_RxISR_16BIT:
 11247              	.LFB206:
3917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** /**
3919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @brief RX interrupt handler for 9 bits data word length .
3920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
3922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @param huart UART handle.
3923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   * @retval None
3924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   */
3925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart)
3926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** {
 11248              		.loc 1 3926 1
 11249              		.cfi_startproc
 11250              		@ args = 0, pretend = 0, frame = 88
 11251              		@ frame_needed = 1, uses_anonymous_args = 0
 11252 0000 80B5     		push	{r7, lr}
 11253              	.LCFI354:
 11254              		.cfi_def_cfa_offset 8
 11255              		.cfi_offset 7, -8
 11256              		.cfi_offset 14, -4
 11257 0002 96B0     		sub	sp, sp, #88
 11258              	.LCFI355:
 11259              		.cfi_def_cfa_offset 96
 11260 0004 00AF     		add	r7, sp, #0
 11261              	.LCFI356:
 11262              		.cfi_def_cfa_register 7
 11263 0006 7860     		str	r0, [r7, #4]
3927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t *tmp;
3928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 11264              		.loc 1 3928 12
 11265 0008 7B68     		ldr	r3, [r7, #4]
 11266 000a B3F85C30 		ldrh	r3, [r3, #92]	@ movhi
 11267 000e A7F85630 		strh	r3, [r7, #86]	@ movhi
3929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   uint16_t  uhdata;
3930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 11268              		.loc 1 3932 12
 11269 0012 7B68     		ldr	r3, [r7, #4]
 11270 0014 D3F88030 		ldr	r3, [r3, #128]
 11271              		.loc 1 3932 6
 11272 0018 222B     		cmp	r3, #34
 11273 001a 40F09880 		bne	.L628
3933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 290


3934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 11274              		.loc 1 3934 25
 11275 001e 7B68     		ldr	r3, [r7, #4]
 11276 0020 1B68     		ldr	r3, [r3]
 11277 0022 5B6A     		ldr	r3, [r3, #36]
 11278              		.loc 1 3934 12
 11279 0024 A7F85430 		strh	r3, [r7, #84]	@ movhi
3935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     tmp = (uint16_t *) huart->pRxBuffPtr ;
 11280              		.loc 1 3935 9
 11281 0028 7B68     		ldr	r3, [r7, #4]
 11282 002a 5B6D     		ldr	r3, [r3, #84]
 11283 002c 3B65     		str	r3, [r7, #80]
3936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     *tmp = (uint16_t)(uhdata & uhMask);
 11284              		.loc 1 3936 12
 11285 002e B7F85420 		ldrh	r2, [r7, #84]	@ movhi
 11286 0032 B7F85630 		ldrh	r3, [r7, #86]	@ movhi
 11287 0036 1340     		ands	r3, r3, r2
 11288 0038 9AB2     		uxth	r2, r3
 11289              		.loc 1 3936 10
 11290 003a 3B6D     		ldr	r3, [r7, #80]
 11291 003c 1A80     		strh	r2, [r3]	@ movhi
3937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->pRxBuffPtr += 2U;
 11292              		.loc 1 3937 23
 11293 003e 7B68     		ldr	r3, [r7, #4]
 11294 0040 5B6D     		ldr	r3, [r3, #84]
 11295 0042 9A1C     		adds	r2, r3, #2
 11296 0044 7B68     		ldr	r3, [r7, #4]
 11297 0046 5A65     		str	r2, [r3, #84]
3938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     huart->RxXferCount--;
 11298              		.loc 1 3938 10
 11299 0048 7B68     		ldr	r3, [r7, #4]
 11300 004a B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 11301 004e 9BB2     		uxth	r3, r3
 11302              		.loc 1 3938 23
 11303 0050 013B     		subs	r3, r3, #1
 11304 0052 9AB2     		uxth	r2, r3
 11305 0054 7B68     		ldr	r3, [r7, #4]
 11306 0056 A3F85A20 		strh	r2, [r3, #90]	@ movhi
3939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
 11307              		.loc 1 3940 14
 11308 005a 7B68     		ldr	r3, [r7, #4]
 11309 005c B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 11310 0060 9BB2     		uxth	r3, r3
 11311              		.loc 1 3940 8
 11312 0062 002B     		cmp	r3, #0
 11313 0064 7BD1     		bne	.L641
 11314              	.L632:
 11315              	.LBB803:
3941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     {
3942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
3943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 11316              		.loc 1 3943 7 discriminator 1
 11317 0066 7B68     		ldr	r3, [r7, #4]
 11318 0068 1B68     		ldr	r3, [r3]
 11319 006a 7B63     		str	r3, [r7, #52]
 11320              	.LBB804:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 291


 11321              	.LBB805:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11322              		.loc 2 1072 4 discriminator 1
 11323 006c 7B6B     		ldr	r3, [r7, #52]
 11324              		.syntax unified
 11325              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11326 006e 53E8003F 		ldrex r3, [r3]
 11327              	@ 0 "" 2
 11328              		.thumb
 11329              		.syntax unified
 11330 0072 3B63     		str	r3, [r7, #48]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11331              		.loc 2 1073 10 discriminator 1
 11332 0074 3B6B     		ldr	r3, [r7, #48]
 11333              	.LBE805:
 11334              	.LBE804:
 11335              		.loc 1 3943 7 discriminator 1
 11336 0076 23F49073 		bic	r3, r3, #288
 11337 007a FB64     		str	r3, [r7, #76]
 11338 007c 7B68     		ldr	r3, [r7, #4]
 11339 007e 1B68     		ldr	r3, [r3]
 11340 0080 1A46     		mov	r2, r3
 11341 0082 FB6C     		ldr	r3, [r7, #76]
 11342 0084 3B64     		str	r3, [r7, #64]
 11343 0086 FA63     		str	r2, [r7, #60]
 11344              	.LBB806:
 11345              	.LBB807:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11346              		.loc 2 1123 4 discriminator 1
 11347 0088 F96B     		ldr	r1, [r7, #60]
 11348 008a 3A6C     		ldr	r2, [r7, #64]
 11349              		.syntax unified
 11350              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11351 008c 41E80023 		strex r3, r2, [r1]
 11352              	@ 0 "" 2
 11353              		.thumb
 11354              		.syntax unified
 11355 0090 BB63     		str	r3, [r7, #56]
 11356              		.loc 2 1124 10 discriminator 1
 11357 0092 BB6B     		ldr	r3, [r7, #56]
 11358              	.LBE807:
 11359              	.LBE806:
 11360              		.loc 1 3943 7 discriminator 1
 11361 0094 002B     		cmp	r3, #0
 11362 0096 E6D1     		bne	.L632
 11363              	.L635:
 11364              	.LBE803:
 11365              	.LBB808:
3944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 11366              		.loc 1 3946 7 discriminator 1
 11367 0098 7B68     		ldr	r3, [r7, #4]
 11368 009a 1B68     		ldr	r3, [r3]
 11369 009c 0833     		adds	r3, r3, #8
 11370 009e 3B62     		str	r3, [r7, #32]
 11371              	.LBB809:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 292


 11372              	.LBB810:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11373              		.loc 2 1072 4 discriminator 1
 11374 00a0 3B6A     		ldr	r3, [r7, #32]
 11375              		.syntax unified
 11376              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11377 00a2 53E8003F 		ldrex r3, [r3]
 11378              	@ 0 "" 2
 11379              		.thumb
 11380              		.syntax unified
 11381 00a6 FB61     		str	r3, [r7, #28]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11382              		.loc 2 1073 10 discriminator 1
 11383 00a8 FB69     		ldr	r3, [r7, #28]
 11384              	.LBE810:
 11385              	.LBE809:
 11386              		.loc 1 3946 7 discriminator 1
 11387 00aa 23F00103 		bic	r3, r3, #1
 11388 00ae BB64     		str	r3, [r7, #72]
 11389 00b0 7B68     		ldr	r3, [r7, #4]
 11390 00b2 1B68     		ldr	r3, [r3]
 11391 00b4 0833     		adds	r3, r3, #8
 11392 00b6 BA6C     		ldr	r2, [r7, #72]
 11393 00b8 FA62     		str	r2, [r7, #44]
 11394 00ba BB62     		str	r3, [r7, #40]
 11395              	.LBB811:
 11396              	.LBB812:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11397              		.loc 2 1123 4 discriminator 1
 11398 00bc B96A     		ldr	r1, [r7, #40]
 11399 00be FA6A     		ldr	r2, [r7, #44]
 11400              		.syntax unified
 11401              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11402 00c0 41E80023 		strex r3, r2, [r1]
 11403              	@ 0 "" 2
 11404              		.thumb
 11405              		.syntax unified
 11406 00c4 7B62     		str	r3, [r7, #36]
 11407              		.loc 2 1124 10 discriminator 1
 11408 00c6 7B6A     		ldr	r3, [r7, #36]
 11409              	.LBE812:
 11410              	.LBE811:
 11411              		.loc 1 3946 7 discriminator 1
 11412 00c8 002B     		cmp	r3, #0
 11413 00ca E5D1     		bne	.L635
 11414              	.LBE808:
3947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 11415              		.loc 1 3949 22
 11416 00cc 7B68     		ldr	r3, [r7, #4]
 11417 00ce 2022     		movs	r2, #32
 11418 00d0 C3F88020 		str	r2, [r3, #128]
3950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Clear RxISR function pointer */
3952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->RxISR = NULL;
 11419              		.loc 1 3952 20
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 293


 11420 00d4 7B68     		ldr	r3, [r7, #4]
 11421 00d6 0022     		movs	r2, #0
 11422 00d8 9A66     		str	r2, [r3, #104]
3953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Initialize type of RxEvent to Transfer Complete */
3955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       huart->RxEventType = HAL_UART_RXEVENT_TC;
 11423              		.loc 1 3955 26
 11424 00da 7B68     		ldr	r3, [r7, #4]
 11425 00dc 0022     		movs	r2, #0
 11426 00de 5A66     		str	r2, [r3, #100]
3956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       /* Check current reception Mode :
3958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****          If Reception till IDLE event has been selected : */
3959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 11427              		.loc 1 3959 16
 11428 00e0 7B68     		ldr	r3, [r7, #4]
 11429 00e2 1B6E     		ldr	r3, [r3, #96]
 11430              		.loc 1 3959 10
 11431 00e4 012B     		cmp	r3, #1
 11432 00e6 2ED1     		bne	.L636
3960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
3961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Set reception type to Standard */
3962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 11433              		.loc 1 3962 30
 11434 00e8 7B68     		ldr	r3, [r7, #4]
 11435 00ea 0022     		movs	r2, #0
 11436 00ec 1A66     		str	r2, [r3, #96]
 11437              	.L639:
 11438              	.LBB813:
3963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Disable IDLE interrupt */
3965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 11439              		.loc 1 3965 9 discriminator 1
 11440 00ee 7B68     		ldr	r3, [r7, #4]
 11441 00f0 1B68     		ldr	r3, [r3]
 11442 00f2 FB60     		str	r3, [r7, #12]
 11443              	.LBB814:
 11444              	.LBB815:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11445              		.loc 2 1072 4 discriminator 1
 11446 00f4 FB68     		ldr	r3, [r7, #12]
 11447              		.syntax unified
 11448              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11449 00f6 53E8003F 		ldrex r3, [r3]
 11450              	@ 0 "" 2
 11451              		.thumb
 11452              		.syntax unified
 11453 00fa BB60     		str	r3, [r7, #8]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11454              		.loc 2 1073 10 discriminator 1
 11455 00fc BB68     		ldr	r3, [r7, #8]
 11456              	.LBE815:
 11457              	.LBE814:
 11458              		.loc 1 3965 9 discriminator 1
 11459 00fe 23F01003 		bic	r3, r3, #16
 11460 0102 7B64     		str	r3, [r7, #68]
 11461 0104 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 294


 11462 0106 1B68     		ldr	r3, [r3]
 11463 0108 1A46     		mov	r2, r3
 11464 010a 7B6C     		ldr	r3, [r7, #68]
 11465 010c BB61     		str	r3, [r7, #24]
 11466 010e 7A61     		str	r2, [r7, #20]
 11467              	.LBB816:
 11468              	.LBB817:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11469              		.loc 2 1123 4 discriminator 1
 11470 0110 7969     		ldr	r1, [r7, #20]
 11471 0112 BA69     		ldr	r2, [r7, #24]
 11472              		.syntax unified
 11473              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11474 0114 41E80023 		strex r3, r2, [r1]
 11475              	@ 0 "" 2
 11476              		.thumb
 11477              		.syntax unified
 11478 0118 3B61     		str	r3, [r7, #16]
 11479              		.loc 2 1124 10 discriminator 1
 11480 011a 3B69     		ldr	r3, [r7, #16]
 11481              	.LBE817:
 11482              	.LBE816:
 11483              		.loc 1 3965 9 discriminator 1
 11484 011c 002B     		cmp	r3, #0
 11485 011e E6D1     		bne	.L639
 11486              	.LBE813:
3966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 11487              		.loc 1 3967 13
 11488 0120 7B68     		ldr	r3, [r7, #4]
 11489 0122 1B68     		ldr	r3, [r3]
 11490 0124 DB69     		ldr	r3, [r3, #28]
 11491 0126 03F01003 		and	r3, r3, #16
 11492              		.loc 1 3967 12
 11493 012a 102B     		cmp	r3, #16
 11494 012c 03D1     		bne	.L640
3968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         {
3969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           /* Clear IDLE Flag */
3970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 11495              		.loc 1 3970 11
 11496 012e 7B68     		ldr	r3, [r7, #4]
 11497 0130 1B68     		ldr	r3, [r3]
 11498 0132 1022     		movs	r2, #16
 11499 0134 1A62     		str	r2, [r3, #32]
 11500              	.L640:
3971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         }
3972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** 
3973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /*Call registered Rx Event callback*/
3975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->RxEventCallback(huart, huart->RxXferSize);
3976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #else
3977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
3978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 11501              		.loc 1 3978 9
 11502 0136 7B68     		ldr	r3, [r7, #4]
 11503 0138 B3F85830 		ldrh	r3, [r3, #88]
 11504 013c 1946     		mov	r1, r3
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 295


 11505 013e 7868     		ldr	r0, [r7, #4]
 11506 0140 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
3979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
3980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
3981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       else
3982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       {
3983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /* Standard reception API called */
3984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /*Call registered Rx complete callback*/
3986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         huart->RxCpltCallback(huart);
3987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #else
3988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         /*Call legacy weak Rx complete callback*/
3989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****         HAL_UART_RxCpltCallback(huart);
3990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****       }
3992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     }
3993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
3994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   else
3995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   {
3996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
3997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
3999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** }
 11507              		.loc 1 3999 1
 11508 0144 0BE0     		b	.L641
 11509              	.L636:
3989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 11510              		.loc 1 3989 9
 11511 0146 7868     		ldr	r0, [r7, #4]
 11512 0148 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 11513              		.loc 1 3999 1
 11514 014c 07E0     		b	.L641
 11515              	.L628:
3997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c ****   }
 11516              		.loc 1 3997 5
 11517 014e 7B68     		ldr	r3, [r7, #4]
 11518 0150 1B68     		ldr	r3, [r3]
 11519 0152 9A69     		ldr	r2, [r3, #24]
 11520 0154 7B68     		ldr	r3, [r7, #4]
 11521 0156 1B68     		ldr	r3, [r3]
 11522 0158 42F00802 		orr	r2, r2, #8
 11523 015c 9A61     		str	r2, [r3, #24]
 11524              	.L641:
 11525              		.loc 1 3999 1
 11526 015e 00BF     		nop
 11527 0160 5837     		adds	r7, r7, #88
 11528              	.LCFI357:
 11529              		.cfi_def_cfa_offset 8
 11530 0162 BD46     		mov	sp, r7
 11531              	.LCFI358:
 11532              		.cfi_def_cfa_register 13
 11533              		@ sp needed
 11534 0164 80BD     		pop	{r7, pc}
 11535              		.cfi_endproc
 11536              	.LFE206:
 11538              		.text
 11539              	.Letext0:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 296


 11540              		.file 3 "d:\\3.tools\\arm_gcc_toolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 11541              		.file 4 "d:\\3.tools\\arm_gcc_toolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 11542              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 11543              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 11544              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 11545              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 11546              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 297


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f7xx_hal_uart.c
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:20     .text.HAL_UART_Init:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:26     .text.HAL_UART_Init:00000000 HAL_UART_Init
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:697    .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:7121   .text.UART_SetConfig:00000000 UART_SetConfig
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:7872   .text.UART_AdvFeatureConfig:00000000 UART_AdvFeatureConfig
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:8083   .text.UART_CheckIdleState:00000000 UART_CheckIdleState
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:143    .text.HAL_HalfDuplex_Init:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:149    .text.HAL_HalfDuplex_Init:00000000 HAL_HalfDuplex_Init
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:273    .text.HAL_LIN_Init:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:279    .text.HAL_LIN_Init:00000000 HAL_LIN_Init
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:434    .text.HAL_MultiProcessor_Init:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:440    .text.HAL_MultiProcessor_Init:00000000 HAL_MultiProcessor_Init
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:585    .text.HAL_UART_DeInit:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:591    .text.HAL_UART_DeInit:00000000 HAL_UART_DeInit
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:739    .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:691    .text.HAL_UART_MspInit:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:733    .text.HAL_UART_MspDeInit:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:775    .text.HAL_UART_Transmit:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:781    .text.HAL_UART_Transmit:00000000 HAL_UART_Transmit
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:8177   .text.UART_WaitOnFlagUntilTimeout:00000000 UART_WaitOnFlagUntilTimeout
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:980    .text.HAL_UART_Receive:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:986    .text.HAL_UART_Receive:00000000 HAL_UART_Receive
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:1257   .text.HAL_UART_Transmit_IT:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:1263   .text.HAL_UART_Transmit_IT:00000000 HAL_UART_Transmit_IT
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:1424   .text.HAL_UART_Transmit_IT:000000b4 $d
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:10658  .text.UART_TxISR_16BIT:00000000 UART_TxISR_16BIT
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:10474  .text.UART_TxISR_8BIT:00000000 UART_TxISR_8BIT
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:1430   .text.HAL_UART_Receive_IT:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:1436   .text.HAL_UART_Receive_IT:00000000 HAL_UART_Receive_IT
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:8521   .text.UART_Start_Receive_IT:00000000 UART_Start_Receive_IT
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:1565   .text.HAL_UART_Transmit_DMA:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:1571   .text.HAL_UART_Transmit_DMA:00000000 HAL_UART_Transmit_DMA
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:1770   .text.HAL_UART_Transmit_DMA:000000ec $d
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:9442   .text.UART_DMATransmitCplt:00000000 UART_DMATransmitCplt
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:9601   .text.UART_DMATxHalfCplt:00000000 UART_DMATxHalfCplt
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:9999   .text.UART_DMAError:00000000 UART_DMAError
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:1777   .text.HAL_UART_Receive_DMA:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:1783   .text.HAL_UART_Receive_DMA:00000000 HAL_UART_Receive_DMA
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:8850   .text.UART_Start_Receive_DMA:00000000 UART_Start_Receive_DMA
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:1912   .text.HAL_UART_DMAPause:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:1918   .text.HAL_UART_DMAPause:00000000 HAL_UART_DMAPause
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:2193   .text.HAL_UART_DMAResume:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:2199   .text.HAL_UART_DMAResume:00000000 HAL_UART_DMAResume
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:2465   .text.HAL_UART_DMAStop:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:2471   .text.HAL_UART_DMAStop:00000000 HAL_UART_DMAStop
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:9136   .text.UART_EndTxTransfer:00000000 UART_EndTxTransfer
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:9231   .text.UART_EndRxTransfer:00000000 UART_EndRxTransfer
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:2712   .text.HAL_UART_Abort:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:2718   .text.HAL_UART_Abort:00000000 HAL_UART_Abort
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:3142   .text.HAL_UART_AbortTransmit:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:3148   .text.HAL_UART_AbortTransmit:00000000 HAL_UART_AbortTransmit
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:3338   .text.HAL_UART_AbortReceive:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:3344   .text.HAL_UART_AbortReceive:00000000 HAL_UART_AbortReceive
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:3659   .text.HAL_UART_Abort_IT:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:3665   .text.HAL_UART_Abort_IT:00000000 HAL_UART_Abort_IT
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 298


C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:5927   .text.HAL_UART_AbortCpltCallback:00000000 HAL_UART_AbortCpltCallback
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:4145   .text.HAL_UART_Abort_IT:00000244 $d
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:10149  .text.UART_DMATxAbortCallback:00000000 UART_DMATxAbortCallback
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:10247  .text.UART_DMARxAbortCallback:00000000 UART_DMARxAbortCallback
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:4151   .text.HAL_UART_AbortTransmit_IT:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:4157   .text.HAL_UART_AbortTransmit_IT:00000000 HAL_UART_AbortTransmit_IT
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:5969   .text.HAL_UART_AbortTransmitCpltCallback:00000000 HAL_UART_AbortTransmitCpltCallback
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:4367   .text.HAL_UART_AbortTransmit_IT:000000ec $d
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:10353  .text.UART_DMATxOnlyAbortCallback:00000000 UART_DMATxOnlyAbortCallback
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:4372   .text.HAL_UART_AbortReceive_IT:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:4378   .text.HAL_UART_AbortReceive_IT:00000000 HAL_UART_AbortReceive_IT
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:6011   .text.HAL_UART_AbortReceiveCpltCallback:00000000 HAL_UART_AbortReceiveCpltCallback
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:4722   .text.HAL_UART_AbortReceive_IT:0000018c $d
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:10405  .text.UART_DMARxOnlyAbortCallback:00000000 UART_DMARxOnlyAbortCallback
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:4727   .text.HAL_UART_IRQHandler:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:4733   .text.HAL_UART_IRQHandler:00000000 HAL_UART_IRQHandler
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:5885   .text.HAL_UART_ErrorCallback:00000000 HAL_UART_ErrorCallback
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:5129   .text.HAL_UART_IRQHandler:00000298 $d
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:10097  .text.UART_DMAAbortOnError:00000000 UART_DMAAbortOnError
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:5133   .text.HAL_UART_IRQHandler:000002a0 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:6053   .text.HAL_UARTEx_RxEventCallback:00000000 HAL_UARTEx_RxEventCallback
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:10847  .text.UART_EndTransmit_IT:00000000 UART_EndTransmit_IT
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:5711   .text.HAL_UART_TxCpltCallback:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:5717   .text.HAL_UART_TxCpltCallback:00000000 HAL_UART_TxCpltCallback
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:5753   .text.HAL_UART_TxHalfCpltCallback:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:5759   .text.HAL_UART_TxHalfCpltCallback:00000000 HAL_UART_TxHalfCpltCallback
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:5795   .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:5801   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:5837   .text.HAL_UART_RxHalfCpltCallback:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:5843   .text.HAL_UART_RxHalfCpltCallback:00000000 HAL_UART_RxHalfCpltCallback
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:5879   .text.HAL_UART_ErrorCallback:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:5921   .text.HAL_UART_AbortCpltCallback:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:5963   .text.HAL_UART_AbortTransmitCpltCallback:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:6005   .text.HAL_UART_AbortReceiveCpltCallback:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:6047   .text.HAL_UARTEx_RxEventCallback:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:6091   .text.HAL_UART_ReceiverTimeout_Config:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:6097   .text.HAL_UART_ReceiverTimeout_Config:00000000 HAL_UART_ReceiverTimeout_Config
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:6144   .text.HAL_UART_EnableReceiverTimeout:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:6150   .text.HAL_UART_EnableReceiverTimeout:00000000 HAL_UART_EnableReceiverTimeout
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:6232   .text.HAL_UART_DisableReceiverTimeout:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:6238   .text.HAL_UART_DisableReceiverTimeout:00000000 HAL_UART_DisableReceiverTimeout
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:6320   .text.HAL_MultiProcessor_EnableMuteMode:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:6326   .text.HAL_MultiProcessor_EnableMuteMode:00000000 HAL_MultiProcessor_EnableMuteMode
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:6434   .text.HAL_MultiProcessor_DisableMuteMode:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:6440   .text.HAL_MultiProcessor_DisableMuteMode:00000000 HAL_MultiProcessor_DisableMuteMode
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:6548   .text.HAL_MultiProcessor_EnterMuteMode:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:6554   .text.HAL_MultiProcessor_EnterMuteMode:00000000 HAL_MultiProcessor_EnterMuteMode
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:6598   .text.HAL_HalfDuplex_EnableTransmitter:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:6604   .text.HAL_HalfDuplex_EnableTransmitter:00000000 HAL_HalfDuplex_EnableTransmitter
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:6768   .text.HAL_HalfDuplex_EnableReceiver:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:6774   .text.HAL_HalfDuplex_EnableReceiver:00000000 HAL_HalfDuplex_EnableReceiver
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:6938   .text.HAL_LIN_SendBreak:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:6944   .text.HAL_LIN_SendBreak:00000000 HAL_LIN_SendBreak
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:7016   .text.HAL_UART_GetState:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:7022   .text.HAL_UART_GetState:00000000 HAL_UART_GetState
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:7070   .text.HAL_UART_GetError:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:7076   .text.HAL_UART_GetError:00000000 HAL_UART_GetError
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s 			page 299


C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:7115   .text.UART_SetConfig:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:7220   .text.UART_SetConfig:00000090 $d
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:7224   .text.UART_SetConfig:000000a0 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:7267   .text.UART_SetConfig:000000dc $d
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:7280   .text.UART_SetConfig:00000110 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:7554   .text.UART_SetConfig:000002c4 $d
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:7565   .text.UART_SetConfig:000002e8 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:7637   .text.UART_SetConfig:00000360 $d
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:7646   .text.UART_SetConfig:00000384 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:7749   .text.UART_SetConfig:00000418 $d
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:7758   .text.UART_SetConfig:0000043c $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:7859   .text.UART_SetConfig:000004bc $d
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:7866   .text.UART_AdvFeatureConfig:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:8077   .text.UART_CheckIdleState:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:8171   .text.UART_WaitOnFlagUntilTimeout:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:8515   .text.UART_Start_Receive_IT:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:8838   .text.UART_Start_Receive_IT:00000184 $d
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:11246  .text.UART_RxISR_16BIT:00000000 UART_RxISR_16BIT
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:10945  .text.UART_RxISR_8BIT:00000000 UART_RxISR_8BIT
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:8844   .text.UART_Start_Receive_DMA:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:9124   .text.UART_Start_Receive_DMA:00000134 $d
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:9645   .text.UART_DMAReceiveCplt:00000000 UART_DMAReceiveCplt
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:9932   .text.UART_DMARxHalfCplt:00000000 UART_DMARxHalfCplt
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:9131   .text.UART_EndTxTransfer:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:9226   .text.UART_EndRxTransfer:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:9437   .text.UART_DMATransmitCplt:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:9596   .text.UART_DMATxHalfCplt:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:9640   .text.UART_DMAReceiveCplt:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:9927   .text.UART_DMARxHalfCplt:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:9994   .text.UART_DMAError:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:10092  .text.UART_DMAAbortOnError:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:10144  .text.UART_DMATxAbortCallback:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:10242  .text.UART_DMARxAbortCallback:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:10348  .text.UART_DMATxOnlyAbortCallback:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:10400  .text.UART_DMARxOnlyAbortCallback:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:10469  .text.UART_TxISR_8BIT:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:10653  .text.UART_TxISR_16BIT:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:10842  .text.UART_EndTransmit_IT:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:10940  .text.UART_RxISR_8BIT:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccBHKxlb.s:11241  .text.UART_RxISR_16BIT:00000000 $t

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_GetError
HAL_DMA_Abort_IT
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetPCLK2Freq
HAL_RCC_GetSysClockFreq
