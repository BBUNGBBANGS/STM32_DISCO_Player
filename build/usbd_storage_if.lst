ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccftdYkc.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"usbd_storage_if.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	STORAGE_Inquirydata_HS
  20              		.section	.rodata.STORAGE_Inquirydata_HS,"a"
  21              		.align	2
  24              	STORAGE_Inquirydata_HS:
  25 0000 00800202 		.ascii	"\000\200\002\002\037\000\000\000STM     Product    "
  25      1F000000 
  25      53544D20 
  25      20202020 
  25      50726F64 
  26 001b 20202020 		.ascii	"     0.01"
  26      20302E30 
  26      31
  27              		.global	USBD_Storage_Interface_fops_HS
  28              		.section	.data.USBD_Storage_Interface_fops_HS,"aw"
  29              		.align	2
  32              	USBD_Storage_Interface_fops_HS:
  33 0000 00000000 		.word	STORAGE_Init_HS
  34 0004 00000000 		.word	STORAGE_GetCapacity_HS
  35 0008 00000000 		.word	STORAGE_IsReady_HS
  36 000c 00000000 		.word	STORAGE_IsWriteProtected_HS
  37 0010 00000000 		.word	STORAGE_Read_HS
  38 0014 00000000 		.word	STORAGE_Write_HS
  39 0018 00000000 		.word	STORAGE_GetMaxLun_HS
  40 001c 00000000 		.word	STORAGE_Inquirydata_HS
  41              		.section	.text.STORAGE_Init_HS,"ax",%progbits
  42              		.align	1
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  47              	STORAGE_Init_HS:
  48              	.LFB145:
  49              		.file 1 "USB_DEVICE/App/usbd_storage_if.c"
   1:USB_DEVICE/App/usbd_storage_if.c **** /* USER CODE BEGIN Header */
   2:USB_DEVICE/App/usbd_storage_if.c **** /**
   3:USB_DEVICE/App/usbd_storage_if.c ****   ******************************************************************************
   4:USB_DEVICE/App/usbd_storage_if.c ****   * @file           : usbd_storage_if.c
   5:USB_DEVICE/App/usbd_storage_if.c ****   * @version        : v1.0_Cube
   6:USB_DEVICE/App/usbd_storage_if.c ****   * @brief          : Memory management layer.
   7:USB_DEVICE/App/usbd_storage_if.c ****   ******************************************************************************
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccftdYkc.s 			page 2


   8:USB_DEVICE/App/usbd_storage_if.c ****   * @attention
   9:USB_DEVICE/App/usbd_storage_if.c ****   *
  10:USB_DEVICE/App/usbd_storage_if.c ****   * Copyright (c) 2023 STMicroelectronics.
  11:USB_DEVICE/App/usbd_storage_if.c ****   * All rights reserved.
  12:USB_DEVICE/App/usbd_storage_if.c ****   *
  13:USB_DEVICE/App/usbd_storage_if.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:USB_DEVICE/App/usbd_storage_if.c ****   * in the root directory of this software component.
  15:USB_DEVICE/App/usbd_storage_if.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:USB_DEVICE/App/usbd_storage_if.c ****   *
  17:USB_DEVICE/App/usbd_storage_if.c ****   ******************************************************************************
  18:USB_DEVICE/App/usbd_storage_if.c ****   */
  19:USB_DEVICE/App/usbd_storage_if.c **** /* USER CODE END Header */
  20:USB_DEVICE/App/usbd_storage_if.c **** 
  21:USB_DEVICE/App/usbd_storage_if.c **** /* Includes ------------------------------------------------------------------*/
  22:USB_DEVICE/App/usbd_storage_if.c **** #include "usbd_storage_if.h"
  23:USB_DEVICE/App/usbd_storage_if.c **** #include "bsp_driver_sd.h"
  24:USB_DEVICE/App/usbd_storage_if.c **** /* USER CODE BEGIN INCLUDE */
  25:USB_DEVICE/App/usbd_storage_if.c **** 
  26:USB_DEVICE/App/usbd_storage_if.c **** /* USER CODE END INCLUDE */
  27:USB_DEVICE/App/usbd_storage_if.c **** 
  28:USB_DEVICE/App/usbd_storage_if.c **** /* Private typedef -----------------------------------------------------------*/
  29:USB_DEVICE/App/usbd_storage_if.c **** /* Private define ------------------------------------------------------------*/
  30:USB_DEVICE/App/usbd_storage_if.c **** /* Private macro -------------------------------------------------------------*/
  31:USB_DEVICE/App/usbd_storage_if.c **** 
  32:USB_DEVICE/App/usbd_storage_if.c **** /* USER CODE BEGIN PV */
  33:USB_DEVICE/App/usbd_storage_if.c **** /* Private variables ---------------------------------------------------------*/
  34:USB_DEVICE/App/usbd_storage_if.c **** 
  35:USB_DEVICE/App/usbd_storage_if.c **** /* USER CODE END PV */
  36:USB_DEVICE/App/usbd_storage_if.c **** 
  37:USB_DEVICE/App/usbd_storage_if.c **** /** @addtogroup STM32_USB_OTG_DEVICE_LIBRARY
  38:USB_DEVICE/App/usbd_storage_if.c ****   * @brief Usb device.
  39:USB_DEVICE/App/usbd_storage_if.c ****   * @{
  40:USB_DEVICE/App/usbd_storage_if.c ****   */
  41:USB_DEVICE/App/usbd_storage_if.c **** 
  42:USB_DEVICE/App/usbd_storage_if.c **** /** @defgroup USBD_STORAGE
  43:USB_DEVICE/App/usbd_storage_if.c ****   * @brief Usb mass storage device module
  44:USB_DEVICE/App/usbd_storage_if.c ****   * @{
  45:USB_DEVICE/App/usbd_storage_if.c ****   */
  46:USB_DEVICE/App/usbd_storage_if.c **** 
  47:USB_DEVICE/App/usbd_storage_if.c **** /** @defgroup USBD_STORAGE_Private_TypesDefinitions
  48:USB_DEVICE/App/usbd_storage_if.c ****   * @brief Private types.
  49:USB_DEVICE/App/usbd_storage_if.c ****   * @{
  50:USB_DEVICE/App/usbd_storage_if.c ****   */
  51:USB_DEVICE/App/usbd_storage_if.c **** 
  52:USB_DEVICE/App/usbd_storage_if.c **** /* USER CODE BEGIN PRIVATE_TYPES */
  53:USB_DEVICE/App/usbd_storage_if.c **** 
  54:USB_DEVICE/App/usbd_storage_if.c **** /* USER CODE END PRIVATE_TYPES */
  55:USB_DEVICE/App/usbd_storage_if.c **** 
  56:USB_DEVICE/App/usbd_storage_if.c **** /**
  57:USB_DEVICE/App/usbd_storage_if.c ****   * @}
  58:USB_DEVICE/App/usbd_storage_if.c ****   */
  59:USB_DEVICE/App/usbd_storage_if.c **** 
  60:USB_DEVICE/App/usbd_storage_if.c **** /** @defgroup USBD_STORAGE_Private_Defines
  61:USB_DEVICE/App/usbd_storage_if.c ****   * @brief Private defines.
  62:USB_DEVICE/App/usbd_storage_if.c ****   * @{
  63:USB_DEVICE/App/usbd_storage_if.c ****   */
  64:USB_DEVICE/App/usbd_storage_if.c **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccftdYkc.s 			page 3


  65:USB_DEVICE/App/usbd_storage_if.c **** #define STORAGE_LUN_NBR                  1
  66:USB_DEVICE/App/usbd_storage_if.c **** #define STORAGE_BLK_NBR                  0x10000
  67:USB_DEVICE/App/usbd_storage_if.c **** #define STORAGE_BLK_SIZ                  0x200
  68:USB_DEVICE/App/usbd_storage_if.c **** 
  69:USB_DEVICE/App/usbd_storage_if.c **** /* USER CODE BEGIN PRIVATE_DEFINES */
  70:USB_DEVICE/App/usbd_storage_if.c **** /* USER CODE END PRIVATE_DEFINES */
  71:USB_DEVICE/App/usbd_storage_if.c **** 
  72:USB_DEVICE/App/usbd_storage_if.c **** /**
  73:USB_DEVICE/App/usbd_storage_if.c ****   * @}
  74:USB_DEVICE/App/usbd_storage_if.c ****   */
  75:USB_DEVICE/App/usbd_storage_if.c **** 
  76:USB_DEVICE/App/usbd_storage_if.c **** /** @defgroup USBD_STORAGE_Private_Macros
  77:USB_DEVICE/App/usbd_storage_if.c ****   * @brief Private macros.
  78:USB_DEVICE/App/usbd_storage_if.c ****   * @{
  79:USB_DEVICE/App/usbd_storage_if.c ****   */
  80:USB_DEVICE/App/usbd_storage_if.c **** 
  81:USB_DEVICE/App/usbd_storage_if.c **** /* USER CODE BEGIN PRIVATE_MACRO */
  82:USB_DEVICE/App/usbd_storage_if.c **** 
  83:USB_DEVICE/App/usbd_storage_if.c **** /* USER CODE END PRIVATE_MACRO */
  84:USB_DEVICE/App/usbd_storage_if.c **** 
  85:USB_DEVICE/App/usbd_storage_if.c **** /**
  86:USB_DEVICE/App/usbd_storage_if.c ****   * @}
  87:USB_DEVICE/App/usbd_storage_if.c ****   */
  88:USB_DEVICE/App/usbd_storage_if.c **** 
  89:USB_DEVICE/App/usbd_storage_if.c **** /** @defgroup USBD_STORAGE_Private_Variables
  90:USB_DEVICE/App/usbd_storage_if.c ****   * @brief Private variables.
  91:USB_DEVICE/App/usbd_storage_if.c ****   * @{
  92:USB_DEVICE/App/usbd_storage_if.c ****   */
  93:USB_DEVICE/App/usbd_storage_if.c **** 
  94:USB_DEVICE/App/usbd_storage_if.c **** /* USER CODE BEGIN INQUIRY_DATA_HS */
  95:USB_DEVICE/App/usbd_storage_if.c **** /** USB Mass storage Standard Inquiry Data. */
  96:USB_DEVICE/App/usbd_storage_if.c **** const int8_t STORAGE_Inquirydata_HS[] = {/* 36 */
  97:USB_DEVICE/App/usbd_storage_if.c **** 
  98:USB_DEVICE/App/usbd_storage_if.c ****   /* LUN 0 */
  99:USB_DEVICE/App/usbd_storage_if.c ****   0x00,
 100:USB_DEVICE/App/usbd_storage_if.c ****   0x80,
 101:USB_DEVICE/App/usbd_storage_if.c ****   0x02,
 102:USB_DEVICE/App/usbd_storage_if.c ****   0x02,
 103:USB_DEVICE/App/usbd_storage_if.c ****   (STANDARD_INQUIRY_DATA_LEN - 5),
 104:USB_DEVICE/App/usbd_storage_if.c ****   0x00,
 105:USB_DEVICE/App/usbd_storage_if.c ****   0x00,
 106:USB_DEVICE/App/usbd_storage_if.c ****   0x00,
 107:USB_DEVICE/App/usbd_storage_if.c ****   'S', 'T', 'M', ' ', ' ', ' ', ' ', ' ', /* Manufacturer : 8 bytes */
 108:USB_DEVICE/App/usbd_storage_if.c ****   'P', 'r', 'o', 'd', 'u', 'c', 't', ' ', /* Product      : 16 Bytes */
 109:USB_DEVICE/App/usbd_storage_if.c ****   ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',
 110:USB_DEVICE/App/usbd_storage_if.c ****   '0', '.', '0' ,'1'                      /* Version      : 4 Bytes */
 111:USB_DEVICE/App/usbd_storage_if.c **** };
 112:USB_DEVICE/App/usbd_storage_if.c **** /* USER CODE END INQUIRY_DATA_HS */
 113:USB_DEVICE/App/usbd_storage_if.c **** 
 114:USB_DEVICE/App/usbd_storage_if.c **** /* USER CODE BEGIN PRIVATE_VARIABLES */
 115:USB_DEVICE/App/usbd_storage_if.c **** 
 116:USB_DEVICE/App/usbd_storage_if.c **** /* USER CODE END PRIVATE_VARIABLES */
 117:USB_DEVICE/App/usbd_storage_if.c **** 
 118:USB_DEVICE/App/usbd_storage_if.c **** /**
 119:USB_DEVICE/App/usbd_storage_if.c ****   * @}
 120:USB_DEVICE/App/usbd_storage_if.c ****   */
 121:USB_DEVICE/App/usbd_storage_if.c **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccftdYkc.s 			page 4


 122:USB_DEVICE/App/usbd_storage_if.c **** /** @defgroup USBD_STORAGE_Exported_Variables
 123:USB_DEVICE/App/usbd_storage_if.c ****   * @brief Public variables.
 124:USB_DEVICE/App/usbd_storage_if.c ****   * @{
 125:USB_DEVICE/App/usbd_storage_if.c ****   */
 126:USB_DEVICE/App/usbd_storage_if.c **** 
 127:USB_DEVICE/App/usbd_storage_if.c **** extern USBD_HandleTypeDef hUsbDeviceHS;
 128:USB_DEVICE/App/usbd_storage_if.c **** 
 129:USB_DEVICE/App/usbd_storage_if.c **** /* USER CODE BEGIN EXPORTED_VARIABLES */
 130:USB_DEVICE/App/usbd_storage_if.c **** 
 131:USB_DEVICE/App/usbd_storage_if.c **** /* USER CODE END EXPORTED_VARIABLES */
 132:USB_DEVICE/App/usbd_storage_if.c **** 
 133:USB_DEVICE/App/usbd_storage_if.c **** /**
 134:USB_DEVICE/App/usbd_storage_if.c ****   * @}
 135:USB_DEVICE/App/usbd_storage_if.c ****   */
 136:USB_DEVICE/App/usbd_storage_if.c **** 
 137:USB_DEVICE/App/usbd_storage_if.c **** /** @defgroup USBD_STORAGE_Private_FunctionPrototypes
 138:USB_DEVICE/App/usbd_storage_if.c ****   * @brief Private functions declaration.
 139:USB_DEVICE/App/usbd_storage_if.c ****   * @{
 140:USB_DEVICE/App/usbd_storage_if.c ****   */
 141:USB_DEVICE/App/usbd_storage_if.c **** 
 142:USB_DEVICE/App/usbd_storage_if.c **** static int8_t STORAGE_Init_HS(uint8_t lun);
 143:USB_DEVICE/App/usbd_storage_if.c **** static int8_t STORAGE_GetCapacity_HS(uint8_t lun, uint32_t *block_num, uint16_t *block_size);
 144:USB_DEVICE/App/usbd_storage_if.c **** static int8_t STORAGE_IsReady_HS(uint8_t lun);
 145:USB_DEVICE/App/usbd_storage_if.c **** static int8_t STORAGE_IsWriteProtected_HS(uint8_t lun);
 146:USB_DEVICE/App/usbd_storage_if.c **** static int8_t STORAGE_Read_HS(uint8_t lun, uint8_t *buf, uint32_t blk_addr, uint16_t blk_len);
 147:USB_DEVICE/App/usbd_storage_if.c **** static int8_t STORAGE_Write_HS(uint8_t lun, uint8_t *buf, uint32_t blk_addr, uint16_t blk_len);
 148:USB_DEVICE/App/usbd_storage_if.c **** static int8_t STORAGE_GetMaxLun_HS(void);
 149:USB_DEVICE/App/usbd_storage_if.c **** 
 150:USB_DEVICE/App/usbd_storage_if.c **** /* USER CODE BEGIN PRIVATE_FUNCTIONS_DECLARATION */
 151:USB_DEVICE/App/usbd_storage_if.c **** 
 152:USB_DEVICE/App/usbd_storage_if.c **** /* USER CODE END PRIVATE_FUNCTIONS_DECLARATION */
 153:USB_DEVICE/App/usbd_storage_if.c **** 
 154:USB_DEVICE/App/usbd_storage_if.c **** /**
 155:USB_DEVICE/App/usbd_storage_if.c ****   * @}
 156:USB_DEVICE/App/usbd_storage_if.c ****   */
 157:USB_DEVICE/App/usbd_storage_if.c **** 
 158:USB_DEVICE/App/usbd_storage_if.c **** USBD_StorageTypeDef USBD_Storage_Interface_fops_HS =
 159:USB_DEVICE/App/usbd_storage_if.c **** {
 160:USB_DEVICE/App/usbd_storage_if.c ****   STORAGE_Init_HS,
 161:USB_DEVICE/App/usbd_storage_if.c ****   STORAGE_GetCapacity_HS,
 162:USB_DEVICE/App/usbd_storage_if.c ****   STORAGE_IsReady_HS,
 163:USB_DEVICE/App/usbd_storage_if.c ****   STORAGE_IsWriteProtected_HS,
 164:USB_DEVICE/App/usbd_storage_if.c ****   STORAGE_Read_HS,
 165:USB_DEVICE/App/usbd_storage_if.c ****   STORAGE_Write_HS,
 166:USB_DEVICE/App/usbd_storage_if.c ****   STORAGE_GetMaxLun_HS,
 167:USB_DEVICE/App/usbd_storage_if.c ****   (int8_t *)STORAGE_Inquirydata_HS
 168:USB_DEVICE/App/usbd_storage_if.c **** };
 169:USB_DEVICE/App/usbd_storage_if.c **** 
 170:USB_DEVICE/App/usbd_storage_if.c **** /* Private functions ---------------------------------------------------------*/
 171:USB_DEVICE/App/usbd_storage_if.c **** 
 172:USB_DEVICE/App/usbd_storage_if.c **** /**
 173:USB_DEVICE/App/usbd_storage_if.c ****   * @brief  Initializes the storage unit (medium).
 174:USB_DEVICE/App/usbd_storage_if.c ****   * @param  lun: Logical unit number.
 175:USB_DEVICE/App/usbd_storage_if.c ****   * @retval USBD_OK if all operations are OK else USBD_FAIL
 176:USB_DEVICE/App/usbd_storage_if.c ****   */
 177:USB_DEVICE/App/usbd_storage_if.c **** int8_t STORAGE_Init_HS(uint8_t lun)
 178:USB_DEVICE/App/usbd_storage_if.c **** {
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccftdYkc.s 			page 5


  50              		.loc 1 178 1
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 16
  53              		@ frame_needed = 1, uses_anonymous_args = 0
  54 0000 80B5     		push	{r7, lr}
  55              	.LCFI0:
  56              		.cfi_def_cfa_offset 8
  57              		.cfi_offset 7, -8
  58              		.cfi_offset 14, -4
  59 0002 84B0     		sub	sp, sp, #16
  60              	.LCFI1:
  61              		.cfi_def_cfa_offset 24
  62 0004 00AF     		add	r7, sp, #0
  63              	.LCFI2:
  64              		.cfi_def_cfa_register 7
  65 0006 0346     		mov	r3, r0
  66 0008 FB71     		strb	r3, [r7, #7]
 179:USB_DEVICE/App/usbd_storage_if.c ****     int8_t ret = USBD_FAIL;
  67              		.loc 1 179 12
  68 000a 0323     		movs	r3, #3
  69 000c FB73     		strb	r3, [r7, #15]
 180:USB_DEVICE/App/usbd_storage_if.c **** 	ret = BSP_SD_Init();
  70              		.loc 1 180 8
  71 000e FFF7FEFF 		bl	BSP_SD_Init
  72 0012 0346     		mov	r3, r0
  73              		.loc 1 180 6
  74 0014 FB73     		strb	r3, [r7, #15]
 181:USB_DEVICE/App/usbd_storage_if.c ****     return ret;
  75              		.loc 1 181 12
  76 0016 97F90F30 		ldrsb	r3, [r7, #15]
 182:USB_DEVICE/App/usbd_storage_if.c **** }
  77              		.loc 1 182 1
  78 001a 1846     		mov	r0, r3
  79 001c 1037     		adds	r7, r7, #16
  80              	.LCFI3:
  81              		.cfi_def_cfa_offset 8
  82 001e BD46     		mov	sp, r7
  83              	.LCFI4:
  84              		.cfi_def_cfa_register 13
  85              		@ sp needed
  86 0020 80BD     		pop	{r7, pc}
  87              		.cfi_endproc
  88              	.LFE145:
  90              		.section	.text.STORAGE_GetCapacity_HS,"ax",%progbits
  91              		.align	1
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  96              	STORAGE_GetCapacity_HS:
  97              	.LFB146:
 183:USB_DEVICE/App/usbd_storage_if.c **** 
 184:USB_DEVICE/App/usbd_storage_if.c **** /**
 185:USB_DEVICE/App/usbd_storage_if.c ****   * @brief  Returns the medium capacity.
 186:USB_DEVICE/App/usbd_storage_if.c ****   * @param  lun: Logical unit number.
 187:USB_DEVICE/App/usbd_storage_if.c ****   * @param  block_num: Number of total block number.
 188:USB_DEVICE/App/usbd_storage_if.c ****   * @param  block_size: Block size.
 189:USB_DEVICE/App/usbd_storage_if.c ****   * @retval USBD_OK if all operations are OK else USBD_FAIL
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccftdYkc.s 			page 6


 190:USB_DEVICE/App/usbd_storage_if.c ****   */
 191:USB_DEVICE/App/usbd_storage_if.c **** int8_t STORAGE_GetCapacity_HS(uint8_t lun, uint32_t *block_num, uint16_t *block_size)
 192:USB_DEVICE/App/usbd_storage_if.c **** {
  98              		.loc 1 192 1
  99              		.cfi_startproc
 100              		@ args = 0, pretend = 0, frame = 56
 101              		@ frame_needed = 1, uses_anonymous_args = 0
 102 0000 80B5     		push	{r7, lr}
 103              	.LCFI5:
 104              		.cfi_def_cfa_offset 8
 105              		.cfi_offset 7, -8
 106              		.cfi_offset 14, -4
 107 0002 8EB0     		sub	sp, sp, #56
 108              	.LCFI6:
 109              		.cfi_def_cfa_offset 64
 110 0004 00AF     		add	r7, sp, #0
 111              	.LCFI7:
 112              		.cfi_def_cfa_register 7
 113 0006 0346     		mov	r3, r0
 114 0008 B960     		str	r1, [r7, #8]
 115 000a 7A60     		str	r2, [r7, #4]
 116 000c FB73     		strb	r3, [r7, #15]
 193:USB_DEVICE/App/usbd_storage_if.c ****     BSP_SD_CardInfo info;
 194:USB_DEVICE/App/usbd_storage_if.c ****     int8_t ret = -1;
 117              		.loc 1 194 12
 118 000e FF23     		movs	r3, #255
 119 0010 87F83730 		strb	r3, [r7, #55]
 195:USB_DEVICE/App/usbd_storage_if.c **** 
 196:USB_DEVICE/App/usbd_storage_if.c ****     if (BSP_SD_IsDetected() != SD_NOT_PRESENT)
 120              		.loc 1 196 9
 121 0014 FFF7FEFF 		bl	BSP_SD_IsDetected
 122 0018 0346     		mov	r3, r0
 123              		.loc 1 196 8
 124 001a 002B     		cmp	r3, #0
 125 001c 0FD0     		beq	.L4
 197:USB_DEVICE/App/usbd_storage_if.c ****     {
 198:USB_DEVICE/App/usbd_storage_if.c ****         BSP_SD_GetCardInfo(&info);
 126              		.loc 1 198 9
 127 001e 07F11403 		add	r3, r7, #20
 128 0022 1846     		mov	r0, r3
 129 0024 FFF7FEFF 		bl	BSP_SD_GetCardInfo
 199:USB_DEVICE/App/usbd_storage_if.c **** 
 200:USB_DEVICE/App/usbd_storage_if.c ****         *block_num = info.LogBlockNbr - 1;
 130              		.loc 1 200 26
 131 0028 FB6A     		ldr	r3, [r7, #44]
 132              		.loc 1 200 39
 133 002a 5A1E     		subs	r2, r3, #1
 134              		.loc 1 200 20
 135 002c BB68     		ldr	r3, [r7, #8]
 136 002e 1A60     		str	r2, [r3]
 201:USB_DEVICE/App/usbd_storage_if.c ****         *block_size = info.LogBlockSize;
 137              		.loc 1 201 27
 138 0030 3B6B     		ldr	r3, [r7, #48]
 139              		.loc 1 201 21
 140 0032 9AB2     		uxth	r2, r3
 141 0034 7B68     		ldr	r3, [r7, #4]
 142 0036 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccftdYkc.s 			page 7


 202:USB_DEVICE/App/usbd_storage_if.c ****         ret = USBD_OK;
 143              		.loc 1 202 13
 144 0038 0023     		movs	r3, #0
 145 003a 87F83730 		strb	r3, [r7, #55]
 146              	.L4:
 203:USB_DEVICE/App/usbd_storage_if.c ****     }
 204:USB_DEVICE/App/usbd_storage_if.c ****     return ret;
 147              		.loc 1 204 12
 148 003e 97F93730 		ldrsb	r3, [r7, #55]
 205:USB_DEVICE/App/usbd_storage_if.c **** }
 149              		.loc 1 205 1
 150 0042 1846     		mov	r0, r3
 151 0044 3837     		adds	r7, r7, #56
 152              	.LCFI8:
 153              		.cfi_def_cfa_offset 8
 154 0046 BD46     		mov	sp, r7
 155              	.LCFI9:
 156              		.cfi_def_cfa_register 13
 157              		@ sp needed
 158 0048 80BD     		pop	{r7, pc}
 159              		.cfi_endproc
 160              	.LFE146:
 162              		.section	.text.STORAGE_IsReady_HS,"ax",%progbits
 163              		.align	1
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 168              	STORAGE_IsReady_HS:
 169              	.LFB147:
 206:USB_DEVICE/App/usbd_storage_if.c **** 
 207:USB_DEVICE/App/usbd_storage_if.c **** /**
 208:USB_DEVICE/App/usbd_storage_if.c ****   * @brief   Checks whether the medium is ready.
 209:USB_DEVICE/App/usbd_storage_if.c ****   * @param  lun:  Logical unit number.
 210:USB_DEVICE/App/usbd_storage_if.c ****   * @retval USBD_OK if all operations are OK else USBD_FAIL
 211:USB_DEVICE/App/usbd_storage_if.c ****   */
 212:USB_DEVICE/App/usbd_storage_if.c **** int8_t STORAGE_IsReady_HS(uint8_t lun)
 213:USB_DEVICE/App/usbd_storage_if.c **** {
 170              		.loc 1 213 1
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 16
 173              		@ frame_needed = 1, uses_anonymous_args = 0
 174 0000 80B5     		push	{r7, lr}
 175              	.LCFI10:
 176              		.cfi_def_cfa_offset 8
 177              		.cfi_offset 7, -8
 178              		.cfi_offset 14, -4
 179 0002 84B0     		sub	sp, sp, #16
 180              	.LCFI11:
 181              		.cfi_def_cfa_offset 24
 182 0004 00AF     		add	r7, sp, #0
 183              	.LCFI12:
 184              		.cfi_def_cfa_register 7
 185 0006 0346     		mov	r3, r0
 186 0008 FB71     		strb	r3, [r7, #7]
 214:USB_DEVICE/App/usbd_storage_if.c ****     static int8_t prev_status = 0;
 215:USB_DEVICE/App/usbd_storage_if.c ****     int8_t ret = USBD_FAIL;
 187              		.loc 1 215 12
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccftdYkc.s 			page 8


 188 000a 0323     		movs	r3, #3
 189 000c FB73     		strb	r3, [r7, #15]
 216:USB_DEVICE/App/usbd_storage_if.c **** 
 217:USB_DEVICE/App/usbd_storage_if.c ****     if (BSP_SD_IsDetected() != SD_NOT_PRESENT)
 190              		.loc 1 217 9
 191 000e FFF7FEFF 		bl	BSP_SD_IsDetected
 192 0012 0346     		mov	r3, r0
 193              		.loc 1 217 8
 194 0014 002B     		cmp	r3, #0
 195 0016 11D0     		beq	.L7
 218:USB_DEVICE/App/usbd_storage_if.c ****     {
 219:USB_DEVICE/App/usbd_storage_if.c ****         if (prev_status < 0)
 196              		.loc 1 219 25
 197 0018 0F4B     		ldr	r3, .L11
 198 001a 93F90030 		ldrsb	r3, [r3]
 199              		.loc 1 219 12
 200 001e 002B     		cmp	r3, #0
 201 0020 04DA     		bge	.L8
 220:USB_DEVICE/App/usbd_storage_if.c ****         {
 221:USB_DEVICE/App/usbd_storage_if.c ****             BSP_SD_Init();
 202              		.loc 1 221 13
 203 0022 FFF7FEFF 		bl	BSP_SD_Init
 222:USB_DEVICE/App/usbd_storage_if.c ****             prev_status = 0;
 204              		.loc 1 222 25
 205 0026 0C4B     		ldr	r3, .L11
 206 0028 0022     		movs	r2, #0
 207 002a 1A70     		strb	r2, [r3]
 208              	.L8:
 223:USB_DEVICE/App/usbd_storage_if.c ****         }
 224:USB_DEVICE/App/usbd_storage_if.c ****         if (BSP_SD_GetCardState() == SD_TRANSFER_OK)
 209              		.loc 1 224 13
 210 002c FFF7FEFF 		bl	BSP_SD_GetCardState
 211 0030 0346     		mov	r3, r0
 212              		.loc 1 224 12
 213 0032 002B     		cmp	r3, #0
 214 0034 0AD1     		bne	.L9
 225:USB_DEVICE/App/usbd_storage_if.c ****         {
 226:USB_DEVICE/App/usbd_storage_if.c ****             ret = USBD_OK;
 215              		.loc 1 226 17
 216 0036 0023     		movs	r3, #0
 217 0038 FB73     		strb	r3, [r7, #15]
 218 003a 07E0     		b	.L9
 219              	.L7:
 227:USB_DEVICE/App/usbd_storage_if.c ****         }
 228:USB_DEVICE/App/usbd_storage_if.c ****     }
 229:USB_DEVICE/App/usbd_storage_if.c ****     else if (prev_status == 0)
 220              		.loc 1 229 26
 221 003c 064B     		ldr	r3, .L11
 222 003e 93F90030 		ldrsb	r3, [r3]
 223              		.loc 1 229 13
 224 0042 002B     		cmp	r3, #0
 225 0044 02D1     		bne	.L9
 230:USB_DEVICE/App/usbd_storage_if.c ****     {
 231:USB_DEVICE/App/usbd_storage_if.c ****         prev_status = -1;
 226              		.loc 1 231 21
 227 0046 044B     		ldr	r3, .L11
 228 0048 FF22     		movs	r2, #255
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccftdYkc.s 			page 9


 229 004a 1A70     		strb	r2, [r3]
 230              	.L9:
 232:USB_DEVICE/App/usbd_storage_if.c ****     }
 233:USB_DEVICE/App/usbd_storage_if.c ****     return ret;
 231              		.loc 1 233 12
 232 004c 97F90F30 		ldrsb	r3, [r7, #15]
 234:USB_DEVICE/App/usbd_storage_if.c **** }
 233              		.loc 1 234 1
 234 0050 1846     		mov	r0, r3
 235 0052 1037     		adds	r7, r7, #16
 236              	.LCFI13:
 237              		.cfi_def_cfa_offset 8
 238 0054 BD46     		mov	sp, r7
 239              	.LCFI14:
 240              		.cfi_def_cfa_register 13
 241              		@ sp needed
 242 0056 80BD     		pop	{r7, pc}
 243              	.L12:
 244              		.align	2
 245              	.L11:
 246 0058 00000000 		.word	prev_status.0
 247              		.cfi_endproc
 248              	.LFE147:
 250              		.section	.text.STORAGE_IsWriteProtected_HS,"ax",%progbits
 251              		.align	1
 252              		.syntax unified
 253              		.thumb
 254              		.thumb_func
 256              	STORAGE_IsWriteProtected_HS:
 257              	.LFB148:
 235:USB_DEVICE/App/usbd_storage_if.c **** 
 236:USB_DEVICE/App/usbd_storage_if.c **** /**
 237:USB_DEVICE/App/usbd_storage_if.c ****   * @brief  Checks whether the medium is write protected.
 238:USB_DEVICE/App/usbd_storage_if.c ****   * @param  lun: Logical unit number.
 239:USB_DEVICE/App/usbd_storage_if.c ****   * @retval USBD_OK if all operations are OK else USBD_FAIL
 240:USB_DEVICE/App/usbd_storage_if.c ****   */
 241:USB_DEVICE/App/usbd_storage_if.c **** int8_t STORAGE_IsWriteProtected_HS(uint8_t lun)
 242:USB_DEVICE/App/usbd_storage_if.c **** {
 258              		.loc 1 242 1
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 8
 261              		@ frame_needed = 1, uses_anonymous_args = 0
 262              		@ link register save eliminated.
 263 0000 80B4     		push	{r7}
 264              	.LCFI15:
 265              		.cfi_def_cfa_offset 4
 266              		.cfi_offset 7, -4
 267 0002 83B0     		sub	sp, sp, #12
 268              	.LCFI16:
 269              		.cfi_def_cfa_offset 16
 270 0004 00AF     		add	r7, sp, #0
 271              	.LCFI17:
 272              		.cfi_def_cfa_register 7
 273 0006 0346     		mov	r3, r0
 274 0008 FB71     		strb	r3, [r7, #7]
 243:USB_DEVICE/App/usbd_storage_if.c ****     return (USBD_OK);
 275              		.loc 1 243 12
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccftdYkc.s 			page 10


 276 000a 0023     		movs	r3, #0
 244:USB_DEVICE/App/usbd_storage_if.c **** }
 277              		.loc 1 244 1
 278 000c 1846     		mov	r0, r3
 279 000e 0C37     		adds	r7, r7, #12
 280              	.LCFI18:
 281              		.cfi_def_cfa_offset 4
 282 0010 BD46     		mov	sp, r7
 283              	.LCFI19:
 284              		.cfi_def_cfa_register 13
 285              		@ sp needed
 286 0012 5DF8047B 		ldr	r7, [sp], #4
 287              	.LCFI20:
 288              		.cfi_restore 7
 289              		.cfi_def_cfa_offset 0
 290 0016 7047     		bx	lr
 291              		.cfi_endproc
 292              	.LFE148:
 294              		.section	.text.STORAGE_Read_HS,"ax",%progbits
 295              		.align	1
 296              		.syntax unified
 297              		.thumb
 298              		.thumb_func
 300              	STORAGE_Read_HS:
 301              	.LFB149:
 245:USB_DEVICE/App/usbd_storage_if.c **** 
 246:USB_DEVICE/App/usbd_storage_if.c **** /**
 247:USB_DEVICE/App/usbd_storage_if.c ****   * @brief  Reads data from the medium.
 248:USB_DEVICE/App/usbd_storage_if.c ****   * @param  lun: Logical unit number.
 249:USB_DEVICE/App/usbd_storage_if.c ****   * @param  buf: data buffer.
 250:USB_DEVICE/App/usbd_storage_if.c ****   * @param  blk_addr: Logical block address.
 251:USB_DEVICE/App/usbd_storage_if.c ****   * @param  blk_len: Blocks number.
 252:USB_DEVICE/App/usbd_storage_if.c ****   * @retval USBD_OK if all operations are OK else USBD_FAIL
 253:USB_DEVICE/App/usbd_storage_if.c ****   */
 254:USB_DEVICE/App/usbd_storage_if.c **** int8_t STORAGE_Read_HS(uint8_t lun, uint8_t *buf, uint32_t blk_addr, uint16_t blk_len)
 255:USB_DEVICE/App/usbd_storage_if.c **** {
 302              		.loc 1 255 1
 303              		.cfi_startproc
 304              		@ args = 0, pretend = 0, frame = 24
 305              		@ frame_needed = 1, uses_anonymous_args = 0
 306 0000 80B5     		push	{r7, lr}
 307              	.LCFI21:
 308              		.cfi_def_cfa_offset 8
 309              		.cfi_offset 7, -8
 310              		.cfi_offset 14, -4
 311 0002 86B0     		sub	sp, sp, #24
 312              	.LCFI22:
 313              		.cfi_def_cfa_offset 32
 314 0004 00AF     		add	r7, sp, #0
 315              	.LCFI23:
 316              		.cfi_def_cfa_register 7
 317 0006 B960     		str	r1, [r7, #8]
 318 0008 7A60     		str	r2, [r7, #4]
 319 000a 1A46     		mov	r2, r3
 320 000c 0346     		mov	r3, r0
 321 000e FB73     		strb	r3, [r7, #15]
 322 0010 1346     		mov	r3, r2	@ movhi
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccftdYkc.s 			page 11


 323 0012 BB81     		strh	r3, [r7, #12]	@ movhi
 256:USB_DEVICE/App/usbd_storage_if.c **** 	int8_t ret = USBD_FAIL;
 324              		.loc 1 256 9
 325 0014 0323     		movs	r3, #3
 326 0016 FB75     		strb	r3, [r7, #23]
 257:USB_DEVICE/App/usbd_storage_if.c **** 
 258:USB_DEVICE/App/usbd_storage_if.c **** 	if (BSP_SD_IsDetected() != SD_NOT_PRESENT)
 327              		.loc 1 258 6
 328 0018 FFF7FEFF 		bl	BSP_SD_IsDetected
 329 001c 0346     		mov	r3, r0
 330              		.loc 1 258 5
 331 001e 002B     		cmp	r3, #0
 332 0020 0DD0     		beq	.L16
 259:USB_DEVICE/App/usbd_storage_if.c **** 	{
 260:USB_DEVICE/App/usbd_storage_if.c **** 	    BSP_SD_ReadBlocks_DMA((uint32_t *) buf, blk_addr, blk_len);
 333              		.loc 1 260 6
 334 0022 BB89     		ldrh	r3, [r7, #12]
 335 0024 1A46     		mov	r2, r3
 336 0026 7968     		ldr	r1, [r7, #4]
 337 0028 B868     		ldr	r0, [r7, #8]
 338 002a FFF7FEFF 		bl	BSP_SD_ReadBlocks_DMA
 261:USB_DEVICE/App/usbd_storage_if.c **** 
 262:USB_DEVICE/App/usbd_storage_if.c **** 	    /* Wait until SD card is ready to use for  new operation */
 263:USB_DEVICE/App/usbd_storage_if.c **** 	    while (BSP_SD_GetCardState() != SD_TRANSFER_OK)
 339              		.loc 1 263 12
 340 002e 01E0     		b	.L17
 341              	.L18:
 264:USB_DEVICE/App/usbd_storage_if.c **** 
 265:USB_DEVICE/App/usbd_storage_if.c **** 	    ret = USBD_OK;
 342              		.loc 1 265 10
 343 0030 0023     		movs	r3, #0
 344 0032 FB75     		strb	r3, [r7, #23]
 345              	.L17:
 263:USB_DEVICE/App/usbd_storage_if.c **** 
 346              		.loc 1 263 13
 347 0034 FFF7FEFF 		bl	BSP_SD_GetCardState
 348 0038 0346     		mov	r3, r0
 263:USB_DEVICE/App/usbd_storage_if.c **** 
 349              		.loc 1 263 12
 350 003a 002B     		cmp	r3, #0
 351 003c F8D1     		bne	.L18
 352              	.L16:
 266:USB_DEVICE/App/usbd_storage_if.c **** 	}
 267:USB_DEVICE/App/usbd_storage_if.c **** 	return ret;
 353              		.loc 1 267 9
 354 003e 97F91730 		ldrsb	r3, [r7, #23]
 268:USB_DEVICE/App/usbd_storage_if.c **** }
 355              		.loc 1 268 1
 356 0042 1846     		mov	r0, r3
 357 0044 1837     		adds	r7, r7, #24
 358              	.LCFI24:
 359              		.cfi_def_cfa_offset 8
 360 0046 BD46     		mov	sp, r7
 361              	.LCFI25:
 362              		.cfi_def_cfa_register 13
 363              		@ sp needed
 364 0048 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccftdYkc.s 			page 12


 365              		.cfi_endproc
 366              	.LFE149:
 368              		.section	.text.STORAGE_Write_HS,"ax",%progbits
 369              		.align	1
 370              		.syntax unified
 371              		.thumb
 372              		.thumb_func
 374              	STORAGE_Write_HS:
 375              	.LFB150:
 269:USB_DEVICE/App/usbd_storage_if.c **** 
 270:USB_DEVICE/App/usbd_storage_if.c **** /**
 271:USB_DEVICE/App/usbd_storage_if.c ****   * @brief  Writes data into the medium.
 272:USB_DEVICE/App/usbd_storage_if.c ****   * @param  lun: Logical unit number.
 273:USB_DEVICE/App/usbd_storage_if.c ****   * @param  buf: data buffer.
 274:USB_DEVICE/App/usbd_storage_if.c ****   * @param  blk_addr: Logical block address.
 275:USB_DEVICE/App/usbd_storage_if.c ****   * @param  blk_len: Blocks number.
 276:USB_DEVICE/App/usbd_storage_if.c ****   * @retval USBD_OK if all operations are OK else USBD_FAIL
 277:USB_DEVICE/App/usbd_storage_if.c ****   */
 278:USB_DEVICE/App/usbd_storage_if.c **** int8_t STORAGE_Write_HS(uint8_t lun, uint8_t *buf, uint32_t blk_addr, uint16_t blk_len)
 279:USB_DEVICE/App/usbd_storage_if.c **** {
 376              		.loc 1 279 1
 377              		.cfi_startproc
 378              		@ args = 0, pretend = 0, frame = 24
 379              		@ frame_needed = 1, uses_anonymous_args = 0
 380 0000 80B5     		push	{r7, lr}
 381              	.LCFI26:
 382              		.cfi_def_cfa_offset 8
 383              		.cfi_offset 7, -8
 384              		.cfi_offset 14, -4
 385 0002 86B0     		sub	sp, sp, #24
 386              	.LCFI27:
 387              		.cfi_def_cfa_offset 32
 388 0004 00AF     		add	r7, sp, #0
 389              	.LCFI28:
 390              		.cfi_def_cfa_register 7
 391 0006 B960     		str	r1, [r7, #8]
 392 0008 7A60     		str	r2, [r7, #4]
 393 000a 1A46     		mov	r2, r3
 394 000c 0346     		mov	r3, r0
 395 000e FB73     		strb	r3, [r7, #15]
 396 0010 1346     		mov	r3, r2	@ movhi
 397 0012 BB81     		strh	r3, [r7, #12]	@ movhi
 280:USB_DEVICE/App/usbd_storage_if.c **** 	int8_t ret = USBD_FAIL;
 398              		.loc 1 280 9
 399 0014 0323     		movs	r3, #3
 400 0016 FB75     		strb	r3, [r7, #23]
 281:USB_DEVICE/App/usbd_storage_if.c **** 
 282:USB_DEVICE/App/usbd_storage_if.c **** 	if (BSP_SD_IsDetected() != SD_NOT_PRESENT)
 401              		.loc 1 282 6
 402 0018 FFF7FEFF 		bl	BSP_SD_IsDetected
 403 001c 0346     		mov	r3, r0
 404              		.loc 1 282 5
 405 001e 002B     		cmp	r3, #0
 406 0020 0DD0     		beq	.L21
 283:USB_DEVICE/App/usbd_storage_if.c **** 	{
 284:USB_DEVICE/App/usbd_storage_if.c **** 	    BSP_SD_WriteBlocks_DMA((uint32_t *) buf, blk_addr, blk_len);
 407              		.loc 1 284 6
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccftdYkc.s 			page 13


 408 0022 BB89     		ldrh	r3, [r7, #12]
 409 0024 1A46     		mov	r2, r3
 410 0026 7968     		ldr	r1, [r7, #4]
 411 0028 B868     		ldr	r0, [r7, #8]
 412 002a FFF7FEFF 		bl	BSP_SD_WriteBlocks_DMA
 285:USB_DEVICE/App/usbd_storage_if.c **** 
 286:USB_DEVICE/App/usbd_storage_if.c **** 	    /* Wait until SD card is ready to use for new operation */
 287:USB_DEVICE/App/usbd_storage_if.c **** 	    while (BSP_SD_GetCardState() != SD_TRANSFER_OK)
 413              		.loc 1 287 12
 414 002e 01E0     		b	.L22
 415              	.L23:
 288:USB_DEVICE/App/usbd_storage_if.c **** 
 289:USB_DEVICE/App/usbd_storage_if.c **** 	    ret = USBD_OK;
 416              		.loc 1 289 10
 417 0030 0023     		movs	r3, #0
 418 0032 FB75     		strb	r3, [r7, #23]
 419              	.L22:
 287:USB_DEVICE/App/usbd_storage_if.c **** 
 420              		.loc 1 287 13
 421 0034 FFF7FEFF 		bl	BSP_SD_GetCardState
 422 0038 0346     		mov	r3, r0
 287:USB_DEVICE/App/usbd_storage_if.c **** 
 423              		.loc 1 287 12
 424 003a 002B     		cmp	r3, #0
 425 003c F8D1     		bne	.L23
 426              	.L21:
 290:USB_DEVICE/App/usbd_storage_if.c **** 	}
 291:USB_DEVICE/App/usbd_storage_if.c **** 	return ret;
 427              		.loc 1 291 9
 428 003e 97F91730 		ldrsb	r3, [r7, #23]
 292:USB_DEVICE/App/usbd_storage_if.c **** }
 429              		.loc 1 292 1
 430 0042 1846     		mov	r0, r3
 431 0044 1837     		adds	r7, r7, #24
 432              	.LCFI29:
 433              		.cfi_def_cfa_offset 8
 434 0046 BD46     		mov	sp, r7
 435              	.LCFI30:
 436              		.cfi_def_cfa_register 13
 437              		@ sp needed
 438 0048 80BD     		pop	{r7, pc}
 439              		.cfi_endproc
 440              	.LFE150:
 442              		.section	.text.STORAGE_GetMaxLun_HS,"ax",%progbits
 443              		.align	1
 444              		.syntax unified
 445              		.thumb
 446              		.thumb_func
 448              	STORAGE_GetMaxLun_HS:
 449              	.LFB151:
 293:USB_DEVICE/App/usbd_storage_if.c **** 
 294:USB_DEVICE/App/usbd_storage_if.c **** /**
 295:USB_DEVICE/App/usbd_storage_if.c ****   * @brief  Returns the Max Supported LUNs.
 296:USB_DEVICE/App/usbd_storage_if.c ****   * @param  None
 297:USB_DEVICE/App/usbd_storage_if.c ****   * @retval Lun(s) number.
 298:USB_DEVICE/App/usbd_storage_if.c ****   */
 299:USB_DEVICE/App/usbd_storage_if.c **** int8_t STORAGE_GetMaxLun_HS(void)
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccftdYkc.s 			page 14


 300:USB_DEVICE/App/usbd_storage_if.c **** {
 450              		.loc 1 300 1
 451              		.cfi_startproc
 452              		@ args = 0, pretend = 0, frame = 0
 453              		@ frame_needed = 1, uses_anonymous_args = 0
 454              		@ link register save eliminated.
 455 0000 80B4     		push	{r7}
 456              	.LCFI31:
 457              		.cfi_def_cfa_offset 4
 458              		.cfi_offset 7, -4
 459 0002 00AF     		add	r7, sp, #0
 460              	.LCFI32:
 461              		.cfi_def_cfa_register 7
 301:USB_DEVICE/App/usbd_storage_if.c ****     return (STORAGE_LUN_NBR - 1);
 462              		.loc 1 301 12
 463 0004 0023     		movs	r3, #0
 302:USB_DEVICE/App/usbd_storage_if.c **** }
 464              		.loc 1 302 1
 465 0006 1846     		mov	r0, r3
 466 0008 BD46     		mov	sp, r7
 467              	.LCFI33:
 468              		.cfi_def_cfa_register 13
 469              		@ sp needed
 470 000a 5DF8047B 		ldr	r7, [sp], #4
 471              	.LCFI34:
 472              		.cfi_restore 7
 473              		.cfi_def_cfa_offset 0
 474 000e 7047     		bx	lr
 475              		.cfi_endproc
 476              	.LFE151:
 478              		.section	.bss.prev_status.0,"aw",%nobits
 481              	prev_status.0:
 482 0000 00       		.space	1
 483              		.text
 484              	.Letext0:
 485              		.file 2 "d:\\3.tools\\arm_gcc_toolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 486              		.file 3 "d:\\3.tools\\arm_gcc_toolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 487              		.file 4 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_sd.h"
 488              		.file 5 "Middlewares/ST/STM32_USB_Device_Library/Class/MSC/Inc/usbd_msc.h"
 489              		.file 6 "USB_DEVICE/App/usbd_storage_if.h"
 490              		.file 7 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccftdYkc.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 usbd_storage_if.c
C:\Users\jisu8\AppData\Local\Temp\ccftdYkc.s:24     .rodata.STORAGE_Inquirydata_HS:00000000 STORAGE_Inquirydata_HS
C:\Users\jisu8\AppData\Local\Temp\ccftdYkc.s:21     .rodata.STORAGE_Inquirydata_HS:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccftdYkc.s:32     .data.USBD_Storage_Interface_fops_HS:00000000 USBD_Storage_Interface_fops_HS
C:\Users\jisu8\AppData\Local\Temp\ccftdYkc.s:29     .data.USBD_Storage_Interface_fops_HS:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccftdYkc.s:47     .text.STORAGE_Init_HS:00000000 STORAGE_Init_HS
C:\Users\jisu8\AppData\Local\Temp\ccftdYkc.s:96     .text.STORAGE_GetCapacity_HS:00000000 STORAGE_GetCapacity_HS
C:\Users\jisu8\AppData\Local\Temp\ccftdYkc.s:168    .text.STORAGE_IsReady_HS:00000000 STORAGE_IsReady_HS
C:\Users\jisu8\AppData\Local\Temp\ccftdYkc.s:256    .text.STORAGE_IsWriteProtected_HS:00000000 STORAGE_IsWriteProtected_HS
C:\Users\jisu8\AppData\Local\Temp\ccftdYkc.s:300    .text.STORAGE_Read_HS:00000000 STORAGE_Read_HS
C:\Users\jisu8\AppData\Local\Temp\ccftdYkc.s:374    .text.STORAGE_Write_HS:00000000 STORAGE_Write_HS
C:\Users\jisu8\AppData\Local\Temp\ccftdYkc.s:448    .text.STORAGE_GetMaxLun_HS:00000000 STORAGE_GetMaxLun_HS
C:\Users\jisu8\AppData\Local\Temp\ccftdYkc.s:42     .text.STORAGE_Init_HS:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccftdYkc.s:91     .text.STORAGE_GetCapacity_HS:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccftdYkc.s:163    .text.STORAGE_IsReady_HS:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccftdYkc.s:246    .text.STORAGE_IsReady_HS:00000058 $d
C:\Users\jisu8\AppData\Local\Temp\ccftdYkc.s:481    .bss.prev_status.0:00000000 prev_status.0
C:\Users\jisu8\AppData\Local\Temp\ccftdYkc.s:251    .text.STORAGE_IsWriteProtected_HS:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccftdYkc.s:295    .text.STORAGE_Read_HS:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccftdYkc.s:369    .text.STORAGE_Write_HS:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccftdYkc.s:443    .text.STORAGE_GetMaxLun_HS:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccftdYkc.s:482    .bss.prev_status.0:00000000 $d

UNDEFINED SYMBOLS
BSP_SD_Init
BSP_SD_IsDetected
BSP_SD_GetCardInfo
BSP_SD_GetCardState
BSP_SD_ReadBlocks_DMA
BSP_SD_WriteBlocks_DMA
