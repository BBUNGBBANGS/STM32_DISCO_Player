ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"touch.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.bss.tsDriver,"aw",%nobits
  20              		.align	2
  23              	tsDriver:
  24 0000 00000000 		.space	4
  25              		.section	.bss.tsXBoundary,"aw",%nobits
  26              		.align	1
  29              	tsXBoundary:
  30 0000 0000     		.space	2
  31              		.section	.bss.tsYBoundary,"aw",%nobits
  32              		.align	1
  35              	tsYBoundary:
  36 0000 0000     		.space	2
  37              		.section	.bss.tsOrientation,"aw",%nobits
  40              	tsOrientation:
  41 0000 00       		.space	1
  42              		.section	.bss.I2cAddress,"aw",%nobits
  45              	I2cAddress:
  46 0000 00       		.space	1
  47              		.section	.text.BSP_TS_Init,"ax",%progbits
  48              		.align	1
  49              		.global	BSP_TS_Init
  50              		.syntax unified
  51              		.thumb
  52              		.thumb_func
  54              	BSP_TS_Init:
  55              	.LFB144:
  56              		.file 1 "Core/Src/touch.c"
   1:Core/Src/touch.c **** /**
   2:Core/Src/touch.c ****   ******************************************************************************
   3:Core/Src/touch.c ****   * @file    stm32746g_discovery_ts.c
   4:Core/Src/touch.c ****   * @author  MCD Application Team
   5:Core/Src/touch.c ****   * @brief   This file provides a set of functions needed to manage the Touch 
   6:Core/Src/touch.c ****   *          Screen on STM32746G-Discovery board.
   7:Core/Src/touch.c ****   *
   8:Core/Src/touch.c ****   ******************************************************************************
   9:Core/Src/touch.c ****   * @attention
  10:Core/Src/touch.c ****   *
  11:Core/Src/touch.c ****   * Copyright (c) 2016 STMicroelectronics.
  12:Core/Src/touch.c ****   * All rights reserved.
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s 			page 2


  13:Core/Src/touch.c ****   *
  14:Core/Src/touch.c ****   * This software is licensed under terms that can be found in the LICENSE file
  15:Core/Src/touch.c ****   * in the root directory of this software component.
  16:Core/Src/touch.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  17:Core/Src/touch.c ****   *
  18:Core/Src/touch.c ****   ******************************************************************************
  19:Core/Src/touch.c ****   @verbatim
  20:Core/Src/touch.c ****    1. How To use this driver:
  21:Core/Src/touch.c ****    --------------------------
  22:Core/Src/touch.c ****       - This driver is used to drive the touch screen module of the STM32746G-Discovery
  23:Core/Src/touch.c ****         board on the RK043FN48H-CT672B 480x272 LCD screen with capacitive touch screen.
  24:Core/Src/touch.c ****       - The FT5336 component driver must be included in project files according to
  25:Core/Src/touch.c ****         the touch screen driver present on this board.
  26:Core/Src/touch.c ****    
  27:Core/Src/touch.c ****    2. Driver description:
  28:Core/Src/touch.c ****    ---------------------
  29:Core/Src/touch.c ****      + Initialization steps:
  30:Core/Src/touch.c ****         o Initialize the TS module using the BSP_TS_Init() function. This 
  31:Core/Src/touch.c ****           function includes the MSP layer hardware resources initialization and the
  32:Core/Src/touch.c ****           communication layer configuration to start the TS use. The LCD size properties
  33:Core/Src/touch.c ****           (x and y) are passed as parameters.
  34:Core/Src/touch.c ****         o If TS interrupt mode is desired, you must configure the TS interrupt mode
  35:Core/Src/touch.c ****           by calling the function BSP_TS_ITConfig(). The TS interrupt mode is generated
  36:Core/Src/touch.c ****           as an external interrupt whenever a touch is detected. 
  37:Core/Src/touch.c ****           The interrupt mode internally uses the IO functionalities driver driven by
  38:Core/Src/touch.c ****           the IO expander, to configure the IT line.
  39:Core/Src/touch.c ****      
  40:Core/Src/touch.c ****      + Touch screen use
  41:Core/Src/touch.c ****         o The touch screen state is captured whenever the function BSP_TS_GetState() is 
  42:Core/Src/touch.c ****           used. This function returns information about the last LCD touch occurred
  43:Core/Src/touch.c ****           in the TS_StateTypeDef structure.
  44:Core/Src/touch.c ****         o If TS interrupt mode is used, the function BSP_TS_ITGetStatus() is needed to get
  45:Core/Src/touch.c ****           the interrupt status. To clear the IT pending bits, you should call the 
  46:Core/Src/touch.c ****           function BSP_TS_ITClear().
  47:Core/Src/touch.c ****         o The IT is handled using the corresponding external interrupt IRQ handler,
  48:Core/Src/touch.c ****           the user IT callback treatment is implemented on the same external interrupt
  49:Core/Src/touch.c ****           callback.
  50:Core/Src/touch.c ****   @endverbatim
  51:Core/Src/touch.c ****   ******************************************************************************
  52:Core/Src/touch.c ****   */ 
  53:Core/Src/touch.c **** 
  54:Core/Src/touch.c **** /* Dependencies
  55:Core/Src/touch.c **** - stm32746g_discovery_lcd.c
  56:Core/Src/touch.c **** - ft5336.c
  57:Core/Src/touch.c **** EndDependencies */
  58:Core/Src/touch.c **** 
  59:Core/Src/touch.c **** /* Includes ------------------------------------------------------------------*/
  60:Core/Src/touch.c **** #include "touch.h"
  61:Core/Src/touch.c **** 
  62:Core/Src/touch.c **** /** @addtogroup BSP
  63:Core/Src/touch.c ****   * @{
  64:Core/Src/touch.c ****   */
  65:Core/Src/touch.c **** 
  66:Core/Src/touch.c **** /** @addtogroup STM32746G_DISCOVERY
  67:Core/Src/touch.c ****   * @{
  68:Core/Src/touch.c ****   */ 
  69:Core/Src/touch.c ****   
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s 			page 3


  70:Core/Src/touch.c **** /** @defgroup STM32746G_DISCOVERY_TS STM32746G_DISCOVERY_TS
  71:Core/Src/touch.c ****   * @{
  72:Core/Src/touch.c ****   */   
  73:Core/Src/touch.c **** 
  74:Core/Src/touch.c **** /** @defgroup STM32746G_DISCOVERY_TS_Private_Types_Definitions STM32746G_DISCOVERY_TS Types Definit
  75:Core/Src/touch.c ****   * @{
  76:Core/Src/touch.c ****   */ 
  77:Core/Src/touch.c **** /**
  78:Core/Src/touch.c ****   * @}
  79:Core/Src/touch.c ****   */ 
  80:Core/Src/touch.c **** 
  81:Core/Src/touch.c **** /** @defgroup STM32746G_DISCOVERY_TS_Private_Defines STM32746G_DISCOVERY_TS Types Defines
  82:Core/Src/touch.c ****   * @{
  83:Core/Src/touch.c ****   */ 
  84:Core/Src/touch.c **** /**
  85:Core/Src/touch.c ****   * @}
  86:Core/Src/touch.c ****   */ 
  87:Core/Src/touch.c **** 
  88:Core/Src/touch.c **** /** @defgroup STM32746G_DISCOVERY_TS_Private_Macros STM32746G_DISCOVERY_TS Private Macros
  89:Core/Src/touch.c ****   * @{
  90:Core/Src/touch.c ****   */ 
  91:Core/Src/touch.c **** /**
  92:Core/Src/touch.c ****   * @}
  93:Core/Src/touch.c ****   */
  94:Core/Src/touch.c **** 
  95:Core/Src/touch.c **** /** @defgroup STM32746G_DISCOVERY_TS_Imported_Variables STM32746G_DISCOVERY_TS Imported Variables
  96:Core/Src/touch.c ****   * @{
  97:Core/Src/touch.c ****   */
  98:Core/Src/touch.c ****   /**
  99:Core/Src/touch.c ****     * @}
 100:Core/Src/touch.c ****     */
 101:Core/Src/touch.c **** 
 102:Core/Src/touch.c **** /** @defgroup STM32746G_DISCOVERY_TS_Private_Variables STM32746G_DISCOVERY_TS Private Variables
 103:Core/Src/touch.c ****   * @{
 104:Core/Src/touch.c ****   */ 
 105:Core/Src/touch.c **** static TS_DrvTypeDef *tsDriver;
 106:Core/Src/touch.c **** static uint16_t tsXBoundary, tsYBoundary; 
 107:Core/Src/touch.c **** static uint8_t  tsOrientation;
 108:Core/Src/touch.c **** static uint8_t  I2cAddress;
 109:Core/Src/touch.c **** /**
 110:Core/Src/touch.c ****   * @}
 111:Core/Src/touch.c ****   */ 
 112:Core/Src/touch.c **** 
 113:Core/Src/touch.c **** /** @defgroup STM32746G_DISCOVERY_TS_Private_Function_Prototypes STM32746G_DISCOVERY_TS Private Fun
 114:Core/Src/touch.c ****   * @{
 115:Core/Src/touch.c ****   */ 
 116:Core/Src/touch.c **** /**
 117:Core/Src/touch.c ****   * @}
 118:Core/Src/touch.c ****   */ 
 119:Core/Src/touch.c **** 
 120:Core/Src/touch.c **** /** @defgroup STM32746G_DISCOVERY_TS_Exported_Functions STM32746G_DISCOVERY_TS Exported Functions
 121:Core/Src/touch.c ****   * @{
 122:Core/Src/touch.c ****   */ 
 123:Core/Src/touch.c **** 
 124:Core/Src/touch.c **** /**
 125:Core/Src/touch.c ****   * @brief  Initializes and configures the touch screen functionalities and 
 126:Core/Src/touch.c ****   *         configures all necessary hardware resources (GPIOs, I2C, clocks..).
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s 			page 4


 127:Core/Src/touch.c ****   * @param  ts_SizeX: Maximum X size of the TS area on LCD
 128:Core/Src/touch.c ****   * @param  ts_SizeY: Maximum Y size of the TS area on LCD
 129:Core/Src/touch.c ****   * @retval TS_OK if all initializations are OK. Other value if error.
 130:Core/Src/touch.c ****   */
 131:Core/Src/touch.c **** uint8_t BSP_TS_Init(uint16_t ts_SizeX, uint16_t ts_SizeY)
 132:Core/Src/touch.c **** {
  57              		.loc 1 132 1
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 16
  60              		@ frame_needed = 1, uses_anonymous_args = 0
  61 0000 80B5     		push	{r7, lr}
  62              	.LCFI0:
  63              		.cfi_def_cfa_offset 8
  64              		.cfi_offset 7, -8
  65              		.cfi_offset 14, -4
  66 0002 84B0     		sub	sp, sp, #16
  67              	.LCFI1:
  68              		.cfi_def_cfa_offset 24
  69 0004 00AF     		add	r7, sp, #0
  70              	.LCFI2:
  71              		.cfi_def_cfa_register 7
  72 0006 0346     		mov	r3, r0
  73 0008 0A46     		mov	r2, r1
  74 000a FB80     		strh	r3, [r7, #6]	@ movhi
  75 000c 1346     		mov	r3, r2	@ movhi
  76 000e BB80     		strh	r3, [r7, #4]	@ movhi
 133:Core/Src/touch.c ****   uint8_t status = TS_OK;
  77              		.loc 1 133 11
  78 0010 0023     		movs	r3, #0
  79 0012 FB73     		strb	r3, [r7, #15]
 134:Core/Src/touch.c ****   tsXBoundary = ts_SizeX;
  80              		.loc 1 134 15
  81 0014 144A     		ldr	r2, .L5
  82 0016 FB88     		ldrh	r3, [r7, #6]	@ movhi
  83 0018 1380     		strh	r3, [r2]	@ movhi
 135:Core/Src/touch.c ****   tsYBoundary = ts_SizeY;
  84              		.loc 1 135 15
  85 001a 144A     		ldr	r2, .L5+4
  86 001c BB88     		ldrh	r3, [r7, #4]	@ movhi
  87 001e 1380     		strh	r3, [r2]	@ movhi
 136:Core/Src/touch.c ****   
 137:Core/Src/touch.c ****   /* Read ID and verify if the touch screen driver is ready */
 138:Core/Src/touch.c ****   ft5336_ts_drv.Init(TS_I2C_ADDRESS);
  88              		.loc 1 138 16
  89 0020 134B     		ldr	r3, .L5+8
  90 0022 1B68     		ldr	r3, [r3]
  91              		.loc 1 138 3
  92 0024 7020     		movs	r0, #112
  93 0026 9847     		blx	r3
  94              	.LVL0:
 139:Core/Src/touch.c ****   if(ft5336_ts_drv.ReadID(TS_I2C_ADDRESS) == FT5336_ID_VALUE)
  95              		.loc 1 139 19
  96 0028 114B     		ldr	r3, .L5+8
  97 002a 5B68     		ldr	r3, [r3, #4]
  98              		.loc 1 139 6
  99 002c 7020     		movs	r0, #112
 100 002e 9847     		blx	r3
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s 			page 5


 101              	.LVL1:
 102 0030 0346     		mov	r3, r0
 103              		.loc 1 139 5
 104 0032 512B     		cmp	r3, #81
 105 0034 11D1     		bne	.L2
 140:Core/Src/touch.c ****   { 
 141:Core/Src/touch.c ****     /* Initialize the TS driver structure */
 142:Core/Src/touch.c ****     tsDriver = &ft5336_ts_drv;
 106              		.loc 1 142 14
 107 0036 0F4B     		ldr	r3, .L5+12
 108 0038 0D4A     		ldr	r2, .L5+8
 109 003a 1A60     		str	r2, [r3]
 143:Core/Src/touch.c ****     I2cAddress = TS_I2C_ADDRESS;
 110              		.loc 1 143 16
 111 003c 0E4B     		ldr	r3, .L5+16
 112 003e 7022     		movs	r2, #112
 113 0040 1A70     		strb	r2, [r3]
 144:Core/Src/touch.c ****     tsOrientation = TS_SWAP_XY;
 114              		.loc 1 144 19
 115 0042 0E4B     		ldr	r3, .L5+20
 116 0044 0822     		movs	r2, #8
 117 0046 1A70     		strb	r2, [r3]
 145:Core/Src/touch.c **** 
 146:Core/Src/touch.c ****     /* Initialize the TS driver */
 147:Core/Src/touch.c ****     tsDriver->Start(I2cAddress);
 118              		.loc 1 147 13
 119 0048 0A4B     		ldr	r3, .L5+12
 120 004a 1B68     		ldr	r3, [r3]
 121 004c DB68     		ldr	r3, [r3, #12]
 122              		.loc 1 147 5
 123 004e 0A4A     		ldr	r2, .L5+16
 124 0050 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 125 0052 92B2     		uxth	r2, r2
 126 0054 1046     		mov	r0, r2
 127 0056 9847     		blx	r3
 128              	.LVL2:
 129 0058 01E0     		b	.L3
 130              	.L2:
 148:Core/Src/touch.c ****   }
 149:Core/Src/touch.c ****   else
 150:Core/Src/touch.c ****   {
 151:Core/Src/touch.c ****     status = TS_DEVICE_NOT_FOUND;
 131              		.loc 1 151 12
 132 005a 0323     		movs	r3, #3
 133 005c FB73     		strb	r3, [r7, #15]
 134              	.L3:
 152:Core/Src/touch.c ****   }
 153:Core/Src/touch.c **** 
 154:Core/Src/touch.c ****   return status;
 135              		.loc 1 154 10
 136 005e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 155:Core/Src/touch.c **** }
 137              		.loc 1 155 1
 138 0060 1846     		mov	r0, r3
 139 0062 1037     		adds	r7, r7, #16
 140              	.LCFI3:
 141              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s 			page 6


 142 0064 BD46     		mov	sp, r7
 143              	.LCFI4:
 144              		.cfi_def_cfa_register 13
 145              		@ sp needed
 146 0066 80BD     		pop	{r7, pc}
 147              	.L6:
 148              		.align	2
 149              	.L5:
 150 0068 00000000 		.word	tsXBoundary
 151 006c 00000000 		.word	tsYBoundary
 152 0070 00000000 		.word	ft5336_ts_drv
 153 0074 00000000 		.word	tsDriver
 154 0078 00000000 		.word	I2cAddress
 155 007c 00000000 		.word	tsOrientation
 156              		.cfi_endproc
 157              	.LFE144:
 159              		.section	.text.BSP_TS_DeInit,"ax",%progbits
 160              		.align	1
 161              		.global	BSP_TS_DeInit
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 166              	BSP_TS_DeInit:
 167              	.LFB145:
 156:Core/Src/touch.c **** 
 157:Core/Src/touch.c **** /**
 158:Core/Src/touch.c ****   * @brief  DeInitializes the TouchScreen.
 159:Core/Src/touch.c ****   * @retval TS state
 160:Core/Src/touch.c ****   */
 161:Core/Src/touch.c **** uint8_t BSP_TS_DeInit(void)
 162:Core/Src/touch.c **** { 
 168              		.loc 1 162 1
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 1, uses_anonymous_args = 0
 172              		@ link register save eliminated.
 173 0000 80B4     		push	{r7}
 174              	.LCFI5:
 175              		.cfi_def_cfa_offset 4
 176              		.cfi_offset 7, -4
 177 0002 00AF     		add	r7, sp, #0
 178              	.LCFI6:
 179              		.cfi_def_cfa_register 7
 163:Core/Src/touch.c ****   /* Actually ts_driver does not provide a DeInit function */
 164:Core/Src/touch.c ****   return TS_OK;
 180              		.loc 1 164 10
 181 0004 0023     		movs	r3, #0
 165:Core/Src/touch.c **** }
 182              		.loc 1 165 1
 183 0006 1846     		mov	r0, r3
 184 0008 BD46     		mov	sp, r7
 185              	.LCFI7:
 186              		.cfi_def_cfa_register 13
 187              		@ sp needed
 188 000a 5DF8047B 		ldr	r7, [sp], #4
 189              	.LCFI8:
 190              		.cfi_restore 7
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s 			page 7


 191              		.cfi_def_cfa_offset 0
 192 000e 7047     		bx	lr
 193              		.cfi_endproc
 194              	.LFE145:
 196              		.section	.text.BSP_TS_ITConfig,"ax",%progbits
 197              		.align	1
 198              		.global	BSP_TS_ITConfig
 199              		.syntax unified
 200              		.thumb
 201              		.thumb_func
 203              	BSP_TS_ITConfig:
 204              	.LFB146:
 166:Core/Src/touch.c **** 
 167:Core/Src/touch.c **** /**
 168:Core/Src/touch.c ****   * @brief  Configures and enables the touch screen interrupts.
 169:Core/Src/touch.c ****   * @retval TS_OK if all initializations are OK. Other value if error.
 170:Core/Src/touch.c ****   */
 171:Core/Src/touch.c **** uint8_t BSP_TS_ITConfig(void)
 172:Core/Src/touch.c **** {
 205              		.loc 1 172 1
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 24
 208              		@ frame_needed = 1, uses_anonymous_args = 0
 209 0000 80B5     		push	{r7, lr}
 210              	.LCFI9:
 211              		.cfi_def_cfa_offset 8
 212              		.cfi_offset 7, -8
 213              		.cfi_offset 14, -4
 214 0002 86B0     		sub	sp, sp, #24
 215              	.LCFI10:
 216              		.cfi_def_cfa_offset 32
 217 0004 00AF     		add	r7, sp, #0
 218              	.LCFI11:
 219              		.cfi_def_cfa_register 7
 173:Core/Src/touch.c ****   GPIO_InitTypeDef gpio_init_structure;
 174:Core/Src/touch.c **** 
 175:Core/Src/touch.c ****   /* Configure Interrupt mode for SD detection pin */
 176:Core/Src/touch.c ****   gpio_init_structure.Pin = TS_INT_PIN;
 220              		.loc 1 176 27
 221 0006 4FF40053 		mov	r3, #8192
 222 000a 7B60     		str	r3, [r7, #4]
 177:Core/Src/touch.c ****   gpio_init_structure.Pull = GPIO_NOPULL;
 223              		.loc 1 177 28
 224 000c 0023     		movs	r3, #0
 225 000e FB60     		str	r3, [r7, #12]
 178:Core/Src/touch.c ****   gpio_init_structure.Speed = GPIO_SPEED_FAST;
 226              		.loc 1 178 29
 227 0010 0223     		movs	r3, #2
 228 0012 3B61     		str	r3, [r7, #16]
 179:Core/Src/touch.c ****   gpio_init_structure.Mode = GPIO_MODE_IT_RISING;
 229              		.loc 1 179 28
 230 0014 4FF48813 		mov	r3, #1114112
 231 0018 BB60     		str	r3, [r7, #8]
 180:Core/Src/touch.c ****   HAL_GPIO_Init(TS_INT_GPIO_PORT, &gpio_init_structure);
 232              		.loc 1 180 3
 233 001a 3B1D     		adds	r3, r7, #4
 234 001c 1946     		mov	r1, r3
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s 			page 8


 235 001e 0C48     		ldr	r0, .L11
 236 0020 FFF7FEFF 		bl	HAL_GPIO_Init
 181:Core/Src/touch.c **** 
 182:Core/Src/touch.c ****   /* Enable and set Touch screen EXTI Interrupt to the lowest priority */
 183:Core/Src/touch.c ****   HAL_NVIC_SetPriority((IRQn_Type)(TS_INT_EXTI_IRQn), 0x0F, 0x00);
 237              		.loc 1 183 3
 238 0024 0022     		movs	r2, #0
 239 0026 0F21     		movs	r1, #15
 240 0028 2820     		movs	r0, #40
 241 002a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 184:Core/Src/touch.c ****   HAL_NVIC_EnableIRQ((IRQn_Type)(TS_INT_EXTI_IRQn));
 242              		.loc 1 184 3
 243 002e 2820     		movs	r0, #40
 244 0030 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 185:Core/Src/touch.c **** 
 186:Core/Src/touch.c ****   /* Enable the TS ITs */
 187:Core/Src/touch.c ****   tsDriver->EnableIT(I2cAddress);
 245              		.loc 1 187 11
 246 0034 074B     		ldr	r3, .L11+4
 247 0036 1B68     		ldr	r3, [r3]
 248 0038 9B69     		ldr	r3, [r3, #24]
 249              		.loc 1 187 3
 250 003a 074A     		ldr	r2, .L11+8
 251 003c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 252 003e 92B2     		uxth	r2, r2
 253 0040 1046     		mov	r0, r2
 254 0042 9847     		blx	r3
 255              	.LVL3:
 188:Core/Src/touch.c **** 
 189:Core/Src/touch.c ****   return TS_OK;  
 256              		.loc 1 189 10
 257 0044 0023     		movs	r3, #0
 190:Core/Src/touch.c **** }
 258              		.loc 1 190 1
 259 0046 1846     		mov	r0, r3
 260 0048 1837     		adds	r7, r7, #24
 261              	.LCFI12:
 262              		.cfi_def_cfa_offset 8
 263 004a BD46     		mov	sp, r7
 264              	.LCFI13:
 265              		.cfi_def_cfa_register 13
 266              		@ sp needed
 267 004c 80BD     		pop	{r7, pc}
 268              	.L12:
 269 004e 00BF     		.align	2
 270              	.L11:
 271 0050 00200240 		.word	1073881088
 272 0054 00000000 		.word	tsDriver
 273 0058 00000000 		.word	I2cAddress
 274              		.cfi_endproc
 275              	.LFE146:
 277              		.section	.text.BSP_TS_ITGetStatus,"ax",%progbits
 278              		.align	1
 279              		.global	BSP_TS_ITGetStatus
 280              		.syntax unified
 281              		.thumb
 282              		.thumb_func
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s 			page 9


 284              	BSP_TS_ITGetStatus:
 285              	.LFB147:
 191:Core/Src/touch.c **** 
 192:Core/Src/touch.c **** /**
 193:Core/Src/touch.c ****   * @brief  Gets the touch screen interrupt status.
 194:Core/Src/touch.c ****   * @retval TS_OK if all initializations are OK. Other value if error.
 195:Core/Src/touch.c ****   */
 196:Core/Src/touch.c **** uint8_t BSP_TS_ITGetStatus(void)
 197:Core/Src/touch.c **** {
 286              		.loc 1 197 1
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 0
 289              		@ frame_needed = 1, uses_anonymous_args = 0
 290 0000 80B5     		push	{r7, lr}
 291              	.LCFI14:
 292              		.cfi_def_cfa_offset 8
 293              		.cfi_offset 7, -8
 294              		.cfi_offset 14, -4
 295 0002 00AF     		add	r7, sp, #0
 296              	.LCFI15:
 297              		.cfi_def_cfa_register 7
 198:Core/Src/touch.c ****   /* Return the TS IT status */
 199:Core/Src/touch.c ****   return (tsDriver->GetITStatus(I2cAddress));
 298              		.loc 1 199 19
 299 0004 054B     		ldr	r3, .L15
 300 0006 1B68     		ldr	r3, [r3]
 301 0008 1B6A     		ldr	r3, [r3, #32]
 302              		.loc 1 199 11
 303 000a 054A     		ldr	r2, .L15+4
 304 000c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 305 000e 92B2     		uxth	r2, r2
 306 0010 1046     		mov	r0, r2
 307 0012 9847     		blx	r3
 308              	.LVL4:
 309 0014 0346     		mov	r3, r0
 200:Core/Src/touch.c **** }
 310              		.loc 1 200 1
 311 0016 1846     		mov	r0, r3
 312 0018 80BD     		pop	{r7, pc}
 313              	.L16:
 314 001a 00BF     		.align	2
 315              	.L15:
 316 001c 00000000 		.word	tsDriver
 317 0020 00000000 		.word	I2cAddress
 318              		.cfi_endproc
 319              	.LFE147:
 321              		.section	.text.BSP_TS_GetState,"ax",%progbits
 322              		.align	1
 323              		.global	BSP_TS_GetState
 324              		.syntax unified
 325              		.thumb
 326              		.thumb_func
 328              	BSP_TS_GetState:
 329              	.LFB148:
 201:Core/Src/touch.c **** 
 202:Core/Src/touch.c **** /**
 203:Core/Src/touch.c ****   * @brief  Returns status and positions of the touch screen.
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s 			page 10


 204:Core/Src/touch.c ****   * @param  TS_State: Pointer to touch screen current state structure
 205:Core/Src/touch.c ****   * @retval TS_OK if all initializations are OK. Other value if error.
 206:Core/Src/touch.c ****   */
 207:Core/Src/touch.c **** uint8_t BSP_TS_GetState(TS_StateTypeDef *TS_State)
 208:Core/Src/touch.c **** {
 330              		.loc 1 208 1
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 80
 333              		@ frame_needed = 1, uses_anonymous_args = 0
 334 0000 90B5     		push	{r4, r7, lr}
 335              	.LCFI16:
 336              		.cfi_def_cfa_offset 12
 337              		.cfi_offset 4, -12
 338              		.cfi_offset 7, -8
 339              		.cfi_offset 14, -4
 340 0002 97B0     		sub	sp, sp, #92
 341              	.LCFI17:
 342              		.cfi_def_cfa_offset 104
 343 0004 02AF     		add	r7, sp, #8
 344              	.LCFI18:
 345              		.cfi_def_cfa 7, 96
 346 0006 7860     		str	r0, [r7, #4]
 209:Core/Src/touch.c ****   static uint32_t _x[TS_MAX_NB_TOUCH] = {0, 0};
 210:Core/Src/touch.c ****   static uint32_t _y[TS_MAX_NB_TOUCH] = {0, 0};
 211:Core/Src/touch.c ****   uint8_t ts_status = TS_OK;
 347              		.loc 1 211 11
 348 0008 0023     		movs	r3, #0
 349 000a 87F84F30 		strb	r3, [r7, #79]
 212:Core/Src/touch.c ****   uint16_t x[TS_MAX_NB_TOUCH];
 213:Core/Src/touch.c ****   uint16_t y[TS_MAX_NB_TOUCH];
 214:Core/Src/touch.c ****   uint16_t brute_x[TS_MAX_NB_TOUCH];
 215:Core/Src/touch.c ****   uint16_t brute_y[TS_MAX_NB_TOUCH];
 216:Core/Src/touch.c ****   uint16_t x_diff;
 217:Core/Src/touch.c ****   uint16_t y_diff;
 218:Core/Src/touch.c ****   uint32_t index;
 219:Core/Src/touch.c **** #if (TS_MULTI_TOUCH_SUPPORTED == 1)
 220:Core/Src/touch.c ****   uint32_t weight = 0;
 350              		.loc 1 220 12
 351 000e 0023     		movs	r3, #0
 352 0010 3B61     		str	r3, [r7, #16]
 221:Core/Src/touch.c ****   uint32_t area = 0;
 353              		.loc 1 221 12
 354 0012 0023     		movs	r3, #0
 355 0014 FB60     		str	r3, [r7, #12]
 222:Core/Src/touch.c ****   uint32_t event = 0;
 356              		.loc 1 222 12
 357 0016 0023     		movs	r3, #0
 358 0018 BB60     		str	r3, [r7, #8]
 223:Core/Src/touch.c **** #endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */
 224:Core/Src/touch.c **** 
 225:Core/Src/touch.c ****   /* Check and update the number of touches active detected */
 226:Core/Src/touch.c ****   TS_State->touchDetected = tsDriver->DetectTouch(I2cAddress);
 359              		.loc 1 226 37
 360 001a B44B     		ldr	r3, .L40
 361 001c 1B68     		ldr	r3, [r3]
 362 001e 1B69     		ldr	r3, [r3, #16]
 363              		.loc 1 226 29
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s 			page 11


 364 0020 B34A     		ldr	r2, .L40+4
 365 0022 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 366 0024 92B2     		uxth	r2, r2
 367 0026 1046     		mov	r0, r2
 368 0028 9847     		blx	r3
 369              	.LVL5:
 370 002a 0346     		mov	r3, r0
 371 002c 1A46     		mov	r2, r3
 372              		.loc 1 226 27
 373 002e 7B68     		ldr	r3, [r7, #4]
 374 0030 1A70     		strb	r2, [r3]
 227:Core/Src/touch.c ****   
 228:Core/Src/touch.c ****   if(TS_State->touchDetected)
 375              		.loc 1 228 14
 376 0032 7B68     		ldr	r3, [r7, #4]
 377 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 378              		.loc 1 228 5
 379 0036 002B     		cmp	r3, #0
 380 0038 00F09681 		beq	.L18
 229:Core/Src/touch.c ****   {
 230:Core/Src/touch.c ****     for(index=0; index < TS_State->touchDetected; index++)
 381              		.loc 1 230 14
 382 003c 0023     		movs	r3, #0
 383 003e BB64     		str	r3, [r7, #72]
 384              		.loc 1 230 5
 385 0040 85E1     		b	.L19
 386              	.L38:
 231:Core/Src/touch.c ****     {
 232:Core/Src/touch.c ****       /* Get each touch coordinates */
 233:Core/Src/touch.c ****       tsDriver->GetXY(I2cAddress, &(brute_x[index]), &(brute_y[index]));
 387              		.loc 1 233 15
 388 0042 AA4B     		ldr	r3, .L40
 389 0044 1B68     		ldr	r3, [r3]
 390 0046 5B69     		ldr	r3, [r3, #20]
 391              		.loc 1 233 7
 392 0048 A94A     		ldr	r2, .L40+4
 393 004a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 394 004c 90B2     		uxth	r0, r2
 395 004e 07F12001 		add	r1, r7, #32
 396 0052 BA6C     		ldr	r2, [r7, #72]
 397 0054 5200     		lsls	r2, r2, #1
 398 0056 8C18     		adds	r4, r1, r2
 399 0058 07F11401 		add	r1, r7, #20
 400 005c BA6C     		ldr	r2, [r7, #72]
 401 005e 5200     		lsls	r2, r2, #1
 402 0060 0A44     		add	r2, r2, r1
 403 0062 2146     		mov	r1, r4
 404 0064 9847     		blx	r3
 405              	.LVL6:
 234:Core/Src/touch.c **** 
 235:Core/Src/touch.c ****       if(tsOrientation == TS_SWAP_NONE)
 406              		.loc 1 235 24
 407 0066 A34B     		ldr	r3, .L40+8
 408 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 409              		.loc 1 235 9
 410 006a 012B     		cmp	r3, #1
 411 006c 17D1     		bne	.L20
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s 			page 12


 236:Core/Src/touch.c ****       {
 237:Core/Src/touch.c ****         x[index] = brute_x[index];
 412              		.loc 1 237 27
 413 006e BB6C     		ldr	r3, [r7, #72]
 414 0070 5B00     		lsls	r3, r3, #1
 415 0072 5033     		adds	r3, r3, #80
 416 0074 3B44     		add	r3, r3, r7
 417 0076 33F8302C 		ldrh	r2, [r3, #-48]
 418              		.loc 1 237 18
 419 007a BB6C     		ldr	r3, [r7, #72]
 420 007c 5B00     		lsls	r3, r3, #1
 421 007e 5033     		adds	r3, r3, #80
 422 0080 3B44     		add	r3, r3, r7
 423 0082 23F8182C 		strh	r2, [r3, #-24]	@ movhi
 238:Core/Src/touch.c ****         y[index] = brute_y[index];
 424              		.loc 1 238 27
 425 0086 BB6C     		ldr	r3, [r7, #72]
 426 0088 5B00     		lsls	r3, r3, #1
 427 008a 5033     		adds	r3, r3, #80
 428 008c 3B44     		add	r3, r3, r7
 429 008e 33F83C2C 		ldrh	r2, [r3, #-60]
 430              		.loc 1 238 18
 431 0092 BB6C     		ldr	r3, [r7, #72]
 432 0094 5B00     		lsls	r3, r3, #1
 433 0096 5033     		adds	r3, r3, #80
 434 0098 3B44     		add	r3, r3, r7
 435 009a 23F8242C 		strh	r2, [r3, #-36]	@ movhi
 436              	.L20:
 239:Core/Src/touch.c ****       }
 240:Core/Src/touch.c **** 
 241:Core/Src/touch.c ****       if(tsOrientation & TS_SWAP_X)
 437              		.loc 1 241 24
 438 009e 954B     		ldr	r3, .L40+8
 439 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 440 00a2 03F00203 		and	r3, r3, #2
 441              		.loc 1 241 9
 442 00a6 002B     		cmp	r3, #0
 443 00a8 0ED0     		beq	.L21
 242:Core/Src/touch.c ****       {
 243:Core/Src/touch.c ****         x[index] = 4096 - brute_x[index];
 444              		.loc 1 243 34
 445 00aa BB6C     		ldr	r3, [r7, #72]
 446 00ac 5B00     		lsls	r3, r3, #1
 447 00ae 5033     		adds	r3, r3, #80
 448 00b0 3B44     		add	r3, r3, r7
 449 00b2 33F8303C 		ldrh	r3, [r3, #-48]
 450              		.loc 1 243 25
 451 00b6 C3F58053 		rsb	r3, r3, #4096
 452 00ba 9AB2     		uxth	r2, r3
 453              		.loc 1 243 18
 454 00bc BB6C     		ldr	r3, [r7, #72]
 455 00be 5B00     		lsls	r3, r3, #1
 456 00c0 5033     		adds	r3, r3, #80
 457 00c2 3B44     		add	r3, r3, r7
 458 00c4 23F8182C 		strh	r2, [r3, #-24]	@ movhi
 459              	.L21:
 244:Core/Src/touch.c ****       }
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s 			page 13


 245:Core/Src/touch.c **** 
 246:Core/Src/touch.c ****       if(tsOrientation & TS_SWAP_Y)
 460              		.loc 1 246 24
 461 00c8 8A4B     		ldr	r3, .L40+8
 462 00ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 463 00cc 03F00403 		and	r3, r3, #4
 464              		.loc 1 246 9
 465 00d0 002B     		cmp	r3, #0
 466 00d2 0ED0     		beq	.L22
 247:Core/Src/touch.c ****       {
 248:Core/Src/touch.c ****         y[index] = 4096 - brute_y[index];
 467              		.loc 1 248 34
 468 00d4 BB6C     		ldr	r3, [r7, #72]
 469 00d6 5B00     		lsls	r3, r3, #1
 470 00d8 5033     		adds	r3, r3, #80
 471 00da 3B44     		add	r3, r3, r7
 472 00dc 33F83C3C 		ldrh	r3, [r3, #-60]
 473              		.loc 1 248 25
 474 00e0 C3F58053 		rsb	r3, r3, #4096
 475 00e4 9AB2     		uxth	r2, r3
 476              		.loc 1 248 18
 477 00e6 BB6C     		ldr	r3, [r7, #72]
 478 00e8 5B00     		lsls	r3, r3, #1
 479 00ea 5033     		adds	r3, r3, #80
 480 00ec 3B44     		add	r3, r3, r7
 481 00ee 23F8242C 		strh	r2, [r3, #-36]	@ movhi
 482              	.L22:
 249:Core/Src/touch.c ****       }
 250:Core/Src/touch.c **** 
 251:Core/Src/touch.c ****       if(tsOrientation & TS_SWAP_XY)
 483              		.loc 1 251 24
 484 00f2 804B     		ldr	r3, .L40+8
 485 00f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 486 00f6 03F00803 		and	r3, r3, #8
 487              		.loc 1 251 9
 488 00fa 002B     		cmp	r3, #0
 489 00fc 17D0     		beq	.L23
 252:Core/Src/touch.c ****       {
 253:Core/Src/touch.c ****         y[index] = brute_x[index];
 490              		.loc 1 253 27
 491 00fe BB6C     		ldr	r3, [r7, #72]
 492 0100 5B00     		lsls	r3, r3, #1
 493 0102 5033     		adds	r3, r3, #80
 494 0104 3B44     		add	r3, r3, r7
 495 0106 33F8302C 		ldrh	r2, [r3, #-48]
 496              		.loc 1 253 18
 497 010a BB6C     		ldr	r3, [r7, #72]
 498 010c 5B00     		lsls	r3, r3, #1
 499 010e 5033     		adds	r3, r3, #80
 500 0110 3B44     		add	r3, r3, r7
 501 0112 23F8242C 		strh	r2, [r3, #-36]	@ movhi
 254:Core/Src/touch.c ****         x[index] = brute_y[index];
 502              		.loc 1 254 27
 503 0116 BB6C     		ldr	r3, [r7, #72]
 504 0118 5B00     		lsls	r3, r3, #1
 505 011a 5033     		adds	r3, r3, #80
 506 011c 3B44     		add	r3, r3, r7
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s 			page 14


 507 011e 33F83C2C 		ldrh	r2, [r3, #-60]
 508              		.loc 1 254 18
 509 0122 BB6C     		ldr	r3, [r7, #72]
 510 0124 5B00     		lsls	r3, r3, #1
 511 0126 5033     		adds	r3, r3, #80
 512 0128 3B44     		add	r3, r3, r7
 513 012a 23F8182C 		strh	r2, [r3, #-24]	@ movhi
 514              	.L23:
 255:Core/Src/touch.c ****       }
 256:Core/Src/touch.c **** 
 257:Core/Src/touch.c ****       x_diff = x[index] > _x[index]? (x[index] - _x[index]): (_x[index] - x[index]);
 515              		.loc 1 257 17
 516 012e BB6C     		ldr	r3, [r7, #72]
 517 0130 5B00     		lsls	r3, r3, #1
 518 0132 5033     		adds	r3, r3, #80
 519 0134 3B44     		add	r3, r3, r7
 520 0136 33F8183C 		ldrh	r3, [r3, #-24]
 521 013a 1946     		mov	r1, r3
 522              		.loc 1 257 29
 523 013c 6E4A     		ldr	r2, .L40+12
 524 013e BB6C     		ldr	r3, [r7, #72]
 525 0140 52F82330 		ldr	r3, [r2, r3, lsl #2]
 526              		.loc 1 257 14
 527 0144 9942     		cmp	r1, r3
 528 0146 0DD9     		bls	.L24
 529              		.loc 1 257 40 discriminator 1
 530 0148 BB6C     		ldr	r3, [r7, #72]
 531 014a 5B00     		lsls	r3, r3, #1
 532 014c 5033     		adds	r3, r3, #80
 533 014e 3B44     		add	r3, r3, r7
 534 0150 33F8182C 		ldrh	r2, [r3, #-24]
 535              		.loc 1 257 52 discriminator 1
 536 0154 6849     		ldr	r1, .L40+12
 537 0156 BB6C     		ldr	r3, [r7, #72]
 538 0158 51F82330 		ldr	r3, [r1, r3, lsl #2]
 539              		.loc 1 257 48 discriminator 1
 540 015c 9BB2     		uxth	r3, r3
 541              		.loc 1 257 14 discriminator 1
 542 015e D31A     		subs	r3, r2, r3
 543 0160 9BB2     		uxth	r3, r3
 544 0162 0CE0     		b	.L25
 545              	.L24:
 546              		.loc 1 257 65 discriminator 2
 547 0164 644A     		ldr	r2, .L40+12
 548 0166 BB6C     		ldr	r3, [r7, #72]
 549 0168 52F82330 		ldr	r3, [r2, r3, lsl #2]
 550              		.loc 1 257 73 discriminator 2
 551 016c 9AB2     		uxth	r2, r3
 552              		.loc 1 257 76 discriminator 2
 553 016e BB6C     		ldr	r3, [r7, #72]
 554 0170 5B00     		lsls	r3, r3, #1
 555 0172 5033     		adds	r3, r3, #80
 556 0174 3B44     		add	r3, r3, r7
 557 0176 33F8183C 		ldrh	r3, [r3, #-24]
 558              		.loc 1 257 14 discriminator 2
 559 017a D31A     		subs	r3, r2, r3
 560 017c 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s 			page 15


 561              	.L25:
 562              		.loc 1 257 14 is_stmt 0 discriminator 4
 563 017e A7F84630 		strh	r3, [r7, #70]	@ movhi
 258:Core/Src/touch.c ****       y_diff = y[index] > _y[index]? (y[index] - _y[index]): (_y[index] - y[index]);
 564              		.loc 1 258 17 is_stmt 1 discriminator 4
 565 0182 BB6C     		ldr	r3, [r7, #72]
 566 0184 5B00     		lsls	r3, r3, #1
 567 0186 5033     		adds	r3, r3, #80
 568 0188 3B44     		add	r3, r3, r7
 569 018a 33F8243C 		ldrh	r3, [r3, #-36]
 570 018e 1946     		mov	r1, r3
 571              		.loc 1 258 29 discriminator 4
 572 0190 5A4A     		ldr	r2, .L40+16
 573 0192 BB6C     		ldr	r3, [r7, #72]
 574 0194 52F82330 		ldr	r3, [r2, r3, lsl #2]
 575              		.loc 1 258 14 discriminator 4
 576 0198 9942     		cmp	r1, r3
 577 019a 0DD9     		bls	.L26
 578              		.loc 1 258 40 discriminator 1
 579 019c BB6C     		ldr	r3, [r7, #72]
 580 019e 5B00     		lsls	r3, r3, #1
 581 01a0 5033     		adds	r3, r3, #80
 582 01a2 3B44     		add	r3, r3, r7
 583 01a4 33F8242C 		ldrh	r2, [r3, #-36]
 584              		.loc 1 258 52 discriminator 1
 585 01a8 5449     		ldr	r1, .L40+16
 586 01aa BB6C     		ldr	r3, [r7, #72]
 587 01ac 51F82330 		ldr	r3, [r1, r3, lsl #2]
 588              		.loc 1 258 48 discriminator 1
 589 01b0 9BB2     		uxth	r3, r3
 590              		.loc 1 258 14 discriminator 1
 591 01b2 D31A     		subs	r3, r2, r3
 592 01b4 9BB2     		uxth	r3, r3
 593 01b6 0CE0     		b	.L27
 594              	.L26:
 595              		.loc 1 258 65 discriminator 2
 596 01b8 504A     		ldr	r2, .L40+16
 597 01ba BB6C     		ldr	r3, [r7, #72]
 598 01bc 52F82330 		ldr	r3, [r2, r3, lsl #2]
 599              		.loc 1 258 73 discriminator 2
 600 01c0 9AB2     		uxth	r2, r3
 601              		.loc 1 258 76 discriminator 2
 602 01c2 BB6C     		ldr	r3, [r7, #72]
 603 01c4 5B00     		lsls	r3, r3, #1
 604 01c6 5033     		adds	r3, r3, #80
 605 01c8 3B44     		add	r3, r3, r7
 606 01ca 33F8243C 		ldrh	r3, [r3, #-36]
 607              		.loc 1 258 14 discriminator 2
 608 01ce D31A     		subs	r3, r2, r3
 609 01d0 9BB2     		uxth	r3, r3
 610              	.L27:
 611              		.loc 1 258 14 is_stmt 0 discriminator 4
 612 01d2 A7F84430 		strh	r3, [r7, #68]	@ movhi
 259:Core/Src/touch.c **** 
 260:Core/Src/touch.c ****       if ((x_diff + y_diff) > 5)
 613              		.loc 1 260 19 is_stmt 1 discriminator 4
 614 01d6 B7F84620 		ldrh	r2, [r7, #70]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s 			page 16


 615 01da B7F84430 		ldrh	r3, [r7, #68]
 616 01de 1344     		add	r3, r3, r2
 617              		.loc 1 260 10 discriminator 4
 618 01e0 052B     		cmp	r3, #5
 619 01e2 15DD     		ble	.L28
 261:Core/Src/touch.c ****       {
 262:Core/Src/touch.c ****         _x[index] = x[index];
 620              		.loc 1 262 22
 621 01e4 BB6C     		ldr	r3, [r7, #72]
 622 01e6 5B00     		lsls	r3, r3, #1
 623 01e8 5033     		adds	r3, r3, #80
 624 01ea 3B44     		add	r3, r3, r7
 625 01ec 33F8183C 		ldrh	r3, [r3, #-24]
 626 01f0 1946     		mov	r1, r3
 627              		.loc 1 262 19
 628 01f2 414A     		ldr	r2, .L40+12
 629 01f4 BB6C     		ldr	r3, [r7, #72]
 630 01f6 42F82310 		str	r1, [r2, r3, lsl #2]
 263:Core/Src/touch.c ****         _y[index] = y[index];
 631              		.loc 1 263 22
 632 01fa BB6C     		ldr	r3, [r7, #72]
 633 01fc 5B00     		lsls	r3, r3, #1
 634 01fe 5033     		adds	r3, r3, #80
 635 0200 3B44     		add	r3, r3, r7
 636 0202 33F8243C 		ldrh	r3, [r3, #-36]
 637 0206 1946     		mov	r1, r3
 638              		.loc 1 263 19
 639 0208 3C4A     		ldr	r2, .L40+16
 640 020a BB6C     		ldr	r3, [r7, #72]
 641 020c 42F82310 		str	r1, [r2, r3, lsl #2]
 642              	.L28:
 264:Core/Src/touch.c ****       }
 265:Core/Src/touch.c **** 
 266:Core/Src/touch.c ****       if(I2cAddress == FT5336_I2C_SLAVE_ADDRESS)
 643              		.loc 1 266 21
 644 0210 374B     		ldr	r3, .L40+4
 645 0212 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 646              		.loc 1 266 9
 647 0214 702B     		cmp	r3, #112
 648 0216 19D1     		bne	.L29
 267:Core/Src/touch.c ****       {
 268:Core/Src/touch.c ****         TS_State->touchX[index] = x[index];
 649              		.loc 1 268 36
 650 0218 BB6C     		ldr	r3, [r7, #72]
 651 021a 5B00     		lsls	r3, r3, #1
 652 021c 5033     		adds	r3, r3, #80
 653 021e 3B44     		add	r3, r3, r7
 654 0220 33F8181C 		ldrh	r1, [r3, #-24]
 655              		.loc 1 268 33
 656 0224 7A68     		ldr	r2, [r7, #4]
 657 0226 BB6C     		ldr	r3, [r7, #72]
 658 0228 5B00     		lsls	r3, r3, #1
 659 022a 1344     		add	r3, r3, r2
 660 022c 0A46     		mov	r2, r1	@ movhi
 661 022e 5A80     		strh	r2, [r3, #2]	@ movhi
 269:Core/Src/touch.c ****         TS_State->touchY[index] = y[index];
 662              		.loc 1 269 36
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s 			page 17


 663 0230 BB6C     		ldr	r3, [r7, #72]
 664 0232 5B00     		lsls	r3, r3, #1
 665 0234 5033     		adds	r3, r3, #80
 666 0236 3B44     		add	r3, r3, r7
 667 0238 33F8241C 		ldrh	r1, [r3, #-36]
 668              		.loc 1 269 33
 669 023c 7A68     		ldr	r2, [r7, #4]
 670 023e BB6C     		ldr	r3, [r7, #72]
 671 0240 0433     		adds	r3, r3, #4
 672 0242 5B00     		lsls	r3, r3, #1
 673 0244 1344     		add	r3, r3, r2
 674 0246 0A46     		mov	r2, r1	@ movhi
 675 0248 9A80     		strh	r2, [r3, #4]	@ movhi
 676 024a 22E0     		b	.L30
 677              	.L29:
 270:Core/Src/touch.c ****       }
 271:Core/Src/touch.c ****       else
 272:Core/Src/touch.c ****       {
 273:Core/Src/touch.c ****         /* 2^12 = 4096 : indexes are expressed on a dynamic of 4096 */
 274:Core/Src/touch.c ****         TS_State->touchX[index] = (tsXBoundary * _x[index]) >> 12;
 678              		.loc 1 274 48
 679 024c 2C4B     		ldr	r3, .L40+20
 680 024e 1B88     		ldrh	r3, [r3]
 681 0250 1946     		mov	r1, r3
 682              		.loc 1 274 52
 683 0252 294A     		ldr	r2, .L40+12
 684 0254 BB6C     		ldr	r3, [r7, #72]
 685 0256 52F82330 		ldr	r3, [r2, r3, lsl #2]
 686              		.loc 1 274 48
 687 025a 01FB03F3 		mul	r3, r1, r3
 688              		.loc 1 274 61
 689 025e 1B0B     		lsrs	r3, r3, #12
 690              		.loc 1 274 33
 691 0260 99B2     		uxth	r1, r3
 692 0262 7A68     		ldr	r2, [r7, #4]
 693 0264 BB6C     		ldr	r3, [r7, #72]
 694 0266 5B00     		lsls	r3, r3, #1
 695 0268 1344     		add	r3, r3, r2
 696 026a 0A46     		mov	r2, r1	@ movhi
 697 026c 5A80     		strh	r2, [r3, #2]	@ movhi
 275:Core/Src/touch.c ****         TS_State->touchY[index] = (tsYBoundary * _y[index]) >> 12;
 698              		.loc 1 275 48
 699 026e 254B     		ldr	r3, .L40+24
 700 0270 1B88     		ldrh	r3, [r3]
 701 0272 1946     		mov	r1, r3
 702              		.loc 1 275 52
 703 0274 214A     		ldr	r2, .L40+16
 704 0276 BB6C     		ldr	r3, [r7, #72]
 705 0278 52F82330 		ldr	r3, [r2, r3, lsl #2]
 706              		.loc 1 275 48
 707 027c 01FB03F3 		mul	r3, r1, r3
 708              		.loc 1 275 61
 709 0280 1B0B     		lsrs	r3, r3, #12
 710              		.loc 1 275 33
 711 0282 99B2     		uxth	r1, r3
 712 0284 7A68     		ldr	r2, [r7, #4]
 713 0286 BB6C     		ldr	r3, [r7, #72]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s 			page 18


 714 0288 0433     		adds	r3, r3, #4
 715 028a 5B00     		lsls	r3, r3, #1
 716 028c 1344     		add	r3, r3, r2
 717 028e 0A46     		mov	r2, r1	@ movhi
 718 0290 9A80     		strh	r2, [r3, #4]	@ movhi
 719              	.L30:
 276:Core/Src/touch.c ****       }
 277:Core/Src/touch.c **** 
 278:Core/Src/touch.c **** #if (TS_MULTI_TOUCH_SUPPORTED == 1)
 279:Core/Src/touch.c **** 
 280:Core/Src/touch.c ****       /* Get touch info related to the current touch */
 281:Core/Src/touch.c ****       ft5336_TS_GetTouchInfo(I2cAddress, index, &weight, &area, &event);
 720              		.loc 1 281 7
 721 0292 174B     		ldr	r3, .L40+4
 722 0294 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 723 0296 98B2     		uxth	r0, r3
 724 0298 07F10C01 		add	r1, r7, #12
 725 029c 07F11002 		add	r2, r7, #16
 726 02a0 07F10803 		add	r3, r7, #8
 727 02a4 0093     		str	r3, [sp]
 728 02a6 0B46     		mov	r3, r1
 729 02a8 B96C     		ldr	r1, [r7, #72]
 730 02aa FFF7FEFF 		bl	ft5336_TS_GetTouchInfo
 282:Core/Src/touch.c **** 
 283:Core/Src/touch.c ****       /* Update TS_State structure */
 284:Core/Src/touch.c ****       TS_State->touchWeight[index] = weight;
 731              		.loc 1 284 36
 732 02ae 3B69     		ldr	r3, [r7, #16]
 733 02b0 D9B2     		uxtb	r1, r3
 734 02b2 7A68     		ldr	r2, [r7, #4]
 735 02b4 BB6C     		ldr	r3, [r7, #72]
 736 02b6 1344     		add	r3, r3, r2
 737 02b8 1633     		adds	r3, r3, #22
 738 02ba 0A46     		mov	r2, r1
 739 02bc 1A70     		strb	r2, [r3]
 285:Core/Src/touch.c ****       TS_State->touchArea[index]   = area;
 740              		.loc 1 285 36
 741 02be FB68     		ldr	r3, [r7, #12]
 742 02c0 D9B2     		uxtb	r1, r3
 743 02c2 7A68     		ldr	r2, [r7, #4]
 744 02c4 BB6C     		ldr	r3, [r7, #72]
 745 02c6 1344     		add	r3, r3, r2
 746 02c8 2033     		adds	r3, r3, #32
 747 02ca 0A46     		mov	r2, r1
 748 02cc 1A70     		strb	r2, [r3]
 286:Core/Src/touch.c **** 
 287:Core/Src/touch.c ****       /* Remap touch event */
 288:Core/Src/touch.c ****       switch(event)
 749              		.loc 1 288 7
 750 02ce BB68     		ldr	r3, [r7, #8]
 751 02d0 032B     		cmp	r3, #3
 752 02d2 35D8     		bhi	.L31
 753 02d4 01A2     		adr	r2, .L33
 754 02d6 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 755 02da 00BF     		.p2align 2
 756              	.L33:
 757 02dc 09030000 		.word	.L36+1
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s 			page 19


 758 02e0 17030000 		.word	.L35+1
 759 02e4 25030000 		.word	.L34+1
 760 02e8 33030000 		.word	.L32+1
 761              		.p2align 1
 762              	.L41:
 763              		.align	2
 764              	.L40:
 765 02ec 00000000 		.word	tsDriver
 766 02f0 00000000 		.word	I2cAddress
 767 02f4 00000000 		.word	tsOrientation
 768 02f8 00000000 		.word	_x.1
 769 02fc 00000000 		.word	_y.0
 770 0300 00000000 		.word	tsXBoundary
 771 0304 00000000 		.word	tsYBoundary
 772              	.L36:
 289:Core/Src/touch.c ****       {
 290:Core/Src/touch.c ****         case FT5336_TOUCH_EVT_FLAG_PRESS_DOWN	:
 291:Core/Src/touch.c ****           TS_State->touchEventId[index] = TOUCH_EVENT_PRESS_DOWN;
 773              		.loc 1 291 41
 774 0308 7A68     		ldr	r2, [r7, #4]
 775 030a BB6C     		ldr	r3, [r7, #72]
 776 030c 1344     		add	r3, r3, r2
 777 030e 1B33     		adds	r3, r3, #27
 778 0310 0122     		movs	r2, #1
 779 0312 1A70     		strb	r2, [r3]
 292:Core/Src/touch.c ****           break;
 780              		.loc 1 292 11
 781 0314 18E0     		b	.L37
 782              	.L35:
 293:Core/Src/touch.c ****         case FT5336_TOUCH_EVT_FLAG_LIFT_UP :
 294:Core/Src/touch.c ****           TS_State->touchEventId[index] = TOUCH_EVENT_LIFT_UP;
 783              		.loc 1 294 41
 784 0316 7A68     		ldr	r2, [r7, #4]
 785 0318 BB6C     		ldr	r3, [r7, #72]
 786 031a 1344     		add	r3, r3, r2
 787 031c 1B33     		adds	r3, r3, #27
 788 031e 0222     		movs	r2, #2
 789 0320 1A70     		strb	r2, [r3]
 295:Core/Src/touch.c ****           break;
 790              		.loc 1 295 11
 791 0322 11E0     		b	.L37
 792              	.L34:
 296:Core/Src/touch.c ****         case FT5336_TOUCH_EVT_FLAG_CONTACT :
 297:Core/Src/touch.c ****           TS_State->touchEventId[index] = TOUCH_EVENT_CONTACT;
 793              		.loc 1 297 41
 794 0324 7A68     		ldr	r2, [r7, #4]
 795 0326 BB6C     		ldr	r3, [r7, #72]
 796 0328 1344     		add	r3, r3, r2
 797 032a 1B33     		adds	r3, r3, #27
 798 032c 0322     		movs	r2, #3
 799 032e 1A70     		strb	r2, [r3]
 298:Core/Src/touch.c ****           break;
 800              		.loc 1 298 11
 801 0330 0AE0     		b	.L37
 802              	.L32:
 299:Core/Src/touch.c ****         case FT5336_TOUCH_EVT_FLAG_NO_EVENT :
 300:Core/Src/touch.c ****           TS_State->touchEventId[index] = TOUCH_EVENT_NO_EVT;
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s 			page 20


 803              		.loc 1 300 41
 804 0332 7A68     		ldr	r2, [r7, #4]
 805 0334 BB6C     		ldr	r3, [r7, #72]
 806 0336 1344     		add	r3, r3, r2
 807 0338 1B33     		adds	r3, r3, #27
 808 033a 0022     		movs	r2, #0
 809 033c 1A70     		strb	r2, [r3]
 301:Core/Src/touch.c ****           break;
 810              		.loc 1 301 11
 811 033e 03E0     		b	.L37
 812              	.L31:
 302:Core/Src/touch.c ****         default :
 303:Core/Src/touch.c ****           ts_status = TS_ERROR;
 813              		.loc 1 303 21
 814 0340 0123     		movs	r3, #1
 815 0342 87F84F30 		strb	r3, [r7, #79]
 304:Core/Src/touch.c ****           break;
 816              		.loc 1 304 11
 817 0346 00BF     		nop
 818              	.L37:
 230:Core/Src/touch.c ****     {
 819              		.loc 1 230 56 discriminator 2
 820 0348 BB6C     		ldr	r3, [r7, #72]
 821 034a 0133     		adds	r3, r3, #1
 822 034c BB64     		str	r3, [r7, #72]
 823              	.L19:
 230:Core/Src/touch.c ****     {
 824              		.loc 1 230 34 discriminator 1
 825 034e 7B68     		ldr	r3, [r7, #4]
 826 0350 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 827 0352 1A46     		mov	r2, r3
 230:Core/Src/touch.c ****     {
 828              		.loc 1 230 5 discriminator 1
 829 0354 BB6C     		ldr	r3, [r7, #72]
 830 0356 9342     		cmp	r3, r2
 831 0358 FFF473AE 		bcc	.L38
 305:Core/Src/touch.c ****       } /* of switch(event) */
 306:Core/Src/touch.c **** 
 307:Core/Src/touch.c **** #endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */
 308:Core/Src/touch.c **** 
 309:Core/Src/touch.c ****     } /* of for(index=0; index < TS_State->touchDetected; index++) */
 310:Core/Src/touch.c **** 
 311:Core/Src/touch.c **** #if (TS_MULTI_TOUCH_SUPPORTED == 1)
 312:Core/Src/touch.c ****     /* Get gesture Id */
 313:Core/Src/touch.c ****     ts_status = BSP_TS_Get_GestureId(TS_State);
 832              		.loc 1 313 17
 833 035c 7868     		ldr	r0, [r7, #4]
 834 035e FFF7FEFF 		bl	BSP_TS_Get_GestureId
 835 0362 0346     		mov	r3, r0
 836 0364 87F84F30 		strb	r3, [r7, #79]
 837              	.L18:
 314:Core/Src/touch.c **** #endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */
 315:Core/Src/touch.c **** 
 316:Core/Src/touch.c ****   } /* end of if(TS_State->touchDetected != 0) */
 317:Core/Src/touch.c **** 
 318:Core/Src/touch.c ****   return (ts_status);
 838              		.loc 1 318 10
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s 			page 21


 839 0368 97F84F30 		ldrb	r3, [r7, #79]	@ zero_extendqisi2
 319:Core/Src/touch.c **** }
 840              		.loc 1 319 1
 841 036c 1846     		mov	r0, r3
 842 036e 5437     		adds	r7, r7, #84
 843              	.LCFI19:
 844              		.cfi_def_cfa_offset 12
 845 0370 BD46     		mov	sp, r7
 846              	.LCFI20:
 847              		.cfi_def_cfa_register 13
 848              		@ sp needed
 849 0372 90BD     		pop	{r4, r7, pc}
 850              		.cfi_endproc
 851              	.LFE148:
 853              		.section	.text.BSP_TS_Get_GestureId,"ax",%progbits
 854              		.align	1
 855              		.global	BSP_TS_Get_GestureId
 856              		.syntax unified
 857              		.thumb
 858              		.thumb_func
 860              	BSP_TS_Get_GestureId:
 861              	.LFB149:
 320:Core/Src/touch.c **** 
 321:Core/Src/touch.c **** #if (TS_MULTI_TOUCH_SUPPORTED == 1)
 322:Core/Src/touch.c **** /**
 323:Core/Src/touch.c ****   * @brief  Update gesture Id following a touch detected.
 324:Core/Src/touch.c ****   * @param  TS_State: Pointer to touch screen current state structure
 325:Core/Src/touch.c ****   * @retval TS_OK if all initializations are OK. Other value if error.
 326:Core/Src/touch.c ****   */
 327:Core/Src/touch.c **** uint8_t BSP_TS_Get_GestureId(TS_StateTypeDef *TS_State)
 328:Core/Src/touch.c **** {
 862              		.loc 1 328 1
 863              		.cfi_startproc
 864              		@ args = 0, pretend = 0, frame = 16
 865              		@ frame_needed = 1, uses_anonymous_args = 0
 866 0000 80B5     		push	{r7, lr}
 867              	.LCFI21:
 868              		.cfi_def_cfa_offset 8
 869              		.cfi_offset 7, -8
 870              		.cfi_offset 14, -4
 871 0002 84B0     		sub	sp, sp, #16
 872              	.LCFI22:
 873              		.cfi_def_cfa_offset 24
 874 0004 00AF     		add	r7, sp, #0
 875              	.LCFI23:
 876              		.cfi_def_cfa_register 7
 877 0006 7860     		str	r0, [r7, #4]
 329:Core/Src/touch.c ****   uint32_t gestureId = 0;
 878              		.loc 1 329 12
 879 0008 0023     		movs	r3, #0
 880 000a BB60     		str	r3, [r7, #8]
 330:Core/Src/touch.c ****   uint8_t  ts_status = TS_OK;
 881              		.loc 1 330 12
 882 000c 0023     		movs	r3, #0
 883 000e FB73     		strb	r3, [r7, #15]
 331:Core/Src/touch.c **** 
 332:Core/Src/touch.c ****   /* Get gesture Id */
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s 			page 22


 333:Core/Src/touch.c ****   ft5336_TS_GetGestureID(I2cAddress, &gestureId);
 884              		.loc 1 333 3
 885 0010 3B4B     		ldr	r3, .L55
 886 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 887 0014 9BB2     		uxth	r3, r3
 888 0016 07F10802 		add	r2, r7, #8
 889 001a 1146     		mov	r1, r2
 890 001c 1846     		mov	r0, r3
 891 001e FFF7FEFF 		bl	ft5336_TS_GetGestureID
 334:Core/Src/touch.c **** 
 335:Core/Src/touch.c ****   /* Remap gesture Id to a TS_GestureIdTypeDef value */
 336:Core/Src/touch.c ****   switch(gestureId)
 892              		.loc 1 336 3
 893 0022 BB68     		ldr	r3, [r7, #8]
 894 0024 492B     		cmp	r3, #73
 895 0026 5ED0     		beq	.L43
 896 0028 492B     		cmp	r3, #73
 897 002a 60D8     		bhi	.L44
 898 002c 1C2B     		cmp	r3, #28
 899 002e 3FD8     		bhi	.L45
 900 0030 1C2B     		cmp	r3, #28
 901 0032 5CD8     		bhi	.L44
 902 0034 01A2     		adr	r2, .L47
 903 0036 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 904 003a 00BF     		.p2align 2
 905              	.L47:
 906 003c B7000000 		.word	.L51+1
 907 0040 EF000000 		.word	.L44+1
 908 0044 EF000000 		.word	.L44+1
 909 0048 EF000000 		.word	.L44+1
 910 004c EF000000 		.word	.L44+1
 911 0050 EF000000 		.word	.L44+1
 912 0054 EF000000 		.word	.L44+1
 913 0058 EF000000 		.word	.L44+1
 914 005c EF000000 		.word	.L44+1
 915 0060 EF000000 		.word	.L44+1
 916 0064 EF000000 		.word	.L44+1
 917 0068 EF000000 		.word	.L44+1
 918 006c EF000000 		.word	.L44+1
 919 0070 EF000000 		.word	.L44+1
 920 0074 EF000000 		.word	.L44+1
 921 0078 EF000000 		.word	.L44+1
 922 007c BF000000 		.word	.L50+1
 923 0080 EF000000 		.word	.L44+1
 924 0084 EF000000 		.word	.L44+1
 925 0088 EF000000 		.word	.L44+1
 926 008c C7000000 		.word	.L49+1
 927 0090 EF000000 		.word	.L44+1
 928 0094 EF000000 		.word	.L44+1
 929 0098 EF000000 		.word	.L44+1
 930 009c CF000000 		.word	.L48+1
 931 00a0 EF000000 		.word	.L44+1
 932 00a4 EF000000 		.word	.L44+1
 933 00a8 EF000000 		.word	.L44+1
 934 00ac D7000000 		.word	.L46+1
 935              		.p2align 1
 936              	.L45:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s 			page 23


 937 00b0 402B     		cmp	r3, #64
 938 00b2 14D0     		beq	.L52
 939 00b4 1BE0     		b	.L44
 940              	.L51:
 337:Core/Src/touch.c ****   {
 338:Core/Src/touch.c ****     case FT5336_GEST_ID_NO_GESTURE :
 339:Core/Src/touch.c ****       TS_State->gestureId = GEST_ID_NO_GESTURE;
 941              		.loc 1 339 27
 942 00b6 7B68     		ldr	r3, [r7, #4]
 943 00b8 0022     		movs	r2, #0
 944 00ba 9A62     		str	r2, [r3, #40]
 340:Core/Src/touch.c ****       break;
 945              		.loc 1 340 7
 946 00bc 1AE0     		b	.L53
 947              	.L50:
 341:Core/Src/touch.c ****     case FT5336_GEST_ID_MOVE_UP :
 342:Core/Src/touch.c ****       TS_State->gestureId = GEST_ID_MOVE_UP;
 948              		.loc 1 342 27
 949 00be 7B68     		ldr	r3, [r7, #4]
 950 00c0 0122     		movs	r2, #1
 951 00c2 9A62     		str	r2, [r3, #40]
 343:Core/Src/touch.c ****       break;
 952              		.loc 1 343 7
 953 00c4 16E0     		b	.L53
 954              	.L49:
 344:Core/Src/touch.c ****     case FT5336_GEST_ID_MOVE_RIGHT :
 345:Core/Src/touch.c ****       TS_State->gestureId = GEST_ID_MOVE_RIGHT;
 955              		.loc 1 345 27
 956 00c6 7B68     		ldr	r3, [r7, #4]
 957 00c8 0222     		movs	r2, #2
 958 00ca 9A62     		str	r2, [r3, #40]
 346:Core/Src/touch.c ****       break;
 959              		.loc 1 346 7
 960 00cc 12E0     		b	.L53
 961              	.L48:
 347:Core/Src/touch.c ****     case FT5336_GEST_ID_MOVE_DOWN :
 348:Core/Src/touch.c ****       TS_State->gestureId = GEST_ID_MOVE_DOWN;
 962              		.loc 1 348 27
 963 00ce 7B68     		ldr	r3, [r7, #4]
 964 00d0 0322     		movs	r2, #3
 965 00d2 9A62     		str	r2, [r3, #40]
 349:Core/Src/touch.c ****       break;
 966              		.loc 1 349 7
 967 00d4 0EE0     		b	.L53
 968              	.L46:
 350:Core/Src/touch.c ****     case FT5336_GEST_ID_MOVE_LEFT :
 351:Core/Src/touch.c ****       TS_State->gestureId = GEST_ID_MOVE_LEFT;
 969              		.loc 1 351 27
 970 00d6 7B68     		ldr	r3, [r7, #4]
 971 00d8 0422     		movs	r2, #4
 972 00da 9A62     		str	r2, [r3, #40]
 352:Core/Src/touch.c ****       break;
 973              		.loc 1 352 7
 974 00dc 0AE0     		b	.L53
 975              	.L52:
 353:Core/Src/touch.c ****     case FT5336_GEST_ID_ZOOM_IN :
 354:Core/Src/touch.c ****       TS_State->gestureId = GEST_ID_ZOOM_IN;
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s 			page 24


 976              		.loc 1 354 27
 977 00de 7B68     		ldr	r3, [r7, #4]
 978 00e0 0522     		movs	r2, #5
 979 00e2 9A62     		str	r2, [r3, #40]
 355:Core/Src/touch.c ****       break;
 980              		.loc 1 355 7
 981 00e4 06E0     		b	.L53
 982              	.L43:
 356:Core/Src/touch.c ****     case FT5336_GEST_ID_ZOOM_OUT :
 357:Core/Src/touch.c ****       TS_State->gestureId = GEST_ID_ZOOM_OUT;
 983              		.loc 1 357 27
 984 00e6 7B68     		ldr	r3, [r7, #4]
 985 00e8 0622     		movs	r2, #6
 986 00ea 9A62     		str	r2, [r3, #40]
 358:Core/Src/touch.c ****       break;
 987              		.loc 1 358 7
 988 00ec 02E0     		b	.L53
 989              	.L44:
 359:Core/Src/touch.c ****     default :
 360:Core/Src/touch.c ****       ts_status = TS_ERROR;
 990              		.loc 1 360 17
 991 00ee 0123     		movs	r3, #1
 992 00f0 FB73     		strb	r3, [r7, #15]
 361:Core/Src/touch.c ****       break;
 993              		.loc 1 361 7
 994 00f2 00BF     		nop
 995              	.L53:
 362:Core/Src/touch.c ****   } /* of switch(gestureId) */
 363:Core/Src/touch.c **** 
 364:Core/Src/touch.c ****   return(ts_status);
 996              		.loc 1 364 9
 997 00f4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 365:Core/Src/touch.c **** }
 998              		.loc 1 365 1
 999 00f6 1846     		mov	r0, r3
 1000 00f8 1037     		adds	r7, r7, #16
 1001              	.LCFI24:
 1002              		.cfi_def_cfa_offset 8
 1003 00fa BD46     		mov	sp, r7
 1004              	.LCFI25:
 1005              		.cfi_def_cfa_register 13
 1006              		@ sp needed
 1007 00fc 80BD     		pop	{r7, pc}
 1008              	.L56:
 1009 00fe 00BF     		.align	2
 1010              	.L55:
 1011 0100 00000000 		.word	I2cAddress
 1012              		.cfi_endproc
 1013              	.LFE149:
 1015              		.section	.text.BSP_TS_ITClear,"ax",%progbits
 1016              		.align	1
 1017              		.global	BSP_TS_ITClear
 1018              		.syntax unified
 1019              		.thumb
 1020              		.thumb_func
 1022              	BSP_TS_ITClear:
 1023              	.LFB150:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s 			page 25


 366:Core/Src/touch.c **** #endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */
 367:Core/Src/touch.c **** 
 368:Core/Src/touch.c **** /**
 369:Core/Src/touch.c ****   * @brief  Clears all touch screen interrupts.
 370:Core/Src/touch.c ****   */
 371:Core/Src/touch.c **** void BSP_TS_ITClear(void)
 372:Core/Src/touch.c **** {
 1024              		.loc 1 372 1
 1025              		.cfi_startproc
 1026              		@ args = 0, pretend = 0, frame = 0
 1027              		@ frame_needed = 1, uses_anonymous_args = 0
 1028 0000 80B5     		push	{r7, lr}
 1029              	.LCFI26:
 1030              		.cfi_def_cfa_offset 8
 1031              		.cfi_offset 7, -8
 1032              		.cfi_offset 14, -4
 1033 0002 00AF     		add	r7, sp, #0
 1034              	.LCFI27:
 1035              		.cfi_def_cfa_register 7
 373:Core/Src/touch.c ****   /* Clear TS IT pending bits */
 374:Core/Src/touch.c ****   tsDriver->ClearIT(I2cAddress); 
 1036              		.loc 1 374 11
 1037 0004 044B     		ldr	r3, .L58
 1038 0006 1B68     		ldr	r3, [r3]
 1039 0008 DB69     		ldr	r3, [r3, #28]
 1040              		.loc 1 374 3
 1041 000a 044A     		ldr	r2, .L58+4
 1042 000c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1043 000e 92B2     		uxth	r2, r2
 1044 0010 1046     		mov	r0, r2
 1045 0012 9847     		blx	r3
 1046              	.LVL7:
 375:Core/Src/touch.c **** }
 1047              		.loc 1 375 1
 1048 0014 00BF     		nop
 1049 0016 80BD     		pop	{r7, pc}
 1050              	.L59:
 1051              		.align	2
 1052              	.L58:
 1053 0018 00000000 		.word	tsDriver
 1054 001c 00000000 		.word	I2cAddress
 1055              		.cfi_endproc
 1056              	.LFE150:
 1058              		.section	.text.BSP_TS_ResetTouchData,"ax",%progbits
 1059              		.align	1
 1060              		.global	BSP_TS_ResetTouchData
 1061              		.syntax unified
 1062              		.thumb
 1063              		.thumb_func
 1065              	BSP_TS_ResetTouchData:
 1066              	.LFB151:
 376:Core/Src/touch.c **** 
 377:Core/Src/touch.c **** 
 378:Core/Src/touch.c **** /** @defgroup STM32756G_DISCOVERY_TS_Private_Functions TS Private Functions
 379:Core/Src/touch.c ****   * @{
 380:Core/Src/touch.c ****   */
 381:Core/Src/touch.c **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s 			page 26


 382:Core/Src/touch.c **** 
 383:Core/Src/touch.c **** /**
 384:Core/Src/touch.c ****   * @brief  Function used to reset all touch data before a new acquisition
 385:Core/Src/touch.c ****   *         of touch information.
 386:Core/Src/touch.c ****   * @param  TS_State: Pointer to touch screen current state structure
 387:Core/Src/touch.c ****   * @retval TS_OK if OK, TE_ERROR if problem found.
 388:Core/Src/touch.c ****   */
 389:Core/Src/touch.c **** uint8_t BSP_TS_ResetTouchData(TS_StateTypeDef *TS_State)
 390:Core/Src/touch.c **** {
 1067              		.loc 1 390 1
 1068              		.cfi_startproc
 1069              		@ args = 0, pretend = 0, frame = 16
 1070              		@ frame_needed = 1, uses_anonymous_args = 0
 1071              		@ link register save eliminated.
 1072 0000 80B4     		push	{r7}
 1073              	.LCFI28:
 1074              		.cfi_def_cfa_offset 4
 1075              		.cfi_offset 7, -4
 1076 0002 85B0     		sub	sp, sp, #20
 1077              	.LCFI29:
 1078              		.cfi_def_cfa_offset 24
 1079 0004 00AF     		add	r7, sp, #0
 1080              	.LCFI30:
 1081              		.cfi_def_cfa_register 7
 1082 0006 7860     		str	r0, [r7, #4]
 391:Core/Src/touch.c ****   uint8_t ts_status = TS_ERROR;
 1083              		.loc 1 391 11
 1084 0008 0123     		movs	r3, #1
 1085 000a FB73     		strb	r3, [r7, #15]
 392:Core/Src/touch.c ****   uint32_t index;
 393:Core/Src/touch.c **** 
 394:Core/Src/touch.c ****   if (TS_State != (TS_StateTypeDef *)NULL)
 1086              		.loc 1 394 6
 1087 000c 7B68     		ldr	r3, [r7, #4]
 1088 000e 002B     		cmp	r3, #0
 1089 0010 2FD0     		beq	.L61
 395:Core/Src/touch.c ****   {
 396:Core/Src/touch.c ****     TS_State->gestureId = GEST_ID_NO_GESTURE;
 1090              		.loc 1 396 25
 1091 0012 7B68     		ldr	r3, [r7, #4]
 1092 0014 0022     		movs	r2, #0
 1093 0016 9A62     		str	r2, [r3, #40]
 397:Core/Src/touch.c ****     TS_State->touchDetected = 0;
 1094              		.loc 1 397 29
 1095 0018 7B68     		ldr	r3, [r7, #4]
 1096 001a 0022     		movs	r2, #0
 1097 001c 1A70     		strb	r2, [r3]
 398:Core/Src/touch.c **** 
 399:Core/Src/touch.c ****     for(index = 0; index < TS_MAX_NB_TOUCH; index++)
 1098              		.loc 1 399 15
 1099 001e 0023     		movs	r3, #0
 1100 0020 BB60     		str	r3, [r7, #8]
 1101              		.loc 1 399 5
 1102 0022 21E0     		b	.L62
 1103              	.L63:
 400:Core/Src/touch.c ****     {
 401:Core/Src/touch.c ****       TS_State->touchX[index]       = 0;
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s 			page 27


 1104              		.loc 1 401 37 discriminator 3
 1105 0024 7A68     		ldr	r2, [r7, #4]
 1106 0026 BB68     		ldr	r3, [r7, #8]
 1107 0028 5B00     		lsls	r3, r3, #1
 1108 002a 1344     		add	r3, r3, r2
 1109 002c 0022     		movs	r2, #0
 1110 002e 5A80     		strh	r2, [r3, #2]	@ movhi
 402:Core/Src/touch.c ****       TS_State->touchY[index]       = 0;
 1111              		.loc 1 402 37 discriminator 3
 1112 0030 7A68     		ldr	r2, [r7, #4]
 1113 0032 BB68     		ldr	r3, [r7, #8]
 1114 0034 0433     		adds	r3, r3, #4
 1115 0036 5B00     		lsls	r3, r3, #1
 1116 0038 1344     		add	r3, r3, r2
 1117 003a 0022     		movs	r2, #0
 1118 003c 9A80     		strh	r2, [r3, #4]	@ movhi
 403:Core/Src/touch.c ****       TS_State->touchArea[index]    = 0;
 1119              		.loc 1 403 37 discriminator 3
 1120 003e 7A68     		ldr	r2, [r7, #4]
 1121 0040 BB68     		ldr	r3, [r7, #8]
 1122 0042 1344     		add	r3, r3, r2
 1123 0044 2033     		adds	r3, r3, #32
 1124 0046 0022     		movs	r2, #0
 1125 0048 1A70     		strb	r2, [r3]
 404:Core/Src/touch.c ****       TS_State->touchEventId[index] = TOUCH_EVENT_NO_EVT;
 1126              		.loc 1 404 37 discriminator 3
 1127 004a 7A68     		ldr	r2, [r7, #4]
 1128 004c BB68     		ldr	r3, [r7, #8]
 1129 004e 1344     		add	r3, r3, r2
 1130 0050 1B33     		adds	r3, r3, #27
 1131 0052 0022     		movs	r2, #0
 1132 0054 1A70     		strb	r2, [r3]
 405:Core/Src/touch.c ****       TS_State->touchWeight[index]  = 0;
 1133              		.loc 1 405 37 discriminator 3
 1134 0056 7A68     		ldr	r2, [r7, #4]
 1135 0058 BB68     		ldr	r3, [r7, #8]
 1136 005a 1344     		add	r3, r3, r2
 1137 005c 1633     		adds	r3, r3, #22
 1138 005e 0022     		movs	r2, #0
 1139 0060 1A70     		strb	r2, [r3]
 399:Core/Src/touch.c ****     {
 1140              		.loc 1 399 50 discriminator 3
 1141 0062 BB68     		ldr	r3, [r7, #8]
 1142 0064 0133     		adds	r3, r3, #1
 1143 0066 BB60     		str	r3, [r7, #8]
 1144              	.L62:
 399:Core/Src/touch.c ****     {
 1145              		.loc 1 399 5 discriminator 1
 1146 0068 BB68     		ldr	r3, [r7, #8]
 1147 006a 042B     		cmp	r3, #4
 1148 006c DAD9     		bls	.L63
 406:Core/Src/touch.c ****     }
 407:Core/Src/touch.c **** 
 408:Core/Src/touch.c ****     ts_status = TS_OK;
 1149              		.loc 1 408 15
 1150 006e 0023     		movs	r3, #0
 1151 0070 FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s 			page 28


 1152              	.L61:
 409:Core/Src/touch.c **** 
 410:Core/Src/touch.c ****   } /* of if (TS_State != (TS_StateTypeDef *)NULL) */
 411:Core/Src/touch.c **** 
 412:Core/Src/touch.c ****   return (ts_status);
 1153              		.loc 1 412 10
 1154 0072 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 413:Core/Src/touch.c **** }
 1155              		.loc 1 413 1
 1156 0074 1846     		mov	r0, r3
 1157 0076 1437     		adds	r7, r7, #20
 1158              	.LCFI31:
 1159              		.cfi_def_cfa_offset 4
 1160 0078 BD46     		mov	sp, r7
 1161              	.LCFI32:
 1162              		.cfi_def_cfa_register 13
 1163              		@ sp needed
 1164 007a 5DF8047B 		ldr	r7, [sp], #4
 1165              	.LCFI33:
 1166              		.cfi_restore 7
 1167              		.cfi_def_cfa_offset 0
 1168 007e 7047     		bx	lr
 1169              		.cfi_endproc
 1170              	.LFE151:
 1172              		.section	.bss._x.1,"aw",%nobits
 1173              		.align	2
 1176              	_x.1:
 1177 0000 00000000 		.space	20
 1177      00000000 
 1177      00000000 
 1177      00000000 
 1177      00000000 
 1178              		.section	.bss._y.0,"aw",%nobits
 1179              		.align	2
 1182              	_y.0:
 1183 0000 00000000 		.space	20
 1183      00000000 
 1183      00000000 
 1183      00000000 
 1183      00000000 
 1184              		.text
 1185              	.Letext0:
 1186              		.file 2 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 1187              		.file 3 "d:\\3.tools\\arm_gcc_toolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 1188              		.file 4 "d:\\3.tools\\arm_gcc_toolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 1189              		.file 5 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 1190              		.file 6 "Components/../Components/ft5336/../Common/ts.h"
 1191              		.file 7 "Core/Inc/touch.h"
 1192              		.file 8 "Components/../Components/ft5336/ft5336.h"
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s 			page 29


DEFINED SYMBOLS
                            *ABS*:00000000 touch.c
C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s:20     .bss.tsDriver:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s:23     .bss.tsDriver:00000000 tsDriver
C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s:26     .bss.tsXBoundary:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s:29     .bss.tsXBoundary:00000000 tsXBoundary
C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s:32     .bss.tsYBoundary:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s:35     .bss.tsYBoundary:00000000 tsYBoundary
C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s:40     .bss.tsOrientation:00000000 tsOrientation
C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s:41     .bss.tsOrientation:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s:45     .bss.I2cAddress:00000000 I2cAddress
C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s:46     .bss.I2cAddress:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s:48     .text.BSP_TS_Init:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s:54     .text.BSP_TS_Init:00000000 BSP_TS_Init
C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s:150    .text.BSP_TS_Init:00000068 $d
C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s:160    .text.BSP_TS_DeInit:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s:166    .text.BSP_TS_DeInit:00000000 BSP_TS_DeInit
C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s:197    .text.BSP_TS_ITConfig:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s:203    .text.BSP_TS_ITConfig:00000000 BSP_TS_ITConfig
C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s:271    .text.BSP_TS_ITConfig:00000050 $d
C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s:278    .text.BSP_TS_ITGetStatus:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s:284    .text.BSP_TS_ITGetStatus:00000000 BSP_TS_ITGetStatus
C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s:316    .text.BSP_TS_ITGetStatus:0000001c $d
C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s:322    .text.BSP_TS_GetState:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s:328    .text.BSP_TS_GetState:00000000 BSP_TS_GetState
C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s:757    .text.BSP_TS_GetState:000002dc $d
C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s:765    .text.BSP_TS_GetState:000002ec $d
C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s:1176   .bss._x.1:00000000 _x.1
C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s:1182   .bss._y.0:00000000 _y.0
C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s:774    .text.BSP_TS_GetState:00000308 $t
C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s:860    .text.BSP_TS_Get_GestureId:00000000 BSP_TS_Get_GestureId
C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s:854    .text.BSP_TS_Get_GestureId:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s:906    .text.BSP_TS_Get_GestureId:0000003c $d
C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s:935    .text.BSP_TS_Get_GestureId:000000b0 $t
C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s:1011   .text.BSP_TS_Get_GestureId:00000100 $d
C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s:1016   .text.BSP_TS_ITClear:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s:1022   .text.BSP_TS_ITClear:00000000 BSP_TS_ITClear
C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s:1053   .text.BSP_TS_ITClear:00000018 $d
C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s:1059   .text.BSP_TS_ResetTouchData:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s:1065   .text.BSP_TS_ResetTouchData:00000000 BSP_TS_ResetTouchData
C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s:1173   .bss._x.1:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccNpltrr.s:1179   .bss._y.0:00000000 $d

UNDEFINED SYMBOLS
ft5336_ts_drv
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
ft5336_TS_GetTouchInfo
ft5336_TS_GetGestureID
