ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"touch.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.bss.tsDriver,"aw",%nobits
  20              		.align	2
  23              	tsDriver:
  24 0000 00000000 		.space	4
  25              		.section	.bss.tsXBoundary,"aw",%nobits
  26              		.align	1
  29              	tsXBoundary:
  30 0000 0000     		.space	2
  31              		.section	.bss.tsYBoundary,"aw",%nobits
  32              		.align	1
  35              	tsYBoundary:
  36 0000 0000     		.space	2
  37              		.section	.bss.tsOrientation,"aw",%nobits
  40              	tsOrientation:
  41 0000 00       		.space	1
  42              		.section	.bss.I2cAddress,"aw",%nobits
  45              	I2cAddress:
  46 0000 00       		.space	1
  47              		.section	.bss.TS_State,"aw",%nobits
  48              		.align	2
  51              	TS_State:
  52 0000 00000000 		.space	44
  52      00000000 
  52      00000000 
  52      00000000 
  52      00000000 
  53              		.global	Toutch_Status
  54              		.section	.data.Toutch_Status,"aw"
  57              	Toutch_Status:
  58 0000 01       		.byte	1
  59              		.section	.rodata
  60              		.align	2
  61              	.LC0:
  62 0000 256400   		.ascii	"%d\000"
  63              		.section	.text.Touch_Operation,"ax",%progbits
  64              		.align	1
  65              		.global	Touch_Operation
  66              		.syntax unified
  67              		.thumb
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s 			page 2


  68              		.thumb_func
  70              	Touch_Operation:
  71              	.LFB144:
  72              		.file 1 "Core/Src/touch.c"
   1:Core/Src/touch.c **** /**
   2:Core/Src/touch.c ****   ******************************************************************************
   3:Core/Src/touch.c ****   * @file    stm32746g_discovery_ts.c
   4:Core/Src/touch.c ****   * @author  MCD Application Team
   5:Core/Src/touch.c ****   * @brief   This file provides a set of functions needed to manage the Touch 
   6:Core/Src/touch.c ****   *          Screen on STM32746G-Discovery board.
   7:Core/Src/touch.c ****   *
   8:Core/Src/touch.c ****   ******************************************************************************
   9:Core/Src/touch.c ****   * @attention
  10:Core/Src/touch.c ****   *
  11:Core/Src/touch.c ****   * Copyright (c) 2016 STMicroelectronics.
  12:Core/Src/touch.c ****   * All rights reserved.
  13:Core/Src/touch.c ****   *
  14:Core/Src/touch.c ****   * This software is licensed under terms that can be found in the LICENSE file
  15:Core/Src/touch.c ****   * in the root directory of this software component.
  16:Core/Src/touch.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  17:Core/Src/touch.c ****   *
  18:Core/Src/touch.c ****   ******************************************************************************
  19:Core/Src/touch.c ****   @verbatim
  20:Core/Src/touch.c ****    1. How To use this driver:
  21:Core/Src/touch.c ****    --------------------------
  22:Core/Src/touch.c ****       - This driver is used to drive the touch screen module of the STM32746G-Discovery
  23:Core/Src/touch.c ****         board on the RK043FN48H-CT672B 480x272 LCD screen with capacitive touch screen.
  24:Core/Src/touch.c ****       - The FT5336 component driver must be included in project files according to
  25:Core/Src/touch.c ****         the touch screen driver present on this board.
  26:Core/Src/touch.c ****    
  27:Core/Src/touch.c ****    2. Driver description:
  28:Core/Src/touch.c ****    ---------------------
  29:Core/Src/touch.c ****      + Initialization steps:
  30:Core/Src/touch.c ****         o Initialize the TS module using the BSP_TS_Init() function. This 
  31:Core/Src/touch.c ****           function includes the MSP layer hardware resources initialization and the
  32:Core/Src/touch.c ****           communication layer configuration to start the TS use. The LCD size properties
  33:Core/Src/touch.c ****           (x and y) are passed as parameters.
  34:Core/Src/touch.c ****         o If TS interrupt mode is desired, you must configure the TS interrupt mode
  35:Core/Src/touch.c ****           by calling the function BSP_TS_ITConfig(). The TS interrupt mode is generated
  36:Core/Src/touch.c ****           as an external interrupt whenever a touch is detected. 
  37:Core/Src/touch.c ****           The interrupt mode internally uses the IO functionalities driver driven by
  38:Core/Src/touch.c ****           the IO expander, to configure the IT line.
  39:Core/Src/touch.c ****      
  40:Core/Src/touch.c ****      + Touch screen use
  41:Core/Src/touch.c ****         o The touch screen state is captured whenever the function BSP_TS_GetState() is 
  42:Core/Src/touch.c ****           used. This function returns information about the last LCD touch occurred
  43:Core/Src/touch.c ****           in the TS_StateTypeDef structure.
  44:Core/Src/touch.c ****         o If TS interrupt mode is used, the function BSP_TS_ITGetStatus() is needed to get
  45:Core/Src/touch.c ****           the interrupt status. To clear the IT pending bits, you should call the 
  46:Core/Src/touch.c ****           function BSP_TS_ITClear().
  47:Core/Src/touch.c ****         o The IT is handled using the corresponding external interrupt IRQ handler,
  48:Core/Src/touch.c ****           the user IT callback treatment is implemented on the same external interrupt
  49:Core/Src/touch.c ****           callback.
  50:Core/Src/touch.c ****   @endverbatim
  51:Core/Src/touch.c ****   ******************************************************************************
  52:Core/Src/touch.c ****   */ 
  53:Core/Src/touch.c **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s 			page 3


  54:Core/Src/touch.c **** /* Dependencies
  55:Core/Src/touch.c **** - stm32746g_discovery_lcd.c
  56:Core/Src/touch.c **** - ft5336.c
  57:Core/Src/touch.c **** EndDependencies */
  58:Core/Src/touch.c **** 
  59:Core/Src/touch.c **** /* Includes ------------------------------------------------------------------*/
  60:Core/Src/touch.c **** #include "touch.h"
  61:Core/Src/touch.c **** #include "lcd.h"
  62:Core/Src/touch.c **** /** @addtogroup BSP
  63:Core/Src/touch.c ****   * @{
  64:Core/Src/touch.c ****   */
  65:Core/Src/touch.c **** 
  66:Core/Src/touch.c **** /** @addtogroup STM32746G_DISCOVERY
  67:Core/Src/touch.c ****   * @{
  68:Core/Src/touch.c ****   */ 
  69:Core/Src/touch.c ****   
  70:Core/Src/touch.c **** /** @defgroup STM32746G_DISCOVERY_TS STM32746G_DISCOVERY_TS
  71:Core/Src/touch.c ****   * @{
  72:Core/Src/touch.c ****   */   
  73:Core/Src/touch.c **** 
  74:Core/Src/touch.c **** /** @defgroup STM32746G_DISCOVERY_TS_Private_Types_Definitions STM32746G_DISCOVERY_TS Types Definit
  75:Core/Src/touch.c ****   * @{
  76:Core/Src/touch.c ****   */ 
  77:Core/Src/touch.c **** /**
  78:Core/Src/touch.c ****   * @}
  79:Core/Src/touch.c ****   */ 
  80:Core/Src/touch.c **** 
  81:Core/Src/touch.c **** /** @defgroup STM32746G_DISCOVERY_TS_Private_Defines STM32746G_DISCOVERY_TS Types Defines
  82:Core/Src/touch.c ****   * @{
  83:Core/Src/touch.c ****   */ 
  84:Core/Src/touch.c **** /**
  85:Core/Src/touch.c ****   * @}
  86:Core/Src/touch.c ****   */ 
  87:Core/Src/touch.c **** 
  88:Core/Src/touch.c **** /** @defgroup STM32746G_DISCOVERY_TS_Private_Macros STM32746G_DISCOVERY_TS Private Macros
  89:Core/Src/touch.c ****   * @{
  90:Core/Src/touch.c ****   */ 
  91:Core/Src/touch.c **** /**
  92:Core/Src/touch.c ****   * @}
  93:Core/Src/touch.c ****   */
  94:Core/Src/touch.c **** 
  95:Core/Src/touch.c **** /** @defgroup STM32746G_DISCOVERY_TS_Imported_Variables STM32746G_DISCOVERY_TS Imported Variables
  96:Core/Src/touch.c ****   * @{
  97:Core/Src/touch.c ****   */
  98:Core/Src/touch.c ****   /**
  99:Core/Src/touch.c ****     * @}
 100:Core/Src/touch.c ****     */
 101:Core/Src/touch.c **** 
 102:Core/Src/touch.c **** /** @defgroup STM32746G_DISCOVERY_TS_Private_Variables STM32746G_DISCOVERY_TS Private Variables
 103:Core/Src/touch.c ****   * @{
 104:Core/Src/touch.c ****   */ 
 105:Core/Src/touch.c **** static TS_DrvTypeDef *tsDriver;
 106:Core/Src/touch.c **** static uint16_t tsXBoundary, tsYBoundary; 
 107:Core/Src/touch.c **** static uint8_t tsOrientation;
 108:Core/Src/touch.c **** static uint8_t I2cAddress;
 109:Core/Src/touch.c **** static TS_StateTypeDef TS_State;
 110:Core/Src/touch.c **** uint8_t Toutch_Status = 1;
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s 			page 4


 111:Core/Src/touch.c **** /**
 112:Core/Src/touch.c ****   * @}
 113:Core/Src/touch.c ****   */ 
 114:Core/Src/touch.c **** 
 115:Core/Src/touch.c **** static void Touch_Select_Zone(uint16_t x, uint16_t y, uint8_t * status);
 116:Core/Src/touch.c **** static void Touch_Display_Zone(uint8_t *status,uint32_t color);
 117:Core/Src/touch.c **** 
 118:Core/Src/touch.c **** /** @defgroup STM32746G_DISCOVERY_TS_Private_Function_Prototypes STM32746G_DISCOVERY_TS Private Fun
 119:Core/Src/touch.c ****   * @{
 120:Core/Src/touch.c ****   */ 
 121:Core/Src/touch.c **** /**
 122:Core/Src/touch.c ****   * @}
 123:Core/Src/touch.c ****   */ 
 124:Core/Src/touch.c **** 
 125:Core/Src/touch.c **** /** @defgroup STM32746G_DISCOVERY_TS_Exported_Functions STM32746G_DISCOVERY_TS Exported Functions
 126:Core/Src/touch.c ****   * @{
 127:Core/Src/touch.c ****   */ 
 128:Core/Src/touch.c **** void Touch_Operation(void)
 129:Core/Src/touch.c **** {
  73              		.loc 1 129 1
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 40
  76              		@ frame_needed = 1, uses_anonymous_args = 0
  77 0000 80B5     		push	{r7, lr}
  78              	.LCFI0:
  79              		.cfi_def_cfa_offset 8
  80              		.cfi_offset 7, -8
  81              		.cfi_offset 14, -4
  82 0002 8AB0     		sub	sp, sp, #40
  83              	.LCFI1:
  84              		.cfi_def_cfa_offset 48
  85 0004 00AF     		add	r7, sp, #0
  86              	.LCFI2:
  87              		.cfi_def_cfa_register 7
 130:Core/Src/touch.c ****     uint8_t text[30] = {0,};
  88              		.loc 1 130 13
  89 0006 0023     		movs	r3, #0
  90 0008 7B60     		str	r3, [r7, #4]
  91 000a 07F10803 		add	r3, r7, #8
  92 000e 0022     		movs	r2, #0
  93 0010 1A60     		str	r2, [r3]
  94 0012 5A60     		str	r2, [r3, #4]
  95 0014 9A60     		str	r2, [r3, #8]
  96 0016 DA60     		str	r2, [r3, #12]
  97 0018 1A61     		str	r2, [r3, #16]
  98 001a 5A61     		str	r2, [r3, #20]
  99 001c 1A83     		strh	r2, [r3, #24]	@ movhi
 131:Core/Src/touch.c ****     uint16_t x, y;
 132:Core/Src/touch.c ****     static uint8_t status_old;
 133:Core/Src/touch.c ****     BSP_TS_GetState(&TS_State);
 100              		.loc 1 133 5
 101 001e 2548     		ldr	r0, .L5
 102 0020 FFF7FEFF 		bl	BSP_TS_GetState
 134:Core/Src/touch.c ****     if(TS_State.touchDetected)
 103              		.loc 1 134 16
 104 0024 234B     		ldr	r3, .L5
 105 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s 			page 5


 106              		.loc 1 134 7
 107 0028 002B     		cmp	r3, #0
 108 002a 3ED0     		beq	.L4
 135:Core/Src/touch.c ****     {
 136:Core/Src/touch.c ****         /* Get X and Y position of the touch post calibrated */
 137:Core/Src/touch.c ****         TS_State.touchX[0]++;
 109              		.loc 1 137 24
 110 002c 214B     		ldr	r3, .L5
 111 002e 5B88     		ldrh	r3, [r3, #2]
 112              		.loc 1 137 27
 113 0030 0133     		adds	r3, r3, #1
 114 0032 9AB2     		uxth	r2, r3
 115 0034 1F4B     		ldr	r3, .L5
 116 0036 5A80     		strh	r2, [r3, #2]	@ movhi
 138:Core/Src/touch.c ****         TS_State.touchY[0]++;
 117              		.loc 1 138 24
 118 0038 1E4B     		ldr	r3, .L5
 119 003a 9B89     		ldrh	r3, [r3, #12]
 120              		.loc 1 138 27
 121 003c 0133     		adds	r3, r3, #1
 122 003e 9AB2     		uxth	r2, r3
 123 0040 1C4B     		ldr	r3, .L5
 124 0042 9A81     		strh	r2, [r3, #12]	@ movhi
 139:Core/Src/touch.c ****         x = TS_State.touchX[0];
 125              		.loc 1 139 11
 126 0044 1B4B     		ldr	r3, .L5
 127 0046 5B88     		ldrh	r3, [r3, #2]	@ movhi
 128 0048 FB84     		strh	r3, [r7, #38]	@ movhi
 140:Core/Src/touch.c ****         y = TS_State.touchY[0];
 129              		.loc 1 140 11
 130 004a 1A4B     		ldr	r3, .L5
 131 004c 9B89     		ldrh	r3, [r3, #12]	@ movhi
 132 004e BB84     		strh	r3, [r7, #36]	@ movhi
 141:Core/Src/touch.c ****         Touch_Select_Zone(x,y,&Toutch_Status);
 133              		.loc 1 141 9
 134 0050 B98C     		ldrh	r1, [r7, #36]
 135 0052 FB8C     		ldrh	r3, [r7, #38]
 136 0054 184A     		ldr	r2, .L5+4
 137 0056 1846     		mov	r0, r3
 138 0058 FFF7FEFF 		bl	Touch_Select_Zone
 142:Core/Src/touch.c ****         if(status_old != Toutch_Status)
 139              		.loc 1 142 23
 140 005c 174B     		ldr	r3, .L5+8
 141 005e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 142 0060 154B     		ldr	r3, .L5+4
 143 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 144              		.loc 1 142 11
 145 0064 9A42     		cmp	r2, r3
 146 0066 09D0     		beq	.L3
 143:Core/Src/touch.c ****         {
 144:Core/Src/touch.c ****             Touch_Display_Zone(&status_old,LCD_COLOR_WHITE);
 147              		.loc 1 144 13
 148 0068 4FF0FF31 		mov	r1, #-1
 149 006c 1348     		ldr	r0, .L5+8
 150 006e FFF7FEFF 		bl	Touch_Display_Zone
 145:Core/Src/touch.c ****             Touch_Display_Zone(&Toutch_Status,LCD_COLOR_LIGHTYELLOW);
 151              		.loc 1 145 13
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s 			page 6


 152 0072 6FF07F01 		mvn	r1, #127
 153 0076 1048     		ldr	r0, .L5+4
 154 0078 FFF7FEFF 		bl	Touch_Display_Zone
 155              	.L3:
 146:Core/Src/touch.c ****         }
 147:Core/Src/touch.c ****         status_old = Toutch_Status;
 156              		.loc 1 147 20
 157 007c 0E4B     		ldr	r3, .L5+4
 158 007e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 159 0080 0E4B     		ldr	r3, .L5+8
 160 0082 1A70     		strb	r2, [r3]
 148:Core/Src/touch.c ****         BSP_LCD_SetTextColor(LCD_COLOR_LIGHTYELLOW);
 161              		.loc 1 148 9
 162 0084 6FF07F00 		mvn	r0, #127
 163 0088 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 149:Core/Src/touch.c ****         sprintf((char*)text, "%d", Toutch_Status);
 164              		.loc 1 149 9
 165 008c 0A4B     		ldr	r3, .L5+4
 166 008e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 167 0090 1A46     		mov	r2, r3
 168 0092 3B1D     		adds	r3, r7, #4
 169 0094 0A49     		ldr	r1, .L5+12
 170 0096 1846     		mov	r0, r3
 171 0098 FFF7FEFF 		bl	sprintf
 150:Core/Src/touch.c ****         BSP_LCD_DisplayStringAt(325, 232, (uint8_t *)&text, LEFT_MODE);
 172              		.loc 1 150 9
 173 009c 3A1D     		adds	r2, r7, #4
 174 009e 0323     		movs	r3, #3
 175 00a0 E821     		movs	r1, #232
 176 00a2 40F24510 		movw	r0, #325
 177 00a6 FFF7FEFF 		bl	BSP_LCD_DisplayStringAt
 178              	.L4:
 151:Core/Src/touch.c ****     }
 152:Core/Src/touch.c **** }
 179              		.loc 1 152 1
 180 00aa 00BF     		nop
 181 00ac 2837     		adds	r7, r7, #40
 182              	.LCFI3:
 183              		.cfi_def_cfa_offset 8
 184 00ae BD46     		mov	sp, r7
 185              	.LCFI4:
 186              		.cfi_def_cfa_register 13
 187              		@ sp needed
 188 00b0 80BD     		pop	{r7, pc}
 189              	.L6:
 190 00b2 00BF     		.align	2
 191              	.L5:
 192 00b4 00000000 		.word	TS_State
 193 00b8 00000000 		.word	Toutch_Status
 194 00bc 00000000 		.word	status_old.2
 195 00c0 00000000 		.word	.LC0
 196              		.cfi_endproc
 197              	.LFE144:
 199              		.section	.text.Touch_Select_Zone,"ax",%progbits
 200              		.align	1
 201              		.syntax unified
 202              		.thumb
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s 			page 7


 203              		.thumb_func
 205              	Touch_Select_Zone:
 206              	.LFB145:
 153:Core/Src/touch.c **** 
 154:Core/Src/touch.c **** static void Touch_Select_Zone(uint16_t x, uint16_t y, uint8_t * status)
 155:Core/Src/touch.c **** {       
 207              		.loc 1 155 1
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 8
 210              		@ frame_needed = 1, uses_anonymous_args = 0
 211              		@ link register save eliminated.
 212 0000 80B4     		push	{r7}
 213              	.LCFI5:
 214              		.cfi_def_cfa_offset 4
 215              		.cfi_offset 7, -4
 216 0002 83B0     		sub	sp, sp, #12
 217              	.LCFI6:
 218              		.cfi_def_cfa_offset 16
 219 0004 00AF     		add	r7, sp, #0
 220              	.LCFI7:
 221              		.cfi_def_cfa_register 7
 222 0006 0346     		mov	r3, r0
 223 0008 3A60     		str	r2, [r7]
 224 000a FB80     		strh	r3, [r7, #6]	@ movhi
 225 000c 0B46     		mov	r3, r1	@ movhi
 226 000e BB80     		strh	r3, [r7, #4]	@ movhi
 156:Core/Src/touch.c ****     if ((y > 30) && (y < 60))
 227              		.loc 1 156 8
 228 0010 BB88     		ldrh	r3, [r7, #4]
 229 0012 1E2B     		cmp	r3, #30
 230 0014 06D9     		bls	.L8
 231              		.loc 1 156 18 discriminator 1
 232 0016 BB88     		ldrh	r3, [r7, #4]
 233 0018 3B2B     		cmp	r3, #59
 234 001a 03D8     		bhi	.L8
 157:Core/Src/touch.c ****     {
 158:Core/Src/touch.c ****         *status = 1;
 235              		.loc 1 158 17
 236 001c 3B68     		ldr	r3, [r7]
 237 001e 0122     		movs	r2, #1
 238 0020 1A70     		strb	r2, [r3]
 239 0022 5BE0     		b	.L9
 240              	.L8:
 159:Core/Src/touch.c ****     }
 160:Core/Src/touch.c ****     else if ((y > 60) && (y < 90))
 241              		.loc 1 160 13
 242 0024 BB88     		ldrh	r3, [r7, #4]
 243 0026 3C2B     		cmp	r3, #60
 244 0028 06D9     		bls	.L10
 245              		.loc 1 160 23 discriminator 1
 246 002a BB88     		ldrh	r3, [r7, #4]
 247 002c 592B     		cmp	r3, #89
 248 002e 03D8     		bhi	.L10
 161:Core/Src/touch.c ****     {
 162:Core/Src/touch.c ****         *status = 2;
 249              		.loc 1 162 17
 250 0030 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s 			page 8


 251 0032 0222     		movs	r2, #2
 252 0034 1A70     		strb	r2, [r3]
 253 0036 51E0     		b	.L9
 254              	.L10:
 163:Core/Src/touch.c ****     }
 164:Core/Src/touch.c ****     else if ((y > 90) && (y < 120))
 255              		.loc 1 164 13
 256 0038 BB88     		ldrh	r3, [r7, #4]
 257 003a 5A2B     		cmp	r3, #90
 258 003c 06D9     		bls	.L11
 259              		.loc 1 164 23 discriminator 1
 260 003e BB88     		ldrh	r3, [r7, #4]
 261 0040 772B     		cmp	r3, #119
 262 0042 03D8     		bhi	.L11
 165:Core/Src/touch.c ****     {
 166:Core/Src/touch.c ****         *status = 3;
 263              		.loc 1 166 17
 264 0044 3B68     		ldr	r3, [r7]
 265 0046 0322     		movs	r2, #3
 266 0048 1A70     		strb	r2, [r3]
 267 004a 47E0     		b	.L9
 268              	.L11:
 167:Core/Src/touch.c ****     }
 168:Core/Src/touch.c ****     else if ((y > 120) && (y < 150))
 269              		.loc 1 168 13
 270 004c BB88     		ldrh	r3, [r7, #4]
 271 004e 782B     		cmp	r3, #120
 272 0050 06D9     		bls	.L12
 273              		.loc 1 168 24 discriminator 1
 274 0052 BB88     		ldrh	r3, [r7, #4]
 275 0054 952B     		cmp	r3, #149
 276 0056 03D8     		bhi	.L12
 169:Core/Src/touch.c ****     {
 170:Core/Src/touch.c ****         *status = 4;
 277              		.loc 1 170 17
 278 0058 3B68     		ldr	r3, [r7]
 279 005a 0422     		movs	r2, #4
 280 005c 1A70     		strb	r2, [r3]
 281 005e 3DE0     		b	.L9
 282              	.L12:
 171:Core/Src/touch.c ****     }
 172:Core/Src/touch.c ****     else if ((y > 150) && (y < 180))
 283              		.loc 1 172 13
 284 0060 BB88     		ldrh	r3, [r7, #4]
 285 0062 962B     		cmp	r3, #150
 286 0064 06D9     		bls	.L13
 287              		.loc 1 172 24 discriminator 1
 288 0066 BB88     		ldrh	r3, [r7, #4]
 289 0068 B32B     		cmp	r3, #179
 290 006a 03D8     		bhi	.L13
 173:Core/Src/touch.c ****     {
 174:Core/Src/touch.c ****         *status = 5;
 291              		.loc 1 174 17
 292 006c 3B68     		ldr	r3, [r7]
 293 006e 0522     		movs	r2, #5
 294 0070 1A70     		strb	r2, [r3]
 295 0072 33E0     		b	.L9
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s 			page 9


 296              	.L13:
 175:Core/Src/touch.c ****     }
 176:Core/Src/touch.c ****     else if ((y > 180) && (y < 210))
 297              		.loc 1 176 13
 298 0074 BB88     		ldrh	r3, [r7, #4]
 299 0076 B42B     		cmp	r3, #180
 300 0078 06D9     		bls	.L14
 301              		.loc 1 176 24 discriminator 1
 302 007a BB88     		ldrh	r3, [r7, #4]
 303 007c D12B     		cmp	r3, #209
 304 007e 03D8     		bhi	.L14
 177:Core/Src/touch.c ****     {
 178:Core/Src/touch.c ****         *status = 6;
 305              		.loc 1 178 17
 306 0080 3B68     		ldr	r3, [r7]
 307 0082 0622     		movs	r2, #6
 308 0084 1A70     		strb	r2, [r3]
 309 0086 29E0     		b	.L9
 310              	.L14:
 179:Core/Src/touch.c ****     }
 180:Core/Src/touch.c ****     else if ((y > 210) && (x > 0) && (x < 160))
 311              		.loc 1 180 13
 312 0088 BB88     		ldrh	r3, [r7, #4]
 313 008a D22B     		cmp	r3, #210
 314 008c 09D9     		bls	.L15
 315              		.loc 1 180 24 discriminator 1
 316 008e FB88     		ldrh	r3, [r7, #6]
 317 0090 002B     		cmp	r3, #0
 318 0092 06D0     		beq	.L15
 319              		.loc 1 180 35 discriminator 2
 320 0094 FB88     		ldrh	r3, [r7, #6]
 321 0096 9F2B     		cmp	r3, #159
 322 0098 03D8     		bhi	.L15
 181:Core/Src/touch.c ****     {
 182:Core/Src/touch.c ****         *status = 7;
 323              		.loc 1 182 17
 324 009a 3B68     		ldr	r3, [r7]
 325 009c 0722     		movs	r2, #7
 326 009e 1A70     		strb	r2, [r3]
 327 00a0 1CE0     		b	.L9
 328              	.L15:
 183:Core/Src/touch.c ****     }
 184:Core/Src/touch.c ****     else if ((y > 210) && (x > 160) && (x < 320))
 329              		.loc 1 184 13
 330 00a2 BB88     		ldrh	r3, [r7, #4]
 331 00a4 D22B     		cmp	r3, #210
 332 00a6 0AD9     		bls	.L16
 333              		.loc 1 184 24 discriminator 1
 334 00a8 FB88     		ldrh	r3, [r7, #6]
 335 00aa A02B     		cmp	r3, #160
 336 00ac 07D9     		bls	.L16
 337              		.loc 1 184 37 discriminator 2
 338 00ae FB88     		ldrh	r3, [r7, #6]
 339 00b0 B3F5A07F 		cmp	r3, #320
 340 00b4 03D2     		bcs	.L16
 185:Core/Src/touch.c ****     {
 186:Core/Src/touch.c ****         *status = 8;
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s 			page 10


 341              		.loc 1 186 17
 342 00b6 3B68     		ldr	r3, [r7]
 343 00b8 0822     		movs	r2, #8
 344 00ba 1A70     		strb	r2, [r3]
 345 00bc 0EE0     		b	.L9
 346              	.L16:
 187:Core/Src/touch.c ****     }
 188:Core/Src/touch.c ****     else if ((y > 210) && (x > 320) && (x < 480))
 347              		.loc 1 188 13
 348 00be BB88     		ldrh	r3, [r7, #4]
 349 00c0 D22B     		cmp	r3, #210
 350 00c2 0BD9     		bls	.L17
 351              		.loc 1 188 24 discriminator 1
 352 00c4 FB88     		ldrh	r3, [r7, #6]
 353 00c6 B3F5A07F 		cmp	r3, #320
 354 00ca 07D9     		bls	.L17
 355              		.loc 1 188 37 discriminator 2
 356 00cc FB88     		ldrh	r3, [r7, #6]
 357 00ce B3F5F07F 		cmp	r3, #480
 358 00d2 03D2     		bcs	.L17
 189:Core/Src/touch.c ****     {
 190:Core/Src/touch.c ****         *status = 9;
 359              		.loc 1 190 17
 360 00d4 3B68     		ldr	r3, [r7]
 361 00d6 0922     		movs	r2, #9
 362 00d8 1A70     		strb	r2, [r3]
 191:Core/Src/touch.c ****     }
 192:Core/Src/touch.c **** }
 363              		.loc 1 192 1
 364 00da FFE7     		b	.L17
 365              	.L9:
 366              	.L17:
 367 00dc 00BF     		nop
 368 00de 0C37     		adds	r7, r7, #12
 369              	.LCFI8:
 370              		.cfi_def_cfa_offset 4
 371 00e0 BD46     		mov	sp, r7
 372              	.LCFI9:
 373              		.cfi_def_cfa_register 13
 374              		@ sp needed
 375 00e2 5DF8047B 		ldr	r7, [sp], #4
 376              	.LCFI10:
 377              		.cfi_restore 7
 378              		.cfi_def_cfa_offset 0
 379 00e6 7047     		bx	lr
 380              		.cfi_endproc
 381              	.LFE145:
 383              		.section	.text.Touch_Display_Zone,"ax",%progbits
 384              		.align	1
 385              		.syntax unified
 386              		.thumb
 387              		.thumb_func
 389              	Touch_Display_Zone:
 390              	.LFB146:
 193:Core/Src/touch.c **** 
 194:Core/Src/touch.c **** static void Touch_Display_Zone(uint8_t *status,uint32_t color)
 195:Core/Src/touch.c **** {
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s 			page 11


 391              		.loc 1 195 1
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 8
 394              		@ frame_needed = 1, uses_anonymous_args = 0
 395 0000 80B5     		push	{r7, lr}
 396              	.LCFI11:
 397              		.cfi_def_cfa_offset 8
 398              		.cfi_offset 7, -8
 399              		.cfi_offset 14, -4
 400 0002 82B0     		sub	sp, sp, #8
 401              	.LCFI12:
 402              		.cfi_def_cfa_offset 16
 403 0004 00AF     		add	r7, sp, #0
 404              	.LCFI13:
 405              		.cfi_def_cfa_register 7
 406 0006 7860     		str	r0, [r7, #4]
 407 0008 3960     		str	r1, [r7]
 196:Core/Src/touch.c ****     BSP_LCD_SetTextColor(color);
 408              		.loc 1 196 5
 409 000a 3868     		ldr	r0, [r7]
 410 000c FFF7FEFF 		bl	BSP_LCD_SetTextColor
 197:Core/Src/touch.c ****     if (*status == 1)
 411              		.loc 1 197 9
 412 0010 7B68     		ldr	r3, [r7, #4]
 413 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 414              		.loc 1 197 8
 415 0014 012B     		cmp	r3, #1
 416 0016 22D1     		bne	.L19
 198:Core/Src/touch.c ****     {
 199:Core/Src/touch.c ****         BSP_LCD_DrawHLine(0,30,BSP_LCD_GetXSize());
 417              		.loc 1 199 32
 418 0018 FFF7FEFF 		bl	BSP_LCD_GetXSize
 419 001c 0346     		mov	r3, r0
 420              		.loc 1 199 9
 421 001e 9BB2     		uxth	r3, r3
 422 0020 1A46     		mov	r2, r3
 423 0022 1E21     		movs	r1, #30
 424 0024 0020     		movs	r0, #0
 425 0026 FFF7FEFF 		bl	BSP_LCD_DrawHLine
 200:Core/Src/touch.c ****         BSP_LCD_DrawHLine(0,60,BSP_LCD_GetXSize());
 426              		.loc 1 200 32
 427 002a FFF7FEFF 		bl	BSP_LCD_GetXSize
 428 002e 0346     		mov	r3, r0
 429              		.loc 1 200 9
 430 0030 9BB2     		uxth	r3, r3
 431 0032 1A46     		mov	r2, r3
 432 0034 3C21     		movs	r1, #60
 433 0036 0020     		movs	r0, #0
 434 0038 FFF7FEFF 		bl	BSP_LCD_DrawHLine
 201:Core/Src/touch.c ****         BSP_LCD_DrawVLine(0,30,30);
 435              		.loc 1 201 9
 436 003c 1E22     		movs	r2, #30
 437 003e 1E21     		movs	r1, #30
 438 0040 0020     		movs	r0, #0
 439 0042 FFF7FEFF 		bl	BSP_LCD_DrawVLine
 202:Core/Src/touch.c ****         BSP_LCD_DrawVLine(30,30,30);
 440              		.loc 1 202 9
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s 			page 12


 441 0046 1E22     		movs	r2, #30
 442 0048 1E21     		movs	r1, #30
 443 004a 1E20     		movs	r0, #30
 444 004c FFF7FEFF 		bl	BSP_LCD_DrawVLine
 203:Core/Src/touch.c ****         BSP_LCD_DrawVLine(480,30,30);
 445              		.loc 1 203 9
 446 0050 1E22     		movs	r2, #30
 447 0052 1E21     		movs	r1, #30
 448 0054 4FF4F070 		mov	r0, #480
 449 0058 FFF7FEFF 		bl	BSP_LCD_DrawVLine
 204:Core/Src/touch.c ****     }
 205:Core/Src/touch.c ****     else if (*status == 2)
 206:Core/Src/touch.c ****     {
 207:Core/Src/touch.c ****         BSP_LCD_DrawHLine(0,60,BSP_LCD_GetXSize());
 208:Core/Src/touch.c ****         BSP_LCD_DrawHLine(0,90,BSP_LCD_GetXSize());
 209:Core/Src/touch.c ****         BSP_LCD_DrawVLine(0,60,30);
 210:Core/Src/touch.c ****         BSP_LCD_DrawVLine(30,60,30);
 211:Core/Src/touch.c ****         BSP_LCD_DrawVLine(480,60,30);        
 212:Core/Src/touch.c ****     }
 213:Core/Src/touch.c ****     else if (*status == 3)
 214:Core/Src/touch.c ****     {
 215:Core/Src/touch.c ****         BSP_LCD_DrawHLine(0,90,BSP_LCD_GetXSize());
 216:Core/Src/touch.c ****         BSP_LCD_DrawHLine(0,120,BSP_LCD_GetXSize());
 217:Core/Src/touch.c ****         BSP_LCD_DrawVLine(0,90,30);
 218:Core/Src/touch.c ****         BSP_LCD_DrawVLine(30,90,30);
 219:Core/Src/touch.c ****         BSP_LCD_DrawVLine(480,90,30);                
 220:Core/Src/touch.c ****     }
 221:Core/Src/touch.c ****     else if (*status == 4)
 222:Core/Src/touch.c ****     {
 223:Core/Src/touch.c ****         BSP_LCD_DrawHLine(0,120,BSP_LCD_GetXSize());
 224:Core/Src/touch.c ****         BSP_LCD_DrawHLine(0,150,BSP_LCD_GetXSize());
 225:Core/Src/touch.c ****         BSP_LCD_DrawVLine(0,120,30);
 226:Core/Src/touch.c ****         BSP_LCD_DrawVLine(30,120,30);
 227:Core/Src/touch.c ****         BSP_LCD_DrawVLine(480,120,30);                
 228:Core/Src/touch.c ****     }
 229:Core/Src/touch.c ****     else if (*status == 5)
 230:Core/Src/touch.c ****     {
 231:Core/Src/touch.c ****         BSP_LCD_DrawHLine(0,150,BSP_LCD_GetXSize());
 232:Core/Src/touch.c ****         BSP_LCD_DrawHLine(0,180,BSP_LCD_GetXSize());
 233:Core/Src/touch.c ****         BSP_LCD_DrawVLine(0,150,30);
 234:Core/Src/touch.c ****         BSP_LCD_DrawVLine(30,150,30);
 235:Core/Src/touch.c ****         BSP_LCD_DrawVLine(480,150,30);                
 236:Core/Src/touch.c ****     }
 237:Core/Src/touch.c ****     else if (*status == 6)
 238:Core/Src/touch.c ****     {
 239:Core/Src/touch.c ****         BSP_LCD_DrawHLine(0,180,BSP_LCD_GetXSize());
 240:Core/Src/touch.c ****         BSP_LCD_DrawHLine(0,210,BSP_LCD_GetXSize());
 241:Core/Src/touch.c ****         BSP_LCD_DrawVLine(0,180,30);
 242:Core/Src/touch.c ****         BSP_LCD_DrawVLine(30,180,30);
 243:Core/Src/touch.c ****         BSP_LCD_DrawVLine(480,180,30);                
 244:Core/Src/touch.c ****     }
 245:Core/Src/touch.c **** }
 450              		.loc 1 245 1
 451 005c C1E0     		b	.L25
 452              	.L19:
 205:Core/Src/touch.c ****     {
 453              		.loc 1 205 14
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s 			page 13


 454 005e 7B68     		ldr	r3, [r7, #4]
 455 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 205:Core/Src/touch.c ****     {
 456              		.loc 1 205 13
 457 0062 022B     		cmp	r3, #2
 458 0064 22D1     		bne	.L21
 207:Core/Src/touch.c ****         BSP_LCD_DrawHLine(0,90,BSP_LCD_GetXSize());
 459              		.loc 1 207 32
 460 0066 FFF7FEFF 		bl	BSP_LCD_GetXSize
 461 006a 0346     		mov	r3, r0
 207:Core/Src/touch.c ****         BSP_LCD_DrawHLine(0,90,BSP_LCD_GetXSize());
 462              		.loc 1 207 9
 463 006c 9BB2     		uxth	r3, r3
 464 006e 1A46     		mov	r2, r3
 465 0070 3C21     		movs	r1, #60
 466 0072 0020     		movs	r0, #0
 467 0074 FFF7FEFF 		bl	BSP_LCD_DrawHLine
 208:Core/Src/touch.c ****         BSP_LCD_DrawVLine(0,60,30);
 468              		.loc 1 208 32
 469 0078 FFF7FEFF 		bl	BSP_LCD_GetXSize
 470 007c 0346     		mov	r3, r0
 208:Core/Src/touch.c ****         BSP_LCD_DrawVLine(0,60,30);
 471              		.loc 1 208 9
 472 007e 9BB2     		uxth	r3, r3
 473 0080 1A46     		mov	r2, r3
 474 0082 5A21     		movs	r1, #90
 475 0084 0020     		movs	r0, #0
 476 0086 FFF7FEFF 		bl	BSP_LCD_DrawHLine
 209:Core/Src/touch.c ****         BSP_LCD_DrawVLine(30,60,30);
 477              		.loc 1 209 9
 478 008a 1E22     		movs	r2, #30
 479 008c 3C21     		movs	r1, #60
 480 008e 0020     		movs	r0, #0
 481 0090 FFF7FEFF 		bl	BSP_LCD_DrawVLine
 210:Core/Src/touch.c ****         BSP_LCD_DrawVLine(480,60,30);        
 482              		.loc 1 210 9
 483 0094 1E22     		movs	r2, #30
 484 0096 3C21     		movs	r1, #60
 485 0098 1E20     		movs	r0, #30
 486 009a FFF7FEFF 		bl	BSP_LCD_DrawVLine
 211:Core/Src/touch.c ****     }
 487              		.loc 1 211 9
 488 009e 1E22     		movs	r2, #30
 489 00a0 3C21     		movs	r1, #60
 490 00a2 4FF4F070 		mov	r0, #480
 491 00a6 FFF7FEFF 		bl	BSP_LCD_DrawVLine
 492              		.loc 1 245 1
 493 00aa 9AE0     		b	.L25
 494              	.L21:
 213:Core/Src/touch.c ****     {
 495              		.loc 1 213 14
 496 00ac 7B68     		ldr	r3, [r7, #4]
 497 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 213:Core/Src/touch.c ****     {
 498              		.loc 1 213 13
 499 00b0 032B     		cmp	r3, #3
 500 00b2 22D1     		bne	.L22
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s 			page 14


 215:Core/Src/touch.c ****         BSP_LCD_DrawHLine(0,120,BSP_LCD_GetXSize());
 501              		.loc 1 215 32
 502 00b4 FFF7FEFF 		bl	BSP_LCD_GetXSize
 503 00b8 0346     		mov	r3, r0
 215:Core/Src/touch.c ****         BSP_LCD_DrawHLine(0,120,BSP_LCD_GetXSize());
 504              		.loc 1 215 9
 505 00ba 9BB2     		uxth	r3, r3
 506 00bc 1A46     		mov	r2, r3
 507 00be 5A21     		movs	r1, #90
 508 00c0 0020     		movs	r0, #0
 509 00c2 FFF7FEFF 		bl	BSP_LCD_DrawHLine
 216:Core/Src/touch.c ****         BSP_LCD_DrawVLine(0,90,30);
 510              		.loc 1 216 33
 511 00c6 FFF7FEFF 		bl	BSP_LCD_GetXSize
 512 00ca 0346     		mov	r3, r0
 216:Core/Src/touch.c ****         BSP_LCD_DrawVLine(0,90,30);
 513              		.loc 1 216 9
 514 00cc 9BB2     		uxth	r3, r3
 515 00ce 1A46     		mov	r2, r3
 516 00d0 7821     		movs	r1, #120
 517 00d2 0020     		movs	r0, #0
 518 00d4 FFF7FEFF 		bl	BSP_LCD_DrawHLine
 217:Core/Src/touch.c ****         BSP_LCD_DrawVLine(30,90,30);
 519              		.loc 1 217 9
 520 00d8 1E22     		movs	r2, #30
 521 00da 5A21     		movs	r1, #90
 522 00dc 0020     		movs	r0, #0
 523 00de FFF7FEFF 		bl	BSP_LCD_DrawVLine
 218:Core/Src/touch.c ****         BSP_LCD_DrawVLine(480,90,30);                
 524              		.loc 1 218 9
 525 00e2 1E22     		movs	r2, #30
 526 00e4 5A21     		movs	r1, #90
 527 00e6 1E20     		movs	r0, #30
 528 00e8 FFF7FEFF 		bl	BSP_LCD_DrawVLine
 219:Core/Src/touch.c ****     }
 529              		.loc 1 219 9
 530 00ec 1E22     		movs	r2, #30
 531 00ee 5A21     		movs	r1, #90
 532 00f0 4FF4F070 		mov	r0, #480
 533 00f4 FFF7FEFF 		bl	BSP_LCD_DrawVLine
 534              		.loc 1 245 1
 535 00f8 73E0     		b	.L25
 536              	.L22:
 221:Core/Src/touch.c ****     {
 537              		.loc 1 221 14
 538 00fa 7B68     		ldr	r3, [r7, #4]
 539 00fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 221:Core/Src/touch.c ****     {
 540              		.loc 1 221 13
 541 00fe 042B     		cmp	r3, #4
 542 0100 22D1     		bne	.L23
 223:Core/Src/touch.c ****         BSP_LCD_DrawHLine(0,150,BSP_LCD_GetXSize());
 543              		.loc 1 223 33
 544 0102 FFF7FEFF 		bl	BSP_LCD_GetXSize
 545 0106 0346     		mov	r3, r0
 223:Core/Src/touch.c ****         BSP_LCD_DrawHLine(0,150,BSP_LCD_GetXSize());
 546              		.loc 1 223 9
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s 			page 15


 547 0108 9BB2     		uxth	r3, r3
 548 010a 1A46     		mov	r2, r3
 549 010c 7821     		movs	r1, #120
 550 010e 0020     		movs	r0, #0
 551 0110 FFF7FEFF 		bl	BSP_LCD_DrawHLine
 224:Core/Src/touch.c ****         BSP_LCD_DrawVLine(0,120,30);
 552              		.loc 1 224 33
 553 0114 FFF7FEFF 		bl	BSP_LCD_GetXSize
 554 0118 0346     		mov	r3, r0
 224:Core/Src/touch.c ****         BSP_LCD_DrawVLine(0,120,30);
 555              		.loc 1 224 9
 556 011a 9BB2     		uxth	r3, r3
 557 011c 1A46     		mov	r2, r3
 558 011e 9621     		movs	r1, #150
 559 0120 0020     		movs	r0, #0
 560 0122 FFF7FEFF 		bl	BSP_LCD_DrawHLine
 225:Core/Src/touch.c ****         BSP_LCD_DrawVLine(30,120,30);
 561              		.loc 1 225 9
 562 0126 1E22     		movs	r2, #30
 563 0128 7821     		movs	r1, #120
 564 012a 0020     		movs	r0, #0
 565 012c FFF7FEFF 		bl	BSP_LCD_DrawVLine
 226:Core/Src/touch.c ****         BSP_LCD_DrawVLine(480,120,30);                
 566              		.loc 1 226 9
 567 0130 1E22     		movs	r2, #30
 568 0132 7821     		movs	r1, #120
 569 0134 1E20     		movs	r0, #30
 570 0136 FFF7FEFF 		bl	BSP_LCD_DrawVLine
 227:Core/Src/touch.c ****     }
 571              		.loc 1 227 9
 572 013a 1E22     		movs	r2, #30
 573 013c 7821     		movs	r1, #120
 574 013e 4FF4F070 		mov	r0, #480
 575 0142 FFF7FEFF 		bl	BSP_LCD_DrawVLine
 576              		.loc 1 245 1
 577 0146 4CE0     		b	.L25
 578              	.L23:
 229:Core/Src/touch.c ****     {
 579              		.loc 1 229 14
 580 0148 7B68     		ldr	r3, [r7, #4]
 581 014a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 229:Core/Src/touch.c ****     {
 582              		.loc 1 229 13
 583 014c 052B     		cmp	r3, #5
 584 014e 22D1     		bne	.L24
 231:Core/Src/touch.c ****         BSP_LCD_DrawHLine(0,180,BSP_LCD_GetXSize());
 585              		.loc 1 231 33
 586 0150 FFF7FEFF 		bl	BSP_LCD_GetXSize
 587 0154 0346     		mov	r3, r0
 231:Core/Src/touch.c ****         BSP_LCD_DrawHLine(0,180,BSP_LCD_GetXSize());
 588              		.loc 1 231 9
 589 0156 9BB2     		uxth	r3, r3
 590 0158 1A46     		mov	r2, r3
 591 015a 9621     		movs	r1, #150
 592 015c 0020     		movs	r0, #0
 593 015e FFF7FEFF 		bl	BSP_LCD_DrawHLine
 232:Core/Src/touch.c ****         BSP_LCD_DrawVLine(0,150,30);
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s 			page 16


 594              		.loc 1 232 33
 595 0162 FFF7FEFF 		bl	BSP_LCD_GetXSize
 596 0166 0346     		mov	r3, r0
 232:Core/Src/touch.c ****         BSP_LCD_DrawVLine(0,150,30);
 597              		.loc 1 232 9
 598 0168 9BB2     		uxth	r3, r3
 599 016a 1A46     		mov	r2, r3
 600 016c B421     		movs	r1, #180
 601 016e 0020     		movs	r0, #0
 602 0170 FFF7FEFF 		bl	BSP_LCD_DrawHLine
 233:Core/Src/touch.c ****         BSP_LCD_DrawVLine(30,150,30);
 603              		.loc 1 233 9
 604 0174 1E22     		movs	r2, #30
 605 0176 9621     		movs	r1, #150
 606 0178 0020     		movs	r0, #0
 607 017a FFF7FEFF 		bl	BSP_LCD_DrawVLine
 234:Core/Src/touch.c ****         BSP_LCD_DrawVLine(480,150,30);                
 608              		.loc 1 234 9
 609 017e 1E22     		movs	r2, #30
 610 0180 9621     		movs	r1, #150
 611 0182 1E20     		movs	r0, #30
 612 0184 FFF7FEFF 		bl	BSP_LCD_DrawVLine
 235:Core/Src/touch.c ****     }
 613              		.loc 1 235 9
 614 0188 1E22     		movs	r2, #30
 615 018a 9621     		movs	r1, #150
 616 018c 4FF4F070 		mov	r0, #480
 617 0190 FFF7FEFF 		bl	BSP_LCD_DrawVLine
 618              		.loc 1 245 1
 619 0194 25E0     		b	.L25
 620              	.L24:
 237:Core/Src/touch.c ****     {
 621              		.loc 1 237 14
 622 0196 7B68     		ldr	r3, [r7, #4]
 623 0198 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 237:Core/Src/touch.c ****     {
 624              		.loc 1 237 13
 625 019a 062B     		cmp	r3, #6
 626 019c 21D1     		bne	.L25
 239:Core/Src/touch.c ****         BSP_LCD_DrawHLine(0,210,BSP_LCD_GetXSize());
 627              		.loc 1 239 33
 628 019e FFF7FEFF 		bl	BSP_LCD_GetXSize
 629 01a2 0346     		mov	r3, r0
 239:Core/Src/touch.c ****         BSP_LCD_DrawHLine(0,210,BSP_LCD_GetXSize());
 630              		.loc 1 239 9
 631 01a4 9BB2     		uxth	r3, r3
 632 01a6 1A46     		mov	r2, r3
 633 01a8 B421     		movs	r1, #180
 634 01aa 0020     		movs	r0, #0
 635 01ac FFF7FEFF 		bl	BSP_LCD_DrawHLine
 240:Core/Src/touch.c ****         BSP_LCD_DrawVLine(0,180,30);
 636              		.loc 1 240 33
 637 01b0 FFF7FEFF 		bl	BSP_LCD_GetXSize
 638 01b4 0346     		mov	r3, r0
 240:Core/Src/touch.c ****         BSP_LCD_DrawVLine(0,180,30);
 639              		.loc 1 240 9
 640 01b6 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s 			page 17


 641 01b8 1A46     		mov	r2, r3
 642 01ba D221     		movs	r1, #210
 643 01bc 0020     		movs	r0, #0
 644 01be FFF7FEFF 		bl	BSP_LCD_DrawHLine
 241:Core/Src/touch.c ****         BSP_LCD_DrawVLine(30,180,30);
 645              		.loc 1 241 9
 646 01c2 1E22     		movs	r2, #30
 647 01c4 B421     		movs	r1, #180
 648 01c6 0020     		movs	r0, #0
 649 01c8 FFF7FEFF 		bl	BSP_LCD_DrawVLine
 242:Core/Src/touch.c ****         BSP_LCD_DrawVLine(480,180,30);                
 650              		.loc 1 242 9
 651 01cc 1E22     		movs	r2, #30
 652 01ce B421     		movs	r1, #180
 653 01d0 1E20     		movs	r0, #30
 654 01d2 FFF7FEFF 		bl	BSP_LCD_DrawVLine
 243:Core/Src/touch.c ****     }
 655              		.loc 1 243 9
 656 01d6 1E22     		movs	r2, #30
 657 01d8 B421     		movs	r1, #180
 658 01da 4FF4F070 		mov	r0, #480
 659 01de FFF7FEFF 		bl	BSP_LCD_DrawVLine
 660              	.L25:
 661              		.loc 1 245 1
 662 01e2 00BF     		nop
 663 01e4 0837     		adds	r7, r7, #8
 664              	.LCFI14:
 665              		.cfi_def_cfa_offset 8
 666 01e6 BD46     		mov	sp, r7
 667              	.LCFI15:
 668              		.cfi_def_cfa_register 13
 669              		@ sp needed
 670 01e8 80BD     		pop	{r7, pc}
 671              		.cfi_endproc
 672              	.LFE146:
 674              		.section	.text.BSP_TS_Init,"ax",%progbits
 675              		.align	1
 676              		.global	BSP_TS_Init
 677              		.syntax unified
 678              		.thumb
 679              		.thumb_func
 681              	BSP_TS_Init:
 682              	.LFB147:
 246:Core/Src/touch.c **** /**
 247:Core/Src/touch.c ****   * @brief  Initializes and configures the touch screen functionalities and 
 248:Core/Src/touch.c ****   *         configures all necessary hardware resources (GPIOs, I2C, clocks..).
 249:Core/Src/touch.c ****   * @param  ts_SizeX: Maximum X size of the TS area on LCD
 250:Core/Src/touch.c ****   * @param  ts_SizeY: Maximum Y size of the TS area on LCD
 251:Core/Src/touch.c ****   * @retval TS_OK if all initializations are OK. Other value if error.
 252:Core/Src/touch.c ****   */
 253:Core/Src/touch.c **** uint8_t BSP_TS_Init(uint16_t ts_SizeX, uint16_t ts_SizeY)
 254:Core/Src/touch.c **** {
 683              		.loc 1 254 1
 684              		.cfi_startproc
 685              		@ args = 0, pretend = 0, frame = 16
 686              		@ frame_needed = 1, uses_anonymous_args = 0
 687 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s 			page 18


 688              	.LCFI16:
 689              		.cfi_def_cfa_offset 8
 690              		.cfi_offset 7, -8
 691              		.cfi_offset 14, -4
 692 0002 84B0     		sub	sp, sp, #16
 693              	.LCFI17:
 694              		.cfi_def_cfa_offset 24
 695 0004 00AF     		add	r7, sp, #0
 696              	.LCFI18:
 697              		.cfi_def_cfa_register 7
 698 0006 0346     		mov	r3, r0
 699 0008 0A46     		mov	r2, r1
 700 000a FB80     		strh	r3, [r7, #6]	@ movhi
 701 000c 1346     		mov	r3, r2	@ movhi
 702 000e BB80     		strh	r3, [r7, #4]	@ movhi
 255:Core/Src/touch.c ****   uint8_t status = TS_OK;
 703              		.loc 1 255 11
 704 0010 0023     		movs	r3, #0
 705 0012 FB73     		strb	r3, [r7, #15]
 256:Core/Src/touch.c ****   tsXBoundary = ts_SizeX;
 706              		.loc 1 256 15
 707 0014 144A     		ldr	r2, .L30
 708 0016 FB88     		ldrh	r3, [r7, #6]	@ movhi
 709 0018 1380     		strh	r3, [r2]	@ movhi
 257:Core/Src/touch.c ****   tsYBoundary = ts_SizeY;
 710              		.loc 1 257 15
 711 001a 144A     		ldr	r2, .L30+4
 712 001c BB88     		ldrh	r3, [r7, #4]	@ movhi
 713 001e 1380     		strh	r3, [r2]	@ movhi
 258:Core/Src/touch.c ****   
 259:Core/Src/touch.c ****   /* Read ID and verify if the touch screen driver is ready */
 260:Core/Src/touch.c ****   ft5336_ts_drv.Init(TS_I2C_ADDRESS);
 714              		.loc 1 260 16
 715 0020 134B     		ldr	r3, .L30+8
 716 0022 1B68     		ldr	r3, [r3]
 717              		.loc 1 260 3
 718 0024 7020     		movs	r0, #112
 719 0026 9847     		blx	r3
 720              	.LVL0:
 261:Core/Src/touch.c ****   if(ft5336_ts_drv.ReadID(TS_I2C_ADDRESS) == FT5336_ID_VALUE)
 721              		.loc 1 261 19
 722 0028 114B     		ldr	r3, .L30+8
 723 002a 5B68     		ldr	r3, [r3, #4]
 724              		.loc 1 261 6
 725 002c 7020     		movs	r0, #112
 726 002e 9847     		blx	r3
 727              	.LVL1:
 728 0030 0346     		mov	r3, r0
 729              		.loc 1 261 5
 730 0032 512B     		cmp	r3, #81
 731 0034 11D1     		bne	.L27
 262:Core/Src/touch.c ****   { 
 263:Core/Src/touch.c ****     /* Initialize the TS driver structure */
 264:Core/Src/touch.c ****     tsDriver = &ft5336_ts_drv;
 732              		.loc 1 264 14
 733 0036 0F4B     		ldr	r3, .L30+12
 734 0038 0D4A     		ldr	r2, .L30+8
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s 			page 19


 735 003a 1A60     		str	r2, [r3]
 265:Core/Src/touch.c ****     I2cAddress = TS_I2C_ADDRESS;
 736              		.loc 1 265 16
 737 003c 0E4B     		ldr	r3, .L30+16
 738 003e 7022     		movs	r2, #112
 739 0040 1A70     		strb	r2, [r3]
 266:Core/Src/touch.c ****     tsOrientation = TS_SWAP_XY;
 740              		.loc 1 266 19
 741 0042 0E4B     		ldr	r3, .L30+20
 742 0044 0822     		movs	r2, #8
 743 0046 1A70     		strb	r2, [r3]
 267:Core/Src/touch.c **** 
 268:Core/Src/touch.c ****     /* Initialize the TS driver */
 269:Core/Src/touch.c ****     tsDriver->Start(I2cAddress);
 744              		.loc 1 269 13
 745 0048 0A4B     		ldr	r3, .L30+12
 746 004a 1B68     		ldr	r3, [r3]
 747 004c DB68     		ldr	r3, [r3, #12]
 748              		.loc 1 269 5
 749 004e 0A4A     		ldr	r2, .L30+16
 750 0050 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 751 0052 92B2     		uxth	r2, r2
 752 0054 1046     		mov	r0, r2
 753 0056 9847     		blx	r3
 754              	.LVL2:
 755 0058 01E0     		b	.L28
 756              	.L27:
 270:Core/Src/touch.c ****   }
 271:Core/Src/touch.c ****   else
 272:Core/Src/touch.c ****   {
 273:Core/Src/touch.c ****     status = TS_DEVICE_NOT_FOUND;
 757              		.loc 1 273 12
 758 005a 0323     		movs	r3, #3
 759 005c FB73     		strb	r3, [r7, #15]
 760              	.L28:
 274:Core/Src/touch.c ****   }
 275:Core/Src/touch.c **** 
 276:Core/Src/touch.c ****   return status;
 761              		.loc 1 276 10
 762 005e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 277:Core/Src/touch.c **** }
 763              		.loc 1 277 1
 764 0060 1846     		mov	r0, r3
 765 0062 1037     		adds	r7, r7, #16
 766              	.LCFI19:
 767              		.cfi_def_cfa_offset 8
 768 0064 BD46     		mov	sp, r7
 769              	.LCFI20:
 770              		.cfi_def_cfa_register 13
 771              		@ sp needed
 772 0066 80BD     		pop	{r7, pc}
 773              	.L31:
 774              		.align	2
 775              	.L30:
 776 0068 00000000 		.word	tsXBoundary
 777 006c 00000000 		.word	tsYBoundary
 778 0070 00000000 		.word	ft5336_ts_drv
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s 			page 20


 779 0074 00000000 		.word	tsDriver
 780 0078 00000000 		.word	I2cAddress
 781 007c 00000000 		.word	tsOrientation
 782              		.cfi_endproc
 783              	.LFE147:
 785              		.section	.text.BSP_TS_DeInit,"ax",%progbits
 786              		.align	1
 787              		.global	BSP_TS_DeInit
 788              		.syntax unified
 789              		.thumb
 790              		.thumb_func
 792              	BSP_TS_DeInit:
 793              	.LFB148:
 278:Core/Src/touch.c **** 
 279:Core/Src/touch.c **** /**
 280:Core/Src/touch.c ****   * @brief  DeInitializes the TouchScreen.
 281:Core/Src/touch.c ****   * @retval TS state
 282:Core/Src/touch.c ****   */
 283:Core/Src/touch.c **** uint8_t BSP_TS_DeInit(void)
 284:Core/Src/touch.c **** { 
 794              		.loc 1 284 1
 795              		.cfi_startproc
 796              		@ args = 0, pretend = 0, frame = 0
 797              		@ frame_needed = 1, uses_anonymous_args = 0
 798              		@ link register save eliminated.
 799 0000 80B4     		push	{r7}
 800              	.LCFI21:
 801              		.cfi_def_cfa_offset 4
 802              		.cfi_offset 7, -4
 803 0002 00AF     		add	r7, sp, #0
 804              	.LCFI22:
 805              		.cfi_def_cfa_register 7
 285:Core/Src/touch.c ****   /* Actually ts_driver does not provide a DeInit function */
 286:Core/Src/touch.c ****   return TS_OK;
 806              		.loc 1 286 10
 807 0004 0023     		movs	r3, #0
 287:Core/Src/touch.c **** }
 808              		.loc 1 287 1
 809 0006 1846     		mov	r0, r3
 810 0008 BD46     		mov	sp, r7
 811              	.LCFI23:
 812              		.cfi_def_cfa_register 13
 813              		@ sp needed
 814 000a 5DF8047B 		ldr	r7, [sp], #4
 815              	.LCFI24:
 816              		.cfi_restore 7
 817              		.cfi_def_cfa_offset 0
 818 000e 7047     		bx	lr
 819              		.cfi_endproc
 820              	.LFE148:
 822              		.section	.text.BSP_TS_ITConfig,"ax",%progbits
 823              		.align	1
 824              		.global	BSP_TS_ITConfig
 825              		.syntax unified
 826              		.thumb
 827              		.thumb_func
 829              	BSP_TS_ITConfig:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s 			page 21


 830              	.LFB149:
 288:Core/Src/touch.c **** 
 289:Core/Src/touch.c **** /**
 290:Core/Src/touch.c ****   * @brief  Configures and enables the touch screen interrupts.
 291:Core/Src/touch.c ****   * @retval TS_OK if all initializations are OK. Other value if error.
 292:Core/Src/touch.c ****   */
 293:Core/Src/touch.c **** uint8_t BSP_TS_ITConfig(void)
 294:Core/Src/touch.c **** {
 831              		.loc 1 294 1
 832              		.cfi_startproc
 833              		@ args = 0, pretend = 0, frame = 24
 834              		@ frame_needed = 1, uses_anonymous_args = 0
 835 0000 80B5     		push	{r7, lr}
 836              	.LCFI25:
 837              		.cfi_def_cfa_offset 8
 838              		.cfi_offset 7, -8
 839              		.cfi_offset 14, -4
 840 0002 86B0     		sub	sp, sp, #24
 841              	.LCFI26:
 842              		.cfi_def_cfa_offset 32
 843 0004 00AF     		add	r7, sp, #0
 844              	.LCFI27:
 845              		.cfi_def_cfa_register 7
 295:Core/Src/touch.c ****   GPIO_InitTypeDef gpio_init_structure;
 296:Core/Src/touch.c **** 
 297:Core/Src/touch.c ****   /* Configure Interrupt mode for SD detection pin */
 298:Core/Src/touch.c ****   gpio_init_structure.Pin = TS_INT_PIN;
 846              		.loc 1 298 27
 847 0006 4FF40053 		mov	r3, #8192
 848 000a 7B60     		str	r3, [r7, #4]
 299:Core/Src/touch.c ****   gpio_init_structure.Pull = GPIO_NOPULL;
 849              		.loc 1 299 28
 850 000c 0023     		movs	r3, #0
 851 000e FB60     		str	r3, [r7, #12]
 300:Core/Src/touch.c ****   gpio_init_structure.Speed = GPIO_SPEED_FAST;
 852              		.loc 1 300 29
 853 0010 0223     		movs	r3, #2
 854 0012 3B61     		str	r3, [r7, #16]
 301:Core/Src/touch.c ****   gpio_init_structure.Mode = GPIO_MODE_IT_RISING;
 855              		.loc 1 301 28
 856 0014 4FF48813 		mov	r3, #1114112
 857 0018 BB60     		str	r3, [r7, #8]
 302:Core/Src/touch.c ****   HAL_GPIO_Init(TS_INT_GPIO_PORT, &gpio_init_structure);
 858              		.loc 1 302 3
 859 001a 3B1D     		adds	r3, r7, #4
 860 001c 1946     		mov	r1, r3
 861 001e 0C48     		ldr	r0, .L36
 862 0020 FFF7FEFF 		bl	HAL_GPIO_Init
 303:Core/Src/touch.c **** 
 304:Core/Src/touch.c ****   /* Enable and set Touch screen EXTI Interrupt to the lowest priority */
 305:Core/Src/touch.c ****   HAL_NVIC_SetPriority((IRQn_Type)(TS_INT_EXTI_IRQn), 0x0F, 0x00);
 863              		.loc 1 305 3
 864 0024 0022     		movs	r2, #0
 865 0026 0F21     		movs	r1, #15
 866 0028 2820     		movs	r0, #40
 867 002a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 306:Core/Src/touch.c ****   HAL_NVIC_EnableIRQ((IRQn_Type)(TS_INT_EXTI_IRQn));
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s 			page 22


 868              		.loc 1 306 3
 869 002e 2820     		movs	r0, #40
 870 0030 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 307:Core/Src/touch.c **** 
 308:Core/Src/touch.c ****   /* Enable the TS ITs */
 309:Core/Src/touch.c ****   tsDriver->EnableIT(I2cAddress);
 871              		.loc 1 309 11
 872 0034 074B     		ldr	r3, .L36+4
 873 0036 1B68     		ldr	r3, [r3]
 874 0038 9B69     		ldr	r3, [r3, #24]
 875              		.loc 1 309 3
 876 003a 074A     		ldr	r2, .L36+8
 877 003c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 878 003e 92B2     		uxth	r2, r2
 879 0040 1046     		mov	r0, r2
 880 0042 9847     		blx	r3
 881              	.LVL3:
 310:Core/Src/touch.c **** 
 311:Core/Src/touch.c ****   return TS_OK;  
 882              		.loc 1 311 10
 883 0044 0023     		movs	r3, #0
 312:Core/Src/touch.c **** }
 884              		.loc 1 312 1
 885 0046 1846     		mov	r0, r3
 886 0048 1837     		adds	r7, r7, #24
 887              	.LCFI28:
 888              		.cfi_def_cfa_offset 8
 889 004a BD46     		mov	sp, r7
 890              	.LCFI29:
 891              		.cfi_def_cfa_register 13
 892              		@ sp needed
 893 004c 80BD     		pop	{r7, pc}
 894              	.L37:
 895 004e 00BF     		.align	2
 896              	.L36:
 897 0050 00200240 		.word	1073881088
 898 0054 00000000 		.word	tsDriver
 899 0058 00000000 		.word	I2cAddress
 900              		.cfi_endproc
 901              	.LFE149:
 903              		.section	.text.BSP_TS_ITGetStatus,"ax",%progbits
 904              		.align	1
 905              		.global	BSP_TS_ITGetStatus
 906              		.syntax unified
 907              		.thumb
 908              		.thumb_func
 910              	BSP_TS_ITGetStatus:
 911              	.LFB150:
 313:Core/Src/touch.c **** 
 314:Core/Src/touch.c **** /**
 315:Core/Src/touch.c ****   * @brief  Gets the touch screen interrupt status.
 316:Core/Src/touch.c ****   * @retval TS_OK if all initializations are OK. Other value if error.
 317:Core/Src/touch.c ****   */
 318:Core/Src/touch.c **** uint8_t BSP_TS_ITGetStatus(void)
 319:Core/Src/touch.c **** {
 912              		.loc 1 319 1
 913              		.cfi_startproc
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s 			page 23


 914              		@ args = 0, pretend = 0, frame = 0
 915              		@ frame_needed = 1, uses_anonymous_args = 0
 916 0000 80B5     		push	{r7, lr}
 917              	.LCFI30:
 918              		.cfi_def_cfa_offset 8
 919              		.cfi_offset 7, -8
 920              		.cfi_offset 14, -4
 921 0002 00AF     		add	r7, sp, #0
 922              	.LCFI31:
 923              		.cfi_def_cfa_register 7
 320:Core/Src/touch.c ****   /* Return the TS IT status */
 321:Core/Src/touch.c ****   return (tsDriver->GetITStatus(I2cAddress));
 924              		.loc 1 321 19
 925 0004 054B     		ldr	r3, .L40
 926 0006 1B68     		ldr	r3, [r3]
 927 0008 1B6A     		ldr	r3, [r3, #32]
 928              		.loc 1 321 11
 929 000a 054A     		ldr	r2, .L40+4
 930 000c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 931 000e 92B2     		uxth	r2, r2
 932 0010 1046     		mov	r0, r2
 933 0012 9847     		blx	r3
 934              	.LVL4:
 935 0014 0346     		mov	r3, r0
 322:Core/Src/touch.c **** }
 936              		.loc 1 322 1
 937 0016 1846     		mov	r0, r3
 938 0018 80BD     		pop	{r7, pc}
 939              	.L41:
 940 001a 00BF     		.align	2
 941              	.L40:
 942 001c 00000000 		.word	tsDriver
 943 0020 00000000 		.word	I2cAddress
 944              		.cfi_endproc
 945              	.LFE150:
 947              		.section	.text.BSP_TS_GetState,"ax",%progbits
 948              		.align	1
 949              		.global	BSP_TS_GetState
 950              		.syntax unified
 951              		.thumb
 952              		.thumb_func
 954              	BSP_TS_GetState:
 955              	.LFB151:
 323:Core/Src/touch.c **** 
 324:Core/Src/touch.c **** /**
 325:Core/Src/touch.c ****   * @brief  Returns status and positions of the touch screen.
 326:Core/Src/touch.c ****   * @param  TS_State: Pointer to touch screen current state structure
 327:Core/Src/touch.c ****   * @retval TS_OK if all initializations are OK. Other value if error.
 328:Core/Src/touch.c ****   */
 329:Core/Src/touch.c **** uint8_t BSP_TS_GetState(TS_StateTypeDef *TS_State)
 330:Core/Src/touch.c **** {
 956              		.loc 1 330 1
 957              		.cfi_startproc
 958              		@ args = 0, pretend = 0, frame = 80
 959              		@ frame_needed = 1, uses_anonymous_args = 0
 960 0000 90B5     		push	{r4, r7, lr}
 961              	.LCFI32:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s 			page 24


 962              		.cfi_def_cfa_offset 12
 963              		.cfi_offset 4, -12
 964              		.cfi_offset 7, -8
 965              		.cfi_offset 14, -4
 966 0002 97B0     		sub	sp, sp, #92
 967              	.LCFI33:
 968              		.cfi_def_cfa_offset 104
 969 0004 02AF     		add	r7, sp, #8
 970              	.LCFI34:
 971              		.cfi_def_cfa 7, 96
 972 0006 7860     		str	r0, [r7, #4]
 331:Core/Src/touch.c ****   static uint32_t _x[TS_MAX_NB_TOUCH] = {0, 0};
 332:Core/Src/touch.c ****   static uint32_t _y[TS_MAX_NB_TOUCH] = {0, 0};
 333:Core/Src/touch.c ****   uint8_t ts_status = TS_OK;
 973              		.loc 1 333 11
 974 0008 0023     		movs	r3, #0
 975 000a 87F84F30 		strb	r3, [r7, #79]
 334:Core/Src/touch.c ****   uint16_t x[TS_MAX_NB_TOUCH];
 335:Core/Src/touch.c ****   uint16_t y[TS_MAX_NB_TOUCH];
 336:Core/Src/touch.c ****   uint16_t brute_x[TS_MAX_NB_TOUCH];
 337:Core/Src/touch.c ****   uint16_t brute_y[TS_MAX_NB_TOUCH];
 338:Core/Src/touch.c ****   uint16_t x_diff;
 339:Core/Src/touch.c ****   uint16_t y_diff;
 340:Core/Src/touch.c ****   uint32_t index;
 341:Core/Src/touch.c **** #if (TS_MULTI_TOUCH_SUPPORTED == 1)
 342:Core/Src/touch.c ****   uint32_t weight = 0;
 976              		.loc 1 342 12
 977 000e 0023     		movs	r3, #0
 978 0010 3B61     		str	r3, [r7, #16]
 343:Core/Src/touch.c ****   uint32_t area = 0;
 979              		.loc 1 343 12
 980 0012 0023     		movs	r3, #0
 981 0014 FB60     		str	r3, [r7, #12]
 344:Core/Src/touch.c ****   uint32_t event = 0;
 982              		.loc 1 344 12
 983 0016 0023     		movs	r3, #0
 984 0018 BB60     		str	r3, [r7, #8]
 345:Core/Src/touch.c **** #endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */
 346:Core/Src/touch.c **** 
 347:Core/Src/touch.c ****   /* Check and update the number of touches active detected */
 348:Core/Src/touch.c ****   TS_State->touchDetected = tsDriver->DetectTouch(I2cAddress);
 985              		.loc 1 348 37
 986 001a B44B     		ldr	r3, .L65
 987 001c 1B68     		ldr	r3, [r3]
 988 001e 1B69     		ldr	r3, [r3, #16]
 989              		.loc 1 348 29
 990 0020 B34A     		ldr	r2, .L65+4
 991 0022 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 992 0024 92B2     		uxth	r2, r2
 993 0026 1046     		mov	r0, r2
 994 0028 9847     		blx	r3
 995              	.LVL5:
 996 002a 0346     		mov	r3, r0
 997 002c 1A46     		mov	r2, r3
 998              		.loc 1 348 27
 999 002e 7B68     		ldr	r3, [r7, #4]
 1000 0030 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s 			page 25


 349:Core/Src/touch.c ****   
 350:Core/Src/touch.c ****   if(TS_State->touchDetected)
 1001              		.loc 1 350 14
 1002 0032 7B68     		ldr	r3, [r7, #4]
 1003 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1004              		.loc 1 350 5
 1005 0036 002B     		cmp	r3, #0
 1006 0038 00F09681 		beq	.L43
 351:Core/Src/touch.c ****   {
 352:Core/Src/touch.c ****     for(index=0; index < TS_State->touchDetected; index++)
 1007              		.loc 1 352 14
 1008 003c 0023     		movs	r3, #0
 1009 003e BB64     		str	r3, [r7, #72]
 1010              		.loc 1 352 5
 1011 0040 85E1     		b	.L44
 1012              	.L63:
 353:Core/Src/touch.c ****     {
 354:Core/Src/touch.c ****       /* Get each touch coordinates */
 355:Core/Src/touch.c ****       tsDriver->GetXY(I2cAddress, &(brute_x[index]), &(brute_y[index]));
 1013              		.loc 1 355 15
 1014 0042 AA4B     		ldr	r3, .L65
 1015 0044 1B68     		ldr	r3, [r3]
 1016 0046 5B69     		ldr	r3, [r3, #20]
 1017              		.loc 1 355 7
 1018 0048 A94A     		ldr	r2, .L65+4
 1019 004a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1020 004c 90B2     		uxth	r0, r2
 1021 004e 07F12001 		add	r1, r7, #32
 1022 0052 BA6C     		ldr	r2, [r7, #72]
 1023 0054 5200     		lsls	r2, r2, #1
 1024 0056 8C18     		adds	r4, r1, r2
 1025 0058 07F11401 		add	r1, r7, #20
 1026 005c BA6C     		ldr	r2, [r7, #72]
 1027 005e 5200     		lsls	r2, r2, #1
 1028 0060 0A44     		add	r2, r2, r1
 1029 0062 2146     		mov	r1, r4
 1030 0064 9847     		blx	r3
 1031              	.LVL6:
 356:Core/Src/touch.c **** 
 357:Core/Src/touch.c ****       if(tsOrientation == TS_SWAP_NONE)
 1032              		.loc 1 357 24
 1033 0066 A34B     		ldr	r3, .L65+8
 1034 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1035              		.loc 1 357 9
 1036 006a 012B     		cmp	r3, #1
 1037 006c 17D1     		bne	.L45
 358:Core/Src/touch.c ****       {
 359:Core/Src/touch.c ****         x[index] = brute_x[index];
 1038              		.loc 1 359 27
 1039 006e BB6C     		ldr	r3, [r7, #72]
 1040 0070 5B00     		lsls	r3, r3, #1
 1041 0072 5033     		adds	r3, r3, #80
 1042 0074 3B44     		add	r3, r3, r7
 1043 0076 33F8302C 		ldrh	r2, [r3, #-48]
 1044              		.loc 1 359 18
 1045 007a BB6C     		ldr	r3, [r7, #72]
 1046 007c 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s 			page 26


 1047 007e 5033     		adds	r3, r3, #80
 1048 0080 3B44     		add	r3, r3, r7
 1049 0082 23F8182C 		strh	r2, [r3, #-24]	@ movhi
 360:Core/Src/touch.c ****         y[index] = brute_y[index];
 1050              		.loc 1 360 27
 1051 0086 BB6C     		ldr	r3, [r7, #72]
 1052 0088 5B00     		lsls	r3, r3, #1
 1053 008a 5033     		adds	r3, r3, #80
 1054 008c 3B44     		add	r3, r3, r7
 1055 008e 33F83C2C 		ldrh	r2, [r3, #-60]
 1056              		.loc 1 360 18
 1057 0092 BB6C     		ldr	r3, [r7, #72]
 1058 0094 5B00     		lsls	r3, r3, #1
 1059 0096 5033     		adds	r3, r3, #80
 1060 0098 3B44     		add	r3, r3, r7
 1061 009a 23F8242C 		strh	r2, [r3, #-36]	@ movhi
 1062              	.L45:
 361:Core/Src/touch.c ****       }
 362:Core/Src/touch.c **** 
 363:Core/Src/touch.c ****       if(tsOrientation & TS_SWAP_X)
 1063              		.loc 1 363 24
 1064 009e 954B     		ldr	r3, .L65+8
 1065 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1066 00a2 03F00203 		and	r3, r3, #2
 1067              		.loc 1 363 9
 1068 00a6 002B     		cmp	r3, #0
 1069 00a8 0ED0     		beq	.L46
 364:Core/Src/touch.c ****       {
 365:Core/Src/touch.c ****         x[index] = 4096 - brute_x[index];
 1070              		.loc 1 365 34
 1071 00aa BB6C     		ldr	r3, [r7, #72]
 1072 00ac 5B00     		lsls	r3, r3, #1
 1073 00ae 5033     		adds	r3, r3, #80
 1074 00b0 3B44     		add	r3, r3, r7
 1075 00b2 33F8303C 		ldrh	r3, [r3, #-48]
 1076              		.loc 1 365 25
 1077 00b6 C3F58053 		rsb	r3, r3, #4096
 1078 00ba 9AB2     		uxth	r2, r3
 1079              		.loc 1 365 18
 1080 00bc BB6C     		ldr	r3, [r7, #72]
 1081 00be 5B00     		lsls	r3, r3, #1
 1082 00c0 5033     		adds	r3, r3, #80
 1083 00c2 3B44     		add	r3, r3, r7
 1084 00c4 23F8182C 		strh	r2, [r3, #-24]	@ movhi
 1085              	.L46:
 366:Core/Src/touch.c ****       }
 367:Core/Src/touch.c **** 
 368:Core/Src/touch.c ****       if(tsOrientation & TS_SWAP_Y)
 1086              		.loc 1 368 24
 1087 00c8 8A4B     		ldr	r3, .L65+8
 1088 00ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1089 00cc 03F00403 		and	r3, r3, #4
 1090              		.loc 1 368 9
 1091 00d0 002B     		cmp	r3, #0
 1092 00d2 0ED0     		beq	.L47
 369:Core/Src/touch.c ****       {
 370:Core/Src/touch.c ****         y[index] = 4096 - brute_y[index];
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s 			page 27


 1093              		.loc 1 370 34
 1094 00d4 BB6C     		ldr	r3, [r7, #72]
 1095 00d6 5B00     		lsls	r3, r3, #1
 1096 00d8 5033     		adds	r3, r3, #80
 1097 00da 3B44     		add	r3, r3, r7
 1098 00dc 33F83C3C 		ldrh	r3, [r3, #-60]
 1099              		.loc 1 370 25
 1100 00e0 C3F58053 		rsb	r3, r3, #4096
 1101 00e4 9AB2     		uxth	r2, r3
 1102              		.loc 1 370 18
 1103 00e6 BB6C     		ldr	r3, [r7, #72]
 1104 00e8 5B00     		lsls	r3, r3, #1
 1105 00ea 5033     		adds	r3, r3, #80
 1106 00ec 3B44     		add	r3, r3, r7
 1107 00ee 23F8242C 		strh	r2, [r3, #-36]	@ movhi
 1108              	.L47:
 371:Core/Src/touch.c ****       }
 372:Core/Src/touch.c **** 
 373:Core/Src/touch.c ****       if(tsOrientation & TS_SWAP_XY)
 1109              		.loc 1 373 24
 1110 00f2 804B     		ldr	r3, .L65+8
 1111 00f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1112 00f6 03F00803 		and	r3, r3, #8
 1113              		.loc 1 373 9
 1114 00fa 002B     		cmp	r3, #0
 1115 00fc 17D0     		beq	.L48
 374:Core/Src/touch.c ****       {
 375:Core/Src/touch.c ****         y[index] = brute_x[index];
 1116              		.loc 1 375 27
 1117 00fe BB6C     		ldr	r3, [r7, #72]
 1118 0100 5B00     		lsls	r3, r3, #1
 1119 0102 5033     		adds	r3, r3, #80
 1120 0104 3B44     		add	r3, r3, r7
 1121 0106 33F8302C 		ldrh	r2, [r3, #-48]
 1122              		.loc 1 375 18
 1123 010a BB6C     		ldr	r3, [r7, #72]
 1124 010c 5B00     		lsls	r3, r3, #1
 1125 010e 5033     		adds	r3, r3, #80
 1126 0110 3B44     		add	r3, r3, r7
 1127 0112 23F8242C 		strh	r2, [r3, #-36]	@ movhi
 376:Core/Src/touch.c ****         x[index] = brute_y[index];
 1128              		.loc 1 376 27
 1129 0116 BB6C     		ldr	r3, [r7, #72]
 1130 0118 5B00     		lsls	r3, r3, #1
 1131 011a 5033     		adds	r3, r3, #80
 1132 011c 3B44     		add	r3, r3, r7
 1133 011e 33F83C2C 		ldrh	r2, [r3, #-60]
 1134              		.loc 1 376 18
 1135 0122 BB6C     		ldr	r3, [r7, #72]
 1136 0124 5B00     		lsls	r3, r3, #1
 1137 0126 5033     		adds	r3, r3, #80
 1138 0128 3B44     		add	r3, r3, r7
 1139 012a 23F8182C 		strh	r2, [r3, #-24]	@ movhi
 1140              	.L48:
 377:Core/Src/touch.c ****       }
 378:Core/Src/touch.c **** 
 379:Core/Src/touch.c ****       x_diff = x[index] > _x[index]? (x[index] - _x[index]): (_x[index] - x[index]);
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s 			page 28


 1141              		.loc 1 379 17
 1142 012e BB6C     		ldr	r3, [r7, #72]
 1143 0130 5B00     		lsls	r3, r3, #1
 1144 0132 5033     		adds	r3, r3, #80
 1145 0134 3B44     		add	r3, r3, r7
 1146 0136 33F8183C 		ldrh	r3, [r3, #-24]
 1147 013a 1946     		mov	r1, r3
 1148              		.loc 1 379 29
 1149 013c 6E4A     		ldr	r2, .L65+12
 1150 013e BB6C     		ldr	r3, [r7, #72]
 1151 0140 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1152              		.loc 1 379 14
 1153 0144 9942     		cmp	r1, r3
 1154 0146 0DD9     		bls	.L49
 1155              		.loc 1 379 40 discriminator 1
 1156 0148 BB6C     		ldr	r3, [r7, #72]
 1157 014a 5B00     		lsls	r3, r3, #1
 1158 014c 5033     		adds	r3, r3, #80
 1159 014e 3B44     		add	r3, r3, r7
 1160 0150 33F8182C 		ldrh	r2, [r3, #-24]
 1161              		.loc 1 379 52 discriminator 1
 1162 0154 6849     		ldr	r1, .L65+12
 1163 0156 BB6C     		ldr	r3, [r7, #72]
 1164 0158 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1165              		.loc 1 379 48 discriminator 1
 1166 015c 9BB2     		uxth	r3, r3
 1167              		.loc 1 379 14 discriminator 1
 1168 015e D31A     		subs	r3, r2, r3
 1169 0160 9BB2     		uxth	r3, r3
 1170 0162 0CE0     		b	.L50
 1171              	.L49:
 1172              		.loc 1 379 65 discriminator 2
 1173 0164 644A     		ldr	r2, .L65+12
 1174 0166 BB6C     		ldr	r3, [r7, #72]
 1175 0168 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1176              		.loc 1 379 73 discriminator 2
 1177 016c 9AB2     		uxth	r2, r3
 1178              		.loc 1 379 76 discriminator 2
 1179 016e BB6C     		ldr	r3, [r7, #72]
 1180 0170 5B00     		lsls	r3, r3, #1
 1181 0172 5033     		adds	r3, r3, #80
 1182 0174 3B44     		add	r3, r3, r7
 1183 0176 33F8183C 		ldrh	r3, [r3, #-24]
 1184              		.loc 1 379 14 discriminator 2
 1185 017a D31A     		subs	r3, r2, r3
 1186 017c 9BB2     		uxth	r3, r3
 1187              	.L50:
 1188              		.loc 1 379 14 is_stmt 0 discriminator 4
 1189 017e A7F84630 		strh	r3, [r7, #70]	@ movhi
 380:Core/Src/touch.c ****       y_diff = y[index] > _y[index]? (y[index] - _y[index]): (_y[index] - y[index]);
 1190              		.loc 1 380 17 is_stmt 1 discriminator 4
 1191 0182 BB6C     		ldr	r3, [r7, #72]
 1192 0184 5B00     		lsls	r3, r3, #1
 1193 0186 5033     		adds	r3, r3, #80
 1194 0188 3B44     		add	r3, r3, r7
 1195 018a 33F8243C 		ldrh	r3, [r3, #-36]
 1196 018e 1946     		mov	r1, r3
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s 			page 29


 1197              		.loc 1 380 29 discriminator 4
 1198 0190 5A4A     		ldr	r2, .L65+16
 1199 0192 BB6C     		ldr	r3, [r7, #72]
 1200 0194 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1201              		.loc 1 380 14 discriminator 4
 1202 0198 9942     		cmp	r1, r3
 1203 019a 0DD9     		bls	.L51
 1204              		.loc 1 380 40 discriminator 1
 1205 019c BB6C     		ldr	r3, [r7, #72]
 1206 019e 5B00     		lsls	r3, r3, #1
 1207 01a0 5033     		adds	r3, r3, #80
 1208 01a2 3B44     		add	r3, r3, r7
 1209 01a4 33F8242C 		ldrh	r2, [r3, #-36]
 1210              		.loc 1 380 52 discriminator 1
 1211 01a8 5449     		ldr	r1, .L65+16
 1212 01aa BB6C     		ldr	r3, [r7, #72]
 1213 01ac 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1214              		.loc 1 380 48 discriminator 1
 1215 01b0 9BB2     		uxth	r3, r3
 1216              		.loc 1 380 14 discriminator 1
 1217 01b2 D31A     		subs	r3, r2, r3
 1218 01b4 9BB2     		uxth	r3, r3
 1219 01b6 0CE0     		b	.L52
 1220              	.L51:
 1221              		.loc 1 380 65 discriminator 2
 1222 01b8 504A     		ldr	r2, .L65+16
 1223 01ba BB6C     		ldr	r3, [r7, #72]
 1224 01bc 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1225              		.loc 1 380 73 discriminator 2
 1226 01c0 9AB2     		uxth	r2, r3
 1227              		.loc 1 380 76 discriminator 2
 1228 01c2 BB6C     		ldr	r3, [r7, #72]
 1229 01c4 5B00     		lsls	r3, r3, #1
 1230 01c6 5033     		adds	r3, r3, #80
 1231 01c8 3B44     		add	r3, r3, r7
 1232 01ca 33F8243C 		ldrh	r3, [r3, #-36]
 1233              		.loc 1 380 14 discriminator 2
 1234 01ce D31A     		subs	r3, r2, r3
 1235 01d0 9BB2     		uxth	r3, r3
 1236              	.L52:
 1237              		.loc 1 380 14 is_stmt 0 discriminator 4
 1238 01d2 A7F84430 		strh	r3, [r7, #68]	@ movhi
 381:Core/Src/touch.c **** 
 382:Core/Src/touch.c ****       if ((x_diff + y_diff) > 5)
 1239              		.loc 1 382 19 is_stmt 1 discriminator 4
 1240 01d6 B7F84620 		ldrh	r2, [r7, #70]
 1241 01da B7F84430 		ldrh	r3, [r7, #68]
 1242 01de 1344     		add	r3, r3, r2
 1243              		.loc 1 382 10 discriminator 4
 1244 01e0 052B     		cmp	r3, #5
 1245 01e2 15DD     		ble	.L53
 383:Core/Src/touch.c ****       {
 384:Core/Src/touch.c ****         _x[index] = x[index];
 1246              		.loc 1 384 22
 1247 01e4 BB6C     		ldr	r3, [r7, #72]
 1248 01e6 5B00     		lsls	r3, r3, #1
 1249 01e8 5033     		adds	r3, r3, #80
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s 			page 30


 1250 01ea 3B44     		add	r3, r3, r7
 1251 01ec 33F8183C 		ldrh	r3, [r3, #-24]
 1252 01f0 1946     		mov	r1, r3
 1253              		.loc 1 384 19
 1254 01f2 414A     		ldr	r2, .L65+12
 1255 01f4 BB6C     		ldr	r3, [r7, #72]
 1256 01f6 42F82310 		str	r1, [r2, r3, lsl #2]
 385:Core/Src/touch.c ****         _y[index] = y[index];
 1257              		.loc 1 385 22
 1258 01fa BB6C     		ldr	r3, [r7, #72]
 1259 01fc 5B00     		lsls	r3, r3, #1
 1260 01fe 5033     		adds	r3, r3, #80
 1261 0200 3B44     		add	r3, r3, r7
 1262 0202 33F8243C 		ldrh	r3, [r3, #-36]
 1263 0206 1946     		mov	r1, r3
 1264              		.loc 1 385 19
 1265 0208 3C4A     		ldr	r2, .L65+16
 1266 020a BB6C     		ldr	r3, [r7, #72]
 1267 020c 42F82310 		str	r1, [r2, r3, lsl #2]
 1268              	.L53:
 386:Core/Src/touch.c ****       }
 387:Core/Src/touch.c **** 
 388:Core/Src/touch.c ****       if(I2cAddress == FT5336_I2C_SLAVE_ADDRESS)
 1269              		.loc 1 388 21
 1270 0210 374B     		ldr	r3, .L65+4
 1271 0212 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1272              		.loc 1 388 9
 1273 0214 702B     		cmp	r3, #112
 1274 0216 19D1     		bne	.L54
 389:Core/Src/touch.c ****       {
 390:Core/Src/touch.c ****         TS_State->touchX[index] = x[index];
 1275              		.loc 1 390 36
 1276 0218 BB6C     		ldr	r3, [r7, #72]
 1277 021a 5B00     		lsls	r3, r3, #1
 1278 021c 5033     		adds	r3, r3, #80
 1279 021e 3B44     		add	r3, r3, r7
 1280 0220 33F8181C 		ldrh	r1, [r3, #-24]
 1281              		.loc 1 390 33
 1282 0224 7A68     		ldr	r2, [r7, #4]
 1283 0226 BB6C     		ldr	r3, [r7, #72]
 1284 0228 5B00     		lsls	r3, r3, #1
 1285 022a 1344     		add	r3, r3, r2
 1286 022c 0A46     		mov	r2, r1	@ movhi
 1287 022e 5A80     		strh	r2, [r3, #2]	@ movhi
 391:Core/Src/touch.c ****         TS_State->touchY[index] = y[index];
 1288              		.loc 1 391 36
 1289 0230 BB6C     		ldr	r3, [r7, #72]
 1290 0232 5B00     		lsls	r3, r3, #1
 1291 0234 5033     		adds	r3, r3, #80
 1292 0236 3B44     		add	r3, r3, r7
 1293 0238 33F8241C 		ldrh	r1, [r3, #-36]
 1294              		.loc 1 391 33
 1295 023c 7A68     		ldr	r2, [r7, #4]
 1296 023e BB6C     		ldr	r3, [r7, #72]
 1297 0240 0433     		adds	r3, r3, #4
 1298 0242 5B00     		lsls	r3, r3, #1
 1299 0244 1344     		add	r3, r3, r2
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s 			page 31


 1300 0246 0A46     		mov	r2, r1	@ movhi
 1301 0248 9A80     		strh	r2, [r3, #4]	@ movhi
 1302 024a 22E0     		b	.L55
 1303              	.L54:
 392:Core/Src/touch.c ****       }
 393:Core/Src/touch.c ****       else
 394:Core/Src/touch.c ****       {
 395:Core/Src/touch.c ****         /* 2^12 = 4096 : indexes are expressed on a dynamic of 4096 */
 396:Core/Src/touch.c ****         TS_State->touchX[index] = (tsXBoundary * _x[index]) >> 12;
 1304              		.loc 1 396 48
 1305 024c 2C4B     		ldr	r3, .L65+20
 1306 024e 1B88     		ldrh	r3, [r3]
 1307 0250 1946     		mov	r1, r3
 1308              		.loc 1 396 52
 1309 0252 294A     		ldr	r2, .L65+12
 1310 0254 BB6C     		ldr	r3, [r7, #72]
 1311 0256 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1312              		.loc 1 396 48
 1313 025a 01FB03F3 		mul	r3, r1, r3
 1314              		.loc 1 396 61
 1315 025e 1B0B     		lsrs	r3, r3, #12
 1316              		.loc 1 396 33
 1317 0260 99B2     		uxth	r1, r3
 1318 0262 7A68     		ldr	r2, [r7, #4]
 1319 0264 BB6C     		ldr	r3, [r7, #72]
 1320 0266 5B00     		lsls	r3, r3, #1
 1321 0268 1344     		add	r3, r3, r2
 1322 026a 0A46     		mov	r2, r1	@ movhi
 1323 026c 5A80     		strh	r2, [r3, #2]	@ movhi
 397:Core/Src/touch.c ****         TS_State->touchY[index] = (tsYBoundary * _y[index]) >> 12;
 1324              		.loc 1 397 48
 1325 026e 254B     		ldr	r3, .L65+24
 1326 0270 1B88     		ldrh	r3, [r3]
 1327 0272 1946     		mov	r1, r3
 1328              		.loc 1 397 52
 1329 0274 214A     		ldr	r2, .L65+16
 1330 0276 BB6C     		ldr	r3, [r7, #72]
 1331 0278 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1332              		.loc 1 397 48
 1333 027c 01FB03F3 		mul	r3, r1, r3
 1334              		.loc 1 397 61
 1335 0280 1B0B     		lsrs	r3, r3, #12
 1336              		.loc 1 397 33
 1337 0282 99B2     		uxth	r1, r3
 1338 0284 7A68     		ldr	r2, [r7, #4]
 1339 0286 BB6C     		ldr	r3, [r7, #72]
 1340 0288 0433     		adds	r3, r3, #4
 1341 028a 5B00     		lsls	r3, r3, #1
 1342 028c 1344     		add	r3, r3, r2
 1343 028e 0A46     		mov	r2, r1	@ movhi
 1344 0290 9A80     		strh	r2, [r3, #4]	@ movhi
 1345              	.L55:
 398:Core/Src/touch.c ****       }
 399:Core/Src/touch.c **** 
 400:Core/Src/touch.c **** #if (TS_MULTI_TOUCH_SUPPORTED == 1)
 401:Core/Src/touch.c **** 
 402:Core/Src/touch.c ****       /* Get touch info related to the current touch */
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s 			page 32


 403:Core/Src/touch.c ****       ft5336_TS_GetTouchInfo(I2cAddress, index, &weight, &area, &event);
 1346              		.loc 1 403 7
 1347 0292 174B     		ldr	r3, .L65+4
 1348 0294 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1349 0296 98B2     		uxth	r0, r3
 1350 0298 07F10C01 		add	r1, r7, #12
 1351 029c 07F11002 		add	r2, r7, #16
 1352 02a0 07F10803 		add	r3, r7, #8
 1353 02a4 0093     		str	r3, [sp]
 1354 02a6 0B46     		mov	r3, r1
 1355 02a8 B96C     		ldr	r1, [r7, #72]
 1356 02aa FFF7FEFF 		bl	ft5336_TS_GetTouchInfo
 404:Core/Src/touch.c **** 
 405:Core/Src/touch.c ****       /* Update TS_State structure */
 406:Core/Src/touch.c ****       TS_State->touchWeight[index] = weight;
 1357              		.loc 1 406 36
 1358 02ae 3B69     		ldr	r3, [r7, #16]
 1359 02b0 D9B2     		uxtb	r1, r3
 1360 02b2 7A68     		ldr	r2, [r7, #4]
 1361 02b4 BB6C     		ldr	r3, [r7, #72]
 1362 02b6 1344     		add	r3, r3, r2
 1363 02b8 1633     		adds	r3, r3, #22
 1364 02ba 0A46     		mov	r2, r1
 1365 02bc 1A70     		strb	r2, [r3]
 407:Core/Src/touch.c ****       TS_State->touchArea[index]   = area;
 1366              		.loc 1 407 36
 1367 02be FB68     		ldr	r3, [r7, #12]
 1368 02c0 D9B2     		uxtb	r1, r3
 1369 02c2 7A68     		ldr	r2, [r7, #4]
 1370 02c4 BB6C     		ldr	r3, [r7, #72]
 1371 02c6 1344     		add	r3, r3, r2
 1372 02c8 2033     		adds	r3, r3, #32
 1373 02ca 0A46     		mov	r2, r1
 1374 02cc 1A70     		strb	r2, [r3]
 408:Core/Src/touch.c **** 
 409:Core/Src/touch.c ****       /* Remap touch event */
 410:Core/Src/touch.c ****       switch(event)
 1375              		.loc 1 410 7
 1376 02ce BB68     		ldr	r3, [r7, #8]
 1377 02d0 032B     		cmp	r3, #3
 1378 02d2 35D8     		bhi	.L56
 1379 02d4 01A2     		adr	r2, .L58
 1380 02d6 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1381 02da 00BF     		.p2align 2
 1382              	.L58:
 1383 02dc 09030000 		.word	.L61+1
 1384 02e0 17030000 		.word	.L60+1
 1385 02e4 25030000 		.word	.L59+1
 1386 02e8 33030000 		.word	.L57+1
 1387              		.p2align 1
 1388              	.L66:
 1389              		.align	2
 1390              	.L65:
 1391 02ec 00000000 		.word	tsDriver
 1392 02f0 00000000 		.word	I2cAddress
 1393 02f4 00000000 		.word	tsOrientation
 1394 02f8 00000000 		.word	_x.1
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s 			page 33


 1395 02fc 00000000 		.word	_y.0
 1396 0300 00000000 		.word	tsXBoundary
 1397 0304 00000000 		.word	tsYBoundary
 1398              	.L61:
 411:Core/Src/touch.c ****       {
 412:Core/Src/touch.c ****         case FT5336_TOUCH_EVT_FLAG_PRESS_DOWN	:
 413:Core/Src/touch.c ****           TS_State->touchEventId[index] = TOUCH_EVENT_PRESS_DOWN;
 1399              		.loc 1 413 41
 1400 0308 7A68     		ldr	r2, [r7, #4]
 1401 030a BB6C     		ldr	r3, [r7, #72]
 1402 030c 1344     		add	r3, r3, r2
 1403 030e 1B33     		adds	r3, r3, #27
 1404 0310 0122     		movs	r2, #1
 1405 0312 1A70     		strb	r2, [r3]
 414:Core/Src/touch.c ****           break;
 1406              		.loc 1 414 11
 1407 0314 18E0     		b	.L62
 1408              	.L60:
 415:Core/Src/touch.c ****         case FT5336_TOUCH_EVT_FLAG_LIFT_UP :
 416:Core/Src/touch.c ****           TS_State->touchEventId[index] = TOUCH_EVENT_LIFT_UP;
 1409              		.loc 1 416 41
 1410 0316 7A68     		ldr	r2, [r7, #4]
 1411 0318 BB6C     		ldr	r3, [r7, #72]
 1412 031a 1344     		add	r3, r3, r2
 1413 031c 1B33     		adds	r3, r3, #27
 1414 031e 0222     		movs	r2, #2
 1415 0320 1A70     		strb	r2, [r3]
 417:Core/Src/touch.c ****           break;
 1416              		.loc 1 417 11
 1417 0322 11E0     		b	.L62
 1418              	.L59:
 418:Core/Src/touch.c ****         case FT5336_TOUCH_EVT_FLAG_CONTACT :
 419:Core/Src/touch.c ****           TS_State->touchEventId[index] = TOUCH_EVENT_CONTACT;
 1419              		.loc 1 419 41
 1420 0324 7A68     		ldr	r2, [r7, #4]
 1421 0326 BB6C     		ldr	r3, [r7, #72]
 1422 0328 1344     		add	r3, r3, r2
 1423 032a 1B33     		adds	r3, r3, #27
 1424 032c 0322     		movs	r2, #3
 1425 032e 1A70     		strb	r2, [r3]
 420:Core/Src/touch.c ****           break;
 1426              		.loc 1 420 11
 1427 0330 0AE0     		b	.L62
 1428              	.L57:
 421:Core/Src/touch.c ****         case FT5336_TOUCH_EVT_FLAG_NO_EVENT :
 422:Core/Src/touch.c ****           TS_State->touchEventId[index] = TOUCH_EVENT_NO_EVT;
 1429              		.loc 1 422 41
 1430 0332 7A68     		ldr	r2, [r7, #4]
 1431 0334 BB6C     		ldr	r3, [r7, #72]
 1432 0336 1344     		add	r3, r3, r2
 1433 0338 1B33     		adds	r3, r3, #27
 1434 033a 0022     		movs	r2, #0
 1435 033c 1A70     		strb	r2, [r3]
 423:Core/Src/touch.c ****           break;
 1436              		.loc 1 423 11
 1437 033e 03E0     		b	.L62
 1438              	.L56:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s 			page 34


 424:Core/Src/touch.c ****         default :
 425:Core/Src/touch.c ****           ts_status = TS_ERROR;
 1439              		.loc 1 425 21
 1440 0340 0123     		movs	r3, #1
 1441 0342 87F84F30 		strb	r3, [r7, #79]
 426:Core/Src/touch.c ****           break;
 1442              		.loc 1 426 11
 1443 0346 00BF     		nop
 1444              	.L62:
 352:Core/Src/touch.c ****     {
 1445              		.loc 1 352 56 discriminator 2
 1446 0348 BB6C     		ldr	r3, [r7, #72]
 1447 034a 0133     		adds	r3, r3, #1
 1448 034c BB64     		str	r3, [r7, #72]
 1449              	.L44:
 352:Core/Src/touch.c ****     {
 1450              		.loc 1 352 34 discriminator 1
 1451 034e 7B68     		ldr	r3, [r7, #4]
 1452 0350 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1453 0352 1A46     		mov	r2, r3
 352:Core/Src/touch.c ****     {
 1454              		.loc 1 352 5 discriminator 1
 1455 0354 BB6C     		ldr	r3, [r7, #72]
 1456 0356 9342     		cmp	r3, r2
 1457 0358 FFF473AE 		bcc	.L63
 427:Core/Src/touch.c ****       } /* of switch(event) */
 428:Core/Src/touch.c **** 
 429:Core/Src/touch.c **** #endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */
 430:Core/Src/touch.c **** 
 431:Core/Src/touch.c ****     } /* of for(index=0; index < TS_State->touchDetected; index++) */
 432:Core/Src/touch.c **** 
 433:Core/Src/touch.c **** #if (TS_MULTI_TOUCH_SUPPORTED == 1)
 434:Core/Src/touch.c ****     /* Get gesture Id */
 435:Core/Src/touch.c ****     ts_status = BSP_TS_Get_GestureId(TS_State);
 1458              		.loc 1 435 17
 1459 035c 7868     		ldr	r0, [r7, #4]
 1460 035e FFF7FEFF 		bl	BSP_TS_Get_GestureId
 1461 0362 0346     		mov	r3, r0
 1462 0364 87F84F30 		strb	r3, [r7, #79]
 1463              	.L43:
 436:Core/Src/touch.c **** #endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */
 437:Core/Src/touch.c **** 
 438:Core/Src/touch.c ****   } /* end of if(TS_State->touchDetected != 0) */
 439:Core/Src/touch.c **** 
 440:Core/Src/touch.c ****   return (ts_status);
 1464              		.loc 1 440 10
 1465 0368 97F84F30 		ldrb	r3, [r7, #79]	@ zero_extendqisi2
 441:Core/Src/touch.c **** }
 1466              		.loc 1 441 1
 1467 036c 1846     		mov	r0, r3
 1468 036e 5437     		adds	r7, r7, #84
 1469              	.LCFI35:
 1470              		.cfi_def_cfa_offset 12
 1471 0370 BD46     		mov	sp, r7
 1472              	.LCFI36:
 1473              		.cfi_def_cfa_register 13
 1474              		@ sp needed
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s 			page 35


 1475 0372 90BD     		pop	{r4, r7, pc}
 1476              		.cfi_endproc
 1477              	.LFE151:
 1479              		.section	.text.BSP_TS_Get_GestureId,"ax",%progbits
 1480              		.align	1
 1481              		.global	BSP_TS_Get_GestureId
 1482              		.syntax unified
 1483              		.thumb
 1484              		.thumb_func
 1486              	BSP_TS_Get_GestureId:
 1487              	.LFB152:
 442:Core/Src/touch.c **** 
 443:Core/Src/touch.c **** #if (TS_MULTI_TOUCH_SUPPORTED == 1)
 444:Core/Src/touch.c **** /**
 445:Core/Src/touch.c ****   * @brief  Update gesture Id following a touch detected.
 446:Core/Src/touch.c ****   * @param  TS_State: Pointer to touch screen current state structure
 447:Core/Src/touch.c ****   * @retval TS_OK if all initializations are OK. Other value if error.
 448:Core/Src/touch.c ****   */
 449:Core/Src/touch.c **** uint8_t BSP_TS_Get_GestureId(TS_StateTypeDef *TS_State)
 450:Core/Src/touch.c **** {
 1488              		.loc 1 450 1
 1489              		.cfi_startproc
 1490              		@ args = 0, pretend = 0, frame = 16
 1491              		@ frame_needed = 1, uses_anonymous_args = 0
 1492 0000 80B5     		push	{r7, lr}
 1493              	.LCFI37:
 1494              		.cfi_def_cfa_offset 8
 1495              		.cfi_offset 7, -8
 1496              		.cfi_offset 14, -4
 1497 0002 84B0     		sub	sp, sp, #16
 1498              	.LCFI38:
 1499              		.cfi_def_cfa_offset 24
 1500 0004 00AF     		add	r7, sp, #0
 1501              	.LCFI39:
 1502              		.cfi_def_cfa_register 7
 1503 0006 7860     		str	r0, [r7, #4]
 451:Core/Src/touch.c ****   uint32_t gestureId = 0;
 1504              		.loc 1 451 12
 1505 0008 0023     		movs	r3, #0
 1506 000a BB60     		str	r3, [r7, #8]
 452:Core/Src/touch.c ****   uint8_t  ts_status = TS_OK;
 1507              		.loc 1 452 12
 1508 000c 0023     		movs	r3, #0
 1509 000e FB73     		strb	r3, [r7, #15]
 453:Core/Src/touch.c **** 
 454:Core/Src/touch.c ****   /* Get gesture Id */
 455:Core/Src/touch.c ****   ft5336_TS_GetGestureID(I2cAddress, &gestureId);
 1510              		.loc 1 455 3
 1511 0010 3B4B     		ldr	r3, .L80
 1512 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1513 0014 9BB2     		uxth	r3, r3
 1514 0016 07F10802 		add	r2, r7, #8
 1515 001a 1146     		mov	r1, r2
 1516 001c 1846     		mov	r0, r3
 1517 001e FFF7FEFF 		bl	ft5336_TS_GetGestureID
 456:Core/Src/touch.c **** 
 457:Core/Src/touch.c ****   /* Remap gesture Id to a TS_GestureIdTypeDef value */
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s 			page 36


 458:Core/Src/touch.c ****   switch(gestureId)
 1518              		.loc 1 458 3
 1519 0022 BB68     		ldr	r3, [r7, #8]
 1520 0024 492B     		cmp	r3, #73
 1521 0026 5ED0     		beq	.L68
 1522 0028 492B     		cmp	r3, #73
 1523 002a 60D8     		bhi	.L69
 1524 002c 1C2B     		cmp	r3, #28
 1525 002e 3FD8     		bhi	.L70
 1526 0030 1C2B     		cmp	r3, #28
 1527 0032 5CD8     		bhi	.L69
 1528 0034 01A2     		adr	r2, .L72
 1529 0036 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1530 003a 00BF     		.p2align 2
 1531              	.L72:
 1532 003c B7000000 		.word	.L76+1
 1533 0040 EF000000 		.word	.L69+1
 1534 0044 EF000000 		.word	.L69+1
 1535 0048 EF000000 		.word	.L69+1
 1536 004c EF000000 		.word	.L69+1
 1537 0050 EF000000 		.word	.L69+1
 1538 0054 EF000000 		.word	.L69+1
 1539 0058 EF000000 		.word	.L69+1
 1540 005c EF000000 		.word	.L69+1
 1541 0060 EF000000 		.word	.L69+1
 1542 0064 EF000000 		.word	.L69+1
 1543 0068 EF000000 		.word	.L69+1
 1544 006c EF000000 		.word	.L69+1
 1545 0070 EF000000 		.word	.L69+1
 1546 0074 EF000000 		.word	.L69+1
 1547 0078 EF000000 		.word	.L69+1
 1548 007c BF000000 		.word	.L75+1
 1549 0080 EF000000 		.word	.L69+1
 1550 0084 EF000000 		.word	.L69+1
 1551 0088 EF000000 		.word	.L69+1
 1552 008c C7000000 		.word	.L74+1
 1553 0090 EF000000 		.word	.L69+1
 1554 0094 EF000000 		.word	.L69+1
 1555 0098 EF000000 		.word	.L69+1
 1556 009c CF000000 		.word	.L73+1
 1557 00a0 EF000000 		.word	.L69+1
 1558 00a4 EF000000 		.word	.L69+1
 1559 00a8 EF000000 		.word	.L69+1
 1560 00ac D7000000 		.word	.L71+1
 1561              		.p2align 1
 1562              	.L70:
 1563 00b0 402B     		cmp	r3, #64
 1564 00b2 14D0     		beq	.L77
 1565 00b4 1BE0     		b	.L69
 1566              	.L76:
 459:Core/Src/touch.c ****   {
 460:Core/Src/touch.c ****     case FT5336_GEST_ID_NO_GESTURE :
 461:Core/Src/touch.c ****       TS_State->gestureId = GEST_ID_NO_GESTURE;
 1567              		.loc 1 461 27
 1568 00b6 7B68     		ldr	r3, [r7, #4]
 1569 00b8 0022     		movs	r2, #0
 1570 00ba 9A62     		str	r2, [r3, #40]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s 			page 37


 462:Core/Src/touch.c ****       break;
 1571              		.loc 1 462 7
 1572 00bc 1AE0     		b	.L78
 1573              	.L75:
 463:Core/Src/touch.c ****     case FT5336_GEST_ID_MOVE_UP :
 464:Core/Src/touch.c ****       TS_State->gestureId = GEST_ID_MOVE_UP;
 1574              		.loc 1 464 27
 1575 00be 7B68     		ldr	r3, [r7, #4]
 1576 00c0 0122     		movs	r2, #1
 1577 00c2 9A62     		str	r2, [r3, #40]
 465:Core/Src/touch.c ****       break;
 1578              		.loc 1 465 7
 1579 00c4 16E0     		b	.L78
 1580              	.L74:
 466:Core/Src/touch.c ****     case FT5336_GEST_ID_MOVE_RIGHT :
 467:Core/Src/touch.c ****       TS_State->gestureId = GEST_ID_MOVE_RIGHT;
 1581              		.loc 1 467 27
 1582 00c6 7B68     		ldr	r3, [r7, #4]
 1583 00c8 0222     		movs	r2, #2
 1584 00ca 9A62     		str	r2, [r3, #40]
 468:Core/Src/touch.c ****       break;
 1585              		.loc 1 468 7
 1586 00cc 12E0     		b	.L78
 1587              	.L73:
 469:Core/Src/touch.c ****     case FT5336_GEST_ID_MOVE_DOWN :
 470:Core/Src/touch.c ****       TS_State->gestureId = GEST_ID_MOVE_DOWN;
 1588              		.loc 1 470 27
 1589 00ce 7B68     		ldr	r3, [r7, #4]
 1590 00d0 0322     		movs	r2, #3
 1591 00d2 9A62     		str	r2, [r3, #40]
 471:Core/Src/touch.c ****       break;
 1592              		.loc 1 471 7
 1593 00d4 0EE0     		b	.L78
 1594              	.L71:
 472:Core/Src/touch.c ****     case FT5336_GEST_ID_MOVE_LEFT :
 473:Core/Src/touch.c ****       TS_State->gestureId = GEST_ID_MOVE_LEFT;
 1595              		.loc 1 473 27
 1596 00d6 7B68     		ldr	r3, [r7, #4]
 1597 00d8 0422     		movs	r2, #4
 1598 00da 9A62     		str	r2, [r3, #40]
 474:Core/Src/touch.c ****       break;
 1599              		.loc 1 474 7
 1600 00dc 0AE0     		b	.L78
 1601              	.L77:
 475:Core/Src/touch.c ****     case FT5336_GEST_ID_ZOOM_IN :
 476:Core/Src/touch.c ****       TS_State->gestureId = GEST_ID_ZOOM_IN;
 1602              		.loc 1 476 27
 1603 00de 7B68     		ldr	r3, [r7, #4]
 1604 00e0 0522     		movs	r2, #5
 1605 00e2 9A62     		str	r2, [r3, #40]
 477:Core/Src/touch.c ****       break;
 1606              		.loc 1 477 7
 1607 00e4 06E0     		b	.L78
 1608              	.L68:
 478:Core/Src/touch.c ****     case FT5336_GEST_ID_ZOOM_OUT :
 479:Core/Src/touch.c ****       TS_State->gestureId = GEST_ID_ZOOM_OUT;
 1609              		.loc 1 479 27
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s 			page 38


 1610 00e6 7B68     		ldr	r3, [r7, #4]
 1611 00e8 0622     		movs	r2, #6
 1612 00ea 9A62     		str	r2, [r3, #40]
 480:Core/Src/touch.c ****       break;
 1613              		.loc 1 480 7
 1614 00ec 02E0     		b	.L78
 1615              	.L69:
 481:Core/Src/touch.c ****     default :
 482:Core/Src/touch.c ****       ts_status = TS_ERROR;
 1616              		.loc 1 482 17
 1617 00ee 0123     		movs	r3, #1
 1618 00f0 FB73     		strb	r3, [r7, #15]
 483:Core/Src/touch.c ****       break;
 1619              		.loc 1 483 7
 1620 00f2 00BF     		nop
 1621              	.L78:
 484:Core/Src/touch.c ****   } /* of switch(gestureId) */
 485:Core/Src/touch.c **** 
 486:Core/Src/touch.c ****   return(ts_status);
 1622              		.loc 1 486 9
 1623 00f4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 487:Core/Src/touch.c **** }
 1624              		.loc 1 487 1
 1625 00f6 1846     		mov	r0, r3
 1626 00f8 1037     		adds	r7, r7, #16
 1627              	.LCFI40:
 1628              		.cfi_def_cfa_offset 8
 1629 00fa BD46     		mov	sp, r7
 1630              	.LCFI41:
 1631              		.cfi_def_cfa_register 13
 1632              		@ sp needed
 1633 00fc 80BD     		pop	{r7, pc}
 1634              	.L81:
 1635 00fe 00BF     		.align	2
 1636              	.L80:
 1637 0100 00000000 		.word	I2cAddress
 1638              		.cfi_endproc
 1639              	.LFE152:
 1641              		.section	.text.BSP_TS_ITClear,"ax",%progbits
 1642              		.align	1
 1643              		.global	BSP_TS_ITClear
 1644              		.syntax unified
 1645              		.thumb
 1646              		.thumb_func
 1648              	BSP_TS_ITClear:
 1649              	.LFB153:
 488:Core/Src/touch.c **** #endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */
 489:Core/Src/touch.c **** 
 490:Core/Src/touch.c **** /**
 491:Core/Src/touch.c ****   * @brief  Clears all touch screen interrupts.
 492:Core/Src/touch.c ****   */
 493:Core/Src/touch.c **** void BSP_TS_ITClear(void)
 494:Core/Src/touch.c **** {
 1650              		.loc 1 494 1
 1651              		.cfi_startproc
 1652              		@ args = 0, pretend = 0, frame = 0
 1653              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s 			page 39


 1654 0000 80B5     		push	{r7, lr}
 1655              	.LCFI42:
 1656              		.cfi_def_cfa_offset 8
 1657              		.cfi_offset 7, -8
 1658              		.cfi_offset 14, -4
 1659 0002 00AF     		add	r7, sp, #0
 1660              	.LCFI43:
 1661              		.cfi_def_cfa_register 7
 495:Core/Src/touch.c ****   /* Clear TS IT pending bits */
 496:Core/Src/touch.c ****   tsDriver->ClearIT(I2cAddress); 
 1662              		.loc 1 496 11
 1663 0004 044B     		ldr	r3, .L83
 1664 0006 1B68     		ldr	r3, [r3]
 1665 0008 DB69     		ldr	r3, [r3, #28]
 1666              		.loc 1 496 3
 1667 000a 044A     		ldr	r2, .L83+4
 1668 000c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1669 000e 92B2     		uxth	r2, r2
 1670 0010 1046     		mov	r0, r2
 1671 0012 9847     		blx	r3
 1672              	.LVL7:
 497:Core/Src/touch.c **** }
 1673              		.loc 1 497 1
 1674 0014 00BF     		nop
 1675 0016 80BD     		pop	{r7, pc}
 1676              	.L84:
 1677              		.align	2
 1678              	.L83:
 1679 0018 00000000 		.word	tsDriver
 1680 001c 00000000 		.word	I2cAddress
 1681              		.cfi_endproc
 1682              	.LFE153:
 1684              		.section	.text.BSP_TS_ResetTouchData,"ax",%progbits
 1685              		.align	1
 1686              		.global	BSP_TS_ResetTouchData
 1687              		.syntax unified
 1688              		.thumb
 1689              		.thumb_func
 1691              	BSP_TS_ResetTouchData:
 1692              	.LFB154:
 498:Core/Src/touch.c **** 
 499:Core/Src/touch.c **** 
 500:Core/Src/touch.c **** /** @defgroup STM32756G_DISCOVERY_TS_Private_Functions TS Private Functions
 501:Core/Src/touch.c ****   * @{
 502:Core/Src/touch.c ****   */
 503:Core/Src/touch.c **** 
 504:Core/Src/touch.c **** 
 505:Core/Src/touch.c **** /**
 506:Core/Src/touch.c ****   * @brief  Function used to reset all touch data before a new acquisition
 507:Core/Src/touch.c ****   *         of touch information.
 508:Core/Src/touch.c ****   * @param  TS_State: Pointer to touch screen current state structure
 509:Core/Src/touch.c ****   * @retval TS_OK if OK, TE_ERROR if problem found.
 510:Core/Src/touch.c ****   */
 511:Core/Src/touch.c **** uint8_t BSP_TS_ResetTouchData(TS_StateTypeDef *TS_State)
 512:Core/Src/touch.c **** {
 1693              		.loc 1 512 1
 1694              		.cfi_startproc
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s 			page 40


 1695              		@ args = 0, pretend = 0, frame = 16
 1696              		@ frame_needed = 1, uses_anonymous_args = 0
 1697              		@ link register save eliminated.
 1698 0000 80B4     		push	{r7}
 1699              	.LCFI44:
 1700              		.cfi_def_cfa_offset 4
 1701              		.cfi_offset 7, -4
 1702 0002 85B0     		sub	sp, sp, #20
 1703              	.LCFI45:
 1704              		.cfi_def_cfa_offset 24
 1705 0004 00AF     		add	r7, sp, #0
 1706              	.LCFI46:
 1707              		.cfi_def_cfa_register 7
 1708 0006 7860     		str	r0, [r7, #4]
 513:Core/Src/touch.c ****   uint8_t ts_status = TS_ERROR;
 1709              		.loc 1 513 11
 1710 0008 0123     		movs	r3, #1
 1711 000a FB73     		strb	r3, [r7, #15]
 514:Core/Src/touch.c ****   uint32_t index;
 515:Core/Src/touch.c **** 
 516:Core/Src/touch.c ****   if (TS_State != (TS_StateTypeDef *)NULL)
 1712              		.loc 1 516 6
 1713 000c 7B68     		ldr	r3, [r7, #4]
 1714 000e 002B     		cmp	r3, #0
 1715 0010 2FD0     		beq	.L86
 517:Core/Src/touch.c ****   {
 518:Core/Src/touch.c ****     TS_State->gestureId = GEST_ID_NO_GESTURE;
 1716              		.loc 1 518 25
 1717 0012 7B68     		ldr	r3, [r7, #4]
 1718 0014 0022     		movs	r2, #0
 1719 0016 9A62     		str	r2, [r3, #40]
 519:Core/Src/touch.c ****     TS_State->touchDetected = 0;
 1720              		.loc 1 519 29
 1721 0018 7B68     		ldr	r3, [r7, #4]
 1722 001a 0022     		movs	r2, #0
 1723 001c 1A70     		strb	r2, [r3]
 520:Core/Src/touch.c **** 
 521:Core/Src/touch.c ****     for(index = 0; index < TS_MAX_NB_TOUCH; index++)
 1724              		.loc 1 521 15
 1725 001e 0023     		movs	r3, #0
 1726 0020 BB60     		str	r3, [r7, #8]
 1727              		.loc 1 521 5
 1728 0022 21E0     		b	.L87
 1729              	.L88:
 522:Core/Src/touch.c ****     {
 523:Core/Src/touch.c ****       TS_State->touchX[index]       = 0;
 1730              		.loc 1 523 37 discriminator 3
 1731 0024 7A68     		ldr	r2, [r7, #4]
 1732 0026 BB68     		ldr	r3, [r7, #8]
 1733 0028 5B00     		lsls	r3, r3, #1
 1734 002a 1344     		add	r3, r3, r2
 1735 002c 0022     		movs	r2, #0
 1736 002e 5A80     		strh	r2, [r3, #2]	@ movhi
 524:Core/Src/touch.c ****       TS_State->touchY[index]       = 0;
 1737              		.loc 1 524 37 discriminator 3
 1738 0030 7A68     		ldr	r2, [r7, #4]
 1739 0032 BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s 			page 41


 1740 0034 0433     		adds	r3, r3, #4
 1741 0036 5B00     		lsls	r3, r3, #1
 1742 0038 1344     		add	r3, r3, r2
 1743 003a 0022     		movs	r2, #0
 1744 003c 9A80     		strh	r2, [r3, #4]	@ movhi
 525:Core/Src/touch.c ****       TS_State->touchArea[index]    = 0;
 1745              		.loc 1 525 37 discriminator 3
 1746 003e 7A68     		ldr	r2, [r7, #4]
 1747 0040 BB68     		ldr	r3, [r7, #8]
 1748 0042 1344     		add	r3, r3, r2
 1749 0044 2033     		adds	r3, r3, #32
 1750 0046 0022     		movs	r2, #0
 1751 0048 1A70     		strb	r2, [r3]
 526:Core/Src/touch.c ****       TS_State->touchEventId[index] = TOUCH_EVENT_NO_EVT;
 1752              		.loc 1 526 37 discriminator 3
 1753 004a 7A68     		ldr	r2, [r7, #4]
 1754 004c BB68     		ldr	r3, [r7, #8]
 1755 004e 1344     		add	r3, r3, r2
 1756 0050 1B33     		adds	r3, r3, #27
 1757 0052 0022     		movs	r2, #0
 1758 0054 1A70     		strb	r2, [r3]
 527:Core/Src/touch.c ****       TS_State->touchWeight[index]  = 0;
 1759              		.loc 1 527 37 discriminator 3
 1760 0056 7A68     		ldr	r2, [r7, #4]
 1761 0058 BB68     		ldr	r3, [r7, #8]
 1762 005a 1344     		add	r3, r3, r2
 1763 005c 1633     		adds	r3, r3, #22
 1764 005e 0022     		movs	r2, #0
 1765 0060 1A70     		strb	r2, [r3]
 521:Core/Src/touch.c ****     {
 1766              		.loc 1 521 50 discriminator 3
 1767 0062 BB68     		ldr	r3, [r7, #8]
 1768 0064 0133     		adds	r3, r3, #1
 1769 0066 BB60     		str	r3, [r7, #8]
 1770              	.L87:
 521:Core/Src/touch.c ****     {
 1771              		.loc 1 521 5 discriminator 1
 1772 0068 BB68     		ldr	r3, [r7, #8]
 1773 006a 042B     		cmp	r3, #4
 1774 006c DAD9     		bls	.L88
 528:Core/Src/touch.c ****     }
 529:Core/Src/touch.c **** 
 530:Core/Src/touch.c ****     ts_status = TS_OK;
 1775              		.loc 1 530 15
 1776 006e 0023     		movs	r3, #0
 1777 0070 FB73     		strb	r3, [r7, #15]
 1778              	.L86:
 531:Core/Src/touch.c **** 
 532:Core/Src/touch.c ****   } /* of if (TS_State != (TS_StateTypeDef *)NULL) */
 533:Core/Src/touch.c **** 
 534:Core/Src/touch.c ****   return (ts_status);
 1779              		.loc 1 534 10
 1780 0072 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 535:Core/Src/touch.c **** }
 1781              		.loc 1 535 1
 1782 0074 1846     		mov	r0, r3
 1783 0076 1437     		adds	r7, r7, #20
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s 			page 42


 1784              	.LCFI47:
 1785              		.cfi_def_cfa_offset 4
 1786 0078 BD46     		mov	sp, r7
 1787              	.LCFI48:
 1788              		.cfi_def_cfa_register 13
 1789              		@ sp needed
 1790 007a 5DF8047B 		ldr	r7, [sp], #4
 1791              	.LCFI49:
 1792              		.cfi_restore 7
 1793              		.cfi_def_cfa_offset 0
 1794 007e 7047     		bx	lr
 1795              		.cfi_endproc
 1796              	.LFE154:
 1798              		.section	.bss.status_old.2,"aw",%nobits
 1801              	status_old.2:
 1802 0000 00       		.space	1
 1803              		.section	.bss._x.1,"aw",%nobits
 1804              		.align	2
 1807              	_x.1:
 1808 0000 00000000 		.space	20
 1808      00000000 
 1808      00000000 
 1808      00000000 
 1808      00000000 
 1809              		.section	.bss._y.0,"aw",%nobits
 1810              		.align	2
 1813              	_y.0:
 1814 0000 00000000 		.space	20
 1814      00000000 
 1814      00000000 
 1814      00000000 
 1814      00000000 
 1815              		.text
 1816              	.Letext0:
 1817              		.file 2 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 1818              		.file 3 "d:\\3.tools\\arm_gcc_toolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 1819              		.file 4 "d:\\3.tools\\arm_gcc_toolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 1820              		.file 5 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 1821              		.file 6 "Components/../Components/ft5336/../Common/ts.h"
 1822              		.file 7 "Core/Inc/touch.h"
 1823              		.file 8 "Components/../Components/ft5336/ft5336.h"
 1824              		.file 9 "Core/Inc/lcd.h"
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s 			page 43


DEFINED SYMBOLS
                            *ABS*:00000000 touch.c
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:20     .bss.tsDriver:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:23     .bss.tsDriver:00000000 tsDriver
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:26     .bss.tsXBoundary:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:29     .bss.tsXBoundary:00000000 tsXBoundary
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:32     .bss.tsYBoundary:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:35     .bss.tsYBoundary:00000000 tsYBoundary
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:40     .bss.tsOrientation:00000000 tsOrientation
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:41     .bss.tsOrientation:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:45     .bss.I2cAddress:00000000 I2cAddress
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:46     .bss.I2cAddress:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:48     .bss.TS_State:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:51     .bss.TS_State:00000000 TS_State
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:57     .data.Toutch_Status:00000000 Toutch_Status
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:60     .rodata:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:64     .text.Touch_Operation:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:70     .text.Touch_Operation:00000000 Touch_Operation
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:954    .text.BSP_TS_GetState:00000000 BSP_TS_GetState
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:205    .text.Touch_Select_Zone:00000000 Touch_Select_Zone
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:389    .text.Touch_Display_Zone:00000000 Touch_Display_Zone
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:192    .text.Touch_Operation:000000b4 $d
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:1801   .bss.status_old.2:00000000 status_old.2
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:200    .text.Touch_Select_Zone:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:384    .text.Touch_Display_Zone:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:675    .text.BSP_TS_Init:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:681    .text.BSP_TS_Init:00000000 BSP_TS_Init
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:776    .text.BSP_TS_Init:00000068 $d
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:786    .text.BSP_TS_DeInit:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:792    .text.BSP_TS_DeInit:00000000 BSP_TS_DeInit
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:823    .text.BSP_TS_ITConfig:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:829    .text.BSP_TS_ITConfig:00000000 BSP_TS_ITConfig
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:897    .text.BSP_TS_ITConfig:00000050 $d
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:904    .text.BSP_TS_ITGetStatus:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:910    .text.BSP_TS_ITGetStatus:00000000 BSP_TS_ITGetStatus
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:942    .text.BSP_TS_ITGetStatus:0000001c $d
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:948    .text.BSP_TS_GetState:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:1383   .text.BSP_TS_GetState:000002dc $d
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:1391   .text.BSP_TS_GetState:000002ec $d
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:1807   .bss._x.1:00000000 _x.1
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:1813   .bss._y.0:00000000 _y.0
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:1400   .text.BSP_TS_GetState:00000308 $t
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:1486   .text.BSP_TS_Get_GestureId:00000000 BSP_TS_Get_GestureId
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:1480   .text.BSP_TS_Get_GestureId:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:1532   .text.BSP_TS_Get_GestureId:0000003c $d
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:1561   .text.BSP_TS_Get_GestureId:000000b0 $t
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:1637   .text.BSP_TS_Get_GestureId:00000100 $d
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:1642   .text.BSP_TS_ITClear:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:1648   .text.BSP_TS_ITClear:00000000 BSP_TS_ITClear
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:1679   .text.BSP_TS_ITClear:00000018 $d
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:1685   .text.BSP_TS_ResetTouchData:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:1691   .text.BSP_TS_ResetTouchData:00000000 BSP_TS_ResetTouchData
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:1802   .bss.status_old.2:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:1804   .bss._x.1:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s:1810   .bss._y.0:00000000 $d

UNDEFINED SYMBOLS
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccqjonQ9.s 			page 44


BSP_LCD_SetTextColor
sprintf
BSP_LCD_DisplayStringAt
BSP_LCD_GetXSize
BSP_LCD_DrawHLine
BSP_LCD_DrawVLine
ft5336_ts_drv
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
ft5336_TS_GetTouchInfo
ft5336_TS_GetGestureID
