ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f7xx_hal_pwr_ex.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HAL_PWREx_EnableBkUpReg,"ax",%progbits
  20              		.align	1
  21              		.global	HAL_PWREx_EnableBkUpReg
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	HAL_PWREx_EnableBkUpReg:
  27              	.LFB141:
  28              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @file    stm32f7xx_hal_pwr_ex.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @brief   Extended PWR HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *          functionalities of PWR extension peripheral:           
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *           + Peripheral Extended features functions
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   ******************************************************************************
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @attention
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * Copyright (c) 2017 STMicroelectronics.
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * All rights reserved.
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * This software is licensed under terms that can be found in the LICENSE file
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * in the root directory of this software component.
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   ******************************************************************************
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /* Includes ------------------------------------------------------------------*/
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** #include "stm32f7xx_hal.h"
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /** @addtogroup STM32F7xx_HAL_Driver
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @{
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /** @defgroup PWREx PWREx
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s 			page 2


  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @brief PWR HAL module driver
  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @{
  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** #ifdef HAL_PWR_MODULE_ENABLED
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /* Private typedef -----------------------------------------------------------*/
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /* Private define ------------------------------------------------------------*/
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /** @addtogroup PWREx_Private_Constants
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @{
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */    
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** #define PWR_OVERDRIVE_TIMEOUT_VALUE  1000
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** #define PWR_UDERDRIVE_TIMEOUT_VALUE  1000
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** #define PWR_BKPREG_TIMEOUT_VALUE     1000
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** #define PWR_VOSRDY_TIMEOUT_VALUE     1000
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /**
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @}
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /* Private macro -------------------------------------------------------------*/
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /* Private variables ---------------------------------------------------------*/
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /* Private function prototypes -----------------------------------------------*/
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /* Private functions ---------------------------------------------------------*/
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /** @defgroup PWREx_Exported_Functions PWREx Exported Functions
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *  @{
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /** @defgroup PWREx_Exported_Functions_Group1 Peripheral Extended features functions 
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *  @brief Peripheral Extended features functions 
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** @verbatim   
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****  ===============================================================================
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****                  ##### Peripheral extended features functions #####
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****  ===============================================================================
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     *** Main and Backup Regulators configuration ***
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     ================================================
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     [..] 
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       (+) The backup domain includes 4 Kbytes of backup SRAM accessible only from 
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           the CPU, and address in 32-bit, 16-bit or 8-bit mode. Its content is 
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           retained even in Standby or VBAT mode when the low power backup regulator
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           is enabled. It can be considered as an internal EEPROM when VBAT is 
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           always present. You can use the HAL_PWREx_EnableBkUpReg() function to 
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           enable the low power backup regulator. 
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       (+) When the backup domain is supplied by VDD (analog switch connected to VDD) 
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           the backup SRAM is powered from VDD which replaces the VBAT power supply to 
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           save battery life.
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       (+) The backup SRAM is not mass erased by a tamper event. It is read 
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           protected to prevent confidential data, such as cryptographic private 
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           key, from being accessed. The backup SRAM can be erased only through 
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           the Flash interface when a protection level change from level 1 to 
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           level 0 is requested. 
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       -@- Refer to the description of Read protection (RDP) in the Flash 
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           programming manual.
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s 			page 3


  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       (+) The main internal regulator can be configured to have a tradeoff between 
  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           performance and power consumption when the device does not operate at 
  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           the maximum frequency. This is done through __HAL_PWR_MAINREGULATORMODE_CONFIG() 
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           macro which configure VOS bit in PWR_CR register
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****         Refer to the product datasheets for more details.
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     *** FLASH Power Down configuration ****
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     =======================================
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     [..] 
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       (+) By setting the FPDS bit in the PWR_CR register by using the 
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           HAL_PWREx_EnableFlashPowerDown() function, the Flash memory also enters power 
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           down mode when the device enters Stop mode. When the Flash memory 
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           is in power down mode, an additional startup delay is incurred when 
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           waking up from Stop mode.
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     *** Over-Drive and Under-Drive configuration ****
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     =================================================
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     [..]         
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****        (+) In Run mode: the main regulator has 2 operating modes available:
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****         (++) Normal mode: The CPU and core logic operate at maximum frequency at a given 
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****              voltage scaling (scale 1, scale 2 or scale 3)
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****         (++) Over-drive mode: This mode allows the CPU and the core logic to operate at a 
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****             higher frequency than the normal mode for a given voltage scaling (scale 1,  
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****             scale 2 or scale 3). This mode is enabled through HAL_PWREx_EnableOverDrive() function 
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****             disabled by HAL_PWREx_DisableOverDrive() function, to enter or exit from Over-drive mod
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****             the sequence described in Reference manual.
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****              
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****        (+) In Stop mode: the main regulator or low power regulator supplies a low power 
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****            voltage to the 1.2V domain, thus preserving the content of registers 
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****            and internal SRAM. 2 operating modes are available:
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****          (++) Normal mode: the 1.2V domain is preserved in nominal leakage mode. This mode is only 
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****               available when the main regulator or the low power regulator is used in Scale 3 or 
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****               low voltage mode.
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****          (++) Under-drive mode: the 1.2V domain is preserved in reduced leakage mode. This mode is 
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****               available when the main regulator or the low power regulator is in low voltage mode.
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** @endverbatim
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @{
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /**
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @brief Enables the Backup Regulator.
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @retval HAL status
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_EnableBkUpReg(void)
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** {
  29              		.loc 1 135 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s 			page 4


  38 0002 82B0     		sub	sp, sp, #8
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 16
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   uint32_t tickstart = 0;
  44              		.loc 1 136 12
  45 0006 0023     		movs	r3, #0
  46 0008 7B60     		str	r3, [r7, #4]
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Enable Backup regulator */
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   PWR->CSR1 |= PWR_CSR1_BRE;
  47              		.loc 1 139 13
  48 000a 124B     		ldr	r3, .L5
  49 000c 5B68     		ldr	r3, [r3, #4]
  50 000e 114A     		ldr	r2, .L5
  51 0010 43F40073 		orr	r3, r3, #512
  52 0014 5360     		str	r3, [r2, #4]
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Workaround for the following hardware bug: */
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Id 19: PWR : No STANDBY wake-up when Back-up RAM enabled (ref. Errata Sheet p23) */
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   PWR->CSR1 |= PWR_CSR1_EIWUP;
  53              		.loc 1 143 13
  54 0016 0F4B     		ldr	r3, .L5
  55 0018 5B68     		ldr	r3, [r3, #4]
  56 001a 0E4A     		ldr	r2, .L5
  57 001c 43F48073 		orr	r3, r3, #256
  58 0020 5360     		str	r3, [r2, #4]
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Get tick */
 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   tickstart = HAL_GetTick();
  59              		.loc 1 146 15
  60 0022 FFF7FEFF 		bl	HAL_GetTick
  61 0026 7860     		str	r0, [r7, #4]
 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Wait till Backup regulator ready flag is set */  
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   while(__HAL_PWR_GET_FLAG(PWR_FLAG_BRR) == RESET)
  62              		.loc 1 149 8
  63 0028 09E0     		b	.L2
  64              	.L4:
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     if((HAL_GetTick() - tickstart ) > PWR_BKPREG_TIMEOUT_VALUE)
  65              		.loc 1 151 9
  66 002a FFF7FEFF 		bl	HAL_GetTick
  67 002e 0246     		mov	r2, r0
  68              		.loc 1 151 23
  69 0030 7B68     		ldr	r3, [r7, #4]
  70 0032 D31A     		subs	r3, r2, r3
  71              		.loc 1 151 7
  72 0034 B3F57A7F 		cmp	r3, #1000
  73 0038 01D9     		bls	.L2
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       return HAL_TIMEOUT;
  74              		.loc 1 153 14
  75 003a 0323     		movs	r3, #3
  76 003c 06E0     		b	.L3
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s 			page 5


  77              	.L2:
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
  78              		.loc 1 149 9
  79 003e 054B     		ldr	r3, .L5
  80 0040 5B68     		ldr	r3, [r3, #4]
  81 0042 03F00803 		and	r3, r3, #8
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
  82              		.loc 1 149 8
  83 0046 082B     		cmp	r3, #8
  84 0048 EFD1     		bne	.L4
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     } 
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   }
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   return HAL_OK;
  85              		.loc 1 156 10
  86 004a 0023     		movs	r3, #0
  87              	.L3:
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** }
  88              		.loc 1 157 1
  89 004c 1846     		mov	r0, r3
  90 004e 0837     		adds	r7, r7, #8
  91              	.LCFI3:
  92              		.cfi_def_cfa_offset 8
  93 0050 BD46     		mov	sp, r7
  94              	.LCFI4:
  95              		.cfi_def_cfa_register 13
  96              		@ sp needed
  97 0052 80BD     		pop	{r7, pc}
  98              	.L6:
  99              		.align	2
 100              	.L5:
 101 0054 00700040 		.word	1073770496
 102              		.cfi_endproc
 103              	.LFE141:
 105              		.section	.text.HAL_PWREx_DisableBkUpReg,"ax",%progbits
 106              		.align	1
 107              		.global	HAL_PWREx_DisableBkUpReg
 108              		.syntax unified
 109              		.thumb
 110              		.thumb_func
 112              	HAL_PWREx_DisableBkUpReg:
 113              	.LFB142:
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /**
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @brief Disables the Backup Regulator.
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @retval HAL status
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_DisableBkUpReg(void)
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** {
 114              		.loc 1 164 1
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 8
 117              		@ frame_needed = 1, uses_anonymous_args = 0
 118 0000 80B5     		push	{r7, lr}
 119              	.LCFI5:
 120              		.cfi_def_cfa_offset 8
 121              		.cfi_offset 7, -8
 122              		.cfi_offset 14, -4
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s 			page 6


 123 0002 82B0     		sub	sp, sp, #8
 124              	.LCFI6:
 125              		.cfi_def_cfa_offset 16
 126 0004 00AF     		add	r7, sp, #0
 127              	.LCFI7:
 128              		.cfi_def_cfa_register 7
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   uint32_t tickstart = 0;
 129              		.loc 1 165 12
 130 0006 0023     		movs	r3, #0
 131 0008 7B60     		str	r3, [r7, #4]
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Disable Backup regulator */
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   PWR->CSR1 &= (uint32_t)~((uint32_t)PWR_CSR1_BRE);
 132              		.loc 1 168 13
 133 000a 124B     		ldr	r3, .L11
 134 000c 5B68     		ldr	r3, [r3, #4]
 135 000e 114A     		ldr	r2, .L11
 136 0010 23F40073 		bic	r3, r3, #512
 137 0014 5360     		str	r3, [r2, #4]
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Workaround for the following hardware bug: */
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Id 19: PWR : No STANDBY wake-up when Back-up RAM enabled (ref. Errata Sheet p23) */
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   PWR->CSR1 |= PWR_CSR1_EIWUP;
 138              		.loc 1 172 13
 139 0016 0F4B     		ldr	r3, .L11
 140 0018 5B68     		ldr	r3, [r3, #4]
 141 001a 0E4A     		ldr	r2, .L11
 142 001c 43F48073 		orr	r3, r3, #256
 143 0020 5360     		str	r3, [r2, #4]
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Get tick */
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   tickstart = HAL_GetTick();
 144              		.loc 1 175 15
 145 0022 FFF7FEFF 		bl	HAL_GetTick
 146 0026 7860     		str	r0, [r7, #4]
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Wait till Backup regulator ready flag is set */  
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   while(__HAL_PWR_GET_FLAG(PWR_FLAG_BRR) != RESET)
 147              		.loc 1 178 8
 148 0028 09E0     		b	.L8
 149              	.L10:
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     if((HAL_GetTick() - tickstart ) > PWR_BKPREG_TIMEOUT_VALUE)
 150              		.loc 1 180 9
 151 002a FFF7FEFF 		bl	HAL_GetTick
 152 002e 0246     		mov	r2, r0
 153              		.loc 1 180 23
 154 0030 7B68     		ldr	r3, [r7, #4]
 155 0032 D31A     		subs	r3, r2, r3
 156              		.loc 1 180 7
 157 0034 B3F57A7F 		cmp	r3, #1000
 158 0038 01D9     		bls	.L8
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       return HAL_TIMEOUT;
 159              		.loc 1 182 14
 160 003a 0323     		movs	r3, #3
 161 003c 06E0     		b	.L9
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s 			page 7


 162              	.L8:
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 163              		.loc 1 178 9
 164 003e 054B     		ldr	r3, .L11
 165 0040 5B68     		ldr	r3, [r3, #4]
 166 0042 03F00803 		and	r3, r3, #8
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 167              		.loc 1 178 8
 168 0046 082B     		cmp	r3, #8
 169 0048 EFD0     		beq	.L10
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     } 
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   }
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   return HAL_OK;
 170              		.loc 1 185 10
 171 004a 0023     		movs	r3, #0
 172              	.L9:
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** }
 173              		.loc 1 186 1
 174 004c 1846     		mov	r0, r3
 175 004e 0837     		adds	r7, r7, #8
 176              	.LCFI8:
 177              		.cfi_def_cfa_offset 8
 178 0050 BD46     		mov	sp, r7
 179              	.LCFI9:
 180              		.cfi_def_cfa_register 13
 181              		@ sp needed
 182 0052 80BD     		pop	{r7, pc}
 183              	.L12:
 184              		.align	2
 185              	.L11:
 186 0054 00700040 		.word	1073770496
 187              		.cfi_endproc
 188              	.LFE142:
 190              		.section	.text.HAL_PWREx_EnableFlashPowerDown,"ax",%progbits
 191              		.align	1
 192              		.global	HAL_PWREx_EnableFlashPowerDown
 193              		.syntax unified
 194              		.thumb
 195              		.thumb_func
 197              	HAL_PWREx_EnableFlashPowerDown:
 198              	.LFB143:
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /**
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @brief Enables the Flash Power Down in Stop mode.
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @retval None
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** void HAL_PWREx_EnableFlashPowerDown(void)
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** {
 199              		.loc 1 193 1
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 1, uses_anonymous_args = 0
 203              		@ link register save eliminated.
 204 0000 80B4     		push	{r7}
 205              	.LCFI10:
 206              		.cfi_def_cfa_offset 4
 207              		.cfi_offset 7, -4
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s 			page 8


 208 0002 00AF     		add	r7, sp, #0
 209              	.LCFI11:
 210              		.cfi_def_cfa_register 7
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Enable the Flash Power Down */
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   PWR->CR1 |= PWR_CR1_FPDS;
 211              		.loc 1 195 12
 212 0004 054B     		ldr	r3, .L14
 213 0006 1B68     		ldr	r3, [r3]
 214 0008 044A     		ldr	r2, .L14
 215 000a 43F40073 		orr	r3, r3, #512
 216 000e 1360     		str	r3, [r2]
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** }
 217              		.loc 1 196 1
 218 0010 00BF     		nop
 219 0012 BD46     		mov	sp, r7
 220              	.LCFI12:
 221              		.cfi_def_cfa_register 13
 222              		@ sp needed
 223 0014 5DF8047B 		ldr	r7, [sp], #4
 224              	.LCFI13:
 225              		.cfi_restore 7
 226              		.cfi_def_cfa_offset 0
 227 0018 7047     		bx	lr
 228              	.L15:
 229 001a 00BF     		.align	2
 230              	.L14:
 231 001c 00700040 		.word	1073770496
 232              		.cfi_endproc
 233              	.LFE143:
 235              		.section	.text.HAL_PWREx_DisableFlashPowerDown,"ax",%progbits
 236              		.align	1
 237              		.global	HAL_PWREx_DisableFlashPowerDown
 238              		.syntax unified
 239              		.thumb
 240              		.thumb_func
 242              	HAL_PWREx_DisableFlashPowerDown:
 243              	.LFB144:
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /**
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @brief Disables the Flash Power Down in Stop mode.
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @retval None
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** void HAL_PWREx_DisableFlashPowerDown(void)
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** {
 244              		.loc 1 203 1
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 1, uses_anonymous_args = 0
 248              		@ link register save eliminated.
 249 0000 80B4     		push	{r7}
 250              	.LCFI14:
 251              		.cfi_def_cfa_offset 4
 252              		.cfi_offset 7, -4
 253 0002 00AF     		add	r7, sp, #0
 254              	.LCFI15:
 255              		.cfi_def_cfa_register 7
 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Disable the Flash Power Down */
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s 			page 9


 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   PWR->CR1 &= (uint32_t)~((uint32_t)PWR_CR1_FPDS);
 256              		.loc 1 205 12
 257 0004 054B     		ldr	r3, .L17
 258 0006 1B68     		ldr	r3, [r3]
 259 0008 044A     		ldr	r2, .L17
 260 000a 23F40073 		bic	r3, r3, #512
 261 000e 1360     		str	r3, [r2]
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** }
 262              		.loc 1 206 1
 263 0010 00BF     		nop
 264 0012 BD46     		mov	sp, r7
 265              	.LCFI16:
 266              		.cfi_def_cfa_register 13
 267              		@ sp needed
 268 0014 5DF8047B 		ldr	r7, [sp], #4
 269              	.LCFI17:
 270              		.cfi_restore 7
 271              		.cfi_def_cfa_offset 0
 272 0018 7047     		bx	lr
 273              	.L18:
 274 001a 00BF     		.align	2
 275              	.L17:
 276 001c 00700040 		.word	1073770496
 277              		.cfi_endproc
 278              	.LFE144:
 280              		.section	.text.HAL_PWREx_EnableMainRegulatorLowVoltage,"ax",%progbits
 281              		.align	1
 282              		.global	HAL_PWREx_EnableMainRegulatorLowVoltage
 283              		.syntax unified
 284              		.thumb
 285              		.thumb_func
 287              	HAL_PWREx_EnableMainRegulatorLowVoltage:
 288              	.LFB145:
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /**
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @brief Enables Main Regulator low voltage mode.
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @retval None
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** void HAL_PWREx_EnableMainRegulatorLowVoltage(void)
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** {
 289              		.loc 1 213 1
 290              		.cfi_startproc
 291              		@ args = 0, pretend = 0, frame = 0
 292              		@ frame_needed = 1, uses_anonymous_args = 0
 293              		@ link register save eliminated.
 294 0000 80B4     		push	{r7}
 295              	.LCFI18:
 296              		.cfi_def_cfa_offset 4
 297              		.cfi_offset 7, -4
 298 0002 00AF     		add	r7, sp, #0
 299              	.LCFI19:
 300              		.cfi_def_cfa_register 7
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Enable Main regulator low voltage */
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   PWR->CR1 |= PWR_CR1_MRUDS;
 301              		.loc 1 215 12
 302 0004 054B     		ldr	r3, .L20
 303 0006 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s 			page 10


 304 0008 044A     		ldr	r2, .L20
 305 000a 43F40063 		orr	r3, r3, #2048
 306 000e 1360     		str	r3, [r2]
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** }
 307              		.loc 1 216 1
 308 0010 00BF     		nop
 309 0012 BD46     		mov	sp, r7
 310              	.LCFI20:
 311              		.cfi_def_cfa_register 13
 312              		@ sp needed
 313 0014 5DF8047B 		ldr	r7, [sp], #4
 314              	.LCFI21:
 315              		.cfi_restore 7
 316              		.cfi_def_cfa_offset 0
 317 0018 7047     		bx	lr
 318              	.L21:
 319 001a 00BF     		.align	2
 320              	.L20:
 321 001c 00700040 		.word	1073770496
 322              		.cfi_endproc
 323              	.LFE145:
 325              		.section	.text.HAL_PWREx_DisableMainRegulatorLowVoltage,"ax",%progbits
 326              		.align	1
 327              		.global	HAL_PWREx_DisableMainRegulatorLowVoltage
 328              		.syntax unified
 329              		.thumb
 330              		.thumb_func
 332              	HAL_PWREx_DisableMainRegulatorLowVoltage:
 333              	.LFB146:
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /**
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @brief Disables Main Regulator low voltage mode.
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @retval None
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** void HAL_PWREx_DisableMainRegulatorLowVoltage(void)
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** {  
 334              		.loc 1 223 1
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 0
 337              		@ frame_needed = 1, uses_anonymous_args = 0
 338              		@ link register save eliminated.
 339 0000 80B4     		push	{r7}
 340              	.LCFI22:
 341              		.cfi_def_cfa_offset 4
 342              		.cfi_offset 7, -4
 343 0002 00AF     		add	r7, sp, #0
 344              	.LCFI23:
 345              		.cfi_def_cfa_register 7
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Disable Main regulator low voltage */
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   PWR->CR1 &= (uint32_t)~((uint32_t)PWR_CR1_MRUDS);
 346              		.loc 1 225 12
 347 0004 054B     		ldr	r3, .L23
 348 0006 1B68     		ldr	r3, [r3]
 349 0008 044A     		ldr	r2, .L23
 350 000a 23F40063 		bic	r3, r3, #2048
 351 000e 1360     		str	r3, [r2]
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** }
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s 			page 11


 352              		.loc 1 226 1
 353 0010 00BF     		nop
 354 0012 BD46     		mov	sp, r7
 355              	.LCFI24:
 356              		.cfi_def_cfa_register 13
 357              		@ sp needed
 358 0014 5DF8047B 		ldr	r7, [sp], #4
 359              	.LCFI25:
 360              		.cfi_restore 7
 361              		.cfi_def_cfa_offset 0
 362 0018 7047     		bx	lr
 363              	.L24:
 364 001a 00BF     		.align	2
 365              	.L23:
 366 001c 00700040 		.word	1073770496
 367              		.cfi_endproc
 368              	.LFE146:
 370              		.section	.text.HAL_PWREx_EnableLowRegulatorLowVoltage,"ax",%progbits
 371              		.align	1
 372              		.global	HAL_PWREx_EnableLowRegulatorLowVoltage
 373              		.syntax unified
 374              		.thumb
 375              		.thumb_func
 377              	HAL_PWREx_EnableLowRegulatorLowVoltage:
 378              	.LFB147:
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /**
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @brief Enables Low Power Regulator low voltage mode.
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @retval None
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** void HAL_PWREx_EnableLowRegulatorLowVoltage(void)
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** {
 379              		.loc 1 233 1
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 0
 382              		@ frame_needed = 1, uses_anonymous_args = 0
 383              		@ link register save eliminated.
 384 0000 80B4     		push	{r7}
 385              	.LCFI26:
 386              		.cfi_def_cfa_offset 4
 387              		.cfi_offset 7, -4
 388 0002 00AF     		add	r7, sp, #0
 389              	.LCFI27:
 390              		.cfi_def_cfa_register 7
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Enable low power regulator */
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   PWR->CR1 |= PWR_CR1_LPUDS;
 391              		.loc 1 235 12
 392 0004 054B     		ldr	r3, .L26
 393 0006 1B68     		ldr	r3, [r3]
 394 0008 044A     		ldr	r2, .L26
 395 000a 43F48063 		orr	r3, r3, #1024
 396 000e 1360     		str	r3, [r2]
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** }
 397              		.loc 1 236 1
 398 0010 00BF     		nop
 399 0012 BD46     		mov	sp, r7
 400              	.LCFI28:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s 			page 12


 401              		.cfi_def_cfa_register 13
 402              		@ sp needed
 403 0014 5DF8047B 		ldr	r7, [sp], #4
 404              	.LCFI29:
 405              		.cfi_restore 7
 406              		.cfi_def_cfa_offset 0
 407 0018 7047     		bx	lr
 408              	.L27:
 409 001a 00BF     		.align	2
 410              	.L26:
 411 001c 00700040 		.word	1073770496
 412              		.cfi_endproc
 413              	.LFE147:
 415              		.section	.text.HAL_PWREx_DisableLowRegulatorLowVoltage,"ax",%progbits
 416              		.align	1
 417              		.global	HAL_PWREx_DisableLowRegulatorLowVoltage
 418              		.syntax unified
 419              		.thumb
 420              		.thumb_func
 422              	HAL_PWREx_DisableLowRegulatorLowVoltage:
 423              	.LFB148:
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /**
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @brief Disables Low Power Regulator low voltage mode.
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @retval None
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** void HAL_PWREx_DisableLowRegulatorLowVoltage(void)
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** {
 424              		.loc 1 243 1
 425              		.cfi_startproc
 426              		@ args = 0, pretend = 0, frame = 0
 427              		@ frame_needed = 1, uses_anonymous_args = 0
 428              		@ link register save eliminated.
 429 0000 80B4     		push	{r7}
 430              	.LCFI30:
 431              		.cfi_def_cfa_offset 4
 432              		.cfi_offset 7, -4
 433 0002 00AF     		add	r7, sp, #0
 434              	.LCFI31:
 435              		.cfi_def_cfa_register 7
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Disable low power regulator */
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   PWR->CR1 &= (uint32_t)~((uint32_t)PWR_CR1_LPUDS);
 436              		.loc 1 245 12
 437 0004 054B     		ldr	r3, .L29
 438 0006 1B68     		ldr	r3, [r3]
 439 0008 044A     		ldr	r2, .L29
 440 000a 23F48063 		bic	r3, r3, #1024
 441 000e 1360     		str	r3, [r2]
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** }
 442              		.loc 1 246 1
 443 0010 00BF     		nop
 444 0012 BD46     		mov	sp, r7
 445              	.LCFI32:
 446              		.cfi_def_cfa_register 13
 447              		@ sp needed
 448 0014 5DF8047B 		ldr	r7, [sp], #4
 449              	.LCFI33:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s 			page 13


 450              		.cfi_restore 7
 451              		.cfi_def_cfa_offset 0
 452 0018 7047     		bx	lr
 453              	.L30:
 454 001a 00BF     		.align	2
 455              	.L29:
 456 001c 00700040 		.word	1073770496
 457              		.cfi_endproc
 458              	.LFE148:
 460              		.section	.text.HAL_PWREx_EnableOverDrive,"ax",%progbits
 461              		.align	1
 462              		.global	HAL_PWREx_EnableOverDrive
 463              		.syntax unified
 464              		.thumb
 465              		.thumb_func
 467              	HAL_PWREx_EnableOverDrive:
 468              	.LFB149:
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /**
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @brief  Activates the Over-Drive mode.
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @note   This mode allows the CPU and the core logic to operate at a higher frequency
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         than the normal mode for a given voltage scaling (scale 1, scale 2 or scale 3).   
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @note   It is recommended to enter or exit Over-drive mode when the application is not running 
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         critical tasks and when the system clock source is either HSI or HSE. 
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @retval HAL status
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** {
 469              		.loc 1 259 1
 470              		.cfi_startproc
 471              		@ args = 0, pretend = 0, frame = 8
 472              		@ frame_needed = 1, uses_anonymous_args = 0
 473 0000 80B5     		push	{r7, lr}
 474              	.LCFI34:
 475              		.cfi_def_cfa_offset 8
 476              		.cfi_offset 7, -8
 477              		.cfi_offset 14, -4
 478 0002 82B0     		sub	sp, sp, #8
 479              	.LCFI35:
 480              		.cfi_def_cfa_offset 16
 481 0004 00AF     		add	r7, sp, #0
 482              	.LCFI36:
 483              		.cfi_def_cfa_register 7
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   uint32_t tickstart = 0;
 484              		.loc 1 260 12
 485 0006 0023     		movs	r3, #0
 486 0008 7B60     		str	r3, [r7, #4]
 487              	.LBB2:
 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 488              		.loc 1 262 3
 489 000a 234B     		ldr	r3, .L37
 490 000c 1B6C     		ldr	r3, [r3, #64]
 491 000e 224A     		ldr	r2, .L37
 492 0010 43F08053 		orr	r3, r3, #268435456
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s 			page 14


 493 0014 1364     		str	r3, [r2, #64]
 494 0016 204B     		ldr	r3, .L37
 495 0018 1B6C     		ldr	r3, [r3, #64]
 496 001a 03F08053 		and	r3, r3, #268435456
 497 001e 3B60     		str	r3, [r7]
 498 0020 3B68     		ldr	r3, [r7]
 499              	.LBE2:
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Enable the Over-drive to extend the clock frequency to 216 MHz */
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   __HAL_PWR_OVERDRIVE_ENABLE();
 500              		.loc 1 265 3
 501 0022 1E4B     		ldr	r3, .L37+4
 502 0024 1B68     		ldr	r3, [r3]
 503 0026 1D4A     		ldr	r2, .L37+4
 504 0028 43F48033 		orr	r3, r3, #65536
 505 002c 1360     		str	r3, [r2]
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Get tick */
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   tickstart = HAL_GetTick();
 506              		.loc 1 268 15
 507 002e FFF7FEFF 		bl	HAL_GetTick
 508 0032 7860     		str	r0, [r7, #4]
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 509              		.loc 1 270 8
 510 0034 09E0     		b	.L32
 511              	.L34:
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 512              		.loc 1 272 9
 513 0036 FFF7FEFF 		bl	HAL_GetTick
 514 003a 0246     		mov	r2, r0
 515              		.loc 1 272 23
 516 003c 7B68     		ldr	r3, [r7, #4]
 517 003e D31A     		subs	r3, r2, r3
 518              		.loc 1 272 7
 519 0040 B3F57A7F 		cmp	r3, #1000
 520 0044 01D9     		bls	.L32
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       return HAL_TIMEOUT;
 521              		.loc 1 274 14
 522 0046 0323     		movs	r3, #3
 523 0048 22E0     		b	.L33
 524              	.L32:
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 525              		.loc 1 270 10
 526 004a 144B     		ldr	r3, .L37+4
 527 004c 5B68     		ldr	r3, [r3, #4]
 528 004e 03F48033 		and	r3, r3, #65536
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 529              		.loc 1 270 8
 530 0052 B3F5803F 		cmp	r3, #65536
 531 0056 EED1     		bne	.L34
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     }
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   }
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Enable the Over-drive switch */
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s 			page 15


 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 532              		.loc 1 279 3
 533 0058 104B     		ldr	r3, .L37+4
 534 005a 1B68     		ldr	r3, [r3]
 535 005c 0F4A     		ldr	r2, .L37+4
 536 005e 43F40033 		orr	r3, r3, #131072
 537 0062 1360     		str	r3, [r2]
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Get tick */
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   tickstart = HAL_GetTick();
 538              		.loc 1 282 15
 539 0064 FFF7FEFF 		bl	HAL_GetTick
 540 0068 7860     		str	r0, [r7, #4]
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 541              		.loc 1 284 8
 542 006a 09E0     		b	.L35
 543              	.L36:
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 544              		.loc 1 286 9
 545 006c FFF7FEFF 		bl	HAL_GetTick
 546 0070 0246     		mov	r2, r0
 547              		.loc 1 286 23
 548 0072 7B68     		ldr	r3, [r7, #4]
 549 0074 D31A     		subs	r3, r2, r3
 550              		.loc 1 286 7
 551 0076 B3F57A7F 		cmp	r3, #1000
 552 007a 01D9     		bls	.L35
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       return HAL_TIMEOUT;
 553              		.loc 1 288 14
 554 007c 0323     		movs	r3, #3
 555 007e 07E0     		b	.L33
 556              	.L35:
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 557              		.loc 1 284 10
 558 0080 064B     		ldr	r3, .L37+4
 559 0082 5B68     		ldr	r3, [r3, #4]
 560 0084 03F40033 		and	r3, r3, #131072
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 561              		.loc 1 284 8
 562 0088 B3F5003F 		cmp	r3, #131072
 563 008c EED1     		bne	.L36
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     }
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   } 
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   return HAL_OK;
 564              		.loc 1 291 10
 565 008e 0023     		movs	r3, #0
 566              	.L33:
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** }
 567              		.loc 1 292 1
 568 0090 1846     		mov	r0, r3
 569 0092 0837     		adds	r7, r7, #8
 570              	.LCFI37:
 571              		.cfi_def_cfa_offset 8
 572 0094 BD46     		mov	sp, r7
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s 			page 16


 573              	.LCFI38:
 574              		.cfi_def_cfa_register 13
 575              		@ sp needed
 576 0096 80BD     		pop	{r7, pc}
 577              	.L38:
 578              		.align	2
 579              	.L37:
 580 0098 00380240 		.word	1073887232
 581 009c 00700040 		.word	1073770496
 582              		.cfi_endproc
 583              	.LFE149:
 585              		.section	.text.HAL_PWREx_DisableOverDrive,"ax",%progbits
 586              		.align	1
 587              		.global	HAL_PWREx_DisableOverDrive
 588              		.syntax unified
 589              		.thumb
 590              		.thumb_func
 592              	HAL_PWREx_DisableOverDrive:
 593              	.LFB150:
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /**
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @brief  Deactivates the Over-Drive mode.
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @note   This mode allows the CPU and the core logic to operate at a higher frequency
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         than the normal mode for a given voltage scaling (scale 1, scale 2 or scale 3).    
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @note   It is recommended to enter or exit Over-drive mode when the application is not running 
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         critical tasks and when the system clock source is either HSI or HSE. 
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         The peripheral clocks must be enabled once the Over-drive mode is activated.
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @retval HAL status
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_DisableOverDrive(void)
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** {
 594              		.loc 1 305 1
 595              		.cfi_startproc
 596              		@ args = 0, pretend = 0, frame = 8
 597              		@ frame_needed = 1, uses_anonymous_args = 0
 598 0000 80B5     		push	{r7, lr}
 599              	.LCFI39:
 600              		.cfi_def_cfa_offset 8
 601              		.cfi_offset 7, -8
 602              		.cfi_offset 14, -4
 603 0002 82B0     		sub	sp, sp, #8
 604              	.LCFI40:
 605              		.cfi_def_cfa_offset 16
 606 0004 00AF     		add	r7, sp, #0
 607              	.LCFI41:
 608              		.cfi_def_cfa_register 7
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   uint32_t tickstart = 0;
 609              		.loc 1 306 12
 610 0006 0023     		movs	r3, #0
 611 0008 7B60     		str	r3, [r7, #4]
 612              	.LBB3:
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 613              		.loc 1 308 3
 614 000a 234B     		ldr	r3, .L45
 615 000c 1B6C     		ldr	r3, [r3, #64]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s 			page 17


 616 000e 224A     		ldr	r2, .L45
 617 0010 43F08053 		orr	r3, r3, #268435456
 618 0014 1364     		str	r3, [r2, #64]
 619 0016 204B     		ldr	r3, .L45
 620 0018 1B6C     		ldr	r3, [r3, #64]
 621 001a 03F08053 		and	r3, r3, #268435456
 622 001e 3B60     		str	r3, [r7]
 623 0020 3B68     		ldr	r3, [r7]
 624              	.LBE3:
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Disable the Over-drive switch */
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   __HAL_PWR_OVERDRIVESWITCHING_DISABLE();
 625              		.loc 1 311 3
 626 0022 1E4B     		ldr	r3, .L45+4
 627 0024 1B68     		ldr	r3, [r3]
 628 0026 1D4A     		ldr	r2, .L45+4
 629 0028 23F40033 		bic	r3, r3, #131072
 630 002c 1360     		str	r3, [r2]
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Get tick */
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   tickstart = HAL_GetTick();
 631              		.loc 1 314 15
 632 002e FFF7FEFF 		bl	HAL_GetTick
 633 0032 7860     		str	r0, [r7, #4]
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****  
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   while(__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 634              		.loc 1 316 8
 635 0034 09E0     		b	.L40
 636              	.L42:
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 637              		.loc 1 318 9
 638 0036 FFF7FEFF 		bl	HAL_GetTick
 639 003a 0246     		mov	r2, r0
 640              		.loc 1 318 23
 641 003c 7B68     		ldr	r3, [r7, #4]
 642 003e D31A     		subs	r3, r2, r3
 643              		.loc 1 318 7
 644 0040 B3F57A7F 		cmp	r3, #1000
 645 0044 01D9     		bls	.L40
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       return HAL_TIMEOUT;
 646              		.loc 1 320 14
 647 0046 0323     		movs	r3, #3
 648 0048 22E0     		b	.L41
 649              	.L40:
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 650              		.loc 1 316 9
 651 004a 144B     		ldr	r3, .L45+4
 652 004c 5B68     		ldr	r3, [r3, #4]
 653 004e 03F40033 		and	r3, r3, #131072
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 654              		.loc 1 316 8
 655 0052 B3F5003F 		cmp	r3, #131072
 656 0056 EED0     		beq	.L42
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     }
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   } 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s 			page 18


 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Disable the Over-drive */
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   __HAL_PWR_OVERDRIVE_DISABLE();
 657              		.loc 1 325 3
 658 0058 104B     		ldr	r3, .L45+4
 659 005a 1B68     		ldr	r3, [r3]
 660 005c 0F4A     		ldr	r2, .L45+4
 661 005e 23F48033 		bic	r3, r3, #65536
 662 0062 1360     		str	r3, [r2]
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Get tick */
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   tickstart = HAL_GetTick();
 663              		.loc 1 328 15
 664 0064 FFF7FEFF 		bl	HAL_GetTick
 665 0068 7860     		str	r0, [r7, #4]
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   while(__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 666              		.loc 1 330 8
 667 006a 09E0     		b	.L43
 668              	.L44:
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 669              		.loc 1 332 9
 670 006c FFF7FEFF 		bl	HAL_GetTick
 671 0070 0246     		mov	r2, r0
 672              		.loc 1 332 23
 673 0072 7B68     		ldr	r3, [r7, #4]
 674 0074 D31A     		subs	r3, r2, r3
 675              		.loc 1 332 7
 676 0076 B3F57A7F 		cmp	r3, #1000
 677 007a 01D9     		bls	.L43
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       return HAL_TIMEOUT;
 678              		.loc 1 334 14
 679 007c 0323     		movs	r3, #3
 680 007e 07E0     		b	.L41
 681              	.L43:
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 682              		.loc 1 330 9
 683 0080 064B     		ldr	r3, .L45+4
 684 0082 5B68     		ldr	r3, [r3, #4]
 685 0084 03F48033 		and	r3, r3, #65536
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 686              		.loc 1 330 8
 687 0088 B3F5803F 		cmp	r3, #65536
 688 008c EED0     		beq	.L44
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     }
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   }
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   return HAL_OK;
 689              		.loc 1 338 10
 690 008e 0023     		movs	r3, #0
 691              	.L41:
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** }
 692              		.loc 1 339 1
 693 0090 1846     		mov	r0, r3
 694 0092 0837     		adds	r7, r7, #8
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s 			page 19


 695              	.LCFI42:
 696              		.cfi_def_cfa_offset 8
 697 0094 BD46     		mov	sp, r7
 698              	.LCFI43:
 699              		.cfi_def_cfa_register 13
 700              		@ sp needed
 701 0096 80BD     		pop	{r7, pc}
 702              	.L46:
 703              		.align	2
 704              	.L45:
 705 0098 00380240 		.word	1073887232
 706 009c 00700040 		.word	1073770496
 707              		.cfi_endproc
 708              	.LFE150:
 710              		.section	.text.HAL_PWREx_EnterUnderDriveSTOPMode,"ax",%progbits
 711              		.align	1
 712              		.global	HAL_PWREx_EnterUnderDriveSTOPMode
 713              		.syntax unified
 714              		.thumb
 715              		.thumb_func
 717              	HAL_PWREx_EnterUnderDriveSTOPMode:
 718              	.LFB151:
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /**
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @brief  Enters in Under-Drive STOP mode.
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * 
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @note    This mode can be selected only when the Under-Drive is already active 
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *   
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @note    This mode is enabled only with STOP low power mode.
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *          In this mode, the 1.2V domain is preserved in reduced leakage mode. This 
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *          mode is only available when the main regulator or the low power regulator 
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *          is in low voltage mode
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *        
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @note   If the Under-drive mode was enabled, it is automatically disabled after 
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         exiting Stop mode. 
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         When the voltage regulator operates in Under-drive mode, an additional  
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         startup delay is induced when waking up from Stop mode.
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *                    
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @note   In Stop mode, all I/O pins keep the same state as in Run mode.
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *   
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @note   When exiting Stop mode by issuing an interrupt or a wakeup event, 
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         the HSI RC oscillator is selected as system clock.
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *           
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @note   When the voltage regulator operates in low power mode, an additional 
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         startup delay is incurred when waking up from Stop mode. 
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         By keeping the internal regulator ON during Stop mode, the consumption 
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         is higher although the startup time is reduced.
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *     
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @param  Regulator specifies the regulator state in STOP mode.
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *            @arg PWR_MAINREGULATOR_UNDERDRIVE_ON:  Main Regulator in under-drive mode 
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *                 and Flash memory in power-down when the device is in Stop under-drive mode
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *            @arg PWR_LOWPOWERREGULATOR_UNDERDRIVE_ON:  Low Power Regulator in under-drive mode 
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *                and Flash memory in power-down when the device is in Stop under-drive mode
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @param  STOPEntry specifies if STOP mode in entered with WFI or WFE instruction.
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *            @arg PWR_SLEEPENTRY_WFI: enter STOP mode with WFI instruction
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s 			page 20


 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *            @arg PWR_SLEEPENTRY_WFE: enter STOP mode with WFE instruction
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @retval None
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_EnterUnderDriveSTOPMode(uint32_t Regulator, uint8_t STOPEntry)
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** {
 719              		.loc 1 379 1
 720              		.cfi_startproc
 721              		@ args = 0, pretend = 0, frame = 24
 722              		@ frame_needed = 1, uses_anonymous_args = 0
 723 0000 80B5     		push	{r7, lr}
 724              	.LCFI44:
 725              		.cfi_def_cfa_offset 8
 726              		.cfi_offset 7, -8
 727              		.cfi_offset 14, -4
 728 0002 86B0     		sub	sp, sp, #24
 729              	.LCFI45:
 730              		.cfi_def_cfa_offset 32
 731 0004 00AF     		add	r7, sp, #0
 732              	.LCFI46:
 733              		.cfi_def_cfa_register 7
 734 0006 7860     		str	r0, [r7, #4]
 735 0008 0B46     		mov	r3, r1
 736 000a FB70     		strb	r3, [r7, #3]
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   uint32_t tempreg = 0;
 737              		.loc 1 380 12
 738 000c 0023     		movs	r3, #0
 739 000e 7B61     		str	r3, [r7, #20]
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   uint32_t tickstart = 0;
 740              		.loc 1 381 12
 741 0010 0023     		movs	r3, #0
 742 0012 3B61     		str	r3, [r7, #16]
 743              	.LBB4:
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Check the parameters */
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   assert_param(IS_PWR_REGULATOR_UNDERDRIVE(Regulator));
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   assert_param(IS_PWR_STOP_ENTRY(STOPEntry));
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Enable Power ctrl clock */
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 744              		.loc 1 388 3
 745 0014 284B     		ldr	r3, .L53
 746 0016 1B6C     		ldr	r3, [r3, #64]
 747 0018 274A     		ldr	r2, .L53
 748 001a 43F08053 		orr	r3, r3, #268435456
 749 001e 1364     		str	r3, [r2, #64]
 750 0020 254B     		ldr	r3, .L53
 751 0022 1B6C     		ldr	r3, [r3, #64]
 752 0024 03F08053 		and	r3, r3, #268435456
 753 0028 FB60     		str	r3, [r7, #12]
 754 002a FB68     		ldr	r3, [r7, #12]
 755              	.LBE4:
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Enable the Under-drive Mode ---------------------------------------------*/
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Clear Under-drive flag */
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   __HAL_PWR_CLEAR_ODRUDR_FLAG();
 756              		.loc 1 391 3
 757 002c 234B     		ldr	r3, .L53+4
 758 002e 5A68     		ldr	r2, [r3, #4]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s 			page 21


 759 0030 2249     		ldr	r1, .L53+4
 760 0032 234B     		ldr	r3, .L53+8
 761 0034 1343     		orrs	r3, r3, r2
 762 0036 4B60     		str	r3, [r1, #4]
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Enable the Under-drive */ 
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   __HAL_PWR_UNDERDRIVE_ENABLE();
 763              		.loc 1 394 3
 764 0038 204B     		ldr	r3, .L53+4
 765 003a 1B68     		ldr	r3, [r3]
 766 003c 1F4A     		ldr	r2, .L53+4
 767 003e 43F44023 		orr	r3, r3, #786432
 768 0042 1360     		str	r3, [r2]
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Get tick */
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   tickstart = HAL_GetTick();
 769              		.loc 1 397 15
 770 0044 FFF7FEFF 		bl	HAL_GetTick
 771 0048 3861     		str	r0, [r7, #16]
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Wait for UnderDrive mode is ready */
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   while(__HAL_PWR_GET_FLAG(PWR_FLAG_UDRDY))
 772              		.loc 1 400 8
 773 004a 09E0     		b	.L48
 774              	.L50:
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     if((HAL_GetTick() - tickstart ) > PWR_UDERDRIVE_TIMEOUT_VALUE)
 775              		.loc 1 402 9
 776 004c FFF7FEFF 		bl	HAL_GetTick
 777 0050 0246     		mov	r2, r0
 778              		.loc 1 402 23
 779 0052 3B69     		ldr	r3, [r7, #16]
 780 0054 D31A     		subs	r3, r2, r3
 781              		.loc 1 402 7
 782 0056 B3F57A7F 		cmp	r3, #1000
 783 005a 01D9     		bls	.L48
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       return HAL_TIMEOUT;
 784              		.loc 1 404 14
 785 005c 0323     		movs	r3, #3
 786 005e 27E0     		b	.L49
 787              	.L48:
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 788              		.loc 1 400 9
 789 0060 164B     		ldr	r3, .L53+4
 790 0062 5B68     		ldr	r3, [r3, #4]
 791 0064 03F44023 		and	r3, r3, #786432
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 792              		.loc 1 400 8
 793 0068 B3F5402F 		cmp	r3, #786432
 794 006c EED0     		beq	.L50
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     }
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   }
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Select the regulator state in STOP mode ---------------------------------*/
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   tempreg = PWR->CR1;
 795              		.loc 1 409 16
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s 			page 22


 796 006e 134B     		ldr	r3, .L53+4
 797              		.loc 1 409 11
 798 0070 1B68     		ldr	r3, [r3]
 799 0072 7B61     		str	r3, [r7, #20]
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Clear PDDS, LPDS, MRLUDS and LPLUDS bits */
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   tempreg &= (uint32_t)~(PWR_CR1_PDDS | PWR_CR1_LPDS | PWR_CR1_LPUDS | PWR_CR1_MRUDS);
 800              		.loc 1 411 11
 801 0074 7A69     		ldr	r2, [r7, #20]
 802 0076 134B     		ldr	r3, .L53+12
 803 0078 1340     		ands	r3, r3, r2
 804 007a 7B61     		str	r3, [r7, #20]
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Set LPDS, MRLUDS and LPLUDS bits according to PWR_Regulator value */
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   tempreg |= Regulator;
 805              		.loc 1 414 11
 806 007c 7A69     		ldr	r2, [r7, #20]
 807 007e 7B68     		ldr	r3, [r7, #4]
 808 0080 1343     		orrs	r3, r3, r2
 809 0082 7B61     		str	r3, [r7, #20]
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Store the new value */
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   PWR->CR1 = tempreg;
 810              		.loc 1 417 6
 811 0084 0D4A     		ldr	r2, .L53+4
 812              		.loc 1 417 12
 813 0086 7B69     		ldr	r3, [r7, #20]
 814 0088 1360     		str	r3, [r2]
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   SCB->SCR |= SCB_SCR_SLEEPDEEP_Msk;
 815              		.loc 1 420 12
 816 008a 0F4B     		ldr	r3, .L53+16
 817 008c 1B69     		ldr	r3, [r3, #16]
 818 008e 0E4A     		ldr	r2, .L53+16
 819 0090 43F00403 		orr	r3, r3, #4
 820 0094 1361     		str	r3, [r2, #16]
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Select STOP mode entry --------------------------------------------------*/
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   if(STOPEntry == PWR_SLEEPENTRY_WFI)
 821              		.loc 1 423 5
 822 0096 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 823 0098 012B     		cmp	r3, #1
 824 009a 01D1     		bne	.L51
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {   
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     /* Request Wait For Interrupt */
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     __WFI();
 825              		.loc 1 426 5
 826              		.syntax unified
 827              	@ 426 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c" 1
 828 009c 30BF     		wfi
 829              	@ 0 "" 2
 830              		.thumb
 831              		.syntax unified
 832 009e 00E0     		b	.L52
 833              	.L51:
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   }
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   else
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s 			page 23


 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     /* Request Wait For Event */
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     __WFE();
 834              		.loc 1 431 5
 835              		.syntax unified
 836              	@ 431 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c" 1
 837 00a0 20BF     		wfe
 838              	@ 0 "" 2
 839              		.thumb
 840              		.syntax unified
 841              	.L52:
 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   }
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Reset SLEEPDEEP bit of Cortex System Control Register */
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   SCB->SCR &= (uint32_t)~((uint32_t)SCB_SCR_SLEEPDEEP_Msk);
 842              		.loc 1 434 12
 843 00a2 094B     		ldr	r3, .L53+16
 844 00a4 1B69     		ldr	r3, [r3, #16]
 845 00a6 084A     		ldr	r2, .L53+16
 846 00a8 23F00403 		bic	r3, r3, #4
 847 00ac 1361     		str	r3, [r2, #16]
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   return HAL_OK;  
 848              		.loc 1 436 10
 849 00ae 0023     		movs	r3, #0
 850              	.L49:
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** }
 851              		.loc 1 437 1
 852 00b0 1846     		mov	r0, r3
 853 00b2 1837     		adds	r7, r7, #24
 854              	.LCFI47:
 855              		.cfi_def_cfa_offset 8
 856 00b4 BD46     		mov	sp, r7
 857              	.LCFI48:
 858              		.cfi_def_cfa_register 13
 859              		@ sp needed
 860 00b6 80BD     		pop	{r7, pc}
 861              	.L54:
 862              		.align	2
 863              	.L53:
 864 00b8 00380240 		.word	1073887232
 865 00bc 00700040 		.word	1073770496
 866 00c0 00010C00 		.word	786688
 867 00c4 FCF3FFFF 		.word	-3076
 868 00c8 00ED00E0 		.word	-536810240
 869              		.cfi_endproc
 870              	.LFE151:
 872              		.section	.text.HAL_PWREx_GetVoltageRange,"ax",%progbits
 873              		.align	1
 874              		.global	HAL_PWREx_GetVoltageRange
 875              		.syntax unified
 876              		.thumb
 877              		.thumb_func
 879              	HAL_PWREx_GetVoltageRange:
 880              	.LFB152:
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /**
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @brief Returns Voltage Scaling Range.
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s 			page 24


 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @retval VOS bit field (PWR_REGULATOR_VOLTAGE_SCALE1, PWR_REGULATOR_VOLTAGE_SCALE2 or 
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *            PWR_REGULATOR_VOLTAGE_SCALE3)PWR_REGULATOR_VOLTAGE_SCALE1
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */  
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** uint32_t HAL_PWREx_GetVoltageRange(void)
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** {
 881              		.loc 1 445 1
 882              		.cfi_startproc
 883              		@ args = 0, pretend = 0, frame = 0
 884              		@ frame_needed = 1, uses_anonymous_args = 0
 885              		@ link register save eliminated.
 886 0000 80B4     		push	{r7}
 887              	.LCFI49:
 888              		.cfi_def_cfa_offset 4
 889              		.cfi_offset 7, -4
 890 0002 00AF     		add	r7, sp, #0
 891              	.LCFI50:
 892              		.cfi_def_cfa_register 7
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   return  (PWR->CR1 & PWR_CR1_VOS);
 893              		.loc 1 446 15
 894 0004 044B     		ldr	r3, .L57
 895 0006 1B68     		ldr	r3, [r3]
 896              		.loc 1 446 21
 897 0008 03F44043 		and	r3, r3, #49152
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** }
 898              		.loc 1 447 1
 899 000c 1846     		mov	r0, r3
 900 000e BD46     		mov	sp, r7
 901              	.LCFI51:
 902              		.cfi_def_cfa_register 13
 903              		@ sp needed
 904 0010 5DF8047B 		ldr	r7, [sp], #4
 905              	.LCFI52:
 906              		.cfi_restore 7
 907              		.cfi_def_cfa_offset 0
 908 0014 7047     		bx	lr
 909              	.L58:
 910 0016 00BF     		.align	2
 911              	.L57:
 912 0018 00700040 		.word	1073770496
 913              		.cfi_endproc
 914              	.LFE152:
 916              		.section	.text.HAL_PWREx_ControlVoltageScaling,"ax",%progbits
 917              		.align	1
 918              		.global	HAL_PWREx_ControlVoltageScaling
 919              		.syntax unified
 920              		.thumb
 921              		.thumb_func
 923              	HAL_PWREx_ControlVoltageScaling:
 924              	.LFB153:
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /**
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @brief Configures the main internal regulator output voltage.
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @param  VoltageScaling specifies the regulator output voltage to achieve
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         a tradeoff between performance and power consumption.
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *            @arg PWR_REGULATOR_VOLTAGE_SCALE1: Regulator voltage output range 1 mode,
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *                                                typical output voltage at 1.4 V,  
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s 			page 25


 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *                                                system frequency up to 216 MHz.
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *            @arg PWR_REGULATOR_VOLTAGE_SCALE2: Regulator voltage output range 2 mode,
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *                                                typical output voltage at 1.2 V,                
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *                                                system frequency up to 180 MHz.
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *            @arg PWR_REGULATOR_VOLTAGE_SCALE3: Regulator voltage output range 2 mode,
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *                                                typical output voltage at 1.00 V,               
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *                                                system frequency up to 151 MHz.
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @note To update the system clock frequency(SYSCLK):
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *        - Set the HSI or HSE as system clock frequency using the HAL_RCC_ClockConfig().
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *        - Call the HAL_RCC_OscConfig() to configure the PLL.
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *        - Call HAL_PWREx_ConfigVoltageScaling() API to adjust the voltage scale.
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *        - Set the new system clock frequency using the HAL_RCC_ClockConfig().
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @note The scale can be modified only when the HSI or HSE clock source is selected 
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *        as system clock source, otherwise the API returns HAL_ERROR.  
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @note When the PLL is OFF, the voltage scale 3 is automatically selected and the VOS bits
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *       value in the PWR_CR1 register are not taken in account.
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @note This API forces the PLL state ON to allow the possibility to configure the voltage scale 
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @note The new voltage scale is active only when the PLL is ON.  
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @retval HAL Status
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_ControlVoltageScaling(uint32_t VoltageScaling)
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** {
 925              		.loc 1 477 1
 926              		.cfi_startproc
 927              		@ args = 0, pretend = 0, frame = 24
 928              		@ frame_needed = 1, uses_anonymous_args = 0
 929 0000 80B5     		push	{r7, lr}
 930              	.LCFI53:
 931              		.cfi_def_cfa_offset 8
 932              		.cfi_offset 7, -8
 933              		.cfi_offset 14, -4
 934 0002 86B0     		sub	sp, sp, #24
 935              	.LCFI54:
 936              		.cfi_def_cfa_offset 32
 937 0004 00AF     		add	r7, sp, #0
 938              	.LCFI55:
 939              		.cfi_def_cfa_register 7
 940 0006 7860     		str	r0, [r7, #4]
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   uint32_t tickstart = 0;
 941              		.loc 1 478 12
 942 0008 0023     		movs	r3, #0
 943 000a 7B61     		str	r3, [r7, #20]
 944              	.LBB5:
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   assert_param(IS_PWR_REGULATOR_VOLTAGE(VoltageScaling));
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Enable Power ctrl clock */
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 945              		.loc 1 483 3
 946 000c 374B     		ldr	r3, .L70
 947 000e 1B6C     		ldr	r3, [r3, #64]
 948 0010 364A     		ldr	r2, .L70
 949 0012 43F08053 		orr	r3, r3, #268435456
 950 0016 1364     		str	r3, [r2, #64]
 951 0018 344B     		ldr	r3, .L70
 952 001a 1B6C     		ldr	r3, [r3, #64]
 953 001c 03F08053 		and	r3, r3, #268435456
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s 			page 26


 954 0020 3B61     		str	r3, [r7, #16]
 955 0022 3B69     		ldr	r3, [r7, #16]
 956              	.LBE5:
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Check if the PLL is used as system clock or not */
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 957              		.loc 1 486 6
 958 0024 314B     		ldr	r3, .L70
 959 0026 9B68     		ldr	r3, [r3, #8]
 960 0028 03F00C03 		and	r3, r3, #12
 961              		.loc 1 486 5
 962 002c 082B     		cmp	r3, #8
 963 002e 55D0     		beq	.L60
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     /* Disable the main PLL */
 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     __HAL_RCC_PLL_DISABLE();
 964              		.loc 1 489 5
 965 0030 2E4B     		ldr	r3, .L70
 966 0032 1B68     		ldr	r3, [r3]
 967 0034 2D4A     		ldr	r2, .L70
 968 0036 23F08073 		bic	r3, r3, #16777216
 969 003a 1360     		str	r3, [r2]
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     /* Get Start Tick */
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     tickstart = HAL_GetTick();    
 970              		.loc 1 492 17
 971 003c FFF7FEFF 		bl	HAL_GetTick
 972 0040 7861     		str	r0, [r7, #20]
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     /* Wait till PLL is disabled */  
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 973              		.loc 1 494 10
 974 0042 08E0     		b	.L61
 975              	.L63:
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 976              		.loc 1 496 11
 977 0044 FFF7FEFF 		bl	HAL_GetTick
 978 0048 0246     		mov	r2, r0
 979              		.loc 1 496 25
 980 004a 7B69     		ldr	r3, [r7, #20]
 981 004c D31A     		subs	r3, r2, r3
 982              		.loc 1 496 9
 983 004e 022B     		cmp	r3, #2
 984 0050 01D9     		bls	.L61
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       {
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****         return HAL_TIMEOUT;
 985              		.loc 1 498 16
 986 0052 0323     		movs	r3, #3
 987 0054 45E0     		b	.L62
 988              	.L61:
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 989              		.loc 1 494 11
 990 0056 254B     		ldr	r3, .L70
 991 0058 1B68     		ldr	r3, [r3]
 992 005a 03F00073 		and	r3, r3, #33554432
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 993              		.loc 1 494 10
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s 			page 27


 994 005e 002B     		cmp	r3, #0
 995 0060 F0D1     		bne	.L63
 996              	.LBB6:
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       }
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     }
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     /* Set Range */
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(VoltageScaling);
 997              		.loc 1 503 5
 998 0062 234B     		ldr	r3, .L70+4
 999 0064 1B68     		ldr	r3, [r3]
 1000 0066 23F44042 		bic	r2, r3, #49152
 1001 006a 2149     		ldr	r1, .L70+4
 1002 006c 7B68     		ldr	r3, [r7, #4]
 1003 006e 1343     		orrs	r3, r3, r2
 1004 0070 0B60     		str	r3, [r1]
 1005 0072 1F4B     		ldr	r3, .L70+4
 1006 0074 1B68     		ldr	r3, [r3]
 1007 0076 03F44043 		and	r3, r3, #49152
 1008 007a FB60     		str	r3, [r7, #12]
 1009 007c FB68     		ldr	r3, [r7, #12]
 1010              	.LBE6:
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     /* Enable the main PLL */
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     __HAL_RCC_PLL_ENABLE();
 1011              		.loc 1 506 5
 1012 007e 1B4B     		ldr	r3, .L70
 1013 0080 1B68     		ldr	r3, [r3]
 1014 0082 1A4A     		ldr	r2, .L70
 1015 0084 43F08073 		orr	r3, r3, #16777216
 1016 0088 1360     		str	r3, [r2]
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     /* Get Start Tick */
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     tickstart = HAL_GetTick();
 1017              		.loc 1 509 17
 1018 008a FFF7FEFF 		bl	HAL_GetTick
 1019 008e 7861     		str	r0, [r7, #20]
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     /* Wait till PLL is ready */  
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 1020              		.loc 1 511 10
 1021 0090 08E0     		b	.L64
 1022              	.L65:
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 1023              		.loc 1 513 11
 1024 0092 FFF7FEFF 		bl	HAL_GetTick
 1025 0096 0246     		mov	r2, r0
 1026              		.loc 1 513 25
 1027 0098 7B69     		ldr	r3, [r7, #20]
 1028 009a D31A     		subs	r3, r2, r3
 1029              		.loc 1 513 9
 1030 009c 022B     		cmp	r3, #2
 1031 009e 01D9     		bls	.L64
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       {
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****         return HAL_TIMEOUT;
 1032              		.loc 1 515 16
 1033 00a0 0323     		movs	r3, #3
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s 			page 28


 1034 00a2 1EE0     		b	.L62
 1035              	.L64:
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 1036              		.loc 1 511 11
 1037 00a4 114B     		ldr	r3, .L70
 1038 00a6 1B68     		ldr	r3, [r3]
 1039 00a8 03F00073 		and	r3, r3, #33554432
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 1040              		.loc 1 511 10
 1041 00ac 002B     		cmp	r3, #0
 1042 00ae F0D0     		beq	.L65
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       } 
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     }
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     /* Get Start Tick */
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     tickstart = HAL_GetTick();
 1043              		.loc 1 520 17
 1044 00b0 FFF7FEFF 		bl	HAL_GetTick
 1045 00b4 7861     		str	r0, [r7, #20]
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     while((__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY) == RESET))
 1046              		.loc 1 521 10
 1047 00b6 09E0     		b	.L66
 1048              	.L67:
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       if((HAL_GetTick() - tickstart ) > PWR_VOSRDY_TIMEOUT_VALUE)
 1049              		.loc 1 523 11
 1050 00b8 FFF7FEFF 		bl	HAL_GetTick
 1051 00bc 0246     		mov	r2, r0
 1052              		.loc 1 523 25
 1053 00be 7B69     		ldr	r3, [r7, #20]
 1054 00c0 D31A     		subs	r3, r2, r3
 1055              		.loc 1 523 9
 1056 00c2 B3F57A7F 		cmp	r3, #1000
 1057 00c6 01D9     		bls	.L66
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       {
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****         return HAL_TIMEOUT;
 1058              		.loc 1 525 16
 1059 00c8 0323     		movs	r3, #3
 1060 00ca 0AE0     		b	.L62
 1061              	.L66:
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 1062              		.loc 1 521 12
 1063 00cc 084B     		ldr	r3, .L70+4
 1064 00ce 5B68     		ldr	r3, [r3, #4]
 1065 00d0 03F48043 		and	r3, r3, #16384
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 1066              		.loc 1 521 10
 1067 00d4 B3F5804F 		cmp	r3, #16384
 1068 00d8 EED1     		bne	.L67
 1069 00da 01E0     		b	.L69
 1070              	.L60:
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       } 
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     }
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   }
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   else
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     return HAL_ERROR;
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s 			page 29


 1071              		.loc 1 531 12
 1072 00dc 0123     		movs	r3, #1
 1073 00de 00E0     		b	.L62
 1074              	.L69:
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   }
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   return HAL_OK;
 1075              		.loc 1 533 10
 1076 00e0 0023     		movs	r3, #0
 1077              	.L62:
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** }
 1078              		.loc 1 534 1
 1079 00e2 1846     		mov	r0, r3
 1080 00e4 1837     		adds	r7, r7, #24
 1081              	.LCFI56:
 1082              		.cfi_def_cfa_offset 8
 1083 00e6 BD46     		mov	sp, r7
 1084              	.LCFI57:
 1085              		.cfi_def_cfa_register 13
 1086              		@ sp needed
 1087 00e8 80BD     		pop	{r7, pc}
 1088              	.L71:
 1089 00ea 00BF     		.align	2
 1090              	.L70:
 1091 00ec 00380240 		.word	1073887232
 1092 00f0 00700040 		.word	1073770496
 1093              		.cfi_endproc
 1094              	.LFE153:
 1096              		.text
 1097              	.Letext0:
 1098              		.file 2 "d:\\3.tools\\arm_gcc_toolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 1099              		.file 3 "d:\\3.tools\\arm_gcc_toolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 1100              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 1101              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 1102              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 1103              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s 			page 30


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f7xx_hal_pwr_ex.c
C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s:20     .text.HAL_PWREx_EnableBkUpReg:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s:26     .text.HAL_PWREx_EnableBkUpReg:00000000 HAL_PWREx_EnableBkUpReg
C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s:101    .text.HAL_PWREx_EnableBkUpReg:00000054 $d
C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s:106    .text.HAL_PWREx_DisableBkUpReg:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s:112    .text.HAL_PWREx_DisableBkUpReg:00000000 HAL_PWREx_DisableBkUpReg
C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s:186    .text.HAL_PWREx_DisableBkUpReg:00000054 $d
C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s:191    .text.HAL_PWREx_EnableFlashPowerDown:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s:197    .text.HAL_PWREx_EnableFlashPowerDown:00000000 HAL_PWREx_EnableFlashPowerDown
C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s:231    .text.HAL_PWREx_EnableFlashPowerDown:0000001c $d
C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s:236    .text.HAL_PWREx_DisableFlashPowerDown:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s:242    .text.HAL_PWREx_DisableFlashPowerDown:00000000 HAL_PWREx_DisableFlashPowerDown
C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s:276    .text.HAL_PWREx_DisableFlashPowerDown:0000001c $d
C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s:281    .text.HAL_PWREx_EnableMainRegulatorLowVoltage:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s:287    .text.HAL_PWREx_EnableMainRegulatorLowVoltage:00000000 HAL_PWREx_EnableMainRegulatorLowVoltage
C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s:321    .text.HAL_PWREx_EnableMainRegulatorLowVoltage:0000001c $d
C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s:326    .text.HAL_PWREx_DisableMainRegulatorLowVoltage:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s:332    .text.HAL_PWREx_DisableMainRegulatorLowVoltage:00000000 HAL_PWREx_DisableMainRegulatorLowVoltage
C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s:366    .text.HAL_PWREx_DisableMainRegulatorLowVoltage:0000001c $d
C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s:371    .text.HAL_PWREx_EnableLowRegulatorLowVoltage:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s:377    .text.HAL_PWREx_EnableLowRegulatorLowVoltage:00000000 HAL_PWREx_EnableLowRegulatorLowVoltage
C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s:411    .text.HAL_PWREx_EnableLowRegulatorLowVoltage:0000001c $d
C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s:416    .text.HAL_PWREx_DisableLowRegulatorLowVoltage:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s:422    .text.HAL_PWREx_DisableLowRegulatorLowVoltage:00000000 HAL_PWREx_DisableLowRegulatorLowVoltage
C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s:456    .text.HAL_PWREx_DisableLowRegulatorLowVoltage:0000001c $d
C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s:461    .text.HAL_PWREx_EnableOverDrive:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s:467    .text.HAL_PWREx_EnableOverDrive:00000000 HAL_PWREx_EnableOverDrive
C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s:580    .text.HAL_PWREx_EnableOverDrive:00000098 $d
C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s:586    .text.HAL_PWREx_DisableOverDrive:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s:592    .text.HAL_PWREx_DisableOverDrive:00000000 HAL_PWREx_DisableOverDrive
C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s:705    .text.HAL_PWREx_DisableOverDrive:00000098 $d
C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s:711    .text.HAL_PWREx_EnterUnderDriveSTOPMode:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s:717    .text.HAL_PWREx_EnterUnderDriveSTOPMode:00000000 HAL_PWREx_EnterUnderDriveSTOPMode
C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s:864    .text.HAL_PWREx_EnterUnderDriveSTOPMode:000000b8 $d
C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s:873    .text.HAL_PWREx_GetVoltageRange:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s:879    .text.HAL_PWREx_GetVoltageRange:00000000 HAL_PWREx_GetVoltageRange
C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s:912    .text.HAL_PWREx_GetVoltageRange:00000018 $d
C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s:917    .text.HAL_PWREx_ControlVoltageScaling:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s:923    .text.HAL_PWREx_ControlVoltageScaling:00000000 HAL_PWREx_ControlVoltageScaling
C:\Users\jisu8\AppData\Local\Temp\ccxJKJ6Y.s:1091   .text.HAL_PWREx_ControlVoltageScaling:000000ec $d

UNDEFINED SYMBOLS
HAL_GetTick
