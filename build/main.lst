ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.section	.rodata
  17              		.align	2
  18              	.LC0:
  19 0000 64656661 		.ascii	"defaultTask\000"
  19      756C7454 
  19      61736B00 
  20              		.text
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.global	SDFatFs
  24              		.section	.bss.SDFatFs,"aw",%nobits
  25              		.align	2
  28              	SDFatFs:
  29 0000 00000000 		.space	572
  29      00000000 
  29      00000000 
  29      00000000 
  29      00000000 
  30              		.global	MyFile
  31              		.section	.bss.MyFile,"aw",%nobits
  32              		.align	3
  35              	MyFile:
  36 0000 00000000 		.space	600
  36      00000000 
  36      00000000 
  36      00000000 
  36      00000000 
  37              		.global	SDPath
  38              		.section	.bss.SDPath,"aw",%nobits
  39              		.align	2
  42              	SDPath:
  43 0000 00000000 		.space	4
  44              		.global	hcrc
  45              		.section	.bss.hcrc,"aw",%nobits
  46              		.align	2
  49              	hcrc:
  50 0000 00000000 		.space	36
  50      00000000 
  50      00000000 
  50      00000000 
  50      00000000 
  51              		.global	hdma2d
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 2


  52              		.section	.bss.hdma2d,"aw",%nobits
  53              		.align	2
  56              	hdma2d:
  57 0000 00000000 		.space	64
  57      00000000 
  57      00000000 
  57      00000000 
  57      00000000 
  58              		.global	hi2c1
  59              		.section	.bss.hi2c1,"aw",%nobits
  60              		.align	2
  63              	hi2c1:
  64 0000 00000000 		.space	84
  64      00000000 
  64      00000000 
  64      00000000 
  64      00000000 
  65              		.global	hi2c3
  66              		.section	.bss.hi2c3,"aw",%nobits
  67              		.align	2
  70              	hi2c3:
  71 0000 00000000 		.space	84
  71      00000000 
  71      00000000 
  71      00000000 
  71      00000000 
  72              		.global	hltdc
  73              		.section	.bss.hltdc,"aw",%nobits
  74              		.align	2
  77              	hltdc:
  78 0000 00000000 		.space	168
  78      00000000 
  78      00000000 
  78      00000000 
  78      00000000 
  79              		.global	hqspi
  80              		.section	.bss.hqspi,"aw",%nobits
  81              		.align	2
  84              	hqspi:
  85 0000 00000000 		.space	76
  85      00000000 
  85      00000000 
  85      00000000 
  85      00000000 
  86              		.global	hsd1
  87              		.section	.bss.hsd1,"aw",%nobits
  88              		.align	2
  91              	hsd1:
  92 0000 00000000 		.space	132
  92      00000000 
  92      00000000 
  92      00000000 
  92      00000000 
  93              		.global	hdma_sdmmc1_rx
  94              		.section	.bss.hdma_sdmmc1_rx,"aw",%nobits
  95              		.align	2
  98              	hdma_sdmmc1_rx:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 3


  99 0000 00000000 		.space	96
  99      00000000 
  99      00000000 
  99      00000000 
  99      00000000 
 100              		.global	hdma_sdmmc1_tx
 101              		.section	.bss.hdma_sdmmc1_tx,"aw",%nobits
 102              		.align	2
 105              	hdma_sdmmc1_tx:
 106 0000 00000000 		.space	96
 106      00000000 
 106      00000000 
 106      00000000 
 106      00000000 
 107              		.global	hspi2
 108              		.section	.bss.hspi2,"aw",%nobits
 109              		.align	2
 112              	hspi2:
 113 0000 00000000 		.space	100
 113      00000000 
 113      00000000 
 113      00000000 
 113      00000000 
 114              		.global	huart1
 115              		.section	.bss.huart1,"aw",%nobits
 116              		.align	2
 119              	huart1:
 120 0000 00000000 		.space	136
 120      00000000 
 120      00000000 
 120      00000000 
 120      00000000 
 121              		.global	huart6
 122              		.section	.bss.huart6,"aw",%nobits
 123              		.align	2
 126              	huart6:
 127 0000 00000000 		.space	136
 127      00000000 
 127      00000000 
 127      00000000 
 127      00000000 
 128              		.global	hsdram1
 129              		.section	.bss.hsdram1,"aw",%nobits
 130              		.align	2
 133              	hsdram1:
 134 0000 00000000 		.space	52
 134      00000000 
 134      00000000 
 134      00000000 
 134      00000000 
 135              		.global	defaultTaskHandle
 136              		.section	.bss.defaultTaskHandle,"aw",%nobits
 137              		.align	2
 140              	defaultTaskHandle:
 141 0000 00000000 		.space	4
 142              		.section	.rodata
 143              		.align	2
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 4


 144              	.LC2:
 145 000c 00000000 		.word	.LC0
 146 0010 00000000 		.word	StartDefaultTask
 147 0014 0000     		.short	0
 148 0016 0000     		.space	2
 149 0018 00000000 		.word	0
 150 001c 00100000 		.word	4096
 151 0020 00000000 		.word	0
 152 0024 00000000 		.word	0
 153              		.section	.text.main,"ax",%progbits
 154              		.align	1
 155              		.global	main
 156              		.syntax unified
 157              		.thumb
 158              		.thumb_func
 160              	main:
 161              	.LFB150:
 162              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "cmsis_os.h"
  22:Core/Src/main.c **** #include "fatfs.h"
  23:Core/Src/main.c **** #include "usb_host.h"
  24:Core/Src/main.c **** #include "usb_device.h"
  25:Core/Src/main.c **** #include "lcd.h"
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** FATFS SDFatFs; /* File system object for SD card logical drive */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** FIL MyFile; /* File object */
  33:Core/Src/main.c **** char SDPath[4]; /* SD card logical drive path */
  34:Core/Src/main.c **** /* USER CODE END Includes */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 5


  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  42:Core/Src/main.c **** /* USER CODE BEGIN PD */
  43:Core/Src/main.c **** /* USER CODE END PD */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  46:Core/Src/main.c **** /* USER CODE BEGIN PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PM */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** CRC_HandleTypeDef hcrc;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** DMA2D_HandleTypeDef hdma2d;
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  57:Core/Src/main.c **** I2C_HandleTypeDef hi2c3;
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** LTDC_HandleTypeDef hltdc;
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** QSPI_HandleTypeDef hqspi;
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** SD_HandleTypeDef hsd1;
  64:Core/Src/main.c **** DMA_HandleTypeDef hdma_sdmmc1_rx;
  65:Core/Src/main.c **** DMA_HandleTypeDef hdma_sdmmc1_tx;
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** SPI_HandleTypeDef hspi2;
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** UART_HandleTypeDef huart1;
  70:Core/Src/main.c **** UART_HandleTypeDef huart6;
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** SDRAM_HandleTypeDef hsdram1;
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** osThreadId defaultTaskHandle;
  75:Core/Src/main.c **** /* USER CODE BEGIN PV */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** /* USER CODE END PV */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  80:Core/Src/main.c **** void SystemClock_Config(void);
  81:Core/Src/main.c **** void PeriphCommonClock_Config(void);
  82:Core/Src/main.c **** static void MX_GPIO_Init(void);
  83:Core/Src/main.c **** static void MX_CRC_Init(void);
  84:Core/Src/main.c **** static void MX_FMC_Init(void);
  85:Core/Src/main.c **** static void MX_I2C1_Init(void);
  86:Core/Src/main.c **** static void MX_I2C3_Init(void);
  87:Core/Src/main.c **** static void MX_LTDC_Init(void);
  88:Core/Src/main.c **** static void MX_QUADSPI_Init(void);
  89:Core/Src/main.c **** static void MX_SDMMC1_SD_Init(void);
  90:Core/Src/main.c **** static void MX_SPI2_Init(void);
  91:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  92:Core/Src/main.c **** static void MX_USART6_UART_Init(void);
  93:Core/Src/main.c **** static void MX_DMA_Init(void);
  94:Core/Src/main.c **** static void MX_DMA2D_Init(void);
  95:Core/Src/main.c **** void StartDefaultTask(void const * argument);
  96:Core/Src/main.c **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 6


  97:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c **** /* USER CODE END PFP */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 102:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c **** /* USER CODE END 0 */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c **** /**
 107:Core/Src/main.c ****   * @brief  The application entry point.
 108:Core/Src/main.c ****   * @retval int
 109:Core/Src/main.c ****   */
 110:Core/Src/main.c **** int main(void)
 111:Core/Src/main.c **** {
 163              		.loc 1 111 1
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 32
 166              		@ frame_needed = 1, uses_anonymous_args = 0
 167 0000 B0B5     		push	{r4, r5, r7, lr}
 168              	.LCFI0:
 169              		.cfi_def_cfa_offset 16
 170              		.cfi_offset 4, -16
 171              		.cfi_offset 5, -12
 172              		.cfi_offset 7, -8
 173              		.cfi_offset 14, -4
 174 0002 88B0     		sub	sp, sp, #32
 175              	.LCFI1:
 176              		.cfi_def_cfa_offset 48
 177 0004 00AF     		add	r7, sp, #0
 178              	.LCFI2:
 179              		.cfi_def_cfa_register 7
 112:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /* USER CODE END 1 */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 119:Core/Src/main.c ****   HAL_Init();
 180              		.loc 1 119 3
 181 0006 FFF7FEFF 		bl	HAL_Init
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   /* USER CODE END Init */
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   /* Configure the system clock */
 126:Core/Src/main.c ****   SystemClock_Config();
 182              		.loc 1 126 3
 183 000a FFF7FEFF 		bl	SystemClock_Config
 127:Core/Src/main.c **** 
 128:Core/Src/main.c **** /* Configure the peripherals common clocks */
 129:Core/Src/main.c ****   PeriphCommonClock_Config();
 184              		.loc 1 129 3
 185 000e FFF7FEFF 		bl	PeriphCommonClock_Config
 130:Core/Src/main.c **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 7


 131:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   /* USER CODE END SysInit */
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /* Initialize all configured peripherals */
 136:Core/Src/main.c ****   MX_GPIO_Init();
 186              		.loc 1 136 3
 187 0012 FFF7FEFF 		bl	MX_GPIO_Init
 137:Core/Src/main.c ****   MX_CRC_Init();
 188              		.loc 1 137 3
 189 0016 FFF7FEFF 		bl	MX_CRC_Init
 138:Core/Src/main.c ****   MX_FMC_Init();
 190              		.loc 1 138 3
 191 001a FFF7FEFF 		bl	MX_FMC_Init
 139:Core/Src/main.c ****   MX_I2C1_Init();
 192              		.loc 1 139 3
 193 001e FFF7FEFF 		bl	MX_I2C1_Init
 140:Core/Src/main.c ****   MX_I2C3_Init();
 194              		.loc 1 140 3
 195 0022 FFF7FEFF 		bl	MX_I2C3_Init
 141:Core/Src/main.c ****   MX_LTDC_Init();
 196              		.loc 1 141 3
 197 0026 FFF7FEFF 		bl	MX_LTDC_Init
 142:Core/Src/main.c ****   MX_QUADSPI_Init();
 198              		.loc 1 142 3
 199 002a FFF7FEFF 		bl	MX_QUADSPI_Init
 143:Core/Src/main.c ****   MX_SDMMC1_SD_Init();
 200              		.loc 1 143 3
 201 002e FFF7FEFF 		bl	MX_SDMMC1_SD_Init
 144:Core/Src/main.c ****   MX_SPI2_Init();
 202              		.loc 1 144 3
 203 0032 FFF7FEFF 		bl	MX_SPI2_Init
 145:Core/Src/main.c ****   MX_USART1_UART_Init();
 204              		.loc 1 145 3
 205 0036 FFF7FEFF 		bl	MX_USART1_UART_Init
 146:Core/Src/main.c ****   MX_USART6_UART_Init();
 206              		.loc 1 146 3
 207 003a FFF7FEFF 		bl	MX_USART6_UART_Init
 147:Core/Src/main.c ****   MX_FATFS_Init();
 208              		.loc 1 147 3
 209 003e FFF7FEFF 		bl	MX_FATFS_Init
 148:Core/Src/main.c ****   MX_DMA_Init();
 210              		.loc 1 148 3
 211 0042 FFF7FEFF 		bl	MX_DMA_Init
 149:Core/Src/main.c ****   MX_DMA2D_Init();
 212              		.loc 1 149 3
 213 0046 FFF7FEFF 		bl	MX_DMA2D_Init
 150:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   /* USER CODE END 2 */
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 155:Core/Src/main.c ****   /* add mutexes, ... */
 156:Core/Src/main.c ****   /* USER CODE END RTOS_MUTEX */
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 159:Core/Src/main.c ****   /* add semaphores, ... */
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 8


 160:Core/Src/main.c ****   /* USER CODE END RTOS_SEMAPHORES */
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 163:Core/Src/main.c ****   /* start timers, add new ones, ... */
 164:Core/Src/main.c ****   /* USER CODE END RTOS_TIMERS */
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 167:Core/Src/main.c ****   /* add queues, ... */
 168:Core/Src/main.c ****   /* USER CODE END RTOS_QUEUES */
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   /* Create the thread(s) */
 171:Core/Src/main.c ****   /* definition and creation of defaultTask */
 172:Core/Src/main.c ****   osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 4096);
 214              		.loc 1 172 3
 215 004a 0A4B     		ldr	r3, .L3
 216 004c 3C1D     		adds	r4, r7, #4
 217 004e 1D46     		mov	r5, r3
 218 0050 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 219 0052 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 220 0054 95E80700 		ldm	r5, {r0, r1, r2}
 221 0058 84E80700 		stm	r4, {r0, r1, r2}
 173:Core/Src/main.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 222              		.loc 1 173 23
 223 005c 3B1D     		adds	r3, r7, #4
 224 005e 0021     		movs	r1, #0
 225 0060 1846     		mov	r0, r3
 226 0062 FFF7FEFF 		bl	osThreadCreate
 227 0066 0346     		mov	r3, r0
 228              		.loc 1 173 21
 229 0068 034A     		ldr	r2, .L3+4
 230 006a 1360     		str	r3, [r2]
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_THREADS */
 176:Core/Src/main.c ****   /* add threads, ... */
 177:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****   /* Start scheduler */
 180:Core/Src/main.c ****   osKernelStart();
 231              		.loc 1 180 3
 232 006c FFF7FEFF 		bl	osKernelStart
 233              	.L2:
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 183:Core/Src/main.c ****   /* Infinite loop */
 184:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 185:Core/Src/main.c ****   while (1)
 234              		.loc 1 185 9 discriminator 1
 235 0070 FEE7     		b	.L2
 236              	.L4:
 237 0072 00BF     		.align	2
 238              	.L3:
 239 0074 0C000000 		.word	.LC2
 240 0078 00000000 		.word	defaultTaskHandle
 241              		.cfi_endproc
 242              	.LFE150:
 244              		.section	.text.SystemClock_Config,"ax",%progbits
 245              		.align	1
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 9


 246              		.global	SystemClock_Config
 247              		.syntax unified
 248              		.thumb
 249              		.thumb_func
 251              	SystemClock_Config:
 252              	.LFB151:
 186:Core/Src/main.c ****   {
 187:Core/Src/main.c ****     /* USER CODE END WHILE */
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 190:Core/Src/main.c ****   }
 191:Core/Src/main.c ****   /* USER CODE END 3 */
 192:Core/Src/main.c **** }
 193:Core/Src/main.c **** 
 194:Core/Src/main.c **** /**
 195:Core/Src/main.c ****   * @brief System Clock Configuration
 196:Core/Src/main.c ****   * @retval None
 197:Core/Src/main.c ****   */
 198:Core/Src/main.c **** void SystemClock_Config(void)
 199:Core/Src/main.c **** {
 253              		.loc 1 199 1
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 80
 256              		@ frame_needed = 1, uses_anonymous_args = 0
 257 0000 80B5     		push	{r7, lr}
 258              	.LCFI3:
 259              		.cfi_def_cfa_offset 8
 260              		.cfi_offset 7, -8
 261              		.cfi_offset 14, -4
 262 0002 94B0     		sub	sp, sp, #80
 263              	.LCFI4:
 264              		.cfi_def_cfa_offset 88
 265 0004 00AF     		add	r7, sp, #0
 266              	.LCFI5:
 267              		.cfi_def_cfa_register 7
 200:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 268              		.loc 1 200 22
 269 0006 07F12003 		add	r3, r7, #32
 270 000a 3022     		movs	r2, #48
 271 000c 0021     		movs	r1, #0
 272 000e 1846     		mov	r0, r3
 273 0010 FFF7FEFF 		bl	memset
 201:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 274              		.loc 1 201 22
 275 0014 07F10C03 		add	r3, r7, #12
 276 0018 0022     		movs	r2, #0
 277 001a 1A60     		str	r2, [r3]
 278 001c 5A60     		str	r2, [r3, #4]
 279 001e 9A60     		str	r2, [r3, #8]
 280 0020 DA60     		str	r2, [r3, #12]
 281 0022 1A61     		str	r2, [r3, #16]
 202:Core/Src/main.c **** 
 203:Core/Src/main.c ****   /** Configure LSE Drive Capability
 204:Core/Src/main.c ****   */
 205:Core/Src/main.c ****   HAL_PWR_EnableBkUpAccess();
 282              		.loc 1 205 3
 283 0024 FFF7FEFF 		bl	HAL_PWR_EnableBkUpAccess
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 10


 284              	.LBB4:
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 208:Core/Src/main.c ****   */
 209:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 285              		.loc 1 209 3
 286 0028 2B4B     		ldr	r3, .L10
 287 002a 1B6C     		ldr	r3, [r3, #64]
 288 002c 2A4A     		ldr	r2, .L10
 289 002e 43F08053 		orr	r3, r3, #268435456
 290 0032 1364     		str	r3, [r2, #64]
 291 0034 284B     		ldr	r3, .L10
 292 0036 1B6C     		ldr	r3, [r3, #64]
 293 0038 03F08053 		and	r3, r3, #268435456
 294 003c BB60     		str	r3, [r7, #8]
 295 003e BB68     		ldr	r3, [r7, #8]
 296              	.LBE4:
 297              	.LBB5:
 210:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 298              		.loc 1 210 3
 299 0040 264B     		ldr	r3, .L10+4
 300 0042 1B68     		ldr	r3, [r3]
 301 0044 254A     		ldr	r2, .L10+4
 302 0046 43F44043 		orr	r3, r3, #49152
 303 004a 1360     		str	r3, [r2]
 304 004c 234B     		ldr	r3, .L10+4
 305 004e 1B68     		ldr	r3, [r3]
 306 0050 03F44043 		and	r3, r3, #49152
 307 0054 7B60     		str	r3, [r7, #4]
 308 0056 7B68     		ldr	r3, [r7, #4]
 309              	.LBE5:
 211:Core/Src/main.c **** 
 212:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 213:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 214:Core/Src/main.c ****   */
 215:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 310              		.loc 1 215 36
 311 0058 0123     		movs	r3, #1
 312 005a 3B62     		str	r3, [r7, #32]
 216:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 313              		.loc 1 216 30
 314 005c 4FF48033 		mov	r3, #65536
 315 0060 7B62     		str	r3, [r7, #36]
 217:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 316              		.loc 1 217 34
 317 0062 0223     		movs	r3, #2
 318 0064 BB63     		str	r3, [r7, #56]
 218:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 319              		.loc 1 218 35
 320 0066 4FF48003 		mov	r3, #4194304
 321 006a FB63     		str	r3, [r7, #60]
 219:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 322              		.loc 1 219 30
 323 006c 1923     		movs	r3, #25
 324 006e 3B64     		str	r3, [r7, #64]
 220:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 400;
 325              		.loc 1 220 30
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 11


 326 0070 4FF4C873 		mov	r3, #400
 327 0074 7B64     		str	r3, [r7, #68]
 221:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 328              		.loc 1 221 30
 329 0076 0223     		movs	r3, #2
 330 0078 BB64     		str	r3, [r7, #72]
 222:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 9;
 331              		.loc 1 222 30
 332 007a 0923     		movs	r3, #9
 333 007c FB64     		str	r3, [r7, #76]
 223:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 334              		.loc 1 223 7
 335 007e 07F12003 		add	r3, r7, #32
 336 0082 1846     		mov	r0, r3
 337 0084 FFF7FEFF 		bl	HAL_RCC_OscConfig
 338 0088 0346     		mov	r3, r0
 339              		.loc 1 223 6
 340 008a 002B     		cmp	r3, #0
 341 008c 01D0     		beq	.L6
 224:Core/Src/main.c ****   {
 225:Core/Src/main.c ****     Error_Handler();
 342              		.loc 1 225 5
 343 008e FFF7FEFF 		bl	Error_Handler
 344              	.L6:
 226:Core/Src/main.c ****   }
 227:Core/Src/main.c **** 
 228:Core/Src/main.c ****   /** Activate the Over-Drive mode
 229:Core/Src/main.c ****   */
 230:Core/Src/main.c ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 345              		.loc 1 230 7
 346 0092 FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 347 0096 0346     		mov	r3, r0
 348              		.loc 1 230 6
 349 0098 002B     		cmp	r3, #0
 350 009a 01D0     		beq	.L7
 231:Core/Src/main.c ****   {
 232:Core/Src/main.c ****     Error_Handler();
 351              		.loc 1 232 5
 352 009c FFF7FEFF 		bl	Error_Handler
 353              	.L7:
 233:Core/Src/main.c ****   }
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 236:Core/Src/main.c ****   */
 237:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 354              		.loc 1 237 31
 355 00a0 0F23     		movs	r3, #15
 356 00a2 FB60     		str	r3, [r7, #12]
 238:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 239:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 357              		.loc 1 239 34
 358 00a4 0223     		movs	r3, #2
 359 00a6 3B61     		str	r3, [r7, #16]
 240:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 360              		.loc 1 240 35
 361 00a8 0023     		movs	r3, #0
 362 00aa 7B61     		str	r3, [r7, #20]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 12


 241:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 363              		.loc 1 241 36
 364 00ac 4FF4A053 		mov	r3, #5120
 365 00b0 BB61     		str	r3, [r7, #24]
 242:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 366              		.loc 1 242 36
 367 00b2 4FF48053 		mov	r3, #4096
 368 00b6 FB61     		str	r3, [r7, #28]
 243:Core/Src/main.c **** 
 244:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_6) != HAL_OK)
 369              		.loc 1 244 7
 370 00b8 07F10C03 		add	r3, r7, #12
 371 00bc 0621     		movs	r1, #6
 372 00be 1846     		mov	r0, r3
 373 00c0 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 374 00c4 0346     		mov	r3, r0
 375              		.loc 1 244 6
 376 00c6 002B     		cmp	r3, #0
 377 00c8 01D0     		beq	.L9
 245:Core/Src/main.c ****   {
 246:Core/Src/main.c ****     Error_Handler();
 378              		.loc 1 246 5
 379 00ca FFF7FEFF 		bl	Error_Handler
 380              	.L9:
 247:Core/Src/main.c ****   }
 248:Core/Src/main.c **** }
 381              		.loc 1 248 1
 382 00ce 00BF     		nop
 383 00d0 5037     		adds	r7, r7, #80
 384              	.LCFI6:
 385              		.cfi_def_cfa_offset 8
 386 00d2 BD46     		mov	sp, r7
 387              	.LCFI7:
 388              		.cfi_def_cfa_register 13
 389              		@ sp needed
 390 00d4 80BD     		pop	{r7, pc}
 391              	.L11:
 392 00d6 00BF     		.align	2
 393              	.L10:
 394 00d8 00380240 		.word	1073887232
 395 00dc 00700040 		.word	1073770496
 396              		.cfi_endproc
 397              	.LFE151:
 399              		.section	.text.PeriphCommonClock_Config,"ax",%progbits
 400              		.align	1
 401              		.global	PeriphCommonClock_Config
 402              		.syntax unified
 403              		.thumb
 404              		.thumb_func
 406              	PeriphCommonClock_Config:
 407              	.LFB152:
 249:Core/Src/main.c **** 
 250:Core/Src/main.c **** /**
 251:Core/Src/main.c ****   * @brief Peripherals Common Clock Configuration
 252:Core/Src/main.c ****   * @retval None
 253:Core/Src/main.c ****   */
 254:Core/Src/main.c **** void PeriphCommonClock_Config(void)
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 13


 255:Core/Src/main.c **** {
 408              		.loc 1 255 1
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 136
 411              		@ frame_needed = 1, uses_anonymous_args = 0
 412 0000 80B5     		push	{r7, lr}
 413              	.LCFI8:
 414              		.cfi_def_cfa_offset 8
 415              		.cfi_offset 7, -8
 416              		.cfi_offset 14, -4
 417 0002 A2B0     		sub	sp, sp, #136
 418              	.LCFI9:
 419              		.cfi_def_cfa_offset 144
 420 0004 00AF     		add	r7, sp, #0
 421              	.LCFI10:
 422              		.cfi_def_cfa_register 7
 256:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 423              		.loc 1 256 28
 424 0006 3B1D     		adds	r3, r7, #4
 425 0008 8422     		movs	r2, #132
 426 000a 0021     		movs	r1, #0
 427 000c 1846     		mov	r0, r3
 428 000e FFF7FEFF 		bl	memset
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****   /** Initializes the peripherals clock
 259:Core/Src/main.c ****   */
 260:Core/Src/main.c ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC|RCC_PERIPHCLK_SDMMC1
 429              		.loc 1 260 44
 430 0012 124B     		ldr	r3, .L15
 431 0014 7B60     		str	r3, [r7, #4]
 261:Core/Src/main.c ****                               |RCC_PERIPHCLK_CLK48;
 262:Core/Src/main.c ****   PeriphClkInitStruct.PLLSAI.PLLSAIN = 384;
 432              		.loc 1 262 38
 433 0016 4FF4C073 		mov	r3, #384
 434 001a BB61     		str	r3, [r7, #24]
 263:Core/Src/main.c ****   PeriphClkInitStruct.PLLSAI.PLLSAIR = 5;
 435              		.loc 1 263 38
 436 001c 0523     		movs	r3, #5
 437 001e 3B62     		str	r3, [r7, #32]
 264:Core/Src/main.c ****   PeriphClkInitStruct.PLLSAI.PLLSAIQ = 2;
 438              		.loc 1 264 38
 439 0020 0223     		movs	r3, #2
 440 0022 FB61     		str	r3, [r7, #28]
 265:Core/Src/main.c ****   PeriphClkInitStruct.PLLSAI.PLLSAIP = RCC_PLLSAIP_DIV8;
 441              		.loc 1 265 38
 442 0024 0323     		movs	r3, #3
 443 0026 7B62     		str	r3, [r7, #36]
 266:Core/Src/main.c ****   PeriphClkInitStruct.PLLSAIDivQ = 1;
 444              		.loc 1 266 34
 445 0028 0123     		movs	r3, #1
 446 002a FB62     		str	r3, [r7, #44]
 267:Core/Src/main.c ****   PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 447              		.loc 1 267 34
 448 002c 4FF40033 		mov	r3, #131072
 449 0030 3B63     		str	r3, [r7, #48]
 268:Core/Src/main.c ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLLSAIP;
 450              		.loc 1 268 43
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 14


 451 0032 4FF00063 		mov	r3, #134217728
 452 0036 C7F88030 		str	r3, [r7, #128]
 269:Core/Src/main.c ****   PeriphClkInitStruct.Sdmmc1ClockSelection = RCC_SDMMC1CLKSOURCE_CLK48;
 453              		.loc 1 269 44
 454 003a 0023     		movs	r3, #0
 455 003c C7F88430 		str	r3, [r7, #132]
 270:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 456              		.loc 1 270 7
 457 0040 3B1D     		adds	r3, r7, #4
 458 0042 1846     		mov	r0, r3
 459 0044 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 460 0048 0346     		mov	r3, r0
 461              		.loc 1 270 6
 462 004a 002B     		cmp	r3, #0
 463 004c 01D0     		beq	.L14
 271:Core/Src/main.c ****   {
 272:Core/Src/main.c ****     Error_Handler();
 464              		.loc 1 272 5
 465 004e FFF7FEFF 		bl	Error_Handler
 466              	.L14:
 273:Core/Src/main.c ****   }
 274:Core/Src/main.c **** }
 467              		.loc 1 274 1
 468 0052 00BF     		nop
 469 0054 8837     		adds	r7, r7, #136
 470              	.LCFI11:
 471              		.cfi_def_cfa_offset 8
 472 0056 BD46     		mov	sp, r7
 473              	.LCFI12:
 474              		.cfi_def_cfa_register 13
 475              		@ sp needed
 476 0058 80BD     		pop	{r7, pc}
 477              	.L16:
 478 005a 00BF     		.align	2
 479              	.L15:
 480 005c 0800A000 		.word	10485768
 481              		.cfi_endproc
 482              	.LFE152:
 484              		.section	.text.MX_CRC_Init,"ax",%progbits
 485              		.align	1
 486              		.syntax unified
 487              		.thumb
 488              		.thumb_func
 490              	MX_CRC_Init:
 491              	.LFB153:
 275:Core/Src/main.c **** 
 276:Core/Src/main.c **** /**
 277:Core/Src/main.c ****   * @brief CRC Initialization Function
 278:Core/Src/main.c ****   * @param None
 279:Core/Src/main.c ****   * @retval None
 280:Core/Src/main.c ****   */
 281:Core/Src/main.c **** static void MX_CRC_Init(void)
 282:Core/Src/main.c **** {
 492              		.loc 1 282 1
 493              		.cfi_startproc
 494              		@ args = 0, pretend = 0, frame = 0
 495              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 15


 496 0000 80B5     		push	{r7, lr}
 497              	.LCFI13:
 498              		.cfi_def_cfa_offset 8
 499              		.cfi_offset 7, -8
 500              		.cfi_offset 14, -4
 501 0002 00AF     		add	r7, sp, #0
 502              	.LCFI14:
 503              		.cfi_def_cfa_register 7
 283:Core/Src/main.c **** 
 284:Core/Src/main.c ****   /* USER CODE BEGIN CRC_Init 0 */
 285:Core/Src/main.c **** 
 286:Core/Src/main.c ****   /* USER CODE END CRC_Init 0 */
 287:Core/Src/main.c **** 
 288:Core/Src/main.c ****   /* USER CODE BEGIN CRC_Init 1 */
 289:Core/Src/main.c **** 
 290:Core/Src/main.c ****   /* USER CODE END CRC_Init 1 */
 291:Core/Src/main.c ****   hcrc.Instance = CRC;
 504              		.loc 1 291 17
 505 0004 0D4B     		ldr	r3, .L20
 506 0006 0E4A     		ldr	r2, .L20+4
 507 0008 1A60     		str	r2, [r3]
 292:Core/Src/main.c ****   hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 508              		.loc 1 292 34
 509 000a 0C4B     		ldr	r3, .L20
 510 000c 0022     		movs	r2, #0
 511 000e 1A71     		strb	r2, [r3, #4]
 293:Core/Src/main.c ****   hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 512              		.loc 1 293 33
 513 0010 0A4B     		ldr	r3, .L20
 514 0012 0022     		movs	r2, #0
 515 0014 5A71     		strb	r2, [r3, #5]
 294:Core/Src/main.c ****   hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 516              		.loc 1 294 36
 517 0016 094B     		ldr	r3, .L20
 518 0018 0022     		movs	r2, #0
 519 001a 5A61     		str	r2, [r3, #20]
 295:Core/Src/main.c ****   hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 520              		.loc 1 295 37
 521 001c 074B     		ldr	r3, .L20
 522 001e 0022     		movs	r2, #0
 523 0020 9A61     		str	r2, [r3, #24]
 296:Core/Src/main.c ****   hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 524              		.loc 1 296 24
 525 0022 064B     		ldr	r3, .L20
 526 0024 0122     		movs	r2, #1
 527 0026 1A62     		str	r2, [r3, #32]
 297:Core/Src/main.c ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 528              		.loc 1 297 7
 529 0028 0448     		ldr	r0, .L20
 530 002a FFF7FEFF 		bl	HAL_CRC_Init
 531 002e 0346     		mov	r3, r0
 532              		.loc 1 297 6
 533 0030 002B     		cmp	r3, #0
 534 0032 01D0     		beq	.L19
 298:Core/Src/main.c ****   {
 299:Core/Src/main.c ****     Error_Handler();
 535              		.loc 1 299 5
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 16


 536 0034 FFF7FEFF 		bl	Error_Handler
 537              	.L19:
 300:Core/Src/main.c ****   }
 301:Core/Src/main.c ****   /* USER CODE BEGIN CRC_Init 2 */
 302:Core/Src/main.c **** 
 303:Core/Src/main.c ****   /* USER CODE END CRC_Init 2 */
 304:Core/Src/main.c **** 
 305:Core/Src/main.c **** }
 538              		.loc 1 305 1
 539 0038 00BF     		nop
 540 003a 80BD     		pop	{r7, pc}
 541              	.L21:
 542              		.align	2
 543              	.L20:
 544 003c 00000000 		.word	hcrc
 545 0040 00300240 		.word	1073885184
 546              		.cfi_endproc
 547              	.LFE153:
 549              		.section	.text.MX_DMA2D_Init,"ax",%progbits
 550              		.align	1
 551              		.syntax unified
 552              		.thumb
 553              		.thumb_func
 555              	MX_DMA2D_Init:
 556              	.LFB154:
 306:Core/Src/main.c **** 
 307:Core/Src/main.c **** /**
 308:Core/Src/main.c ****   * @brief DMA2D Initialization Function
 309:Core/Src/main.c ****   * @param None
 310:Core/Src/main.c ****   * @retval None
 311:Core/Src/main.c ****   */
 312:Core/Src/main.c **** static void MX_DMA2D_Init(void)
 313:Core/Src/main.c **** {
 557              		.loc 1 313 1
 558              		.cfi_startproc
 559              		@ args = 0, pretend = 0, frame = 0
 560              		@ frame_needed = 1, uses_anonymous_args = 0
 561 0000 80B5     		push	{r7, lr}
 562              	.LCFI15:
 563              		.cfi_def_cfa_offset 8
 564              		.cfi_offset 7, -8
 565              		.cfi_offset 14, -4
 566 0002 00AF     		add	r7, sp, #0
 567              	.LCFI16:
 568              		.cfi_def_cfa_register 7
 314:Core/Src/main.c **** 
 315:Core/Src/main.c ****   /* USER CODE BEGIN DMA2D_Init 0 */
 316:Core/Src/main.c **** 
 317:Core/Src/main.c ****   /* USER CODE END DMA2D_Init 0 */
 318:Core/Src/main.c **** 
 319:Core/Src/main.c ****   /* USER CODE BEGIN DMA2D_Init 1 */
 320:Core/Src/main.c **** 
 321:Core/Src/main.c ****   /* USER CODE END DMA2D_Init 1 */
 322:Core/Src/main.c ****   hdma2d.Instance = DMA2D;
 569              		.loc 1 322 19
 570 0004 154B     		ldr	r3, .L26
 571 0006 164A     		ldr	r2, .L26+4
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 17


 572 0008 1A60     		str	r2, [r3]
 323:Core/Src/main.c ****   hdma2d.Init.Mode = DMA2D_M2M;
 573              		.loc 1 323 20
 574 000a 144B     		ldr	r3, .L26
 575 000c 0022     		movs	r2, #0
 576 000e 5A60     		str	r2, [r3, #4]
 324:Core/Src/main.c ****   hdma2d.Init.ColorMode = DMA2D_OUTPUT_ARGB8888;
 577              		.loc 1 324 25
 578 0010 124B     		ldr	r3, .L26
 579 0012 0022     		movs	r2, #0
 580 0014 9A60     		str	r2, [r3, #8]
 325:Core/Src/main.c ****   hdma2d.Init.OutputOffset = 0;
 581              		.loc 1 325 28
 582 0016 114B     		ldr	r3, .L26
 583 0018 0022     		movs	r2, #0
 584 001a DA60     		str	r2, [r3, #12]
 326:Core/Src/main.c ****   hdma2d.LayerCfg[1].InputOffset = 0;
 585              		.loc 1 326 34
 586 001c 0F4B     		ldr	r3, .L26
 587 001e 0022     		movs	r2, #0
 588 0020 9A62     		str	r2, [r3, #40]
 327:Core/Src/main.c ****   hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 589              		.loc 1 327 37
 590 0022 0E4B     		ldr	r3, .L26
 591 0024 0022     		movs	r2, #0
 592 0026 DA62     		str	r2, [r3, #44]
 328:Core/Src/main.c ****   hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 593              		.loc 1 328 32
 594 0028 0C4B     		ldr	r3, .L26
 595 002a 0022     		movs	r2, #0
 596 002c 1A63     		str	r2, [r3, #48]
 329:Core/Src/main.c ****   hdma2d.LayerCfg[1].InputAlpha = 0;
 597              		.loc 1 329 33
 598 002e 0B4B     		ldr	r3, .L26
 599 0030 0022     		movs	r2, #0
 600 0032 5A63     		str	r2, [r3, #52]
 330:Core/Src/main.c ****   if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 601              		.loc 1 330 7
 602 0034 0948     		ldr	r0, .L26
 603 0036 FFF7FEFF 		bl	HAL_DMA2D_Init
 604 003a 0346     		mov	r3, r0
 605              		.loc 1 330 6
 606 003c 002B     		cmp	r3, #0
 607 003e 01D0     		beq	.L23
 331:Core/Src/main.c ****   {
 332:Core/Src/main.c ****     Error_Handler();
 608              		.loc 1 332 5
 609 0040 FFF7FEFF 		bl	Error_Handler
 610              	.L23:
 333:Core/Src/main.c ****   }
 334:Core/Src/main.c ****   if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 611              		.loc 1 334 7
 612 0044 0121     		movs	r1, #1
 613 0046 0548     		ldr	r0, .L26
 614 0048 FFF7FEFF 		bl	HAL_DMA2D_ConfigLayer
 615 004c 0346     		mov	r3, r0
 616              		.loc 1 334 6
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 18


 617 004e 002B     		cmp	r3, #0
 618 0050 01D0     		beq	.L25
 335:Core/Src/main.c ****   {
 336:Core/Src/main.c ****     Error_Handler();
 619              		.loc 1 336 5
 620 0052 FFF7FEFF 		bl	Error_Handler
 621              	.L25:
 337:Core/Src/main.c ****   }
 338:Core/Src/main.c ****   /* USER CODE BEGIN DMA2D_Init 2 */
 339:Core/Src/main.c **** 
 340:Core/Src/main.c ****   /* USER CODE END DMA2D_Init 2 */
 341:Core/Src/main.c **** 
 342:Core/Src/main.c **** }
 622              		.loc 1 342 1
 623 0056 00BF     		nop
 624 0058 80BD     		pop	{r7, pc}
 625              	.L27:
 626 005a 00BF     		.align	2
 627              	.L26:
 628 005c 00000000 		.word	hdma2d
 629 0060 00B00240 		.word	1073917952
 630              		.cfi_endproc
 631              	.LFE154:
 633              		.section	.text.MX_I2C1_Init,"ax",%progbits
 634              		.align	1
 635              		.syntax unified
 636              		.thumb
 637              		.thumb_func
 639              	MX_I2C1_Init:
 640              	.LFB155:
 343:Core/Src/main.c **** 
 344:Core/Src/main.c **** /**
 345:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 346:Core/Src/main.c ****   * @param None
 347:Core/Src/main.c ****   * @retval None
 348:Core/Src/main.c ****   */
 349:Core/Src/main.c **** static void MX_I2C1_Init(void)
 350:Core/Src/main.c **** {
 641              		.loc 1 350 1
 642              		.cfi_startproc
 643              		@ args = 0, pretend = 0, frame = 0
 644              		@ frame_needed = 1, uses_anonymous_args = 0
 645 0000 80B5     		push	{r7, lr}
 646              	.LCFI17:
 647              		.cfi_def_cfa_offset 8
 648              		.cfi_offset 7, -8
 649              		.cfi_offset 14, -4
 650 0002 00AF     		add	r7, sp, #0
 651              	.LCFI18:
 652              		.cfi_def_cfa_register 7
 351:Core/Src/main.c **** 
 352:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 353:Core/Src/main.c **** 
 354:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 355:Core/Src/main.c **** 
 356:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 357:Core/Src/main.c **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 19


 358:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 359:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 653              		.loc 1 359 18
 654 0004 1B4B     		ldr	r3, .L33
 655 0006 1C4A     		ldr	r2, .L33+4
 656 0008 1A60     		str	r2, [r3]
 360:Core/Src/main.c ****   hi2c1.Init.Timing = 0x00C0EAFF;
 657              		.loc 1 360 21
 658 000a 1A4B     		ldr	r3, .L33
 659 000c 1B4A     		ldr	r2, .L33+8
 660 000e 5A60     		str	r2, [r3, #4]
 361:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 661              		.loc 1 361 26
 662 0010 184B     		ldr	r3, .L33
 663 0012 0022     		movs	r2, #0
 664 0014 9A60     		str	r2, [r3, #8]
 362:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 665              		.loc 1 362 29
 666 0016 174B     		ldr	r3, .L33
 667 0018 0122     		movs	r2, #1
 668 001a DA60     		str	r2, [r3, #12]
 363:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 669              		.loc 1 363 30
 670 001c 154B     		ldr	r3, .L33
 671 001e 0022     		movs	r2, #0
 672 0020 1A61     		str	r2, [r3, #16]
 364:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 673              		.loc 1 364 26
 674 0022 144B     		ldr	r3, .L33
 675 0024 0022     		movs	r2, #0
 676 0026 5A61     		str	r2, [r3, #20]
 365:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 677              		.loc 1 365 31
 678 0028 124B     		ldr	r3, .L33
 679 002a 0022     		movs	r2, #0
 680 002c 9A61     		str	r2, [r3, #24]
 366:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 681              		.loc 1 366 30
 682 002e 114B     		ldr	r3, .L33
 683 0030 0022     		movs	r2, #0
 684 0032 DA61     		str	r2, [r3, #28]
 367:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 685              		.loc 1 367 28
 686 0034 0F4B     		ldr	r3, .L33
 687 0036 0022     		movs	r2, #0
 688 0038 1A62     		str	r2, [r3, #32]
 368:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 689              		.loc 1 368 7
 690 003a 0E48     		ldr	r0, .L33
 691 003c FFF7FEFF 		bl	HAL_I2C_Init
 692 0040 0346     		mov	r3, r0
 693              		.loc 1 368 6
 694 0042 002B     		cmp	r3, #0
 695 0044 01D0     		beq	.L29
 369:Core/Src/main.c ****   {
 370:Core/Src/main.c ****     Error_Handler();
 696              		.loc 1 370 5
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 20


 697 0046 FFF7FEFF 		bl	Error_Handler
 698              	.L29:
 371:Core/Src/main.c ****   }
 372:Core/Src/main.c **** 
 373:Core/Src/main.c ****   /** Configure Analogue filter
 374:Core/Src/main.c ****   */
 375:Core/Src/main.c ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 699              		.loc 1 375 7
 700 004a 0021     		movs	r1, #0
 701 004c 0948     		ldr	r0, .L33
 702 004e FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 703 0052 0346     		mov	r3, r0
 704              		.loc 1 375 6
 705 0054 002B     		cmp	r3, #0
 706 0056 01D0     		beq	.L30
 376:Core/Src/main.c ****   {
 377:Core/Src/main.c ****     Error_Handler();
 707              		.loc 1 377 5
 708 0058 FFF7FEFF 		bl	Error_Handler
 709              	.L30:
 378:Core/Src/main.c ****   }
 379:Core/Src/main.c **** 
 380:Core/Src/main.c ****   /** Configure Digital filter
 381:Core/Src/main.c ****   */
 382:Core/Src/main.c ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 710              		.loc 1 382 7
 711 005c 0021     		movs	r1, #0
 712 005e 0548     		ldr	r0, .L33
 713 0060 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 714 0064 0346     		mov	r3, r0
 715              		.loc 1 382 6
 716 0066 002B     		cmp	r3, #0
 717 0068 01D0     		beq	.L32
 383:Core/Src/main.c ****   {
 384:Core/Src/main.c ****     Error_Handler();
 718              		.loc 1 384 5
 719 006a FFF7FEFF 		bl	Error_Handler
 720              	.L32:
 385:Core/Src/main.c ****   }
 386:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 387:Core/Src/main.c **** 
 388:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 389:Core/Src/main.c **** 
 390:Core/Src/main.c **** }
 721              		.loc 1 390 1
 722 006e 00BF     		nop
 723 0070 80BD     		pop	{r7, pc}
 724              	.L34:
 725 0072 00BF     		.align	2
 726              	.L33:
 727 0074 00000000 		.word	hi2c1
 728 0078 00540040 		.word	1073763328
 729 007c FFEAC000 		.word	12643071
 730              		.cfi_endproc
 731              	.LFE155:
 733              		.section	.text.MX_I2C3_Init,"ax",%progbits
 734              		.align	1
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 21


 735              		.syntax unified
 736              		.thumb
 737              		.thumb_func
 739              	MX_I2C3_Init:
 740              	.LFB156:
 391:Core/Src/main.c **** 
 392:Core/Src/main.c **** /**
 393:Core/Src/main.c ****   * @brief I2C3 Initialization Function
 394:Core/Src/main.c ****   * @param None
 395:Core/Src/main.c ****   * @retval None
 396:Core/Src/main.c ****   */
 397:Core/Src/main.c **** static void MX_I2C3_Init(void)
 398:Core/Src/main.c **** {
 741              		.loc 1 398 1
 742              		.cfi_startproc
 743              		@ args = 0, pretend = 0, frame = 0
 744              		@ frame_needed = 1, uses_anonymous_args = 0
 745 0000 80B5     		push	{r7, lr}
 746              	.LCFI19:
 747              		.cfi_def_cfa_offset 8
 748              		.cfi_offset 7, -8
 749              		.cfi_offset 14, -4
 750 0002 00AF     		add	r7, sp, #0
 751              	.LCFI20:
 752              		.cfi_def_cfa_register 7
 399:Core/Src/main.c **** 
 400:Core/Src/main.c ****   /* USER CODE BEGIN I2C3_Init 0 */
 401:Core/Src/main.c **** 
 402:Core/Src/main.c ****   /* USER CODE END I2C3_Init 0 */
 403:Core/Src/main.c **** 
 404:Core/Src/main.c ****   /* USER CODE BEGIN I2C3_Init 1 */
 405:Core/Src/main.c **** 
 406:Core/Src/main.c ****   /* USER CODE END I2C3_Init 1 */
 407:Core/Src/main.c ****   hi2c3.Instance = I2C3;
 753              		.loc 1 407 18
 754 0004 1B4B     		ldr	r3, .L40
 755 0006 1C4A     		ldr	r2, .L40+4
 756 0008 1A60     		str	r2, [r3]
 408:Core/Src/main.c ****   hi2c3.Init.Timing = 0x00C0EAFF;
 757              		.loc 1 408 21
 758 000a 1A4B     		ldr	r3, .L40
 759 000c 1B4A     		ldr	r2, .L40+8
 760 000e 5A60     		str	r2, [r3, #4]
 409:Core/Src/main.c ****   hi2c3.Init.OwnAddress1 = 0;
 761              		.loc 1 409 26
 762 0010 184B     		ldr	r3, .L40
 763 0012 0022     		movs	r2, #0
 764 0014 9A60     		str	r2, [r3, #8]
 410:Core/Src/main.c ****   hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 765              		.loc 1 410 29
 766 0016 174B     		ldr	r3, .L40
 767 0018 0122     		movs	r2, #1
 768 001a DA60     		str	r2, [r3, #12]
 411:Core/Src/main.c ****   hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 769              		.loc 1 411 30
 770 001c 154B     		ldr	r3, .L40
 771 001e 0022     		movs	r2, #0
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 22


 772 0020 1A61     		str	r2, [r3, #16]
 412:Core/Src/main.c ****   hi2c3.Init.OwnAddress2 = 0;
 773              		.loc 1 412 26
 774 0022 144B     		ldr	r3, .L40
 775 0024 0022     		movs	r2, #0
 776 0026 5A61     		str	r2, [r3, #20]
 413:Core/Src/main.c ****   hi2c3.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 777              		.loc 1 413 31
 778 0028 124B     		ldr	r3, .L40
 779 002a 0022     		movs	r2, #0
 780 002c 9A61     		str	r2, [r3, #24]
 414:Core/Src/main.c ****   hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 781              		.loc 1 414 30
 782 002e 114B     		ldr	r3, .L40
 783 0030 0022     		movs	r2, #0
 784 0032 DA61     		str	r2, [r3, #28]
 415:Core/Src/main.c ****   hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 785              		.loc 1 415 28
 786 0034 0F4B     		ldr	r3, .L40
 787 0036 0022     		movs	r2, #0
 788 0038 1A62     		str	r2, [r3, #32]
 416:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 789              		.loc 1 416 7
 790 003a 0E48     		ldr	r0, .L40
 791 003c FFF7FEFF 		bl	HAL_I2C_Init
 792 0040 0346     		mov	r3, r0
 793              		.loc 1 416 6
 794 0042 002B     		cmp	r3, #0
 795 0044 01D0     		beq	.L36
 417:Core/Src/main.c ****   {
 418:Core/Src/main.c ****     Error_Handler();
 796              		.loc 1 418 5
 797 0046 FFF7FEFF 		bl	Error_Handler
 798              	.L36:
 419:Core/Src/main.c ****   }
 420:Core/Src/main.c **** 
 421:Core/Src/main.c ****   /** Configure Analogue filter
 422:Core/Src/main.c ****   */
 423:Core/Src/main.c ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 799              		.loc 1 423 7
 800 004a 0021     		movs	r1, #0
 801 004c 0948     		ldr	r0, .L40
 802 004e FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 803 0052 0346     		mov	r3, r0
 804              		.loc 1 423 6
 805 0054 002B     		cmp	r3, #0
 806 0056 01D0     		beq	.L37
 424:Core/Src/main.c ****   {
 425:Core/Src/main.c ****     Error_Handler();
 807              		.loc 1 425 5
 808 0058 FFF7FEFF 		bl	Error_Handler
 809              	.L37:
 426:Core/Src/main.c ****   }
 427:Core/Src/main.c **** 
 428:Core/Src/main.c ****   /** Configure Digital filter
 429:Core/Src/main.c ****   */
 430:Core/Src/main.c ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 23


 810              		.loc 1 430 7
 811 005c 0021     		movs	r1, #0
 812 005e 0548     		ldr	r0, .L40
 813 0060 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 814 0064 0346     		mov	r3, r0
 815              		.loc 1 430 6
 816 0066 002B     		cmp	r3, #0
 817 0068 01D0     		beq	.L39
 431:Core/Src/main.c ****   {
 432:Core/Src/main.c ****     Error_Handler();
 818              		.loc 1 432 5
 819 006a FFF7FEFF 		bl	Error_Handler
 820              	.L39:
 433:Core/Src/main.c ****   }
 434:Core/Src/main.c ****   /* USER CODE BEGIN I2C3_Init 2 */
 435:Core/Src/main.c **** 
 436:Core/Src/main.c ****   /* USER CODE END I2C3_Init 2 */
 437:Core/Src/main.c **** 
 438:Core/Src/main.c **** }
 821              		.loc 1 438 1
 822 006e 00BF     		nop
 823 0070 80BD     		pop	{r7, pc}
 824              	.L41:
 825 0072 00BF     		.align	2
 826              	.L40:
 827 0074 00000000 		.word	hi2c3
 828 0078 005C0040 		.word	1073765376
 829 007c FFEAC000 		.word	12643071
 830              		.cfi_endproc
 831              	.LFE156:
 833              		.section	.text.MX_LTDC_Init,"ax",%progbits
 834              		.align	1
 835              		.syntax unified
 836              		.thumb
 837              		.thumb_func
 839              	MX_LTDC_Init:
 840              	.LFB157:
 439:Core/Src/main.c **** 
 440:Core/Src/main.c **** /**
 441:Core/Src/main.c ****   * @brief LTDC Initialization Function
 442:Core/Src/main.c ****   * @param None
 443:Core/Src/main.c ****   * @retval None
 444:Core/Src/main.c ****   */
 445:Core/Src/main.c **** static void MX_LTDC_Init(void)
 446:Core/Src/main.c **** {
 841              		.loc 1 446 1
 842              		.cfi_startproc
 843              		@ args = 0, pretend = 0, frame = 56
 844              		@ frame_needed = 1, uses_anonymous_args = 0
 845 0000 80B5     		push	{r7, lr}
 846              	.LCFI21:
 847              		.cfi_def_cfa_offset 8
 848              		.cfi_offset 7, -8
 849              		.cfi_offset 14, -4
 850 0002 8EB0     		sub	sp, sp, #56
 851              	.LCFI22:
 852              		.cfi_def_cfa_offset 64
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 24


 853 0004 00AF     		add	r7, sp, #0
 854              	.LCFI23:
 855              		.cfi_def_cfa_register 7
 447:Core/Src/main.c **** 
 448:Core/Src/main.c ****   /* USER CODE BEGIN LTDC_Init 0 */
 449:Core/Src/main.c **** 
 450:Core/Src/main.c ****   /* USER CODE END LTDC_Init 0 */
 451:Core/Src/main.c **** 
 452:Core/Src/main.c ****   LTDC_LayerCfgTypeDef pLayerCfg = {0};
 856              		.loc 1 452 24
 857 0006 3B1D     		adds	r3, r7, #4
 858 0008 3422     		movs	r2, #52
 859 000a 0021     		movs	r1, #0
 860 000c 1846     		mov	r0, r3
 861 000e FFF7FEFF 		bl	memset
 453:Core/Src/main.c **** 
 454:Core/Src/main.c ****   /* USER CODE BEGIN LTDC_Init 1 */
 455:Core/Src/main.c **** 
 456:Core/Src/main.c ****   /* USER CODE END LTDC_Init 1 */
 457:Core/Src/main.c ****   hltdc.Instance = LTDC;
 862              		.loc 1 457 18
 863 0012 3A4B     		ldr	r3, .L46
 864 0014 3A4A     		ldr	r2, .L46+4
 865 0016 1A60     		str	r2, [r3]
 458:Core/Src/main.c ****   hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 866              		.loc 1 458 25
 867 0018 384B     		ldr	r3, .L46
 868 001a 0022     		movs	r2, #0
 869 001c 5A60     		str	r2, [r3, #4]
 459:Core/Src/main.c ****   hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 870              		.loc 1 459 25
 871 001e 374B     		ldr	r3, .L46
 872 0020 0022     		movs	r2, #0
 873 0022 9A60     		str	r2, [r3, #8]
 460:Core/Src/main.c ****   hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 874              		.loc 1 460 25
 875 0024 354B     		ldr	r3, .L46
 876 0026 0022     		movs	r2, #0
 877 0028 DA60     		str	r2, [r3, #12]
 461:Core/Src/main.c ****   hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 878              		.loc 1 461 25
 879 002a 344B     		ldr	r3, .L46
 880 002c 0022     		movs	r2, #0
 881 002e 1A61     		str	r2, [r3, #16]
 462:Core/Src/main.c ****   hltdc.Init.HorizontalSync = 40;
 882              		.loc 1 462 29
 883 0030 324B     		ldr	r3, .L46
 884 0032 2822     		movs	r2, #40
 885 0034 5A61     		str	r2, [r3, #20]
 463:Core/Src/main.c ****   hltdc.Init.VerticalSync = 9;
 886              		.loc 1 463 27
 887 0036 314B     		ldr	r3, .L46
 888 0038 0922     		movs	r2, #9
 889 003a 9A61     		str	r2, [r3, #24]
 464:Core/Src/main.c ****   hltdc.Init.AccumulatedHBP = 53;
 890              		.loc 1 464 29
 891 003c 2F4B     		ldr	r3, .L46
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 25


 892 003e 3522     		movs	r2, #53
 893 0040 DA61     		str	r2, [r3, #28]
 465:Core/Src/main.c ****   hltdc.Init.AccumulatedVBP = 11;
 894              		.loc 1 465 29
 895 0042 2E4B     		ldr	r3, .L46
 896 0044 0B22     		movs	r2, #11
 897 0046 1A62     		str	r2, [r3, #32]
 466:Core/Src/main.c ****   hltdc.Init.AccumulatedActiveW = 533;
 898              		.loc 1 466 33
 899 0048 2C4B     		ldr	r3, .L46
 900 004a 40F21522 		movw	r2, #533
 901 004e 5A62     		str	r2, [r3, #36]
 467:Core/Src/main.c ****   hltdc.Init.AccumulatedActiveH = 283;
 902              		.loc 1 467 33
 903 0050 2A4B     		ldr	r3, .L46
 904 0052 40F21B12 		movw	r2, #283
 905 0056 9A62     		str	r2, [r3, #40]
 468:Core/Src/main.c ****   hltdc.Init.TotalWidth = 565;
 906              		.loc 1 468 25
 907 0058 284B     		ldr	r3, .L46
 908 005a 40F23522 		movw	r2, #565
 909 005e DA62     		str	r2, [r3, #44]
 469:Core/Src/main.c ****   hltdc.Init.TotalHeigh = 285;
 910              		.loc 1 469 25
 911 0060 264B     		ldr	r3, .L46
 912 0062 40F21D12 		movw	r2, #285
 913 0066 1A63     		str	r2, [r3, #48]
 470:Core/Src/main.c ****   hltdc.Init.Backcolor.Blue = 0;
 914              		.loc 1 470 29
 915 0068 244B     		ldr	r3, .L46
 916 006a 0022     		movs	r2, #0
 917 006c 83F83420 		strb	r2, [r3, #52]
 471:Core/Src/main.c ****   hltdc.Init.Backcolor.Green = 0;
 918              		.loc 1 471 30
 919 0070 224B     		ldr	r3, .L46
 920 0072 0022     		movs	r2, #0
 921 0074 83F83520 		strb	r2, [r3, #53]
 472:Core/Src/main.c ****   hltdc.Init.Backcolor.Red = 0;
 922              		.loc 1 472 28
 923 0078 204B     		ldr	r3, .L46
 924 007a 0022     		movs	r2, #0
 925 007c 83F83620 		strb	r2, [r3, #54]
 473:Core/Src/main.c ****   if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 926              		.loc 1 473 7
 927 0080 1E48     		ldr	r0, .L46
 928 0082 FFF7FEFF 		bl	HAL_LTDC_Init
 929 0086 0346     		mov	r3, r0
 930              		.loc 1 473 6
 931 0088 002B     		cmp	r3, #0
 932 008a 01D0     		beq	.L43
 474:Core/Src/main.c ****   {
 475:Core/Src/main.c ****     Error_Handler();
 933              		.loc 1 475 5
 934 008c FFF7FEFF 		bl	Error_Handler
 935              	.L43:
 476:Core/Src/main.c ****   }
 477:Core/Src/main.c ****   pLayerCfg.WindowX0 = 0;
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 26


 936              		.loc 1 477 22
 937 0090 0023     		movs	r3, #0
 938 0092 7B60     		str	r3, [r7, #4]
 478:Core/Src/main.c ****   pLayerCfg.WindowX1 = 480;
 939              		.loc 1 478 22
 940 0094 4FF4F073 		mov	r3, #480
 941 0098 BB60     		str	r3, [r7, #8]
 479:Core/Src/main.c ****   pLayerCfg.WindowY0 = 0;
 942              		.loc 1 479 22
 943 009a 0023     		movs	r3, #0
 944 009c FB60     		str	r3, [r7, #12]
 480:Core/Src/main.c ****   pLayerCfg.WindowY1 = 272;
 945              		.loc 1 480 22
 946 009e 4FF48873 		mov	r3, #272
 947 00a2 3B61     		str	r3, [r7, #16]
 481:Core/Src/main.c ****   pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_ARGB8888;
 948              		.loc 1 481 25
 949 00a4 0023     		movs	r3, #0
 950 00a6 7B61     		str	r3, [r7, #20]
 482:Core/Src/main.c ****   pLayerCfg.Alpha = 255;
 951              		.loc 1 482 19
 952 00a8 FF23     		movs	r3, #255
 953 00aa BB61     		str	r3, [r7, #24]
 483:Core/Src/main.c ****   pLayerCfg.Alpha0 = 0;
 954              		.loc 1 483 20
 955 00ac 0023     		movs	r3, #0
 956 00ae FB61     		str	r3, [r7, #28]
 484:Core/Src/main.c ****   pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_PAxCA;
 957              		.loc 1 484 29
 958 00b0 4FF4C063 		mov	r3, #1536
 959 00b4 3B62     		str	r3, [r7, #32]
 485:Core/Src/main.c ****   pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_PAxCA;
 960              		.loc 1 485 29
 961 00b6 0723     		movs	r3, #7
 962 00b8 7B62     		str	r3, [r7, #36]
 486:Core/Src/main.c ****   pLayerCfg.FBStartAdress = 0xC0000000;
 963              		.loc 1 486 27
 964 00ba 4FF04043 		mov	r3, #-1073741824
 965 00be BB62     		str	r3, [r7, #40]
 487:Core/Src/main.c ****   pLayerCfg.ImageWidth = 480;
 966              		.loc 1 487 24
 967 00c0 4FF4F073 		mov	r3, #480
 968 00c4 FB62     		str	r3, [r7, #44]
 488:Core/Src/main.c ****   pLayerCfg.ImageHeight = 272;
 969              		.loc 1 488 25
 970 00c6 4FF48873 		mov	r3, #272
 971 00ca 3B63     		str	r3, [r7, #48]
 489:Core/Src/main.c ****   pLayerCfg.Backcolor.Blue = 0;
 972              		.loc 1 489 28
 973 00cc 0023     		movs	r3, #0
 974 00ce 87F83430 		strb	r3, [r7, #52]
 490:Core/Src/main.c ****   pLayerCfg.Backcolor.Green = 0;
 975              		.loc 1 490 29
 976 00d2 0023     		movs	r3, #0
 977 00d4 87F83530 		strb	r3, [r7, #53]
 491:Core/Src/main.c ****   pLayerCfg.Backcolor.Red = 0;
 978              		.loc 1 491 27
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 27


 979 00d8 0023     		movs	r3, #0
 980 00da 87F83630 		strb	r3, [r7, #54]
 492:Core/Src/main.c ****   if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 981              		.loc 1 492 7
 982 00de 3B1D     		adds	r3, r7, #4
 983 00e0 0022     		movs	r2, #0
 984 00e2 1946     		mov	r1, r3
 985 00e4 0548     		ldr	r0, .L46
 986 00e6 FFF7FEFF 		bl	HAL_LTDC_ConfigLayer
 987 00ea 0346     		mov	r3, r0
 988              		.loc 1 492 6
 989 00ec 002B     		cmp	r3, #0
 990 00ee 01D0     		beq	.L45
 493:Core/Src/main.c ****   {
 494:Core/Src/main.c ****     Error_Handler();
 991              		.loc 1 494 5
 992 00f0 FFF7FEFF 		bl	Error_Handler
 993              	.L45:
 495:Core/Src/main.c ****   }
 496:Core/Src/main.c ****   /* USER CODE BEGIN LTDC_Init 2 */
 497:Core/Src/main.c **** 
 498:Core/Src/main.c ****   /* USER CODE END LTDC_Init 2 */
 499:Core/Src/main.c **** 
 500:Core/Src/main.c **** }
 994              		.loc 1 500 1
 995 00f4 00BF     		nop
 996 00f6 3837     		adds	r7, r7, #56
 997              	.LCFI24:
 998              		.cfi_def_cfa_offset 8
 999 00f8 BD46     		mov	sp, r7
 1000              	.LCFI25:
 1001              		.cfi_def_cfa_register 13
 1002              		@ sp needed
 1003 00fa 80BD     		pop	{r7, pc}
 1004              	.L47:
 1005              		.align	2
 1006              	.L46:
 1007 00fc 00000000 		.word	hltdc
 1008 0100 00680140 		.word	1073833984
 1009              		.cfi_endproc
 1010              	.LFE157:
 1012              		.section	.text.MX_QUADSPI_Init,"ax",%progbits
 1013              		.align	1
 1014              		.syntax unified
 1015              		.thumb
 1016              		.thumb_func
 1018              	MX_QUADSPI_Init:
 1019              	.LFB158:
 501:Core/Src/main.c **** 
 502:Core/Src/main.c **** /**
 503:Core/Src/main.c ****   * @brief QUADSPI Initialization Function
 504:Core/Src/main.c ****   * @param None
 505:Core/Src/main.c ****   * @retval None
 506:Core/Src/main.c ****   */
 507:Core/Src/main.c **** static void MX_QUADSPI_Init(void)
 508:Core/Src/main.c **** {
 1020              		.loc 1 508 1
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 28


 1021              		.cfi_startproc
 1022              		@ args = 0, pretend = 0, frame = 0
 1023              		@ frame_needed = 1, uses_anonymous_args = 0
 1024 0000 80B5     		push	{r7, lr}
 1025              	.LCFI26:
 1026              		.cfi_def_cfa_offset 8
 1027              		.cfi_offset 7, -8
 1028              		.cfi_offset 14, -4
 1029 0002 00AF     		add	r7, sp, #0
 1030              	.LCFI27:
 1031              		.cfi_def_cfa_register 7
 509:Core/Src/main.c **** 
 510:Core/Src/main.c ****   /* USER CODE BEGIN QUADSPI_Init 0 */
 511:Core/Src/main.c **** 
 512:Core/Src/main.c ****   /* USER CODE END QUADSPI_Init 0 */
 513:Core/Src/main.c **** 
 514:Core/Src/main.c ****   /* USER CODE BEGIN QUADSPI_Init 1 */
 515:Core/Src/main.c **** 
 516:Core/Src/main.c ****   /* USER CODE END QUADSPI_Init 1 */
 517:Core/Src/main.c ****   /* QUADSPI parameter configuration*/
 518:Core/Src/main.c ****   hqspi.Instance = QUADSPI;
 1032              		.loc 1 518 18
 1033 0004 124B     		ldr	r3, .L51
 1034 0006 134A     		ldr	r2, .L51+4
 1035 0008 1A60     		str	r2, [r3]
 519:Core/Src/main.c ****   hqspi.Init.ClockPrescaler = 1;
 1036              		.loc 1 519 29
 1037 000a 114B     		ldr	r3, .L51
 1038 000c 0122     		movs	r2, #1
 1039 000e 5A60     		str	r2, [r3, #4]
 520:Core/Src/main.c ****   hqspi.Init.FifoThreshold = 4;
 1040              		.loc 1 520 28
 1041 0010 0F4B     		ldr	r3, .L51
 1042 0012 0422     		movs	r2, #4
 1043 0014 9A60     		str	r2, [r3, #8]
 521:Core/Src/main.c ****   hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 1044              		.loc 1 521 29
 1045 0016 0E4B     		ldr	r3, .L51
 1046 0018 1022     		movs	r2, #16
 1047 001a DA60     		str	r2, [r3, #12]
 522:Core/Src/main.c ****   hqspi.Init.FlashSize = 24;
 1048              		.loc 1 522 24
 1049 001c 0C4B     		ldr	r3, .L51
 1050 001e 1822     		movs	r2, #24
 1051 0020 1A61     		str	r2, [r3, #16]
 523:Core/Src/main.c ****   hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_6_CYCLE;
 1052              		.loc 1 523 33
 1053 0022 0B4B     		ldr	r3, .L51
 1054 0024 4FF4A062 		mov	r2, #1280
 1055 0028 5A61     		str	r2, [r3, #20]
 524:Core/Src/main.c ****   hqspi.Init.ClockMode = QSPI_CLOCK_MODE_0;
 1056              		.loc 1 524 24
 1057 002a 094B     		ldr	r3, .L51
 1058 002c 0022     		movs	r2, #0
 1059 002e 9A61     		str	r2, [r3, #24]
 525:Core/Src/main.c ****   hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 1060              		.loc 1 525 22
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 29


 1061 0030 074B     		ldr	r3, .L51
 1062 0032 0022     		movs	r2, #0
 1063 0034 DA61     		str	r2, [r3, #28]
 526:Core/Src/main.c ****   hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 1064              		.loc 1 526 24
 1065 0036 064B     		ldr	r3, .L51
 1066 0038 0022     		movs	r2, #0
 1067 003a 1A62     		str	r2, [r3, #32]
 527:Core/Src/main.c ****   if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 1068              		.loc 1 527 7
 1069 003c 0448     		ldr	r0, .L51
 1070 003e FFF7FEFF 		bl	HAL_QSPI_Init
 1071 0042 0346     		mov	r3, r0
 1072              		.loc 1 527 6
 1073 0044 002B     		cmp	r3, #0
 1074 0046 01D0     		beq	.L50
 528:Core/Src/main.c ****   {
 529:Core/Src/main.c ****     Error_Handler();
 1075              		.loc 1 529 5
 1076 0048 FFF7FEFF 		bl	Error_Handler
 1077              	.L50:
 530:Core/Src/main.c ****   }
 531:Core/Src/main.c ****   /* USER CODE BEGIN QUADSPI_Init 2 */
 532:Core/Src/main.c **** 
 533:Core/Src/main.c ****   /* USER CODE END QUADSPI_Init 2 */
 534:Core/Src/main.c **** 
 535:Core/Src/main.c **** }
 1078              		.loc 1 535 1
 1079 004c 00BF     		nop
 1080 004e 80BD     		pop	{r7, pc}
 1081              	.L52:
 1082              		.align	2
 1083              	.L51:
 1084 0050 00000000 		.word	hqspi
 1085 0054 001000A0 		.word	-1610608640
 1086              		.cfi_endproc
 1087              	.LFE158:
 1089              		.section	.text.MX_SDMMC1_SD_Init,"ax",%progbits
 1090              		.align	1
 1091              		.syntax unified
 1092              		.thumb
 1093              		.thumb_func
 1095              	MX_SDMMC1_SD_Init:
 1096              	.LFB159:
 536:Core/Src/main.c **** 
 537:Core/Src/main.c **** /**
 538:Core/Src/main.c ****   * @brief SDMMC1 Initialization Function
 539:Core/Src/main.c ****   * @param None
 540:Core/Src/main.c ****   * @retval None
 541:Core/Src/main.c ****   */
 542:Core/Src/main.c **** static void MX_SDMMC1_SD_Init(void)
 543:Core/Src/main.c **** {
 1097              		.loc 1 543 1
 1098              		.cfi_startproc
 1099              		@ args = 0, pretend = 0, frame = 0
 1100              		@ frame_needed = 1, uses_anonymous_args = 0
 1101              		@ link register save eliminated.
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 30


 1102 0000 80B4     		push	{r7}
 1103              	.LCFI28:
 1104              		.cfi_def_cfa_offset 4
 1105              		.cfi_offset 7, -4
 1106 0002 00AF     		add	r7, sp, #0
 1107              	.LCFI29:
 1108              		.cfi_def_cfa_register 7
 544:Core/Src/main.c **** 
 545:Core/Src/main.c ****   /* USER CODE BEGIN SDMMC1_Init 0 */
 546:Core/Src/main.c **** 
 547:Core/Src/main.c ****   /* USER CODE END SDMMC1_Init 0 */
 548:Core/Src/main.c **** 
 549:Core/Src/main.c ****   /* USER CODE BEGIN SDMMC1_Init 1 */
 550:Core/Src/main.c **** 
 551:Core/Src/main.c ****   /* USER CODE END SDMMC1_Init 1 */
 552:Core/Src/main.c ****   hsd1.Instance = SDMMC1;
 1109              		.loc 1 552 17
 1110 0004 0C4B     		ldr	r3, .L54
 1111 0006 0D4A     		ldr	r2, .L54+4
 1112 0008 1A60     		str	r2, [r3]
 553:Core/Src/main.c ****   hsd1.Init.ClockEdge = SDMMC_CLOCK_EDGE_RISING;
 1113              		.loc 1 553 23
 1114 000a 0B4B     		ldr	r3, .L54
 1115 000c 0022     		movs	r2, #0
 1116 000e 5A60     		str	r2, [r3, #4]
 554:Core/Src/main.c ****   hsd1.Init.ClockBypass = SDMMC_CLOCK_BYPASS_DISABLE;
 1117              		.loc 1 554 25
 1118 0010 094B     		ldr	r3, .L54
 1119 0012 0022     		movs	r2, #0
 1120 0014 9A60     		str	r2, [r3, #8]
 555:Core/Src/main.c ****   hsd1.Init.ClockPowerSave = SDMMC_CLOCK_POWER_SAVE_DISABLE;
 1121              		.loc 1 555 28
 1122 0016 084B     		ldr	r3, .L54
 1123 0018 0022     		movs	r2, #0
 1124 001a DA60     		str	r2, [r3, #12]
 556:Core/Src/main.c ****   hsd1.Init.BusWide = SDMMC_BUS_WIDE_1B;
 1125              		.loc 1 556 21
 1126 001c 064B     		ldr	r3, .L54
 1127 001e 0022     		movs	r2, #0
 1128 0020 1A61     		str	r2, [r3, #16]
 557:Core/Src/main.c ****   hsd1.Init.HardwareFlowControl = SDMMC_HARDWARE_FLOW_CONTROL_DISABLE;
 1129              		.loc 1 557 33
 1130 0022 054B     		ldr	r3, .L54
 1131 0024 0022     		movs	r2, #0
 1132 0026 5A61     		str	r2, [r3, #20]
 558:Core/Src/main.c ****   hsd1.Init.ClockDiv = 0;
 1133              		.loc 1 558 22
 1134 0028 034B     		ldr	r3, .L54
 1135 002a 0022     		movs	r2, #0
 1136 002c 9A61     		str	r2, [r3, #24]
 559:Core/Src/main.c ****   /* USER CODE BEGIN SDMMC1_Init 2 */
 560:Core/Src/main.c **** 
 561:Core/Src/main.c ****   /* USER CODE END SDMMC1_Init 2 */
 562:Core/Src/main.c **** 
 563:Core/Src/main.c **** }
 1137              		.loc 1 563 1
 1138 002e 00BF     		nop
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 31


 1139 0030 BD46     		mov	sp, r7
 1140              	.LCFI30:
 1141              		.cfi_def_cfa_register 13
 1142              		@ sp needed
 1143 0032 5DF8047B 		ldr	r7, [sp], #4
 1144              	.LCFI31:
 1145              		.cfi_restore 7
 1146              		.cfi_def_cfa_offset 0
 1147 0036 7047     		bx	lr
 1148              	.L55:
 1149              		.align	2
 1150              	.L54:
 1151 0038 00000000 		.word	hsd1
 1152 003c 002C0140 		.word	1073818624
 1153              		.cfi_endproc
 1154              	.LFE159:
 1156              		.section	.text.MX_SPI2_Init,"ax",%progbits
 1157              		.align	1
 1158              		.syntax unified
 1159              		.thumb
 1160              		.thumb_func
 1162              	MX_SPI2_Init:
 1163              	.LFB160:
 564:Core/Src/main.c **** 
 565:Core/Src/main.c **** /**
 566:Core/Src/main.c ****   * @brief SPI2 Initialization Function
 567:Core/Src/main.c ****   * @param None
 568:Core/Src/main.c ****   * @retval None
 569:Core/Src/main.c ****   */
 570:Core/Src/main.c **** static void MX_SPI2_Init(void)
 571:Core/Src/main.c **** {
 1164              		.loc 1 571 1
 1165              		.cfi_startproc
 1166              		@ args = 0, pretend = 0, frame = 0
 1167              		@ frame_needed = 1, uses_anonymous_args = 0
 1168 0000 80B5     		push	{r7, lr}
 1169              	.LCFI32:
 1170              		.cfi_def_cfa_offset 8
 1171              		.cfi_offset 7, -8
 1172              		.cfi_offset 14, -4
 1173 0002 00AF     		add	r7, sp, #0
 1174              	.LCFI33:
 1175              		.cfi_def_cfa_register 7
 572:Core/Src/main.c **** 
 573:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 0 */
 574:Core/Src/main.c **** 
 575:Core/Src/main.c ****   /* USER CODE END SPI2_Init 0 */
 576:Core/Src/main.c **** 
 577:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 1 */
 578:Core/Src/main.c **** 
 579:Core/Src/main.c ****   /* USER CODE END SPI2_Init 1 */
 580:Core/Src/main.c ****   /* SPI2 parameter configuration*/
 581:Core/Src/main.c ****   hspi2.Instance = SPI2;
 1176              		.loc 1 581 18
 1177 0004 1B4B     		ldr	r3, .L59
 1178 0006 1C4A     		ldr	r2, .L59+4
 1179 0008 1A60     		str	r2, [r3]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 32


 582:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 1180              		.loc 1 582 19
 1181 000a 1A4B     		ldr	r3, .L59
 1182 000c 4FF48272 		mov	r2, #260
 1183 0010 5A60     		str	r2, [r3, #4]
 583:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 1184              		.loc 1 583 24
 1185 0012 184B     		ldr	r3, .L59
 1186 0014 0022     		movs	r2, #0
 1187 0016 9A60     		str	r2, [r3, #8]
 584:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_4BIT;
 1188              		.loc 1 584 23
 1189 0018 164B     		ldr	r3, .L59
 1190 001a 4FF44072 		mov	r2, #768
 1191 001e DA60     		str	r2, [r3, #12]
 585:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 1192              		.loc 1 585 26
 1193 0020 144B     		ldr	r3, .L59
 1194 0022 0022     		movs	r2, #0
 1195 0024 1A61     		str	r2, [r3, #16]
 586:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 1196              		.loc 1 586 23
 1197 0026 134B     		ldr	r3, .L59
 1198 0028 0022     		movs	r2, #0
 1199 002a 5A61     		str	r2, [r3, #20]
 587:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 1200              		.loc 1 587 18
 1201 002c 114B     		ldr	r3, .L59
 1202 002e 4FF40072 		mov	r2, #512
 1203 0032 9A61     		str	r2, [r3, #24]
 588:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 1204              		.loc 1 588 32
 1205 0034 0F4B     		ldr	r3, .L59
 1206 0036 0022     		movs	r2, #0
 1207 0038 DA61     		str	r2, [r3, #28]
 589:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1208              		.loc 1 589 23
 1209 003a 0E4B     		ldr	r3, .L59
 1210 003c 0022     		movs	r2, #0
 1211 003e 1A62     		str	r2, [r3, #32]
 590:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 1212              		.loc 1 590 21
 1213 0040 0C4B     		ldr	r3, .L59
 1214 0042 0022     		movs	r2, #0
 1215 0044 5A62     		str	r2, [r3, #36]
 591:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1216              		.loc 1 591 29
 1217 0046 0B4B     		ldr	r3, .L59
 1218 0048 0022     		movs	r2, #0
 1219 004a 9A62     		str	r2, [r3, #40]
 592:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 7;
 1220              		.loc 1 592 28
 1221 004c 094B     		ldr	r3, .L59
 1222 004e 0722     		movs	r2, #7
 1223 0050 DA62     		str	r2, [r3, #44]
 593:Core/Src/main.c ****   hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 1224              		.loc 1 593 24
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 33


 1225 0052 084B     		ldr	r3, .L59
 1226 0054 0022     		movs	r2, #0
 1227 0056 1A63     		str	r2, [r3, #48]
 594:Core/Src/main.c ****   hspi2.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 1228              		.loc 1 594 23
 1229 0058 064B     		ldr	r3, .L59
 1230 005a 0822     		movs	r2, #8
 1231 005c 5A63     		str	r2, [r3, #52]
 595:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 1232              		.loc 1 595 7
 1233 005e 0548     		ldr	r0, .L59
 1234 0060 FFF7FEFF 		bl	HAL_SPI_Init
 1235 0064 0346     		mov	r3, r0
 1236              		.loc 1 595 6
 1237 0066 002B     		cmp	r3, #0
 1238 0068 01D0     		beq	.L58
 596:Core/Src/main.c ****   {
 597:Core/Src/main.c ****     Error_Handler();
 1239              		.loc 1 597 5
 1240 006a FFF7FEFF 		bl	Error_Handler
 1241              	.L58:
 598:Core/Src/main.c ****   }
 599:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 2 */
 600:Core/Src/main.c **** 
 601:Core/Src/main.c ****   /* USER CODE END SPI2_Init 2 */
 602:Core/Src/main.c **** 
 603:Core/Src/main.c **** }
 1242              		.loc 1 603 1
 1243 006e 00BF     		nop
 1244 0070 80BD     		pop	{r7, pc}
 1245              	.L60:
 1246 0072 00BF     		.align	2
 1247              	.L59:
 1248 0074 00000000 		.word	hspi2
 1249 0078 00380040 		.word	1073756160
 1250              		.cfi_endproc
 1251              	.LFE160:
 1253              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 1254              		.align	1
 1255              		.syntax unified
 1256              		.thumb
 1257              		.thumb_func
 1259              	MX_USART1_UART_Init:
 1260              	.LFB161:
 604:Core/Src/main.c **** 
 605:Core/Src/main.c **** /**
 606:Core/Src/main.c ****   * @brief USART1 Initialization Function
 607:Core/Src/main.c ****   * @param None
 608:Core/Src/main.c ****   * @retval None
 609:Core/Src/main.c ****   */
 610:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 611:Core/Src/main.c **** {
 1261              		.loc 1 611 1
 1262              		.cfi_startproc
 1263              		@ args = 0, pretend = 0, frame = 0
 1264              		@ frame_needed = 1, uses_anonymous_args = 0
 1265 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 34


 1266              	.LCFI34:
 1267              		.cfi_def_cfa_offset 8
 1268              		.cfi_offset 7, -8
 1269              		.cfi_offset 14, -4
 1270 0002 00AF     		add	r7, sp, #0
 1271              	.LCFI35:
 1272              		.cfi_def_cfa_register 7
 612:Core/Src/main.c **** 
 613:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 614:Core/Src/main.c **** 
 615:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 616:Core/Src/main.c **** 
 617:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 618:Core/Src/main.c **** 
 619:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 620:Core/Src/main.c ****   huart1.Instance = USART1;
 1273              		.loc 1 620 19
 1274 0004 144B     		ldr	r3, .L64
 1275 0006 154A     		ldr	r2, .L64+4
 1276 0008 1A60     		str	r2, [r3]
 621:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 1277              		.loc 1 621 24
 1278 000a 134B     		ldr	r3, .L64
 1279 000c 4FF4E132 		mov	r2, #115200
 1280 0010 5A60     		str	r2, [r3, #4]
 622:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 1281              		.loc 1 622 26
 1282 0012 114B     		ldr	r3, .L64
 1283 0014 0022     		movs	r2, #0
 1284 0016 9A60     		str	r2, [r3, #8]
 623:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 1285              		.loc 1 623 24
 1286 0018 0F4B     		ldr	r3, .L64
 1287 001a 0022     		movs	r2, #0
 1288 001c DA60     		str	r2, [r3, #12]
 624:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 1289              		.loc 1 624 22
 1290 001e 0E4B     		ldr	r3, .L64
 1291 0020 0022     		movs	r2, #0
 1292 0022 1A61     		str	r2, [r3, #16]
 625:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 1293              		.loc 1 625 20
 1294 0024 0C4B     		ldr	r3, .L64
 1295 0026 0C22     		movs	r2, #12
 1296 0028 5A61     		str	r2, [r3, #20]
 626:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1297              		.loc 1 626 25
 1298 002a 0B4B     		ldr	r3, .L64
 1299 002c 0022     		movs	r2, #0
 1300 002e 9A61     		str	r2, [r3, #24]
 627:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 1301              		.loc 1 627 28
 1302 0030 094B     		ldr	r3, .L64
 1303 0032 0022     		movs	r2, #0
 1304 0034 DA61     		str	r2, [r3, #28]
 628:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1305              		.loc 1 628 30
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 35


 1306 0036 084B     		ldr	r3, .L64
 1307 0038 0022     		movs	r2, #0
 1308 003a 1A62     		str	r2, [r3, #32]
 629:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1309              		.loc 1 629 38
 1310 003c 064B     		ldr	r3, .L64
 1311 003e 0022     		movs	r2, #0
 1312 0040 5A62     		str	r2, [r3, #36]
 630:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 1313              		.loc 1 630 7
 1314 0042 0548     		ldr	r0, .L64
 1315 0044 FFF7FEFF 		bl	HAL_UART_Init
 1316 0048 0346     		mov	r3, r0
 1317              		.loc 1 630 6
 1318 004a 002B     		cmp	r3, #0
 1319 004c 01D0     		beq	.L63
 631:Core/Src/main.c ****   {
 632:Core/Src/main.c ****     Error_Handler();
 1320              		.loc 1 632 5
 1321 004e FFF7FEFF 		bl	Error_Handler
 1322              	.L63:
 633:Core/Src/main.c ****   }
 634:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 635:Core/Src/main.c **** 
 636:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 637:Core/Src/main.c **** 
 638:Core/Src/main.c **** }
 1323              		.loc 1 638 1
 1324 0052 00BF     		nop
 1325 0054 80BD     		pop	{r7, pc}
 1326              	.L65:
 1327 0056 00BF     		.align	2
 1328              	.L64:
 1329 0058 00000000 		.word	huart1
 1330 005c 00100140 		.word	1073811456
 1331              		.cfi_endproc
 1332              	.LFE161:
 1334              		.section	.text.MX_USART6_UART_Init,"ax",%progbits
 1335              		.align	1
 1336              		.syntax unified
 1337              		.thumb
 1338              		.thumb_func
 1340              	MX_USART6_UART_Init:
 1341              	.LFB162:
 639:Core/Src/main.c **** 
 640:Core/Src/main.c **** /**
 641:Core/Src/main.c ****   * @brief USART6 Initialization Function
 642:Core/Src/main.c ****   * @param None
 643:Core/Src/main.c ****   * @retval None
 644:Core/Src/main.c ****   */
 645:Core/Src/main.c **** static void MX_USART6_UART_Init(void)
 646:Core/Src/main.c **** {
 1342              		.loc 1 646 1
 1343              		.cfi_startproc
 1344              		@ args = 0, pretend = 0, frame = 0
 1345              		@ frame_needed = 1, uses_anonymous_args = 0
 1346 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 36


 1347              	.LCFI36:
 1348              		.cfi_def_cfa_offset 8
 1349              		.cfi_offset 7, -8
 1350              		.cfi_offset 14, -4
 1351 0002 00AF     		add	r7, sp, #0
 1352              	.LCFI37:
 1353              		.cfi_def_cfa_register 7
 647:Core/Src/main.c **** 
 648:Core/Src/main.c ****   /* USER CODE BEGIN USART6_Init 0 */
 649:Core/Src/main.c **** 
 650:Core/Src/main.c ****   /* USER CODE END USART6_Init 0 */
 651:Core/Src/main.c **** 
 652:Core/Src/main.c ****   /* USER CODE BEGIN USART6_Init 1 */
 653:Core/Src/main.c **** 
 654:Core/Src/main.c ****   /* USER CODE END USART6_Init 1 */
 655:Core/Src/main.c ****   huart6.Instance = USART6;
 1354              		.loc 1 655 19
 1355 0004 144B     		ldr	r3, .L69
 1356 0006 154A     		ldr	r2, .L69+4
 1357 0008 1A60     		str	r2, [r3]
 656:Core/Src/main.c ****   huart6.Init.BaudRate = 115200;
 1358              		.loc 1 656 24
 1359 000a 134B     		ldr	r3, .L69
 1360 000c 4FF4E132 		mov	r2, #115200
 1361 0010 5A60     		str	r2, [r3, #4]
 657:Core/Src/main.c ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
 1362              		.loc 1 657 26
 1363 0012 114B     		ldr	r3, .L69
 1364 0014 0022     		movs	r2, #0
 1365 0016 9A60     		str	r2, [r3, #8]
 658:Core/Src/main.c ****   huart6.Init.StopBits = UART_STOPBITS_1;
 1366              		.loc 1 658 24
 1367 0018 0F4B     		ldr	r3, .L69
 1368 001a 0022     		movs	r2, #0
 1369 001c DA60     		str	r2, [r3, #12]
 659:Core/Src/main.c ****   huart6.Init.Parity = UART_PARITY_NONE;
 1370              		.loc 1 659 22
 1371 001e 0E4B     		ldr	r3, .L69
 1372 0020 0022     		movs	r2, #0
 1373 0022 1A61     		str	r2, [r3, #16]
 660:Core/Src/main.c ****   huart6.Init.Mode = UART_MODE_TX_RX;
 1374              		.loc 1 660 20
 1375 0024 0C4B     		ldr	r3, .L69
 1376 0026 0C22     		movs	r2, #12
 1377 0028 5A61     		str	r2, [r3, #20]
 661:Core/Src/main.c ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1378              		.loc 1 661 25
 1379 002a 0B4B     		ldr	r3, .L69
 1380 002c 0022     		movs	r2, #0
 1381 002e 9A61     		str	r2, [r3, #24]
 662:Core/Src/main.c ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 1382              		.loc 1 662 28
 1383 0030 094B     		ldr	r3, .L69
 1384 0032 0022     		movs	r2, #0
 1385 0034 DA61     		str	r2, [r3, #28]
 663:Core/Src/main.c ****   huart6.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1386              		.loc 1 663 30
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 37


 1387 0036 084B     		ldr	r3, .L69
 1388 0038 0022     		movs	r2, #0
 1389 003a 1A62     		str	r2, [r3, #32]
 664:Core/Src/main.c ****   huart6.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1390              		.loc 1 664 38
 1391 003c 064B     		ldr	r3, .L69
 1392 003e 0022     		movs	r2, #0
 1393 0040 5A62     		str	r2, [r3, #36]
 665:Core/Src/main.c ****   if (HAL_UART_Init(&huart6) != HAL_OK)
 1394              		.loc 1 665 7
 1395 0042 0548     		ldr	r0, .L69
 1396 0044 FFF7FEFF 		bl	HAL_UART_Init
 1397 0048 0346     		mov	r3, r0
 1398              		.loc 1 665 6
 1399 004a 002B     		cmp	r3, #0
 1400 004c 01D0     		beq	.L68
 666:Core/Src/main.c ****   {
 667:Core/Src/main.c ****     Error_Handler();
 1401              		.loc 1 667 5
 1402 004e FFF7FEFF 		bl	Error_Handler
 1403              	.L68:
 668:Core/Src/main.c ****   }
 669:Core/Src/main.c ****   /* USER CODE BEGIN USART6_Init 2 */
 670:Core/Src/main.c **** 
 671:Core/Src/main.c ****   /* USER CODE END USART6_Init 2 */
 672:Core/Src/main.c **** 
 673:Core/Src/main.c **** }
 1404              		.loc 1 673 1
 1405 0052 00BF     		nop
 1406 0054 80BD     		pop	{r7, pc}
 1407              	.L70:
 1408 0056 00BF     		.align	2
 1409              	.L69:
 1410 0058 00000000 		.word	huart6
 1411 005c 00140140 		.word	1073812480
 1412              		.cfi_endproc
 1413              	.LFE162:
 1415              		.section	.text.MX_DMA_Init,"ax",%progbits
 1416              		.align	1
 1417              		.syntax unified
 1418              		.thumb
 1419              		.thumb_func
 1421              	MX_DMA_Init:
 1422              	.LFB163:
 674:Core/Src/main.c **** 
 675:Core/Src/main.c **** /**
 676:Core/Src/main.c ****   * Enable DMA controller clock
 677:Core/Src/main.c ****   */
 678:Core/Src/main.c **** static void MX_DMA_Init(void)
 679:Core/Src/main.c **** {
 1423              		.loc 1 679 1
 1424              		.cfi_startproc
 1425              		@ args = 0, pretend = 0, frame = 8
 1426              		@ frame_needed = 1, uses_anonymous_args = 0
 1427 0000 80B5     		push	{r7, lr}
 1428              	.LCFI38:
 1429              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 38


 1430              		.cfi_offset 7, -8
 1431              		.cfi_offset 14, -4
 1432 0002 82B0     		sub	sp, sp, #8
 1433              	.LCFI39:
 1434              		.cfi_def_cfa_offset 16
 1435 0004 00AF     		add	r7, sp, #0
 1436              	.LCFI40:
 1437              		.cfi_def_cfa_register 7
 1438              	.LBB6:
 680:Core/Src/main.c **** 
 681:Core/Src/main.c ****   /* DMA controller clock enable */
 682:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 1439              		.loc 1 682 3
 1440 0006 104B     		ldr	r3, .L72
 1441 0008 1B6B     		ldr	r3, [r3, #48]
 1442 000a 0F4A     		ldr	r2, .L72
 1443 000c 43F48003 		orr	r3, r3, #4194304
 1444 0010 1363     		str	r3, [r2, #48]
 1445 0012 0D4B     		ldr	r3, .L72
 1446 0014 1B6B     		ldr	r3, [r3, #48]
 1447 0016 03F48003 		and	r3, r3, #4194304
 1448 001a 7B60     		str	r3, [r7, #4]
 1449 001c 7B68     		ldr	r3, [r7, #4]
 1450              	.LBE6:
 683:Core/Src/main.c **** 
 684:Core/Src/main.c ****   /* DMA interrupt init */
 685:Core/Src/main.c ****   /* DMA2_Stream3_IRQn interrupt configuration */
 686:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA2_Stream3_IRQn, 5, 0);
 1451              		.loc 1 686 3
 1452 001e 0022     		movs	r2, #0
 1453 0020 0521     		movs	r1, #5
 1454 0022 3B20     		movs	r0, #59
 1455 0024 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 687:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream3_IRQn);
 1456              		.loc 1 687 3
 1457 0028 3B20     		movs	r0, #59
 1458 002a FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 688:Core/Src/main.c ****   /* DMA2_Stream6_IRQn interrupt configuration */
 689:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA2_Stream6_IRQn, 5, 0);
 1459              		.loc 1 689 3
 1460 002e 0022     		movs	r2, #0
 1461 0030 0521     		movs	r1, #5
 1462 0032 4520     		movs	r0, #69
 1463 0034 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 690:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream6_IRQn);
 1464              		.loc 1 690 3
 1465 0038 4520     		movs	r0, #69
 1466 003a FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 691:Core/Src/main.c **** 
 692:Core/Src/main.c **** }
 1467              		.loc 1 692 1
 1468 003e 00BF     		nop
 1469 0040 0837     		adds	r7, r7, #8
 1470              	.LCFI41:
 1471              		.cfi_def_cfa_offset 8
 1472 0042 BD46     		mov	sp, r7
 1473              	.LCFI42:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 39


 1474              		.cfi_def_cfa_register 13
 1475              		@ sp needed
 1476 0044 80BD     		pop	{r7, pc}
 1477              	.L73:
 1478 0046 00BF     		.align	2
 1479              	.L72:
 1480 0048 00380240 		.word	1073887232
 1481              		.cfi_endproc
 1482              	.LFE163:
 1484              		.section	.text.MX_FMC_Init,"ax",%progbits
 1485              		.align	1
 1486              		.syntax unified
 1487              		.thumb
 1488              		.thumb_func
 1490              	MX_FMC_Init:
 1491              	.LFB164:
 693:Core/Src/main.c **** 
 694:Core/Src/main.c **** /* FMC initialization function */
 695:Core/Src/main.c **** static void MX_FMC_Init(void)
 696:Core/Src/main.c **** {
 1492              		.loc 1 696 1
 1493              		.cfi_startproc
 1494              		@ args = 0, pretend = 0, frame = 32
 1495              		@ frame_needed = 1, uses_anonymous_args = 0
 1496 0000 80B5     		push	{r7, lr}
 1497              	.LCFI43:
 1498              		.cfi_def_cfa_offset 8
 1499              		.cfi_offset 7, -8
 1500              		.cfi_offset 14, -4
 1501 0002 88B0     		sub	sp, sp, #32
 1502              	.LCFI44:
 1503              		.cfi_def_cfa_offset 40
 1504 0004 00AF     		add	r7, sp, #0
 1505              	.LCFI45:
 1506              		.cfi_def_cfa_register 7
 697:Core/Src/main.c **** 
 698:Core/Src/main.c ****   /* USER CODE BEGIN FMC_Init 0 */
 699:Core/Src/main.c **** 
 700:Core/Src/main.c ****   /* USER CODE END FMC_Init 0 */
 701:Core/Src/main.c **** 
 702:Core/Src/main.c ****   FMC_SDRAM_TimingTypeDef SdramTiming = {0};
 1507              		.loc 1 702 27
 1508 0006 3B1D     		adds	r3, r7, #4
 1509 0008 0022     		movs	r2, #0
 1510 000a 1A60     		str	r2, [r3]
 1511 000c 5A60     		str	r2, [r3, #4]
 1512 000e 9A60     		str	r2, [r3, #8]
 1513 0010 DA60     		str	r2, [r3, #12]
 1514 0012 1A61     		str	r2, [r3, #16]
 1515 0014 5A61     		str	r2, [r3, #20]
 1516 0016 9A61     		str	r2, [r3, #24]
 703:Core/Src/main.c **** 
 704:Core/Src/main.c ****   /* USER CODE BEGIN FMC_Init 1 */
 705:Core/Src/main.c **** 
 706:Core/Src/main.c ****   /* USER CODE END FMC_Init 1 */
 707:Core/Src/main.c **** 
 708:Core/Src/main.c ****   /** Perform the SDRAM1 memory initialization sequence
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 40


 709:Core/Src/main.c ****   */
 710:Core/Src/main.c ****   hsdram1.Instance = FMC_SDRAM_DEVICE;
 1517              		.loc 1 710 20
 1518 0018 1F4B     		ldr	r3, .L77
 1519 001a 204A     		ldr	r2, .L77+4
 1520 001c 1A60     		str	r2, [r3]
 711:Core/Src/main.c ****   /* hsdram1.Init */
 712:Core/Src/main.c ****   hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
 1521              		.loc 1 712 23
 1522 001e 1E4B     		ldr	r3, .L77
 1523 0020 0022     		movs	r2, #0
 1524 0022 5A60     		str	r2, [r3, #4]
 713:Core/Src/main.c ****   hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 1525              		.loc 1 713 33
 1526 0024 1C4B     		ldr	r3, .L77
 1527 0026 0022     		movs	r2, #0
 1528 0028 9A60     		str	r2, [r3, #8]
 714:Core/Src/main.c ****   hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 1529              		.loc 1 714 30
 1530 002a 1B4B     		ldr	r3, .L77
 1531 002c 0422     		movs	r2, #4
 1532 002e DA60     		str	r2, [r3, #12]
 715:Core/Src/main.c ****   hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 1533              		.loc 1 715 32
 1534 0030 194B     		ldr	r3, .L77
 1535 0032 1022     		movs	r2, #16
 1536 0034 1A61     		str	r2, [r3, #16]
 716:Core/Src/main.c ****   hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 1537              		.loc 1 716 35
 1538 0036 184B     		ldr	r3, .L77
 1539 0038 4022     		movs	r2, #64
 1540 003a 5A61     		str	r2, [r3, #20]
 717:Core/Src/main.c ****   hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_2;
 1541              		.loc 1 717 27
 1542 003c 164B     		ldr	r3, .L77
 1543 003e 4FF48072 		mov	r2, #256
 1544 0042 9A61     		str	r2, [r3, #24]
 718:Core/Src/main.c ****   hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 1545              		.loc 1 718 32
 1546 0044 144B     		ldr	r3, .L77
 1547 0046 0022     		movs	r2, #0
 1548 0048 DA61     		str	r2, [r3, #28]
 719:Core/Src/main.c ****   hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 1549              		.loc 1 719 30
 1550 004a 134B     		ldr	r3, .L77
 1551 004c 4FF40062 		mov	r2, #2048
 1552 0050 1A62     		str	r2, [r3, #32]
 720:Core/Src/main.c ****   hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
 1553              		.loc 1 720 26
 1554 0052 114B     		ldr	r3, .L77
 1555 0054 4FF48052 		mov	r2, #4096
 1556 0058 5A62     		str	r2, [r3, #36]
 721:Core/Src/main.c ****   hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
 1557              		.loc 1 721 30
 1558 005a 0F4B     		ldr	r3, .L77
 1559 005c 0022     		movs	r2, #0
 1560 005e 9A62     		str	r2, [r3, #40]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 41


 722:Core/Src/main.c ****   /* SdramTiming */
 723:Core/Src/main.c ****   SdramTiming.LoadToActiveDelay = 2;
 1561              		.loc 1 723 33
 1562 0060 0223     		movs	r3, #2
 1563 0062 7B60     		str	r3, [r7, #4]
 724:Core/Src/main.c ****   SdramTiming.ExitSelfRefreshDelay = 7;
 1564              		.loc 1 724 36
 1565 0064 0723     		movs	r3, #7
 1566 0066 BB60     		str	r3, [r7, #8]
 725:Core/Src/main.c ****   SdramTiming.SelfRefreshTime = 4;
 1567              		.loc 1 725 31
 1568 0068 0423     		movs	r3, #4
 1569 006a FB60     		str	r3, [r7, #12]
 726:Core/Src/main.c ****   SdramTiming.RowCycleDelay = 7;
 1570              		.loc 1 726 29
 1571 006c 0723     		movs	r3, #7
 1572 006e 3B61     		str	r3, [r7, #16]
 727:Core/Src/main.c ****   SdramTiming.WriteRecoveryTime = 3;
 1573              		.loc 1 727 33
 1574 0070 0323     		movs	r3, #3
 1575 0072 7B61     		str	r3, [r7, #20]
 728:Core/Src/main.c ****   SdramTiming.RPDelay = 2;
 1576              		.loc 1 728 23
 1577 0074 0223     		movs	r3, #2
 1578 0076 BB61     		str	r3, [r7, #24]
 729:Core/Src/main.c ****   SdramTiming.RCDDelay = 2;
 1579              		.loc 1 729 24
 1580 0078 0223     		movs	r3, #2
 1581 007a FB61     		str	r3, [r7, #28]
 730:Core/Src/main.c **** 
 731:Core/Src/main.c ****   if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 1582              		.loc 1 731 7
 1583 007c 3B1D     		adds	r3, r7, #4
 1584 007e 1946     		mov	r1, r3
 1585 0080 0548     		ldr	r0, .L77
 1586 0082 FFF7FEFF 		bl	HAL_SDRAM_Init
 1587 0086 0346     		mov	r3, r0
 1588              		.loc 1 731 6
 1589 0088 002B     		cmp	r3, #0
 1590 008a 01D0     		beq	.L76
 732:Core/Src/main.c ****   {
 733:Core/Src/main.c ****     Error_Handler( );
 1591              		.loc 1 733 5
 1592 008c FFF7FEFF 		bl	Error_Handler
 1593              	.L76:
 734:Core/Src/main.c ****   }
 735:Core/Src/main.c **** 
 736:Core/Src/main.c ****   /* USER CODE BEGIN FMC_Init 2 */
 737:Core/Src/main.c **** 
 738:Core/Src/main.c ****   /* USER CODE END FMC_Init 2 */
 739:Core/Src/main.c **** }
 1594              		.loc 1 739 1
 1595 0090 00BF     		nop
 1596 0092 2037     		adds	r7, r7, #32
 1597              	.LCFI46:
 1598              		.cfi_def_cfa_offset 8
 1599 0094 BD46     		mov	sp, r7
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 42


 1600              	.LCFI47:
 1601              		.cfi_def_cfa_register 13
 1602              		@ sp needed
 1603 0096 80BD     		pop	{r7, pc}
 1604              	.L78:
 1605              		.align	2
 1606              	.L77:
 1607 0098 00000000 		.word	hsdram1
 1608 009c 400100A0 		.word	-1610612416
 1609              		.cfi_endproc
 1610              	.LFE164:
 1612              		.section	.text.MX_GPIO_Init,"ax",%progbits
 1613              		.align	1
 1614              		.syntax unified
 1615              		.thumb
 1616              		.thumb_func
 1618              	MX_GPIO_Init:
 1619              	.LFB165:
 740:Core/Src/main.c **** 
 741:Core/Src/main.c **** /**
 742:Core/Src/main.c ****   * @brief GPIO Initialization Function
 743:Core/Src/main.c ****   * @param None
 744:Core/Src/main.c ****   * @retval None
 745:Core/Src/main.c ****   */
 746:Core/Src/main.c **** static void MX_GPIO_Init(void)
 747:Core/Src/main.c **** {
 1620              		.loc 1 747 1
 1621              		.cfi_startproc
 1622              		@ args = 0, pretend = 0, frame = 64
 1623              		@ frame_needed = 1, uses_anonymous_args = 0
 1624 0000 80B5     		push	{r7, lr}
 1625              	.LCFI48:
 1626              		.cfi_def_cfa_offset 8
 1627              		.cfi_offset 7, -8
 1628              		.cfi_offset 14, -4
 1629 0002 90B0     		sub	sp, sp, #64
 1630              	.LCFI49:
 1631              		.cfi_def_cfa_offset 72
 1632 0004 00AF     		add	r7, sp, #0
 1633              	.LCFI50:
 1634              		.cfi_def_cfa_register 7
 748:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 1635              		.loc 1 748 20
 1636 0006 07F12C03 		add	r3, r7, #44
 1637 000a 0022     		movs	r2, #0
 1638 000c 1A60     		str	r2, [r3]
 1639 000e 5A60     		str	r2, [r3, #4]
 1640 0010 9A60     		str	r2, [r3, #8]
 1641 0012 DA60     		str	r2, [r3, #12]
 1642 0014 1A61     		str	r2, [r3, #16]
 1643              	.LBB7:
 749:Core/Src/main.c **** 
 750:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 751:Core/Src/main.c ****   __HAL_RCC_GPIOE_CLK_ENABLE();
 1644              		.loc 1 751 3
 1645 0016 AF4B     		ldr	r3, .L80
 1646 0018 1B6B     		ldr	r3, [r3, #48]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 43


 1647 001a AE4A     		ldr	r2, .L80
 1648 001c 43F01003 		orr	r3, r3, #16
 1649 0020 1363     		str	r3, [r2, #48]
 1650 0022 AC4B     		ldr	r3, .L80
 1651 0024 1B6B     		ldr	r3, [r3, #48]
 1652 0026 03F01003 		and	r3, r3, #16
 1653 002a BB62     		str	r3, [r7, #40]
 1654 002c BB6A     		ldr	r3, [r7, #40]
 1655              	.LBE7:
 1656              	.LBB8:
 752:Core/Src/main.c ****   __HAL_RCC_GPIOG_CLK_ENABLE();
 1657              		.loc 1 752 3
 1658 002e A94B     		ldr	r3, .L80
 1659 0030 1B6B     		ldr	r3, [r3, #48]
 1660 0032 A84A     		ldr	r2, .L80
 1661 0034 43F04003 		orr	r3, r3, #64
 1662 0038 1363     		str	r3, [r2, #48]
 1663 003a A64B     		ldr	r3, .L80
 1664 003c 1B6B     		ldr	r3, [r3, #48]
 1665 003e 03F04003 		and	r3, r3, #64
 1666 0042 7B62     		str	r3, [r7, #36]
 1667 0044 7B6A     		ldr	r3, [r7, #36]
 1668              	.LBE8:
 1669              	.LBB9:
 753:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 1670              		.loc 1 753 3
 1671 0046 A34B     		ldr	r3, .L80
 1672 0048 1B6B     		ldr	r3, [r3, #48]
 1673 004a A24A     		ldr	r2, .L80
 1674 004c 43F00203 		orr	r3, r3, #2
 1675 0050 1363     		str	r3, [r2, #48]
 1676 0052 A04B     		ldr	r3, .L80
 1677 0054 1B6B     		ldr	r3, [r3, #48]
 1678 0056 03F00203 		and	r3, r3, #2
 1679 005a 3B62     		str	r3, [r7, #32]
 1680 005c 3B6A     		ldr	r3, [r7, #32]
 1681              	.LBE9:
 1682              	.LBB10:
 754:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 1683              		.loc 1 754 3
 1684 005e 9D4B     		ldr	r3, .L80
 1685 0060 1B6B     		ldr	r3, [r3, #48]
 1686 0062 9C4A     		ldr	r2, .L80
 1687 0064 43F00803 		orr	r3, r3, #8
 1688 0068 1363     		str	r3, [r2, #48]
 1689 006a 9A4B     		ldr	r3, .L80
 1690 006c 1B6B     		ldr	r3, [r3, #48]
 1691 006e 03F00803 		and	r3, r3, #8
 1692 0072 FB61     		str	r3, [r7, #28]
 1693 0074 FB69     		ldr	r3, [r7, #28]
 1694              	.LBE10:
 1695              	.LBB11:
 755:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 1696              		.loc 1 755 3
 1697 0076 974B     		ldr	r3, .L80
 1698 0078 1B6B     		ldr	r3, [r3, #48]
 1699 007a 964A     		ldr	r2, .L80
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 44


 1700 007c 43F00403 		orr	r3, r3, #4
 1701 0080 1363     		str	r3, [r2, #48]
 1702 0082 944B     		ldr	r3, .L80
 1703 0084 1B6B     		ldr	r3, [r3, #48]
 1704 0086 03F00403 		and	r3, r3, #4
 1705 008a BB61     		str	r3, [r7, #24]
 1706 008c BB69     		ldr	r3, [r7, #24]
 1707              	.LBE11:
 1708              	.LBB12:
 756:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 1709              		.loc 1 756 3
 1710 008e 914B     		ldr	r3, .L80
 1711 0090 1B6B     		ldr	r3, [r3, #48]
 1712 0092 904A     		ldr	r2, .L80
 1713 0094 43F00103 		orr	r3, r3, #1
 1714 0098 1363     		str	r3, [r2, #48]
 1715 009a 8E4B     		ldr	r3, .L80
 1716 009c 1B6B     		ldr	r3, [r3, #48]
 1717 009e 03F00103 		and	r3, r3, #1
 1718 00a2 7B61     		str	r3, [r7, #20]
 1719 00a4 7B69     		ldr	r3, [r7, #20]
 1720              	.LBE12:
 1721              	.LBB13:
 757:Core/Src/main.c ****   __HAL_RCC_GPIOJ_CLK_ENABLE();
 1722              		.loc 1 757 3
 1723 00a6 8B4B     		ldr	r3, .L80
 1724 00a8 1B6B     		ldr	r3, [r3, #48]
 1725 00aa 8A4A     		ldr	r2, .L80
 1726 00ac 43F40073 		orr	r3, r3, #512
 1727 00b0 1363     		str	r3, [r2, #48]
 1728 00b2 884B     		ldr	r3, .L80
 1729 00b4 1B6B     		ldr	r3, [r3, #48]
 1730 00b6 03F40073 		and	r3, r3, #512
 1731 00ba 3B61     		str	r3, [r7, #16]
 1732 00bc 3B69     		ldr	r3, [r7, #16]
 1733              	.LBE13:
 1734              	.LBB14:
 758:Core/Src/main.c ****   __HAL_RCC_GPIOI_CLK_ENABLE();
 1735              		.loc 1 758 3
 1736 00be 854B     		ldr	r3, .L80
 1737 00c0 1B6B     		ldr	r3, [r3, #48]
 1738 00c2 844A     		ldr	r2, .L80
 1739 00c4 43F48073 		orr	r3, r3, #256
 1740 00c8 1363     		str	r3, [r2, #48]
 1741 00ca 824B     		ldr	r3, .L80
 1742 00cc 1B6B     		ldr	r3, [r3, #48]
 1743 00ce 03F48073 		and	r3, r3, #256
 1744 00d2 FB60     		str	r3, [r7, #12]
 1745 00d4 FB68     		ldr	r3, [r7, #12]
 1746              	.LBE14:
 1747              	.LBB15:
 759:Core/Src/main.c ****   __HAL_RCC_GPIOK_CLK_ENABLE();
 1748              		.loc 1 759 3
 1749 00d6 7F4B     		ldr	r3, .L80
 1750 00d8 1B6B     		ldr	r3, [r3, #48]
 1751 00da 7E4A     		ldr	r2, .L80
 1752 00dc 43F48063 		orr	r3, r3, #1024
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 45


 1753 00e0 1363     		str	r3, [r2, #48]
 1754 00e2 7C4B     		ldr	r3, .L80
 1755 00e4 1B6B     		ldr	r3, [r3, #48]
 1756 00e6 03F48063 		and	r3, r3, #1024
 1757 00ea BB60     		str	r3, [r7, #8]
 1758 00ec BB68     		ldr	r3, [r7, #8]
 1759              	.LBE15:
 1760              	.LBB16:
 760:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
 1761              		.loc 1 760 3
 1762 00ee 794B     		ldr	r3, .L80
 1763 00f0 1B6B     		ldr	r3, [r3, #48]
 1764 00f2 784A     		ldr	r2, .L80
 1765 00f4 43F02003 		orr	r3, r3, #32
 1766 00f8 1363     		str	r3, [r2, #48]
 1767 00fa 764B     		ldr	r3, .L80
 1768 00fc 1B6B     		ldr	r3, [r3, #48]
 1769 00fe 03F02003 		and	r3, r3, #32
 1770 0102 7B60     		str	r3, [r7, #4]
 1771 0104 7B68     		ldr	r3, [r7, #4]
 1772              	.LBE16:
 1773              	.LBB17:
 761:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 1774              		.loc 1 761 3
 1775 0106 734B     		ldr	r3, .L80
 1776 0108 1B6B     		ldr	r3, [r3, #48]
 1777 010a 724A     		ldr	r2, .L80
 1778 010c 43F08003 		orr	r3, r3, #128
 1779 0110 1363     		str	r3, [r2, #48]
 1780 0112 704B     		ldr	r3, .L80
 1781 0114 1B6B     		ldr	r3, [r3, #48]
 1782 0116 03F08003 		and	r3, r3, #128
 1783 011a 3B60     		str	r3, [r7]
 1784 011c 3B68     		ldr	r3, [r7]
 1785              	.LBE17:
 762:Core/Src/main.c **** 
 763:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 764:Core/Src/main.c ****   HAL_GPIO_WritePin(OTG_FS_PowerSwitchOn_GPIO_Port, OTG_FS_PowerSwitchOn_Pin, GPIO_PIN_SET);
 1786              		.loc 1 764 3
 1787 011e 0122     		movs	r2, #1
 1788 0120 2021     		movs	r1, #32
 1789 0122 6D48     		ldr	r0, .L80+4
 1790 0124 FFF7FEFF 		bl	HAL_GPIO_WritePin
 765:Core/Src/main.c **** 
 766:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 767:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOI, ARDUINO_D7_Pin|ARDUINO_D8_Pin, GPIO_PIN_RESET);
 1791              		.loc 1 767 3
 1792 0128 0022     		movs	r2, #0
 1793 012a 0C21     		movs	r1, #12
 1794 012c 6B48     		ldr	r0, .L80+8
 1795 012e FFF7FEFF 		bl	HAL_GPIO_WritePin
 768:Core/Src/main.c **** 
 769:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 770:Core/Src/main.c ****   HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
 1796              		.loc 1 770 3
 1797 0132 0122     		movs	r2, #1
 1798 0134 0821     		movs	r1, #8
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 46


 1799 0136 6A48     		ldr	r0, .L80+12
 1800 0138 FFF7FEFF 		bl	HAL_GPIO_WritePin
 771:Core/Src/main.c **** 
 772:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 773:Core/Src/main.c ****   HAL_GPIO_WritePin(LCD_DISP_GPIO_Port, LCD_DISP_Pin, GPIO_PIN_SET);
 1801              		.loc 1 773 3
 1802 013c 0122     		movs	r2, #1
 1803 013e 4FF48051 		mov	r1, #4096
 1804 0142 6648     		ldr	r0, .L80+8
 1805 0144 FFF7FEFF 		bl	HAL_GPIO_WritePin
 774:Core/Src/main.c **** 
 775:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 776:Core/Src/main.c ****   HAL_GPIO_WritePin(DCMI_PWR_EN_GPIO_Port, DCMI_PWR_EN_Pin, GPIO_PIN_RESET);
 1806              		.loc 1 776 3
 1807 0148 0022     		movs	r2, #0
 1808 014a 4FF40051 		mov	r1, #8192
 1809 014e 6548     		ldr	r0, .L80+16
 1810 0150 FFF7FEFF 		bl	HAL_GPIO_WritePin
 777:Core/Src/main.c **** 
 778:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 779:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOG, ARDUINO_D4_Pin|ARDUINO_D2_Pin|EXT_RST_Pin, GPIO_PIN_RESET);
 1811              		.loc 1 779 3
 1812 0154 0022     		movs	r2, #0
 1813 0156 C821     		movs	r1, #200
 1814 0158 6348     		ldr	r0, .L80+20
 1815 015a FFF7FEFF 		bl	HAL_GPIO_WritePin
 780:Core/Src/main.c **** 
 781:Core/Src/main.c ****   /*Configure GPIO pin : OTG_HS_OverCurrent_Pin */
 782:Core/Src/main.c ****   GPIO_InitStruct.Pin = OTG_HS_OverCurrent_Pin;
 1816              		.loc 1 782 23
 1817 015e 0823     		movs	r3, #8
 1818 0160 FB62     		str	r3, [r7, #44]
 783:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 1819              		.loc 1 783 24
 1820 0162 0023     		movs	r3, #0
 1821 0164 3B63     		str	r3, [r7, #48]
 784:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1822              		.loc 1 784 24
 1823 0166 0023     		movs	r3, #0
 1824 0168 7B63     		str	r3, [r7, #52]
 785:Core/Src/main.c ****   HAL_GPIO_Init(OTG_HS_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 1825              		.loc 1 785 3
 1826 016a 07F12C03 		add	r3, r7, #44
 1827 016e 1946     		mov	r1, r3
 1828 0170 5E48     		ldr	r0, .L80+24
 1829 0172 FFF7FEFF 		bl	HAL_GPIO_Init
 786:Core/Src/main.c **** 
 787:Core/Src/main.c ****   /*Configure GPIO pins : RMII_TXD1_Pin RMII_TXD0_Pin RMII_TX_EN_Pin */
 788:Core/Src/main.c ****   GPIO_InitStruct.Pin = RMII_TXD1_Pin|RMII_TXD0_Pin|RMII_TX_EN_Pin;
 1830              		.loc 1 788 23
 1831 0176 4FF4D043 		mov	r3, #26624
 1832 017a FB62     		str	r3, [r7, #44]
 789:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1833              		.loc 1 789 24
 1834 017c 0223     		movs	r3, #2
 1835 017e 3B63     		str	r3, [r7, #48]
 790:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 47


 1836              		.loc 1 790 24
 1837 0180 0023     		movs	r3, #0
 1838 0182 7B63     		str	r3, [r7, #52]
 791:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 1839              		.loc 1 791 25
 1840 0184 0323     		movs	r3, #3
 1841 0186 BB63     		str	r3, [r7, #56]
 792:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 1842              		.loc 1 792 29
 1843 0188 0B23     		movs	r3, #11
 1844 018a FB63     		str	r3, [r7, #60]
 793:Core/Src/main.c ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 1845              		.loc 1 793 3
 1846 018c 07F12C03 		add	r3, r7, #44
 1847 0190 1946     		mov	r1, r3
 1848 0192 5548     		ldr	r0, .L80+20
 1849 0194 FFF7FEFF 		bl	HAL_GPIO_Init
 794:Core/Src/main.c **** 
 795:Core/Src/main.c ****   /*Configure GPIO pin : ARDUINO_PWM_D3_Pin */
 796:Core/Src/main.c ****   GPIO_InitStruct.Pin = ARDUINO_PWM_D3_Pin;
 1850              		.loc 1 796 23
 1851 0198 1023     		movs	r3, #16
 1852 019a FB62     		str	r3, [r7, #44]
 797:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1853              		.loc 1 797 24
 1854 019c 0223     		movs	r3, #2
 1855 019e 3B63     		str	r3, [r7, #48]
 798:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1856              		.loc 1 798 24
 1857 01a0 0023     		movs	r3, #0
 1858 01a2 7B63     		str	r3, [r7, #52]
 799:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1859              		.loc 1 799 25
 1860 01a4 0023     		movs	r3, #0
 1861 01a6 BB63     		str	r3, [r7, #56]
 800:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 1862              		.loc 1 800 29
 1863 01a8 0223     		movs	r3, #2
 1864 01aa FB63     		str	r3, [r7, #60]
 801:Core/Src/main.c ****   HAL_GPIO_Init(ARDUINO_PWM_D3_GPIO_Port, &GPIO_InitStruct);
 1865              		.loc 1 801 3
 1866 01ac 07F12C03 		add	r3, r7, #44
 1867 01b0 1946     		mov	r1, r3
 1868 01b2 4F48     		ldr	r0, .L80+28
 1869 01b4 FFF7FEFF 		bl	HAL_GPIO_Init
 802:Core/Src/main.c **** 
 803:Core/Src/main.c ****   /*Configure GPIO pin : SPDIF_RX0_Pin */
 804:Core/Src/main.c ****   GPIO_InitStruct.Pin = SPDIF_RX0_Pin;
 1870              		.loc 1 804 23
 1871 01b8 8023     		movs	r3, #128
 1872 01ba FB62     		str	r3, [r7, #44]
 805:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1873              		.loc 1 805 24
 1874 01bc 0223     		movs	r3, #2
 1875 01be 3B63     		str	r3, [r7, #48]
 806:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1876              		.loc 1 806 24
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 48


 1877 01c0 0023     		movs	r3, #0
 1878 01c2 7B63     		str	r3, [r7, #52]
 807:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1879              		.loc 1 807 25
 1880 01c4 0023     		movs	r3, #0
 1881 01c6 BB63     		str	r3, [r7, #56]
 808:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF8_SPDIFRX;
 1882              		.loc 1 808 29
 1883 01c8 0823     		movs	r3, #8
 1884 01ca FB63     		str	r3, [r7, #60]
 809:Core/Src/main.c ****   HAL_GPIO_Init(SPDIF_RX0_GPIO_Port, &GPIO_InitStruct);
 1885              		.loc 1 809 3
 1886 01cc 07F12C03 		add	r3, r7, #44
 1887 01d0 1946     		mov	r1, r3
 1888 01d2 4148     		ldr	r0, .L80+4
 1889 01d4 FFF7FEFF 		bl	HAL_GPIO_Init
 810:Core/Src/main.c **** 
 811:Core/Src/main.c ****   /*Configure GPIO pin : ARDUINO_PWM_D9_Pin */
 812:Core/Src/main.c ****   GPIO_InitStruct.Pin = ARDUINO_PWM_D9_Pin;
 1890              		.loc 1 812 23
 1891 01d8 4FF40043 		mov	r3, #32768
 1892 01dc FB62     		str	r3, [r7, #44]
 813:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1893              		.loc 1 813 24
 1894 01de 0223     		movs	r3, #2
 1895 01e0 3B63     		str	r3, [r7, #48]
 814:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1896              		.loc 1 814 24
 1897 01e2 0023     		movs	r3, #0
 1898 01e4 7B63     		str	r3, [r7, #52]
 815:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1899              		.loc 1 815 25
 1900 01e6 0023     		movs	r3, #0
 1901 01e8 BB63     		str	r3, [r7, #56]
 816:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 1902              		.loc 1 816 29
 1903 01ea 0123     		movs	r3, #1
 1904 01ec FB63     		str	r3, [r7, #60]
 817:Core/Src/main.c ****   HAL_GPIO_Init(ARDUINO_PWM_D9_GPIO_Port, &GPIO_InitStruct);
 1905              		.loc 1 817 3
 1906 01ee 07F12C03 		add	r3, r7, #44
 1907 01f2 1946     		mov	r1, r3
 1908 01f4 3F48     		ldr	r0, .L80+32
 1909 01f6 FFF7FEFF 		bl	HAL_GPIO_Init
 818:Core/Src/main.c **** 
 819:Core/Src/main.c ****   /*Configure GPIO pins : DCMI_D6_Pin DCMI_D7_Pin */
 820:Core/Src/main.c ****   GPIO_InitStruct.Pin = DCMI_D6_Pin|DCMI_D7_Pin;
 1910              		.loc 1 820 23
 1911 01fa 6023     		movs	r3, #96
 1912 01fc FB62     		str	r3, [r7, #44]
 821:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1913              		.loc 1 821 24
 1914 01fe 0223     		movs	r3, #2
 1915 0200 3B63     		str	r3, [r7, #48]
 822:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1916              		.loc 1 822 24
 1917 0202 0023     		movs	r3, #0
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 49


 1918 0204 7B63     		str	r3, [r7, #52]
 823:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1919              		.loc 1 823 25
 1920 0206 0023     		movs	r3, #0
 1921 0208 BB63     		str	r3, [r7, #56]
 824:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF13_DCMI;
 1922              		.loc 1 824 29
 1923 020a 0D23     		movs	r3, #13
 1924 020c FB63     		str	r3, [r7, #60]
 825:Core/Src/main.c ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 1925              		.loc 1 825 3
 1926 020e 07F12C03 		add	r3, r7, #44
 1927 0212 1946     		mov	r1, r3
 1928 0214 3548     		ldr	r0, .L80+24
 1929 0216 FFF7FEFF 		bl	HAL_GPIO_Init
 826:Core/Src/main.c **** 
 827:Core/Src/main.c ****   /*Configure GPIO pin : OTG_FS_VBUS_Pin */
 828:Core/Src/main.c ****   GPIO_InitStruct.Pin = OTG_FS_VBUS_Pin;
 1930              		.loc 1 828 23
 1931 021a 4FF48053 		mov	r3, #4096
 1932 021e FB62     		str	r3, [r7, #44]
 829:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 1933              		.loc 1 829 24
 1934 0220 0023     		movs	r3, #0
 1935 0222 3B63     		str	r3, [r7, #48]
 830:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1936              		.loc 1 830 24
 1937 0224 0023     		movs	r3, #0
 1938 0226 7B63     		str	r3, [r7, #52]
 831:Core/Src/main.c ****   HAL_GPIO_Init(OTG_FS_VBUS_GPIO_Port, &GPIO_InitStruct);
 1939              		.loc 1 831 3
 1940 0228 07F12C03 		add	r3, r7, #44
 1941 022c 1946     		mov	r1, r3
 1942 022e 3248     		ldr	r0, .L80+36
 1943 0230 FFF7FEFF 		bl	HAL_GPIO_Init
 832:Core/Src/main.c **** 
 833:Core/Src/main.c ****   /*Configure GPIO pin : Audio_INT_Pin */
 834:Core/Src/main.c ****   GPIO_InitStruct.Pin = Audio_INT_Pin;
 1944              		.loc 1 834 23
 1945 0234 4023     		movs	r3, #64
 1946 0236 FB62     		str	r3, [r7, #44]
 835:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 1947              		.loc 1 835 24
 1948 0238 4FF49013 		mov	r3, #1179648
 1949 023c 3B63     		str	r3, [r7, #48]
 836:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1950              		.loc 1 836 24
 1951 023e 0023     		movs	r3, #0
 1952 0240 7B63     		str	r3, [r7, #52]
 837:Core/Src/main.c ****   HAL_GPIO_Init(Audio_INT_GPIO_Port, &GPIO_InitStruct);
 1953              		.loc 1 837 3
 1954 0242 07F12C03 		add	r3, r7, #44
 1955 0246 1946     		mov	r1, r3
 1956 0248 2348     		ldr	r0, .L80+4
 1957 024a FFF7FEFF 		bl	HAL_GPIO_Init
 838:Core/Src/main.c **** 
 839:Core/Src/main.c ****   /*Configure GPIO pins : OTG_FS_P_Pin OTG_FS_N_Pin OTG_FS_ID_Pin */
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 50


 840:Core/Src/main.c ****   GPIO_InitStruct.Pin = OTG_FS_P_Pin|OTG_FS_N_Pin|OTG_FS_ID_Pin;
 1958              		.loc 1 840 23
 1959 024e 4FF4E053 		mov	r3, #7168
 1960 0252 FB62     		str	r3, [r7, #44]
 841:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1961              		.loc 1 841 24
 1962 0254 0223     		movs	r3, #2
 1963 0256 3B63     		str	r3, [r7, #48]
 842:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1964              		.loc 1 842 24
 1965 0258 0023     		movs	r3, #0
 1966 025a 7B63     		str	r3, [r7, #52]
 843:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 1967              		.loc 1 843 25
 1968 025c 0323     		movs	r3, #3
 1969 025e BB63     		str	r3, [r7, #56]
 844:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;
 1970              		.loc 1 844 29
 1971 0260 0A23     		movs	r3, #10
 1972 0262 FB63     		str	r3, [r7, #60]
 845:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 1973              		.loc 1 845 3
 1974 0264 07F12C03 		add	r3, r7, #44
 1975 0268 1946     		mov	r1, r3
 1976 026a 2248     		ldr	r0, .L80+32
 1977 026c FFF7FEFF 		bl	HAL_GPIO_Init
 846:Core/Src/main.c **** 
 847:Core/Src/main.c ****   /*Configure GPIO pins : SAI2_MCLKA_Pin SAI2_SCKA_Pin SAI2_FSA_Pin SAI2_SDA_Pin */
 848:Core/Src/main.c ****   GPIO_InitStruct.Pin = SAI2_MCLKA_Pin|SAI2_SCKA_Pin|SAI2_FSA_Pin|SAI2_SDA_Pin;
 1978              		.loc 1 848 23
 1979 0270 F023     		movs	r3, #240
 1980 0272 FB62     		str	r3, [r7, #44]
 849:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1981              		.loc 1 849 24
 1982 0274 0223     		movs	r3, #2
 1983 0276 3B63     		str	r3, [r7, #48]
 850:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1984              		.loc 1 850 24
 1985 0278 0023     		movs	r3, #0
 1986 027a 7B63     		str	r3, [r7, #52]
 851:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1987              		.loc 1 851 25
 1988 027c 0023     		movs	r3, #0
 1989 027e BB63     		str	r3, [r7, #56]
 852:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF10_SAI2;
 1990              		.loc 1 852 29
 1991 0280 0A23     		movs	r3, #10
 1992 0282 FB63     		str	r3, [r7, #60]
 853:Core/Src/main.c ****   HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 1993              		.loc 1 853 3
 1994 0284 07F12C03 		add	r3, r7, #44
 1995 0288 1946     		mov	r1, r3
 1996 028a 1448     		ldr	r0, .L80+8
 1997 028c FFF7FEFF 		bl	HAL_GPIO_Init
 854:Core/Src/main.c **** 
 855:Core/Src/main.c ****   /*Configure GPIO pin : SAI2_SDB_Pin */
 856:Core/Src/main.c ****   GPIO_InitStruct.Pin = SAI2_SDB_Pin;
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 51


 1998              		.loc 1 856 23
 1999 0290 4FF48063 		mov	r3, #1024
 2000 0294 FB62     		str	r3, [r7, #44]
 857:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2001              		.loc 1 857 24
 2002 0296 0223     		movs	r3, #2
 2003 0298 3B63     		str	r3, [r7, #48]
 858:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2004              		.loc 1 858 24
 2005 029a 0023     		movs	r3, #0
 2006 029c 7B63     		str	r3, [r7, #52]
 859:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2007              		.loc 1 859 25
 2008 029e 0023     		movs	r3, #0
 2009 02a0 BB63     		str	r3, [r7, #56]
 860:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF10_SAI2;
 2010              		.loc 1 860 29
 2011 02a2 0A23     		movs	r3, #10
 2012 02a4 FB63     		str	r3, [r7, #60]
 861:Core/Src/main.c ****   HAL_GPIO_Init(SAI2_SDB_GPIO_Port, &GPIO_InitStruct);
 2013              		.loc 1 861 3
 2014 02a6 07F12C03 		add	r3, r7, #44
 2015 02aa 1946     		mov	r1, r3
 2016 02ac 0E48     		ldr	r0, .L80+20
 2017 02ae FFF7FEFF 		bl	HAL_GPIO_Init
 862:Core/Src/main.c **** 
 863:Core/Src/main.c ****   /*Configure GPIO pin : OTG_FS_PowerSwitchOn_Pin */
 864:Core/Src/main.c ****   GPIO_InitStruct.Pin = OTG_FS_PowerSwitchOn_Pin;
 2018              		.loc 1 864 23
 2019 02b2 2023     		movs	r3, #32
 2020 02b4 FB62     		str	r3, [r7, #44]
 865:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 2021              		.loc 1 865 24
 2022 02b6 0123     		movs	r3, #1
 2023 02b8 3B63     		str	r3, [r7, #48]
 866:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2024              		.loc 1 866 24
 2025 02ba 0023     		movs	r3, #0
 2026 02bc 7B63     		str	r3, [r7, #52]
 867:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2027              		.loc 1 867 25
 2028 02be 0023     		movs	r3, #0
 2029 02c0 BB63     		str	r3, [r7, #56]
 868:Core/Src/main.c ****   HAL_GPIO_Init(OTG_FS_PowerSwitchOn_GPIO_Port, &GPIO_InitStruct);
 2030              		.loc 1 868 3
 2031 02c2 07F12C03 		add	r3, r7, #44
 2032 02c6 1946     		mov	r1, r3
 2033 02c8 0348     		ldr	r0, .L80+4
 2034 02ca FFF7FEFF 		bl	HAL_GPIO_Init
 869:Core/Src/main.c **** 
 870:Core/Src/main.c ****   /*Configure GPIO pin : DCMI_D5_Pin */
 871:Core/Src/main.c ****   GPIO_InitStruct.Pin = DCMI_D5_Pin;
 2035              		.loc 1 871 23
 2036 02ce 0823     		movs	r3, #8
 2037 02d0 14E0     		b	.L81
 2038              	.L82:
 2039 02d2 00BF     		.align	2
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 52


 2040              	.L80:
 2041 02d4 00380240 		.word	1073887232
 2042 02d8 000C0240 		.word	1073875968
 2043 02dc 00200240 		.word	1073881088
 2044 02e0 00280240 		.word	1073883136
 2045 02e4 001C0240 		.word	1073880064
 2046 02e8 00180240 		.word	1073879040
 2047 02ec 00100240 		.word	1073876992
 2048 02f0 00040240 		.word	1073873920
 2049 02f4 00000240 		.word	1073872896
 2050 02f8 00240240 		.word	1073882112
 2051              	.L81:
 2052 02fc FB62     		str	r3, [r7, #44]
 872:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2053              		.loc 1 872 24
 2054 02fe 0223     		movs	r3, #2
 2055 0300 3B63     		str	r3, [r7, #48]
 873:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2056              		.loc 1 873 24
 2057 0302 0023     		movs	r3, #0
 2058 0304 7B63     		str	r3, [r7, #52]
 874:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2059              		.loc 1 874 25
 2060 0306 0023     		movs	r3, #0
 2061 0308 BB63     		str	r3, [r7, #56]
 875:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF13_DCMI;
 2062              		.loc 1 875 29
 2063 030a 0D23     		movs	r3, #13
 2064 030c FB63     		str	r3, [r7, #60]
 876:Core/Src/main.c ****   HAL_GPIO_Init(DCMI_D5_GPIO_Port, &GPIO_InitStruct);
 2065              		.loc 1 876 3
 2066 030e 07F12C03 		add	r3, r7, #44
 2067 0312 1946     		mov	r1, r3
 2068 0314 8E48     		ldr	r0, .L83
 2069 0316 FFF7FEFF 		bl	HAL_GPIO_Init
 877:Core/Src/main.c **** 
 878:Core/Src/main.c ****   /*Configure GPIO pins : ARDUINO_D7_Pin ARDUINO_D8_Pin LCD_DISP_Pin */
 879:Core/Src/main.c ****   GPIO_InitStruct.Pin = ARDUINO_D7_Pin|ARDUINO_D8_Pin|LCD_DISP_Pin;
 2070              		.loc 1 879 23
 2071 031a 41F20C03 		movw	r3, #4108
 2072 031e FB62     		str	r3, [r7, #44]
 880:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 2073              		.loc 1 880 24
 2074 0320 0123     		movs	r3, #1
 2075 0322 3B63     		str	r3, [r7, #48]
 881:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2076              		.loc 1 881 24
 2077 0324 0023     		movs	r3, #0
 2078 0326 7B63     		str	r3, [r7, #52]
 882:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2079              		.loc 1 882 25
 2080 0328 0023     		movs	r3, #0
 2081 032a BB63     		str	r3, [r7, #56]
 883:Core/Src/main.c ****   HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 2082              		.loc 1 883 3
 2083 032c 07F12C03 		add	r3, r7, #44
 2084 0330 1946     		mov	r1, r3
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 53


 2085 0332 8848     		ldr	r0, .L83+4
 2086 0334 FFF7FEFF 		bl	HAL_GPIO_Init
 884:Core/Src/main.c **** 
 885:Core/Src/main.c ****   /*Configure GPIO pin : uSD_Detect_Pin */
 886:Core/Src/main.c ****   GPIO_InitStruct.Pin = uSD_Detect_Pin;
 2087              		.loc 1 886 23
 2088 0338 4FF40053 		mov	r3, #8192
 2089 033c FB62     		str	r3, [r7, #44]
 887:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 2090              		.loc 1 887 24
 2091 033e 0023     		movs	r3, #0
 2092 0340 3B63     		str	r3, [r7, #48]
 888:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2093              		.loc 1 888 24
 2094 0342 0023     		movs	r3, #0
 2095 0344 7B63     		str	r3, [r7, #52]
 889:Core/Src/main.c ****   HAL_GPIO_Init(uSD_Detect_GPIO_Port, &GPIO_InitStruct);
 2096              		.loc 1 889 3
 2097 0346 07F12C03 		add	r3, r7, #44
 2098 034a 1946     		mov	r1, r3
 2099 034c 8248     		ldr	r0, .L83+8
 2100 034e FFF7FEFF 		bl	HAL_GPIO_Init
 890:Core/Src/main.c **** 
 891:Core/Src/main.c ****   /*Configure GPIO pin : LCD_BL_CTRL_Pin */
 892:Core/Src/main.c ****   GPIO_InitStruct.Pin = LCD_BL_CTRL_Pin;
 2101              		.loc 1 892 23
 2102 0352 0823     		movs	r3, #8
 2103 0354 FB62     		str	r3, [r7, #44]
 893:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 2104              		.loc 1 893 24
 2105 0356 0123     		movs	r3, #1
 2106 0358 3B63     		str	r3, [r7, #48]
 894:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2107              		.loc 1 894 24
 2108 035a 0023     		movs	r3, #0
 2109 035c 7B63     		str	r3, [r7, #52]
 895:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2110              		.loc 1 895 25
 2111 035e 0023     		movs	r3, #0
 2112 0360 BB63     		str	r3, [r7, #56]
 896:Core/Src/main.c ****   HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 2113              		.loc 1 896 3
 2114 0362 07F12C03 		add	r3, r7, #44
 2115 0366 1946     		mov	r1, r3
 2116 0368 7C48     		ldr	r0, .L83+12
 2117 036a FFF7FEFF 		bl	HAL_GPIO_Init
 897:Core/Src/main.c **** 
 898:Core/Src/main.c ****   /*Configure GPIO pin : DCMI_VSYNC_Pin */
 899:Core/Src/main.c ****   GPIO_InitStruct.Pin = DCMI_VSYNC_Pin;
 2118              		.loc 1 899 23
 2119 036e 4FF40073 		mov	r3, #512
 2120 0372 FB62     		str	r3, [r7, #44]
 900:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2121              		.loc 1 900 24
 2122 0374 0223     		movs	r3, #2
 2123 0376 3B63     		str	r3, [r7, #48]
 901:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 54


 2124              		.loc 1 901 24
 2125 0378 0023     		movs	r3, #0
 2126 037a 7B63     		str	r3, [r7, #52]
 902:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2127              		.loc 1 902 25
 2128 037c 0023     		movs	r3, #0
 2129 037e BB63     		str	r3, [r7, #56]
 903:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF13_DCMI;
 2130              		.loc 1 903 29
 2131 0380 0D23     		movs	r3, #13
 2132 0382 FB63     		str	r3, [r7, #60]
 904:Core/Src/main.c ****   HAL_GPIO_Init(DCMI_VSYNC_GPIO_Port, &GPIO_InitStruct);
 2133              		.loc 1 904 3
 2134 0384 07F12C03 		add	r3, r7, #44
 2135 0388 1946     		mov	r1, r3
 2136 038a 7548     		ldr	r0, .L83+16
 2137 038c FFF7FEFF 		bl	HAL_GPIO_Init
 905:Core/Src/main.c **** 
 906:Core/Src/main.c ****   /*Configure GPIO pin : OTG_FS_OverCurrent_Pin */
 907:Core/Src/main.c ****   GPIO_InitStruct.Pin = OTG_FS_OverCurrent_Pin;
 2138              		.loc 1 907 23
 2139 0390 1023     		movs	r3, #16
 2140 0392 FB62     		str	r3, [r7, #44]
 908:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 2141              		.loc 1 908 24
 2142 0394 0023     		movs	r3, #0
 2143 0396 3B63     		str	r3, [r7, #48]
 909:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2144              		.loc 1 909 24
 2145 0398 0023     		movs	r3, #0
 2146 039a 7B63     		str	r3, [r7, #52]
 910:Core/Src/main.c ****   HAL_GPIO_Init(OTG_FS_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 2147              		.loc 1 910 3
 2148 039c 07F12C03 		add	r3, r7, #44
 2149 03a0 1946     		mov	r1, r3
 2150 03a2 6B48     		ldr	r0, .L83
 2151 03a4 FFF7FEFF 		bl	HAL_GPIO_Init
 911:Core/Src/main.c **** 
 912:Core/Src/main.c ****   /*Configure GPIO pins : TP3_Pin NC2_Pin */
 913:Core/Src/main.c ****   GPIO_InitStruct.Pin = TP3_Pin|NC2_Pin;
 2152              		.loc 1 913 23
 2153 03a8 48F20403 		movw	r3, #32772
 2154 03ac FB62     		str	r3, [r7, #44]
 914:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 2155              		.loc 1 914 24
 2156 03ae 0023     		movs	r3, #0
 2157 03b0 3B63     		str	r3, [r7, #48]
 915:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2158              		.loc 1 915 24
 2159 03b2 0023     		movs	r3, #0
 2160 03b4 7B63     		str	r3, [r7, #52]
 916:Core/Src/main.c ****   HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 2161              		.loc 1 916 3
 2162 03b6 07F12C03 		add	r3, r7, #44
 2163 03ba 1946     		mov	r1, r3
 2164 03bc 6948     		ldr	r0, .L83+20
 2165 03be FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 55


 917:Core/Src/main.c **** 
 918:Core/Src/main.c ****   /*Configure GPIO pin : DCMI_PWR_EN_Pin */
 919:Core/Src/main.c ****   GPIO_InitStruct.Pin = DCMI_PWR_EN_Pin;
 2166              		.loc 1 919 23
 2167 03c2 4FF40053 		mov	r3, #8192
 2168 03c6 FB62     		str	r3, [r7, #44]
 920:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 2169              		.loc 1 920 24
 2170 03c8 0123     		movs	r3, #1
 2171 03ca 3B63     		str	r3, [r7, #48]
 921:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2172              		.loc 1 921 24
 2173 03cc 0023     		movs	r3, #0
 2174 03ce 7B63     		str	r3, [r7, #52]
 922:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2175              		.loc 1 922 25
 2176 03d0 0023     		movs	r3, #0
 2177 03d2 BB63     		str	r3, [r7, #56]
 923:Core/Src/main.c ****   HAL_GPIO_Init(DCMI_PWR_EN_GPIO_Port, &GPIO_InitStruct);
 2178              		.loc 1 923 3
 2179 03d4 07F12C03 		add	r3, r7, #44
 2180 03d8 1946     		mov	r1, r3
 2181 03da 6248     		ldr	r0, .L83+20
 2182 03dc FFF7FEFF 		bl	HAL_GPIO_Init
 924:Core/Src/main.c **** 
 925:Core/Src/main.c ****   /*Configure GPIO pins : DCMI_D4_Pin DCMI_D3_Pin DCMI_D0_Pin DCMI_D2_Pin
 926:Core/Src/main.c ****                            DCMI_D1_Pin */
 927:Core/Src/main.c ****   GPIO_InitStruct.Pin = DCMI_D4_Pin|DCMI_D3_Pin|DCMI_D0_Pin|DCMI_D2_Pin
 2183              		.loc 1 927 23
 2184 03e0 4FF4BC43 		mov	r3, #24064
 2185 03e4 FB62     		str	r3, [r7, #44]
 928:Core/Src/main.c ****                           |DCMI_D1_Pin;
 929:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2186              		.loc 1 929 24
 2187 03e6 0223     		movs	r3, #2
 2188 03e8 3B63     		str	r3, [r7, #48]
 930:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2189              		.loc 1 930 24
 2190 03ea 0023     		movs	r3, #0
 2191 03ec 7B63     		str	r3, [r7, #52]
 931:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2192              		.loc 1 931 25
 2193 03ee 0023     		movs	r3, #0
 2194 03f0 BB63     		str	r3, [r7, #56]
 932:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF13_DCMI;
 2195              		.loc 1 932 29
 2196 03f2 0D23     		movs	r3, #13
 2197 03f4 FB63     		str	r3, [r7, #60]
 933:Core/Src/main.c ****   HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 2198              		.loc 1 933 3
 2199 03f6 07F12C03 		add	r3, r7, #44
 2200 03fa 1946     		mov	r1, r3
 2201 03fc 5948     		ldr	r0, .L83+20
 2202 03fe FFF7FEFF 		bl	HAL_GPIO_Init
 934:Core/Src/main.c **** 
 935:Core/Src/main.c ****   /*Configure GPIO pin : ARDUINO_PWM_CS_D5_Pin */
 936:Core/Src/main.c ****   GPIO_InitStruct.Pin = ARDUINO_PWM_CS_D5_Pin;
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 56


 2203              		.loc 1 936 23
 2204 0402 0123     		movs	r3, #1
 2205 0404 FB62     		str	r3, [r7, #44]
 937:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2206              		.loc 1 937 24
 2207 0406 0223     		movs	r3, #2
 2208 0408 3B63     		str	r3, [r7, #48]
 938:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2209              		.loc 1 938 24
 2210 040a 0023     		movs	r3, #0
 2211 040c 7B63     		str	r3, [r7, #52]
 939:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2212              		.loc 1 939 25
 2213 040e 0023     		movs	r3, #0
 2214 0410 BB63     		str	r3, [r7, #56]
 940:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF2_TIM5;
 2215              		.loc 1 940 29
 2216 0412 0223     		movs	r3, #2
 2217 0414 FB63     		str	r3, [r7, #60]
 941:Core/Src/main.c ****   HAL_GPIO_Init(ARDUINO_PWM_CS_D5_GPIO_Port, &GPIO_InitStruct);
 2218              		.loc 1 941 3
 2219 0416 07F12C03 		add	r3, r7, #44
 2220 041a 1946     		mov	r1, r3
 2221 041c 4D48     		ldr	r0, .L83+4
 2222 041e FFF7FEFF 		bl	HAL_GPIO_Init
 942:Core/Src/main.c **** 
 943:Core/Src/main.c ****   /*Configure GPIO pin : ARDUINO_PWM_D10_Pin */
 944:Core/Src/main.c ****   GPIO_InitStruct.Pin = ARDUINO_PWM_D10_Pin;
 2223              		.loc 1 944 23
 2224 0422 4FF48073 		mov	r3, #256
 2225 0426 FB62     		str	r3, [r7, #44]
 945:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2226              		.loc 1 945 24
 2227 0428 0223     		movs	r3, #2
 2228 042a 3B63     		str	r3, [r7, #48]
 946:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2229              		.loc 1 946 24
 2230 042c 0023     		movs	r3, #0
 2231 042e 7B63     		str	r3, [r7, #52]
 947:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2232              		.loc 1 947 25
 2233 0430 0023     		movs	r3, #0
 2234 0432 BB63     		str	r3, [r7, #56]
 948:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 2235              		.loc 1 948 29
 2236 0434 0123     		movs	r3, #1
 2237 0436 FB63     		str	r3, [r7, #60]
 949:Core/Src/main.c ****   HAL_GPIO_Init(ARDUINO_PWM_D10_GPIO_Port, &GPIO_InitStruct);
 2238              		.loc 1 949 3
 2239 0438 07F12C03 		add	r3, r7, #44
 2240 043c 1946     		mov	r1, r3
 2241 043e 4A48     		ldr	r0, .L83+24
 2242 0440 FFF7FEFF 		bl	HAL_GPIO_Init
 950:Core/Src/main.c **** 
 951:Core/Src/main.c ****   /*Configure GPIO pin : LCD_INT_Pin */
 952:Core/Src/main.c ****   GPIO_InitStruct.Pin = LCD_INT_Pin;
 2243              		.loc 1 952 23
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 57


 2244 0444 4FF40053 		mov	r3, #8192
 2245 0448 FB62     		str	r3, [r7, #44]
 953:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 2246              		.loc 1 953 24
 2247 044a 4FF49013 		mov	r3, #1179648
 2248 044e 3B63     		str	r3, [r7, #48]
 954:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2249              		.loc 1 954 24
 2250 0450 0023     		movs	r3, #0
 2251 0452 7B63     		str	r3, [r7, #52]
 955:Core/Src/main.c ****   HAL_GPIO_Init(LCD_INT_GPIO_Port, &GPIO_InitStruct);
 2252              		.loc 1 955 3
 2253 0454 07F12C03 		add	r3, r7, #44
 2254 0458 1946     		mov	r1, r3
 2255 045a 3E48     		ldr	r0, .L83+4
 2256 045c FFF7FEFF 		bl	HAL_GPIO_Init
 956:Core/Src/main.c **** 
 957:Core/Src/main.c ****   /*Configure GPIO pins : ARDUINO_D4_Pin ARDUINO_D2_Pin EXT_RST_Pin */
 958:Core/Src/main.c ****   GPIO_InitStruct.Pin = ARDUINO_D4_Pin|ARDUINO_D2_Pin|EXT_RST_Pin;
 2257              		.loc 1 958 23
 2258 0460 C823     		movs	r3, #200
 2259 0462 FB62     		str	r3, [r7, #44]
 959:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 2260              		.loc 1 959 24
 2261 0464 0123     		movs	r3, #1
 2262 0466 3B63     		str	r3, [r7, #48]
 960:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2263              		.loc 1 960 24
 2264 0468 0023     		movs	r3, #0
 2265 046a 7B63     		str	r3, [r7, #52]
 961:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2266              		.loc 1 961 25
 2267 046c 0023     		movs	r3, #0
 2268 046e BB63     		str	r3, [r7, #56]
 962:Core/Src/main.c ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 2269              		.loc 1 962 3
 2270 0470 07F12C03 		add	r3, r7, #44
 2271 0474 1946     		mov	r1, r3
 2272 0476 3A48     		ldr	r0, .L83+16
 2273 0478 FFF7FEFF 		bl	HAL_GPIO_Init
 963:Core/Src/main.c **** 
 964:Core/Src/main.c ****   /*Configure GPIO pins : ARDUINO_A4_Pin ARDUINO_A5_Pin ARDUINO_A1_Pin ARDUINO_A2_Pin
 965:Core/Src/main.c ****                            ARDUINO_A3_Pin */
 966:Core/Src/main.c ****   GPIO_InitStruct.Pin = ARDUINO_A4_Pin|ARDUINO_A5_Pin|ARDUINO_A1_Pin|ARDUINO_A2_Pin
 2274              		.loc 1 966 23
 2275 047c 4FF4F863 		mov	r3, #1984
 2276 0480 FB62     		str	r3, [r7, #44]
 967:Core/Src/main.c ****                           |ARDUINO_A3_Pin;
 968:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 2277              		.loc 1 968 24
 2278 0482 0323     		movs	r3, #3
 2279 0484 3B63     		str	r3, [r7, #48]
 969:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2280              		.loc 1 969 24
 2281 0486 0023     		movs	r3, #0
 2282 0488 7B63     		str	r3, [r7, #52]
 970:Core/Src/main.c ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 58


 2283              		.loc 1 970 3
 2284 048a 07F12C03 		add	r3, r7, #44
 2285 048e 1946     		mov	r1, r3
 2286 0490 3648     		ldr	r0, .L83+28
 2287 0492 FFF7FEFF 		bl	HAL_GPIO_Init
 971:Core/Src/main.c **** 
 972:Core/Src/main.c ****   /*Configure GPIO pins : RMII_MDC_Pin RMII_RXD0_Pin RMII_RXD1_Pin */
 973:Core/Src/main.c ****   GPIO_InitStruct.Pin = RMII_MDC_Pin|RMII_RXD0_Pin|RMII_RXD1_Pin;
 2288              		.loc 1 973 23
 2289 0496 3223     		movs	r3, #50
 2290 0498 FB62     		str	r3, [r7, #44]
 974:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2291              		.loc 1 974 24
 2292 049a 0223     		movs	r3, #2
 2293 049c 3B63     		str	r3, [r7, #48]
 975:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2294              		.loc 1 975 24
 2295 049e 0023     		movs	r3, #0
 2296 04a0 7B63     		str	r3, [r7, #52]
 976:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 2297              		.loc 1 976 25
 2298 04a2 0323     		movs	r3, #3
 2299 04a4 BB63     		str	r3, [r7, #56]
 977:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 2300              		.loc 1 977 29
 2301 04a6 0B23     		movs	r3, #11
 2302 04a8 FB63     		str	r3, [r7, #60]
 978:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 2303              		.loc 1 978 3
 2304 04aa 07F12C03 		add	r3, r7, #44
 2305 04ae 1946     		mov	r1, r3
 2306 04b0 2948     		ldr	r0, .L83+8
 2307 04b2 FFF7FEFF 		bl	HAL_GPIO_Init
 979:Core/Src/main.c **** 
 980:Core/Src/main.c ****   /*Configure GPIO pin : RMII_RXER_Pin */
 981:Core/Src/main.c ****   GPIO_InitStruct.Pin = RMII_RXER_Pin;
 2308              		.loc 1 981 23
 2309 04b6 0423     		movs	r3, #4
 2310 04b8 FB62     		str	r3, [r7, #44]
 982:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 2311              		.loc 1 982 24
 2312 04ba 0023     		movs	r3, #0
 2313 04bc 3B63     		str	r3, [r7, #48]
 983:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2314              		.loc 1 983 24
 2315 04be 0023     		movs	r3, #0
 2316 04c0 7B63     		str	r3, [r7, #52]
 984:Core/Src/main.c ****   HAL_GPIO_Init(RMII_RXER_GPIO_Port, &GPIO_InitStruct);
 2317              		.loc 1 984 3
 2318 04c2 07F12C03 		add	r3, r7, #44
 2319 04c6 1946     		mov	r1, r3
 2320 04c8 2548     		ldr	r0, .L83+16
 2321 04ca FFF7FEFF 		bl	HAL_GPIO_Init
 985:Core/Src/main.c **** 
 986:Core/Src/main.c ****   /*Configure GPIO pins : RMII_REF_CLK_Pin RMII_MDIO_Pin RMII_CRS_DV_Pin */
 987:Core/Src/main.c ****   GPIO_InitStruct.Pin = RMII_REF_CLK_Pin|RMII_MDIO_Pin|RMII_CRS_DV_Pin;
 2322              		.loc 1 987 23
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 59


 2323 04ce 8623     		movs	r3, #134
 2324 04d0 FB62     		str	r3, [r7, #44]
 988:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2325              		.loc 1 988 24
 2326 04d2 0223     		movs	r3, #2
 2327 04d4 3B63     		str	r3, [r7, #48]
 989:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2328              		.loc 1 989 24
 2329 04d6 0023     		movs	r3, #0
 2330 04d8 7B63     		str	r3, [r7, #52]
 990:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 2331              		.loc 1 990 25
 2332 04da 0323     		movs	r3, #3
 2333 04dc BB63     		str	r3, [r7, #56]
 991:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 2334              		.loc 1 991 29
 2335 04de 0B23     		movs	r3, #11
 2336 04e0 FB63     		str	r3, [r7, #60]
 992:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 2337              		.loc 1 992 3
 2338 04e2 07F12C03 		add	r3, r7, #44
 2339 04e6 1946     		mov	r1, r3
 2340 04e8 1F48     		ldr	r0, .L83+24
 2341 04ea FFF7FEFF 		bl	HAL_GPIO_Init
 993:Core/Src/main.c **** 
 994:Core/Src/main.c ****   /*Configure GPIO pin : ARDUINO_A0_Pin */
 995:Core/Src/main.c ****   GPIO_InitStruct.Pin = ARDUINO_A0_Pin;
 2342              		.loc 1 995 23
 2343 04ee 0123     		movs	r3, #1
 2344 04f0 FB62     		str	r3, [r7, #44]
 996:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 2345              		.loc 1 996 24
 2346 04f2 0323     		movs	r3, #3
 2347 04f4 3B63     		str	r3, [r7, #48]
 997:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2348              		.loc 1 997 24
 2349 04f6 0023     		movs	r3, #0
 2350 04f8 7B63     		str	r3, [r7, #52]
 998:Core/Src/main.c ****   HAL_GPIO_Init(ARDUINO_A0_GPIO_Port, &GPIO_InitStruct);
 2351              		.loc 1 998 3
 2352 04fa 07F12C03 		add	r3, r7, #44
 2353 04fe 1946     		mov	r1, r3
 2354 0500 1948     		ldr	r0, .L83+24
 2355 0502 FFF7FEFF 		bl	HAL_GPIO_Init
 999:Core/Src/main.c **** 
1000:Core/Src/main.c ****   /*Configure GPIO pins : DCMI_HSYNC_Pin PA6 */
1001:Core/Src/main.c ****   GPIO_InitStruct.Pin = DCMI_HSYNC_Pin|GPIO_PIN_6;
 2356              		.loc 1 1001 23
 2357 0506 5023     		movs	r3, #80
 2358 0508 FB62     		str	r3, [r7, #44]
1002:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2359              		.loc 1 1002 24
 2360 050a 0223     		movs	r3, #2
 2361 050c 3B63     		str	r3, [r7, #48]
1003:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2362              		.loc 1 1003 24
 2363 050e 0023     		movs	r3, #0
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 60


 2364 0510 7B63     		str	r3, [r7, #52]
1004:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2365              		.loc 1 1004 25
 2366 0512 0023     		movs	r3, #0
 2367 0514 BB63     		str	r3, [r7, #56]
1005:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF13_DCMI;
 2368              		.loc 1 1005 29
 2369 0516 0D23     		movs	r3, #13
 2370 0518 FB63     		str	r3, [r7, #60]
1006:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 2371              		.loc 1 1006 3
 2372 051a 07F12C03 		add	r3, r7, #44
 2373 051e 1946     		mov	r1, r3
 2374 0520 1148     		ldr	r0, .L83+24
 2375 0522 FFF7FEFF 		bl	HAL_GPIO_Init
1007:Core/Src/main.c **** 
1008:Core/Src/main.c ****   /*Configure GPIO pin : ARDUINO_PWM_D6_Pin */
1009:Core/Src/main.c ****   GPIO_InitStruct.Pin = ARDUINO_PWM_D6_Pin;
 2376              		.loc 1 1009 23
 2377 0526 4023     		movs	r3, #64
 2378 0528 FB62     		str	r3, [r7, #44]
1010:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2379              		.loc 1 1010 24
 2380 052a 0223     		movs	r3, #2
 2381 052c 3B63     		str	r3, [r7, #48]
1011:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2382              		.loc 1 1011 24
 2383 052e 0023     		movs	r3, #0
 2384 0530 7B63     		str	r3, [r7, #52]
1012:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2385              		.loc 1 1012 25
 2386 0532 0023     		movs	r3, #0
 2387 0534 BB63     		str	r3, [r7, #56]
1013:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF9_TIM12;
 2388              		.loc 1 1013 29
 2389 0536 0923     		movs	r3, #9
 2390 0538 FB63     		str	r3, [r7, #60]
1014:Core/Src/main.c ****   HAL_GPIO_Init(ARDUINO_PWM_D6_GPIO_Port, &GPIO_InitStruct);
 2391              		.loc 1 1014 3
 2392 053a 07F12C03 		add	r3, r7, #44
 2393 053e 1946     		mov	r1, r3
 2394 0540 0848     		ldr	r0, .L83+20
 2395 0542 FFF7FEFF 		bl	HAL_GPIO_Init
1015:Core/Src/main.c **** 
1016:Core/Src/main.c **** }
 2396              		.loc 1 1016 1
 2397 0546 00BF     		nop
 2398 0548 4037     		adds	r7, r7, #64
 2399              	.LCFI51:
 2400              		.cfi_def_cfa_offset 8
 2401 054a BD46     		mov	sp, r7
 2402              	.LCFI52:
 2403              		.cfi_def_cfa_register 13
 2404              		@ sp needed
 2405 054c 80BD     		pop	{r7, pc}
 2406              	.L84:
 2407 054e 00BF     		.align	2
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 61


 2408              	.L83:
 2409 0550 000C0240 		.word	1073875968
 2410 0554 00200240 		.word	1073881088
 2411 0558 00080240 		.word	1073874944
 2412 055c 00280240 		.word	1073883136
 2413 0560 00180240 		.word	1073879040
 2414 0564 001C0240 		.word	1073880064
 2415 0568 00000240 		.word	1073872896
 2416 056c 00140240 		.word	1073878016
 2417              		.cfi_endproc
 2418              	.LFE165:
 2420              		.section	.rodata
 2421              		.align	2
 2422              	.LC4:
 2423 0028 4578616D 		.ascii	"Example.txt\000"
 2423      706C652E 
 2423      74787400 
 2424              		.align	2
 2425              	.LC3:
 2426 0034 53442063 		.ascii	"SD card test in STM32F746G-DISCO board\000"
 2426      61726420 
 2426      74657374 
 2426      20696E20 
 2426      53544D33 
 2427              		.section	.text.StartDefaultTask,"ax",%progbits
 2428              		.align	1
 2429              		.global	StartDefaultTask
 2430              		.syntax unified
 2431              		.thumb
 2432              		.thumb_func
 2434              	StartDefaultTask:
 2435              	.LFB166:
1017:Core/Src/main.c **** 
1018:Core/Src/main.c **** /* USER CODE END 4 */
1019:Core/Src/main.c **** 
1020:Core/Src/main.c **** /* USER CODE BEGIN Header_StartDefaultTask */
1021:Core/Src/main.c **** /**
1022:Core/Src/main.c ****   * @brief  Function implementing the defaultTask thread.
1023:Core/Src/main.c ****   * @param  argument: Not used
1024:Core/Src/main.c ****   * @retval None
1025:Core/Src/main.c ****   */
1026:Core/Src/main.c **** /* USER CODE END Header_StartDefaultTask */
1027:Core/Src/main.c **** void StartDefaultTask(void const * argument)
1028:Core/Src/main.c **** {
 2436              		.loc 1 1028 1
 2437              		.cfi_startproc
 2438              		@ args = 0, pretend = 0, frame = 208
 2439              		@ frame_needed = 1, uses_anonymous_args = 0
 2440 0000 B0B5     		push	{r4, r5, r7, lr}
 2441              	.LCFI53:
 2442              		.cfi_def_cfa_offset 16
 2443              		.cfi_offset 4, -16
 2444              		.cfi_offset 5, -12
 2445              		.cfi_offset 7, -8
 2446              		.cfi_offset 14, -4
 2447 0002 B4B0     		sub	sp, sp, #208
 2448              	.LCFI54:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 62


 2449              		.cfi_def_cfa_offset 224
 2450 0004 00AF     		add	r7, sp, #0
 2451              	.LCFI55:
 2452              		.cfi_def_cfa_register 7
 2453 0006 7860     		str	r0, [r7, #4]
1029:Core/Src/main.c ****     uint8_t desc[50];
1030:Core/Src/main.c ****     uint8_t tx_buf[100] = {0,};
 2454              		.loc 1 1030 13
 2455 0008 0023     		movs	r3, #0
 2456 000a BB63     		str	r3, [r7, #56]
 2457 000c 07F13C03 		add	r3, r7, #60
 2458 0010 6022     		movs	r2, #96
 2459 0012 0021     		movs	r1, #0
 2460 0014 1846     		mov	r0, r3
 2461 0016 FFF7FEFF 		bl	memset
1031:Core/Src/main.c ****     uint32_t byteswritten; /* File write count */
1032:Core/Src/main.c ****     uint8_t wtext[] = "SD card test in STM32F746G-DISCO board"; 
 2462              		.loc 1 1032 13
 2463 001a 194B     		ldr	r3, .L87
 2464 001c 07F10C04 		add	r4, r7, #12
 2465 0020 1D46     		mov	r5, r3
 2466 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2467 0024 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2468 0026 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2469 0028 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2470 002a 95E80300 		ldm	r5, {r0, r1}
 2471 002e 2060     		str	r0, [r4]
 2472 0030 0434     		adds	r4, r4, #4
 2473 0032 2180     		strh	r1, [r4]	@ movhi
 2474 0034 0234     		adds	r4, r4, #2
 2475 0036 0B0C     		lsrs	r3, r1, #16
 2476 0038 2370     		strb	r3, [r4]
1033:Core/Src/main.c ****     f_mount(&SDFatFs, (TCHAR const*) SDPath, 0);
 2477              		.loc 1 1033 5
 2478 003a 0022     		movs	r2, #0
 2479 003c 1149     		ldr	r1, .L87+4
 2480 003e 1248     		ldr	r0, .L87+8
 2481 0040 FFF7FEFF 		bl	f_mount
1034:Core/Src/main.c ****     f_open(&MyFile, "Example.txt", FA_CREATE_ALWAYS | FA_WRITE);
 2482              		.loc 1 1034 5
 2483 0044 0A22     		movs	r2, #10
 2484 0046 1149     		ldr	r1, .L87+12
 2485 0048 1148     		ldr	r0, .L87+16
 2486 004a FFF7FEFF 		bl	f_open
1035:Core/Src/main.c ****     f_write(&MyFile, wtext, sizeof(wtext), (void *) &byteswritten);
 2487              		.loc 1 1035 5
 2488 004e 07F13403 		add	r3, r7, #52
 2489 0052 07F10C01 		add	r1, r7, #12
 2490 0056 2722     		movs	r2, #39
 2491 0058 0D48     		ldr	r0, .L87+16
 2492 005a FFF7FEFF 		bl	f_write
1036:Core/Src/main.c ****     f_close(&MyFile);
 2493              		.loc 1 1036 5
 2494 005e 0C48     		ldr	r0, .L87+16
 2495 0060 FFF7FEFF 		bl	f_close
1037:Core/Src/main.c ****     /* init code for USB_HOST */
1038:Core/Src/main.c ****     //MX_USB_HOST_Init();
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 63


1039:Core/Src/main.c ****     /* init code for USB_DEVICE */
1040:Core/Src/main.c ****     MX_USB_DEVICE_Init();  
 2496              		.loc 1 1040 5
 2497 0064 FFF7FEFF 		bl	MX_USB_DEVICE_Init
1041:Core/Src/main.c **** 
1042:Core/Src/main.c ****     BSP_SDRAM_Init();
 2498              		.loc 1 1042 5
 2499 0068 FFF7FEFF 		bl	BSP_SDRAM_Init
1043:Core/Src/main.c ****     BSP_LCD_Init();
 2500              		.loc 1 1043 5
 2501 006c FFF7FEFF 		bl	BSP_LCD_Init
1044:Core/Src/main.c ****     LCD_Test();
 2502              		.loc 1 1044 5
 2503 0070 FFF7FEFF 		bl	LCD_Test
 2504              	.L86:
1045:Core/Src/main.c ****     /* Infinite loop */
1046:Core/Src/main.c ****     for(;;)
1047:Core/Src/main.c ****     {
1048:Core/Src/main.c ****         //LCD_Test();
1049:Core/Src/main.c ****         osDelay(1000);
 2505              		.loc 1 1049 9 discriminator 1
 2506 0074 4FF47A70 		mov	r0, #1000
 2507 0078 FFF7FEFF 		bl	osDelay
 2508 007c FAE7     		b	.L86
 2509              	.L88:
 2510 007e 00BF     		.align	2
 2511              	.L87:
 2512 0080 34000000 		.word	.LC3
 2513 0084 00000000 		.word	SDPath
 2514 0088 00000000 		.word	SDFatFs
 2515 008c 28000000 		.word	.LC4
 2516 0090 00000000 		.word	MyFile
 2517              		.cfi_endproc
 2518              	.LFE166:
 2520              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 2521              		.align	1
 2522              		.global	HAL_TIM_PeriodElapsedCallback
 2523              		.syntax unified
 2524              		.thumb
 2525              		.thumb_func
 2527              	HAL_TIM_PeriodElapsedCallback:
 2528              	.LFB167:
1050:Core/Src/main.c ****     }
1051:Core/Src/main.c **** }
1052:Core/Src/main.c **** 
1053:Core/Src/main.c **** /**
1054:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
1055:Core/Src/main.c ****   * @note   This function is called  when TIM6 interrupt took place, inside
1056:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
1057:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
1058:Core/Src/main.c ****   * @param  htim : TIM handle
1059:Core/Src/main.c ****   * @retval None
1060:Core/Src/main.c ****   */
1061:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
1062:Core/Src/main.c **** {
 2529              		.loc 1 1062 1
 2530              		.cfi_startproc
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 64


 2531              		@ args = 0, pretend = 0, frame = 8
 2532              		@ frame_needed = 1, uses_anonymous_args = 0
 2533 0000 80B5     		push	{r7, lr}
 2534              	.LCFI56:
 2535              		.cfi_def_cfa_offset 8
 2536              		.cfi_offset 7, -8
 2537              		.cfi_offset 14, -4
 2538 0002 82B0     		sub	sp, sp, #8
 2539              	.LCFI57:
 2540              		.cfi_def_cfa_offset 16
 2541 0004 00AF     		add	r7, sp, #0
 2542              	.LCFI58:
 2543              		.cfi_def_cfa_register 7
 2544 0006 7860     		str	r0, [r7, #4]
1063:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
1064:Core/Src/main.c **** 
1065:Core/Src/main.c ****   /* USER CODE END Callback 0 */
1066:Core/Src/main.c ****   if (htim->Instance == TIM6) {
 2545              		.loc 1 1066 11
 2546 0008 7B68     		ldr	r3, [r7, #4]
 2547 000a 1B68     		ldr	r3, [r3]
 2548              		.loc 1 1066 6
 2549 000c 044A     		ldr	r2, .L92
 2550 000e 9342     		cmp	r3, r2
 2551 0010 01D1     		bne	.L91
1067:Core/Src/main.c ****     HAL_IncTick();
 2552              		.loc 1 1067 5
 2553 0012 FFF7FEFF 		bl	HAL_IncTick
 2554              	.L91:
1068:Core/Src/main.c ****   }
1069:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
1070:Core/Src/main.c **** 
1071:Core/Src/main.c ****   /* USER CODE END Callback 1 */
1072:Core/Src/main.c **** }
 2555              		.loc 1 1072 1
 2556 0016 00BF     		nop
 2557 0018 0837     		adds	r7, r7, #8
 2558              	.LCFI59:
 2559              		.cfi_def_cfa_offset 8
 2560 001a BD46     		mov	sp, r7
 2561              	.LCFI60:
 2562              		.cfi_def_cfa_register 13
 2563              		@ sp needed
 2564 001c 80BD     		pop	{r7, pc}
 2565              	.L93:
 2566 001e 00BF     		.align	2
 2567              	.L92:
 2568 0020 00100040 		.word	1073745920
 2569              		.cfi_endproc
 2570              	.LFE167:
 2572              		.section	.text.Error_Handler,"ax",%progbits
 2573              		.align	1
 2574              		.global	Error_Handler
 2575              		.syntax unified
 2576              		.thumb
 2577              		.thumb_func
 2579              	Error_Handler:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 65


 2580              	.LFB168:
1073:Core/Src/main.c **** 
1074:Core/Src/main.c **** /**
1075:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
1076:Core/Src/main.c ****   * @retval None
1077:Core/Src/main.c ****   */
1078:Core/Src/main.c **** void Error_Handler(void)
1079:Core/Src/main.c **** {
 2581              		.loc 1 1079 1
 2582              		.cfi_startproc
 2583              		@ args = 0, pretend = 0, frame = 0
 2584              		@ frame_needed = 1, uses_anonymous_args = 0
 2585              		@ link register save eliminated.
 2586 0000 80B4     		push	{r7}
 2587              	.LCFI61:
 2588              		.cfi_def_cfa_offset 4
 2589              		.cfi_offset 7, -4
 2590 0002 00AF     		add	r7, sp, #0
 2591              	.LCFI62:
 2592              		.cfi_def_cfa_register 7
 2593              	.LBB18:
 2594              	.LBB19:
 2595              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 66


  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 67


  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 2596              		.loc 2 142 3
 2597              		.syntax unified
 2598              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2599 0004 72B6     		cpsid i
 2600              	@ 0 "" 2
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 68


 2601              		.loc 2 143 1
 2602              		.thumb
 2603              		.syntax unified
 2604 0006 00BF     		nop
 2605              	.L95:
 2606              	.LBE19:
 2607              	.LBE18:
1080:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
1081:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
1082:Core/Src/main.c ****   __disable_irq();
1083:Core/Src/main.c ****   while (1)
 2608              		.loc 1 1083 9 discriminator 1
 2609 0008 FEE7     		b	.L95
 2610              		.cfi_endproc
 2611              	.LFE168:
 2613              		.text
 2614              	.Letext0:
 2615              		.file 3 "d:\\3.tools\\arm_gcc_toolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 2616              		.file 4 "d:\\3.tools\\arm_gcc_toolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 2617              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 2618              		.file 6 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 2619              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 2620              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 2621              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 2622              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 2623              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_crc.h"
 2624              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma2d.h"
 2625              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_fmc.h"
 2626              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_sdram.h"
 2627              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_i2c.h"
 2628              		.file 16 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_ltdc.h"
 2629              		.file 17 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_qspi.h"
 2630              		.file 18 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_sdmmc.h"
 2631              		.file 19 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_sd.h"
 2632              		.file 20 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_spi.h"
 2633              		.file 21 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 2634              		.file 22 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 2635              		.file 23 "d:\\3.tools\\arm_gcc_toolchain\\lib\\gcc\\arm-none-eabi\\10.3.1\\include\\stddef.h"
 2636              		.file 24 "d:\\3.tools\\arm_gcc_toolchain\\arm-none-eabi\\include\\sys\\_types.h"
 2637              		.file 25 "d:\\3.tools\\arm_gcc_toolchain\\arm-none-eabi\\include\\sys\\reent.h"
 2638              		.file 26 "d:\\3.tools\\arm_gcc_toolchain\\arm-none-eabi\\include\\sys\\lock.h"
 2639              		.file 27 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h"
 2640              		.file 28 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 2641              		.file 29 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 2642              		.file 30 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 2643              		.file 31 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 2644              		.file 32 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 2645              		.file 33 "Middlewares/Third_Party/FatFs/src/integer.h"
 2646              		.file 34 "Middlewares/Third_Party/FatFs/src/ff.h"
 2647              		.file 35 "FATFS/App/fatfs.h"
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 69


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:17     .rodata:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:28     .bss.SDFatFs:00000000 SDFatFs
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:25     .bss.SDFatFs:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:35     .bss.MyFile:00000000 MyFile
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:32     .bss.MyFile:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:42     .bss.SDPath:00000000 SDPath
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:39     .bss.SDPath:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:49     .bss.hcrc:00000000 hcrc
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:46     .bss.hcrc:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:56     .bss.hdma2d:00000000 hdma2d
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:53     .bss.hdma2d:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:63     .bss.hi2c1:00000000 hi2c1
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:60     .bss.hi2c1:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:70     .bss.hi2c3:00000000 hi2c3
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:67     .bss.hi2c3:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:77     .bss.hltdc:00000000 hltdc
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:74     .bss.hltdc:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:84     .bss.hqspi:00000000 hqspi
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:81     .bss.hqspi:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:91     .bss.hsd1:00000000 hsd1
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:88     .bss.hsd1:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:98     .bss.hdma_sdmmc1_rx:00000000 hdma_sdmmc1_rx
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:95     .bss.hdma_sdmmc1_rx:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:105    .bss.hdma_sdmmc1_tx:00000000 hdma_sdmmc1_tx
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:102    .bss.hdma_sdmmc1_tx:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:112    .bss.hspi2:00000000 hspi2
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:109    .bss.hspi2:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:119    .bss.huart1:00000000 huart1
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:116    .bss.huart1:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:126    .bss.huart6:00000000 huart6
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:123    .bss.huart6:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:133    .bss.hsdram1:00000000 hsdram1
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:130    .bss.hsdram1:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:140    .bss.defaultTaskHandle:00000000 defaultTaskHandle
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:137    .bss.defaultTaskHandle:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:2434   .text.StartDefaultTask:00000000 StartDefaultTask
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:154    .text.main:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:160    .text.main:00000000 main
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:251    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:406    .text.PeriphCommonClock_Config:00000000 PeriphCommonClock_Config
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:1618   .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:490    .text.MX_CRC_Init:00000000 MX_CRC_Init
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:1490   .text.MX_FMC_Init:00000000 MX_FMC_Init
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:639    .text.MX_I2C1_Init:00000000 MX_I2C1_Init
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:739    .text.MX_I2C3_Init:00000000 MX_I2C3_Init
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:839    .text.MX_LTDC_Init:00000000 MX_LTDC_Init
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:1018   .text.MX_QUADSPI_Init:00000000 MX_QUADSPI_Init
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:1095   .text.MX_SDMMC1_SD_Init:00000000 MX_SDMMC1_SD_Init
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:1162   .text.MX_SPI2_Init:00000000 MX_SPI2_Init
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:1259   .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:1340   .text.MX_USART6_UART_Init:00000000 MX_USART6_UART_Init
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:1421   .text.MX_DMA_Init:00000000 MX_DMA_Init
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:555    .text.MX_DMA2D_Init:00000000 MX_DMA2D_Init
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:239    .text.main:00000074 $d
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:245    .text.SystemClock_Config:00000000 $t
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 70


C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:2579   .text.Error_Handler:00000000 Error_Handler
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:394    .text.SystemClock_Config:000000d8 $d
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:400    .text.PeriphCommonClock_Config:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:480    .text.PeriphCommonClock_Config:0000005c $d
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:485    .text.MX_CRC_Init:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:544    .text.MX_CRC_Init:0000003c $d
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:550    .text.MX_DMA2D_Init:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:628    .text.MX_DMA2D_Init:0000005c $d
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:634    .text.MX_I2C1_Init:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:727    .text.MX_I2C1_Init:00000074 $d
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:734    .text.MX_I2C3_Init:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:827    .text.MX_I2C3_Init:00000074 $d
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:834    .text.MX_LTDC_Init:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:1007   .text.MX_LTDC_Init:000000fc $d
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:1013   .text.MX_QUADSPI_Init:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:1084   .text.MX_QUADSPI_Init:00000050 $d
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:1090   .text.MX_SDMMC1_SD_Init:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:1151   .text.MX_SDMMC1_SD_Init:00000038 $d
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:1157   .text.MX_SPI2_Init:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:1248   .text.MX_SPI2_Init:00000074 $d
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:1254   .text.MX_USART1_UART_Init:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:1329   .text.MX_USART1_UART_Init:00000058 $d
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:1335   .text.MX_USART6_UART_Init:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:1410   .text.MX_USART6_UART_Init:00000058 $d
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:1416   .text.MX_DMA_Init:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:1480   .text.MX_DMA_Init:00000048 $d
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:1485   .text.MX_FMC_Init:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:1607   .text.MX_FMC_Init:00000098 $d
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:1613   .text.MX_GPIO_Init:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:2041   .text.MX_GPIO_Init:000002d4 $d
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:2052   .text.MX_GPIO_Init:000002fc $t
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:2409   .text.MX_GPIO_Init:00000550 $d
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:2428   .text.StartDefaultTask:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:2512   .text.StartDefaultTask:00000080 $d
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:2521   .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:2527   .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:2568   .text.HAL_TIM_PeriodElapsedCallback:00000020 $d
C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s:2573   .text.Error_Handler:00000000 $t

UNDEFINED SYMBOLS
HAL_Init
MX_FATFS_Init
osThreadCreate
osKernelStart
memset
HAL_PWR_EnableBkUpAccess
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_CRC_Init
HAL_DMA2D_Init
HAL_DMA2D_ConfigLayer
HAL_I2C_Init
HAL_I2CEx_ConfigAnalogFilter
HAL_I2CEx_ConfigDigitalFilter
HAL_LTDC_Init
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccJCUGXg.s 			page 71


HAL_LTDC_ConfigLayer
HAL_QSPI_Init
HAL_SPI_Init
HAL_UART_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_SDRAM_Init
HAL_GPIO_WritePin
HAL_GPIO_Init
f_mount
f_open
f_write
f_close
MX_USB_DEVICE_Init
BSP_SDRAM_Init
BSP_LCD_Init
LCD_Test
osDelay
HAL_IncTick
